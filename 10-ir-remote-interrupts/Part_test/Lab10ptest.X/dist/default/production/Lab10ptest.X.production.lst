

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Nov 15 14:31:55 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    61  0000                     
    62                           	psect	idataCOMRAM
    63  001608                     __pidataCOMRAM:
    64                           	opt stack 0
    65                           
    66                           ;initializer for _array1
    67  001608  A2                 	db	162
    68  001609  62                 	db	98
    69  00160A  E2                 	db	226
    70  00160B  22                 	db	34
    71  00160C  02                 	db	2
    72  00160D  C2                 	db	194
    73  00160E  E0                 	db	224
    74  00160F  A8                 	db	168
    75  001610  90                 	db	144
    76  001611  68                 	db	104
    77  001612  98                 	db	152
    78  001613  B0                 	db	176
    79  001614  30                 	db	48
    80  001615  18                 	db	24
    81  001616  7A                 	db	122
    82  001617  10                 	db	16
    83  001618  38                 	db	56
    84  001619  5A                 	db	90
    85  00161A  42                 	db	66
    86  00161B  4A                 	db	74
    87  00161C  52                 	db	82
    88                           
    89                           ;initializer for _wrap
    90  00161D  01                 	db	1
    91                           
    92                           	psect	idataBANK0
    93  0011DA                     __pidataBANK0:
    94                           	opt stack 0
    95                           
    96                           ;initializer for _color
    97  0011DA  F800               	dw	63488
    98  0011DC  F800               	dw	63488
    99  0011DE  F800               	dw	63488
   100  0011E0  001F               	dw	31
   101  0011E2  001F               	dw	31
   102  0011E4  07E0               	dw	2016
   103  0011E6  F81F               	dw	63519
   104  0011E8  F81F               	dw	63519
   105  0011EA  F81F               	dw	63519
   106  0011EC  FFFF               	dw	65535
   107  0011EE  FFFF               	dw	65535
   108  0011F0  FFFF               	dw	65535
   109  0011F2  FFFF               	dw	65535
   110  0011F4  FFFF               	dw	65535
   111  0011F6  FFFF               	dw	65535
   112  0011F8  FFFF               	dw	65535
   113  0011FA  FFFF               	dw	65535
   114  0011FC  FFFF               	dw	65535
   115  0011FE  FFFF               	dw	65535
   116  001200  FFFF               	dw	65535
   117  001202  FFFF               	dw	65535
   118                           
   119                           ;initializer for _d1
   120  001204  01                 	db	1
   121  001205  01                 	db	1
   122  001206  01                 	db	1
   123  001207  00                 	db	0
   124  001208  00                 	db	0
   125  001209  00                 	db	0
   126  00120A  00                 	db	0
   127  00120B  00                 	db	0
   128  00120C  00                 	db	0
   129  00120D  00                 	db	0
   130  00120E  00                 	db	0
   131  00120F  00                 	db	0
   132  001210  00                 	db	0
   133  001211  00                 	db	0
   134  001212  00                 	db	0
   135  001213  00                 	db	0
   136  001214  00                 	db	0
   137  001215  00                 	db	0
   138  001216  00                 	db	0
   139  001217  00                 	db	0
   140  001218  00                 	db	0
   141                           
   142                           ;initializer for _d2
   143  001219  00                 	db	0
   144  00121A  00                 	db	0
   145  00121B  00                 	db	0
   146  00121C  03                 	db	3
   147  00121D  03                 	db	3
   148  00121E  02                 	db	2
   149  00121F  04                 	db	4
   150  001220  04                 	db	4
   151  001221  04                 	db	4
   152  001222  05                 	db	5
   153  001223  05                 	db	5
   154  001224  05                 	db	5
   155  001225  00                 	db	0
   156  001226  00                 	db	0
   157  001227  00                 	db	0
   158  001228  00                 	db	0
   159  001229  00                 	db	0
   160  00122A  00                 	db	0
   161  00122B  00                 	db	0
   162  00122C  00                 	db	0
   163  00122D  00                 	db	0
   164                           
   165                           ;initializer for _d3
   166  00122E  00                 	db	0
   167  00122F  00                 	db	0
   168  001230  00                 	db	0
   169  001231  00                 	db	0
   170  001232  00                 	db	0
   171  001233  00                 	db	0
   172  001234  00                 	db	0
   173  001235  00                 	db	0
   174  001236  00                 	db	0
   175  001237  00                 	db	0
   176  001238  00                 	db	0
   177  001239  00                 	db	0
   178  00123A  05                 	db	5
   179  00123B  05                 	db	5
   180  00123C  05                 	db	5
   181  00123D  05                 	db	5
   182  00123E  05                 	db	5
   183  00123F  05                 	db	5
   184  001240  05                 	db	5
   185  001241  05                 	db	5
   186  001242  05                 	db	5
   187                           
   188                           	psect	idataBANK1
   189  001070                     __pidataBANK1:
   190                           	opt stack 0
   191                           
   192                           ;initializer for _color_font
   193  001070  FFFF               	dw	65535
   194  001072  FFFF               	dw	65535
   195  001074  FFFF               	dw	65535
   196  001076  FFFF               	dw	65535
   197  001078  FFFF               	dw	65535
   198  00107A  FFFF               	dw	65535
   199  00107C  FFFF               	dw	65535
   200  00107E  FFFF               	dw	65535
   201  001080  FFFF               	dw	65535
   202  001082  0000               	dw	0
   203  001084  0000               	dw	0
   204  001086  0000               	dw	0
   205  001088  0000               	dw	0
   206  00108A  0000               	dw	0
   207  00108C  0000               	dw	0
   208  00108E  0000               	dw	0
   209  001090  0000               	dw	0
   210  001092  0000               	dw	0
   211  001094  0000               	dw	0
   212  001096  0000               	dw	0
   213  001098  0000               	dw	0
   214                           
   215                           ;initializer for _txt1
   216  00109A  43                 	db	67
   217  00109B  48                 	db	72
   218  00109C  2D                 	db	45
   219  00109D  00                 	db	0
   220  00109E  43                 	db	67
   221  00109F  48                 	db	72
   222  0010A0  20                 	db	32
   223  0010A1  00                 	db	0
   224  0010A2  43                 	db	67
   225  0010A3  48                 	db	72
   226  0010A4  2B                 	db	43
   227  0010A5  00                 	db	0
   228  0010A6  7C                 	db	124
   229  0010A7  3C                 	db	60
   230  0010A8  3C                 	db	60
   231  0010A9  00                 	db	0
   232  0010AA  3E                 	db	62
   233  0010AB  3E                 	db	62
   234  0010AC  7C                 	db	124
   235  0010AD  00                 	db	0
   236  0010AE  3E                 	db	62
   237  0010AF  7C                 	db	124
   238  0010B0  7C                 	db	124
   239  0010B1  00                 	db	0
   240  0010B2  56                 	db	86
   241  0010B3  4C                 	db	76
   242  0010B4  2D                 	db	45
   243  0010B5  00                 	db	0
   244  0010B6  56                 	db	86
   245  0010B7  4C                 	db	76
   246  0010B8  2B                 	db	43
   247  0010B9  00                 	db	0
   248  0010BA  45                 	db	69
   249  0010BB  51                 	db	81
   250  0010BC  00                 	db	0
   251  0010BD  00                 	db	0
   252  0010BE  20                 	db	32
   253  0010BF  30                 	db	48
   254  0010C0  20                 	db	32
   255  0010C1  00                 	db	0
   256  0010C2  31                 	db	49
   257  0010C3  30                 	db	48
   258  0010C4  30                 	db	48
   259  0010C5  00                 	db	0
   260  0010C6  32                 	db	50
   261  0010C7  30                 	db	48
   262  0010C8  30                 	db	48
   263  0010C9  00                 	db	0
   264  0010CA  20                 	db	32
   265  0010CB  31                 	db	49
   266  0010CC  20                 	db	32
   267  0010CD  00                 	db	0
   268  0010CE  20                 	db	32
   269  0010CF  32                 	db	50
   270  0010D0  20                 	db	32
   271  0010D1  00                 	db	0
   272  0010D2  20                 	db	32
   273  0010D3  33                 	db	51
   274  0010D4  20                 	db	32
   275  0010D5  00                 	db	0
   276  0010D6  20                 	db	32
   277  0010D7  34                 	db	52
   278  0010D8  20                 	db	32
   279  0010D9  00                 	db	0
   280  0010DA  20                 	db	32
   281  0010DB  35                 	db	53
   282  0010DC  20                 	db	32
   283  0010DD  00                 	db	0
   284  0010DE  20                 	db	32
   285  0010DF  36                 	db	54
   286  0010E0  20                 	db	32
   287  0010E1  00                 	db	0
   288  0010E2  20                 	db	32
   289  0010E3  37                 	db	55
   290  0010E4  20                 	db	32
   291  0010E5  00                 	db	0
   292  0010E6  20                 	db	32
   293  0010E7  38                 	db	56
   294  0010E8  20                 	db	32
   295  0010E9  00                 	db	0
   296  0010EA  20                 	db	32
   297  0010EB  39                 	db	57
   298  0010EC  20                 	db	32
   299  0010ED  00                 	db	0
   300                           
   301                           	psect	mediumconst
   302  00FDC0                     __pmediumconst:
   303                           	opt stack 0
   304  00FDC0  00                 	db	0
   305  00FDC1                     _font:
   306                           	opt stack 0
   307  00FDC1  00                 	db	0
   308  00FDC2  00                 	db	0
   309  00FDC3  00                 	db	0
   310  00FDC4  00                 	db	0
   311  00FDC5  00                 	db	0
   312  00FDC6  00                 	db	0
   313  00FDC7  00                 	db	0
   314  00FDC8  5F                 	db	95
   315  00FDC9  00                 	db	0
   316  00FDCA  00                 	db	0
   317  00FDCB  00                 	db	0
   318  00FDCC  07                 	db	7
   319  00FDCD  00                 	db	0
   320  00FDCE  07                 	db	7
   321  00FDCF  00                 	db	0
   322  00FDD0  14                 	db	20
   323  00FDD1  7F                 	db	127
   324  00FDD2  14                 	db	20
   325  00FDD3  7F                 	db	127
   326  00FDD4  14                 	db	20
   327  00FDD5  24                 	db	36
   328  00FDD6  2A                 	db	42
   329  00FDD7  7F                 	db	127
   330  00FDD8  2A                 	db	42
   331  00FDD9  12                 	db	18
   332  00FDDA  23                 	db	35
   333  00FDDB  13                 	db	19
   334  00FDDC  08                 	db	8
   335  00FDDD  64                 	db	100
   336  00FDDE  62                 	db	98
   337  00FDDF  36                 	db	54
   338  00FDE0  49                 	db	73
   339  00FDE1  56                 	db	86
   340  00FDE2  20                 	db	32
   341  00FDE3  50                 	db	80
   342  00FDE4  00                 	db	0
   343  00FDE5  08                 	db	8
   344  00FDE6  07                 	db	7
   345  00FDE7  03                 	db	3
   346  00FDE8  00                 	db	0
   347  00FDE9  00                 	db	0
   348  00FDEA  1C                 	db	28
   349  00FDEB  22                 	db	34
   350  00FDEC  41                 	db	65
   351  00FDED  00                 	db	0
   352  00FDEE  00                 	db	0
   353  00FDEF  41                 	db	65
   354  00FDF0  22                 	db	34
   355  00FDF1  1C                 	db	28
   356  00FDF2  00                 	db	0
   357  00FDF3  2A                 	db	42
   358  00FDF4  1C                 	db	28
   359  00FDF5  7F                 	db	127
   360  00FDF6  1C                 	db	28
   361  00FDF7  2A                 	db	42
   362  00FDF8  08                 	db	8
   363  00FDF9  08                 	db	8
   364  00FDFA  3E                 	db	62
   365  00FDFB  08                 	db	8
   366  00FDFC  08                 	db	8
   367  00FDFD  00                 	db	0
   368  00FDFE  80                 	db	128
   369  00FDFF  70                 	db	112
   370  00FE00  30                 	db	48
   371  00FE01  00                 	db	0
   372  00FE02  08                 	db	8
   373  00FE03  08                 	db	8
   374  00FE04  08                 	db	8
   375  00FE05  08                 	db	8
   376  00FE06  08                 	db	8
   377  00FE07  00                 	db	0
   378  00FE08  00                 	db	0
   379  00FE09  60                 	db	96
   380  00FE0A  60                 	db	96
   381  00FE0B  00                 	db	0
   382  00FE0C  20                 	db	32
   383  00FE0D  10                 	db	16
   384  00FE0E  08                 	db	8
   385  00FE0F  04                 	db	4
   386  00FE10  02                 	db	2
   387  00FE11  3E                 	db	62
   388  00FE12  51                 	db	81
   389  00FE13  49                 	db	73
   390  00FE14  45                 	db	69
   391  00FE15  3E                 	db	62
   392  00FE16  00                 	db	0
   393  00FE17  42                 	db	66
   394  00FE18  7F                 	db	127
   395  00FE19  40                 	db	64
   396  00FE1A  00                 	db	0
   397  00FE1B  72                 	db	114
   398  00FE1C  49                 	db	73
   399  00FE1D  49                 	db	73
   400  00FE1E  49                 	db	73
   401  00FE1F  46                 	db	70
   402  00FE20  21                 	db	33
   403  00FE21  41                 	db	65
   404  00FE22  49                 	db	73
   405  00FE23  4D                 	db	77
   406  00FE24  33                 	db	51
   407  00FE25  18                 	db	24
   408  00FE26  14                 	db	20
   409  00FE27  12                 	db	18
   410  00FE28  7F                 	db	127
   411  00FE29  10                 	db	16
   412  00FE2A  27                 	db	39
   413  00FE2B  45                 	db	69
   414  00FE2C  45                 	db	69
   415  00FE2D  45                 	db	69
   416  00FE2E  39                 	db	57
   417  00FE2F  3C                 	db	60
   418  00FE30  4A                 	db	74
   419  00FE31  49                 	db	73
   420  00FE32  49                 	db	73
   421  00FE33  31                 	db	49
   422  00FE34  41                 	db	65
   423  00FE35  21                 	db	33
   424  00FE36  11                 	db	17
   425  00FE37  09                 	db	9
   426  00FE38  07                 	db	7
   427  00FE39  36                 	db	54
   428  00FE3A  49                 	db	73
   429  00FE3B  49                 	db	73
   430  00FE3C  49                 	db	73
   431  00FE3D  36                 	db	54
   432  00FE3E  46                 	db	70
   433  00FE3F  49                 	db	73
   434  00FE40  49                 	db	73
   435  00FE41  29                 	db	41
   436  00FE42  1E                 	db	30
   437  00FE43  00                 	db	0
   438  00FE44  00                 	db	0
   439  00FE45  14                 	db	20
   440  00FE46  00                 	db	0
   441  00FE47  00                 	db	0
   442  00FE48  00                 	db	0
   443  00FE49  40                 	db	64
   444  00FE4A  34                 	db	52
   445  00FE4B  00                 	db	0
   446  00FE4C  00                 	db	0
   447  00FE4D  00                 	db	0
   448  00FE4E  08                 	db	8
   449  00FE4F  14                 	db	20
   450  00FE50  22                 	db	34
   451  00FE51  41                 	db	65
   452  00FE52  14                 	db	20
   453  00FE53  14                 	db	20
   454  00FE54  14                 	db	20
   455  00FE55  14                 	db	20
   456  00FE56  14                 	db	20
   457  00FE57  00                 	db	0
   458  00FE58  41                 	db	65
   459  00FE59  22                 	db	34
   460  00FE5A  14                 	db	20
   461  00FE5B  08                 	db	8
   462  00FE5C  02                 	db	2
   463  00FE5D  01                 	db	1
   464  00FE5E  59                 	db	89
   465  00FE5F  09                 	db	9
   466  00FE60  06                 	db	6
   467  00FE61  3E                 	db	62
   468  00FE62  41                 	db	65
   469  00FE63  5D                 	db	93
   470  00FE64  59                 	db	89
   471  00FE65  4E                 	db	78
   472  00FE66  7C                 	db	124
   473  00FE67  12                 	db	18
   474  00FE68  11                 	db	17
   475  00FE69  12                 	db	18
   476  00FE6A  7C                 	db	124
   477  00FE6B  7F                 	db	127
   478  00FE6C  49                 	db	73
   479  00FE6D  49                 	db	73
   480  00FE6E  49                 	db	73
   481  00FE6F  36                 	db	54
   482  00FE70  3E                 	db	62
   483  00FE71  41                 	db	65
   484  00FE72  41                 	db	65
   485  00FE73  41                 	db	65
   486  00FE74  22                 	db	34
   487  00FE75  7F                 	db	127
   488  00FE76  41                 	db	65
   489  00FE77  41                 	db	65
   490  00FE78  41                 	db	65
   491  00FE79  3E                 	db	62
   492  00FE7A  7F                 	db	127
   493  00FE7B  49                 	db	73
   494  00FE7C  49                 	db	73
   495  00FE7D  49                 	db	73
   496  00FE7E  41                 	db	65
   497  00FE7F  7F                 	db	127
   498  00FE80  09                 	db	9
   499  00FE81  09                 	db	9
   500  00FE82  09                 	db	9
   501  00FE83  01                 	db	1
   502  00FE84  3E                 	db	62
   503  00FE85  41                 	db	65
   504  00FE86  41                 	db	65
   505  00FE87  51                 	db	81
   506  00FE88  73                 	db	115
   507  00FE89  7F                 	db	127
   508  00FE8A  08                 	db	8
   509  00FE8B  08                 	db	8
   510  00FE8C  08                 	db	8
   511  00FE8D  7F                 	db	127
   512  00FE8E  00                 	db	0
   513  00FE8F  41                 	db	65
   514  00FE90  7F                 	db	127
   515  00FE91  41                 	db	65
   516  00FE92  00                 	db	0
   517  00FE93  20                 	db	32
   518  00FE94  40                 	db	64
   519  00FE95  41                 	db	65
   520  00FE96  3F                 	db	63
   521  00FE97  01                 	db	1
   522  00FE98  7F                 	db	127
   523  00FE99  08                 	db	8
   524  00FE9A  14                 	db	20
   525  00FE9B  22                 	db	34
   526  00FE9C  41                 	db	65
   527  00FE9D  7F                 	db	127
   528  00FE9E  40                 	db	64
   529  00FE9F  40                 	db	64
   530  00FEA0  40                 	db	64
   531  00FEA1  40                 	db	64
   532  00FEA2  7F                 	db	127
   533  00FEA3  02                 	db	2
   534  00FEA4  1C                 	db	28
   535  00FEA5  02                 	db	2
   536  00FEA6  7F                 	db	127
   537  00FEA7  7F                 	db	127
   538  00FEA8  04                 	db	4
   539  00FEA9  08                 	db	8
   540  00FEAA  10                 	db	16
   541  00FEAB  7F                 	db	127
   542  00FEAC  3E                 	db	62
   543  00FEAD  41                 	db	65
   544  00FEAE  41                 	db	65
   545  00FEAF  41                 	db	65
   546  00FEB0  3E                 	db	62
   547  00FEB1  7F                 	db	127
   548  00FEB2  09                 	db	9
   549  00FEB3  09                 	db	9
   550  00FEB4  09                 	db	9
   551  00FEB5  06                 	db	6
   552  00FEB6  3E                 	db	62
   553  00FEB7  41                 	db	65
   554  00FEB8  51                 	db	81
   555  00FEB9  21                 	db	33
   556  00FEBA  5E                 	db	94
   557  00FEBB  7F                 	db	127
   558  00FEBC  09                 	db	9
   559  00FEBD  19                 	db	25
   560  00FEBE  29                 	db	41
   561  00FEBF  46                 	db	70
   562  00FEC0                     __end_of_font:
   563                           	opt stack 0
   564  00FEC0                     _font2:
   565                           	opt stack 0
   566  00FEC0  26                 	db	38
   567  00FEC1  49                 	db	73
   568  00FEC2  49                 	db	73
   569  00FEC3  49                 	db	73
   570  00FEC4  32                 	db	50
   571  00FEC5  03                 	db	3
   572  00FEC6  01                 	db	1
   573  00FEC7  7F                 	db	127
   574  00FEC8  01                 	db	1
   575  00FEC9  03                 	db	3
   576  00FECA  3F                 	db	63
   577  00FECB  40                 	db	64
   578  00FECC  40                 	db	64
   579  00FECD  40                 	db	64
   580  00FECE  3F                 	db	63
   581  00FECF  1F                 	db	31
   582  00FED0  20                 	db	32
   583  00FED1  40                 	db	64
   584  00FED2  20                 	db	32
   585  00FED3  1F                 	db	31
   586  00FED4  3F                 	db	63
   587  00FED5  40                 	db	64
   588  00FED6  38                 	db	56
   589  00FED7  40                 	db	64
   590  00FED8  3F                 	db	63
   591  00FED9  63                 	db	99
   592  00FEDA  14                 	db	20
   593  00FEDB  08                 	db	8
   594  00FEDC  14                 	db	20
   595  00FEDD  63                 	db	99
   596  00FEDE  03                 	db	3
   597  00FEDF  04                 	db	4
   598  00FEE0  78                 	db	120
   599  00FEE1  04                 	db	4
   600  00FEE2  03                 	db	3
   601  00FEE3  61                 	db	97
   602  00FEE4  59                 	db	89
   603  00FEE5  49                 	db	73
   604  00FEE6  4D                 	db	77
   605  00FEE7  43                 	db	67
   606  00FEE8  00                 	db	0
   607  00FEE9  7F                 	db	127
   608  00FEEA  41                 	db	65
   609  00FEEB  41                 	db	65
   610  00FEEC  41                 	db	65
   611  00FEED  02                 	db	2
   612  00FEEE  04                 	db	4
   613  00FEEF  08                 	db	8
   614  00FEF0  10                 	db	16
   615  00FEF1  20                 	db	32
   616  00FEF2  00                 	db	0
   617  00FEF3  41                 	db	65
   618  00FEF4  41                 	db	65
   619  00FEF5  41                 	db	65
   620  00FEF6  7F                 	db	127
   621  00FEF7  04                 	db	4
   622  00FEF8  02                 	db	2
   623  00FEF9  01                 	db	1
   624  00FEFA  02                 	db	2
   625  00FEFB  04                 	db	4
   626  00FEFC  40                 	db	64
   627  00FEFD  40                 	db	64
   628  00FEFE  40                 	db	64
   629  00FEFF  40                 	db	64
   630  00FF00  40                 	db	64
   631  00FF01  00                 	db	0
   632  00FF02  03                 	db	3
   633  00FF03  07                 	db	7
   634  00FF04  08                 	db	8
   635  00FF05  00                 	db	0
   636  00FF06  20                 	db	32
   637  00FF07  54                 	db	84
   638  00FF08  54                 	db	84
   639  00FF09  78                 	db	120
   640  00FF0A  40                 	db	64
   641  00FF0B  7F                 	db	127
   642  00FF0C  28                 	db	40
   643  00FF0D  44                 	db	68
   644  00FF0E  44                 	db	68
   645  00FF0F  38                 	db	56
   646  00FF10  38                 	db	56
   647  00FF11  44                 	db	68
   648  00FF12  44                 	db	68
   649  00FF13  44                 	db	68
   650  00FF14  28                 	db	40
   651  00FF15  38                 	db	56
   652  00FF16  44                 	db	68
   653  00FF17  44                 	db	68
   654  00FF18  28                 	db	40
   655  00FF19  7F                 	db	127
   656  00FF1A  38                 	db	56
   657  00FF1B  54                 	db	84
   658  00FF1C  54                 	db	84
   659  00FF1D  54                 	db	84
   660  00FF1E  18                 	db	24
   661  00FF1F  00                 	db	0
   662  00FF20  08                 	db	8
   663  00FF21  7E                 	db	126
   664  00FF22  09                 	db	9
   665  00FF23  02                 	db	2
   666  00FF24  18                 	db	24
   667  00FF25  A4                 	db	164
   668  00FF26  A4                 	db	164
   669  00FF27  9C                 	db	156
   670  00FF28  78                 	db	120
   671  00FF29  7F                 	db	127
   672  00FF2A  08                 	db	8
   673  00FF2B  04                 	db	4
   674  00FF2C  04                 	db	4
   675  00FF2D  78                 	db	120
   676  00FF2E  00                 	db	0
   677  00FF2F  44                 	db	68
   678  00FF30  7D                 	db	125
   679  00FF31  40                 	db	64
   680  00FF32  00                 	db	0
   681  00FF33  20                 	db	32
   682  00FF34  40                 	db	64
   683  00FF35  40                 	db	64
   684  00FF36  3D                 	db	61
   685  00FF37  00                 	db	0
   686  00FF38  7F                 	db	127
   687  00FF39  10                 	db	16
   688  00FF3A  28                 	db	40
   689  00FF3B  44                 	db	68
   690  00FF3C  00                 	db	0
   691  00FF3D  00                 	db	0
   692  00FF3E  41                 	db	65
   693  00FF3F  7F                 	db	127
   694  00FF40  40                 	db	64
   695  00FF41  00                 	db	0
   696  00FF42  7C                 	db	124
   697  00FF43  04                 	db	4
   698  00FF44  78                 	db	120
   699  00FF45  04                 	db	4
   700  00FF46  78                 	db	120
   701  00FF47  7C                 	db	124
   702  00FF48  08                 	db	8
   703  00FF49  04                 	db	4
   704  00FF4A  04                 	db	4
   705  00FF4B  78                 	db	120
   706  00FF4C  38                 	db	56
   707  00FF4D  44                 	db	68
   708  00FF4E  44                 	db	68
   709  00FF4F  44                 	db	68
   710  00FF50  38                 	db	56
   711  00FF51  FC                 	db	252
   712  00FF52  18                 	db	24
   713  00FF53  24                 	db	36
   714  00FF54  24                 	db	36
   715  00FF55  18                 	db	24
   716  00FF56  18                 	db	24
   717  00FF57  24                 	db	36
   718  00FF58  24                 	db	36
   719  00FF59  18                 	db	24
   720  00FF5A  FC                 	db	252
   721  00FF5B  7C                 	db	124
   722  00FF5C  08                 	db	8
   723  00FF5D  04                 	db	4
   724  00FF5E  04                 	db	4
   725  00FF5F  08                 	db	8
   726  00FF60  48                 	db	72
   727  00FF61  54                 	db	84
   728  00FF62  54                 	db	84
   729  00FF63  54                 	db	84
   730  00FF64  24                 	db	36
   731  00FF65  04                 	db	4
   732  00FF66  04                 	db	4
   733  00FF67  3F                 	db	63
   734  00FF68  44                 	db	68
   735  00FF69  24                 	db	36
   736  00FF6A  3C                 	db	60
   737  00FF6B  40                 	db	64
   738  00FF6C  40                 	db	64
   739  00FF6D  20                 	db	32
   740  00FF6E  7C                 	db	124
   741  00FF6F  1C                 	db	28
   742  00FF70  20                 	db	32
   743  00FF71  40                 	db	64
   744  00FF72  20                 	db	32
   745  00FF73  1C                 	db	28
   746  00FF74  3C                 	db	60
   747  00FF75  40                 	db	64
   748  00FF76  30                 	db	48
   749  00FF77  40                 	db	64
   750  00FF78  3C                 	db	60
   751  00FF79  44                 	db	68
   752  00FF7A  28                 	db	40
   753  00FF7B  10                 	db	16
   754  00FF7C  28                 	db	40
   755  00FF7D  44                 	db	68
   756  00FF7E  4C                 	db	76
   757  00FF7F  90                 	db	144
   758  00FF80  90                 	db	144
   759  00FF81  90                 	db	144
   760  00FF82  7C                 	db	124
   761  00FF83  44                 	db	68
   762  00FF84  64                 	db	100
   763  00FF85  54                 	db	84
   764  00FF86  4C                 	db	76
   765  00FF87  44                 	db	68
   766  00FF88  00                 	db	0
   767  00FF89  08                 	db	8
   768  00FF8A  36                 	db	54
   769  00FF8B  41                 	db	65
   770  00FF8C  00                 	db	0
   771  00FF8D  00                 	db	0
   772  00FF8E  00                 	db	0
   773  00FF8F  77                 	db	119
   774  00FF90  00                 	db	0
   775  00FF91  00                 	db	0
   776  00FF92  00                 	db	0
   777  00FF93  41                 	db	65
   778  00FF94  36                 	db	54
   779  00FF95  08                 	db	8
   780  00FF96  00                 	db	0
   781  00FF97  02                 	db	2
   782  00FF98  01                 	db	1
   783  00FF99  02                 	db	2
   784  00FF9A  04                 	db	4
   785  00FF9B  02                 	db	2
   786  00FF9C                     __end_of_font2:
   787                           	opt stack 0
   788  00FF9C                     _hexpowers:
   789                           	opt stack 0
   790  00FF9C  0001               	dw	1
   791  00FF9E  0000               	dw	0
   792  00FFA0  0010               	dw	16
   793  00FFA2  0000               	dw	0
   794  00FFA4  0100               	dw	256
   795  00FFA6  0000               	dw	0
   796  00FFA8  1000               	dw	4096
   797  00FFAA  0000               	dw	0
   798  00FFAC  0000               	dw	0
   799  00FFAE  0001               	dw	1
   800  00FFB0  0000               	dw	0
   801  00FFB2  0010               	dw	16
   802  00FFB4  0000               	dw	0
   803  00FFB6  0100               	dw	256
   804  00FFB8  0000               	dw	0
   805  00FFBA  1000               	dw	4096
   806  00FFBC                     __end_of_hexpowers:
   807                           	opt stack 0
   808  0000                     _ADCON1	set	4033
   809  0000                     _CCP2CON	set	4026
   810  0000                     _CCPR2L	set	4027
   811  0000                     _INTCON2bits	set	4081
   812  0000                     _INTCONbits	set	4082
   813  0000                     _OSCCON	set	4051
   814  0000                     _PIE1bits	set	3997
   815  0000                     _PIR1bits	set	3998
   816  0000                     _PIR2bits	set	4001
   817  0000                     _PORTAbits	set	3968
   818  0000                     _PORTBbits	set	3969
   819  0000                     _PORTCbits	set	3970
   820  0000                     _PORTDbits	set	3971
   821  0000                     _PR2	set	4043
   822  0000                     _RCSTA	set	4011
   823  0000                     _RCSTAbits	set	4011
   824  0000                     _SPBRG	set	4015
   825  0000                     _SPBRGH	set	4016
   826  0000                     _SSPBUF	set	4041
   827  0000                     _SSPCON1	set	4038
   828  0000                     _SSPSTAT	set	4039
   829  0000                     _SSPSTATbits	set	4039
   830  0000                     _T1CON	set	4045
   831  0000                     _T1CONbits	set	4045
   832  0000                     _T2CON	set	4042
   833  0000                     _T3CON	set	4017
   834  0000                     _T3CONbits	set	4017
   835  0000                     _TMR1H	set	4047
   836  0000                     _TMR1L	set	4046
   837  0000                     _TMR3H	set	4019
   838  0000                     _TMR3L	set	4018
   839  0000                     _TRISA	set	3986
   840  0000                     _TRISB	set	3987
   841  0000                     _TRISC	set	3988
   842  0000                     _TRISCbits	set	3988
   843  0000                     _TRISD	set	3989
   844  0000                     _TRISE	set	3990
   845  0000                     _TXREG	set	4013
   846  0000                     _TXSTA	set	4012
   847  0000                     _TXSTAbits	set	4012
   848  0000                     _TRMT	set	32097
   849  0000                     _nRBPU	set	32655
   850  00FFBC                     STR_1:
   851  00FFBC  4E                 	db	78	;'N'
   852  00FFBD  45                 	db	69	;'E'
   853  00FFBE  43                 	db	67	;'C'
   854  00FFBF  5F                 	db	95	;'_'
   855  00FFC0  43                 	db	67	;'C'
   856  00FFC1  6F                 	db	111	;'o'
   857  00FFC2  64                 	db	100	;'d'
   858  00FFC3  65                 	db	101	;'e'
   859  00FFC4  20                 	db	32
   860  00FFC5  3D                 	db	61	;'='
   861  00FFC6  20                 	db	32
   862  00FFC7  25                 	db	37
   863  00FFC8  30                 	db	48	;'0'
   864  00FFC9  38                 	db	56	;'8'
   865  00FFCA  6C                 	db	108	;'l'
   866  00FFCB  78                 	db	120	;'x'
   867  00FFCC  20                 	db	32
   868  00FFCD  25                 	db	37
   869  00FFCE  78                 	db	120	;'x'
   870  00FFCF  0D                 	db	13
   871  00FFD0  0A                 	db	10
   872  00FFD1  00                 	db	0
   873  00FFD2                     STR_2:
   874  00FFD2  45                 	db	69	;'E'
   875  00FFD3  43                 	db	67	;'C'
   876  00FFD4  45                 	db	69	;'E'
   877  00FFD5  33                 	db	51	;'3'
   878  00FFD6  33                 	db	51	;'3'
   879  00FFD7  30                 	db	48	;'0'
   880  00FFD8  31                 	db	49	;'1'
   881  00FFD9  4C                 	db	76	;'L'
   882  00FFDA  20                 	db	32
   883  00FFDB  46                 	db	70	;'F'
   884  00FFDC  61                 	db	97	;'a'
   885  00FFDD  6C                 	db	108	;'l'
   886  00FFDE  6C                 	db	108	;'l'
   887  00FFDF  20                 	db	32
   888  00FFE0  32                 	db	50	;'2'
   889  00FFE1  32                 	db	50	;'2'
   890  00FFE2  2D                 	db	45
   891  00FFE3  53                 	db	83	;'S'
   892  00FFE4  31                 	db	49	;'1'
   893  00FFE5  00                 	db	0
   894  00FFE6                     STR_4:
   895  00FFE6  30                 	db	48	;'0'
   896  00FFE7  31                 	db	49	;'1'
   897  00FFE8  32                 	db	50	;'2'
   898  00FFE9  33                 	db	51	;'3'
   899  00FFEA  34                 	db	52	;'4'
   900  00FFEB  35                 	db	53	;'5'
   901  00FFEC  36                 	db	54	;'6'
   902  00FFED  37                 	db	55	;'7'
   903  00FFEE  38                 	db	56	;'8'
   904  00FFEF  39                 	db	57	;'9'
   905  00FFF0  61                 	db	97	;'a'
   906  00FFF1  62                 	db	98	;'b'
   907  00FFF2  63                 	db	99	;'c'
   908  00FFF3  64                 	db	100	;'d'
   909  00FFF4  65                 	db	101	;'e'
   910  00FFF5  66                 	db	102	;'f'
   911  00FFF6  00                 	db	0
   912  00FFF7                     STR_3:
   913  00FFF7  4C                 	db	76	;'L'
   914  00FFF8  41                 	db	65	;'A'
   915  00FFF9  42                 	db	66	;'B'
   916  00FFFA  20                 	db	32
   917  00FFFB  31                 	db	49	;'1'
   918  00FFFC  30                 	db	48	;'0'
   919  00FFFD  20                 	db	32
   920  00FFFE  00                 	db	0
   921                           
   922                           ; #config settings
   923  00FFFF  00                 	db	0	; dummy byte at the end
   924  0000                     
   925                           	psect	cinit
   926  000FEE                     __pcinit:
   927                           	opt stack 0
   928  000FEE                     start_initialization:
   929                           	opt stack 0
   930  000FEE                     __initialization:
   931                           	opt stack 0
   932                           
   933                           ; Clear objects allocated to BANK1 (31 bytes)
   934  000FEE  EE01  F07E         	lfsr	0,__pbssBANK1
   935  000FF2  0E1F               	movlw	31
   936  000FF4                     clear_0:
   937  000FF4  6AEE               	clrf	postinc0,c
   938  000FF6  06E8               	decf	wreg,f,c
   939  000FF8  E1FD               	bnz	clear_0
   940                           
   941                           ; Clear objects allocated to COMRAM (19 bytes)
   942  000FFA  EE00  F05A         	lfsr	0,__pbssCOMRAM
   943  000FFE  0E13               	movlw	19
   944  001000                     clear_1:
   945  001000  6AEE               	clrf	postinc0,c
   946  001002  06E8               	decf	wreg,f,c
   947  001004  E1FD               	bnz	clear_1
   948                           
   949                           ; Initialize objects allocated to BANK1 (126 bytes)
   950                           ; load TBLPTR registers with __pidataBANK1
   951  001006  0E70               	movlw	low __pidataBANK1
   952  001008  6EF6               	movwf	tblptrl,c
   953  00100A  0E10               	movlw	high __pidataBANK1
   954  00100C  6EF7               	movwf	tblptrh,c
   955  00100E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   956  001010  6EF8               	movwf	tblptru,c
   957  001012  EE01  F000         	lfsr	0,__pdataBANK1
   958  001016  EE10 F07E          	lfsr	1,126
   959  00101A                     copy_data0:
   960  00101A  0009               	tblrd		*+
   961  00101C  CFF5 FFEE          	movff	tablat,postinc0
   962  001020  50E5               	movf	postdec1,w,c
   963  001022  50E1               	movf	fsr1l,w,c
   964  001024  E1FA               	bnz	copy_data0
   965                           
   966                           ; Initialize objects allocated to BANK0 (105 bytes)
   967                           ; load TBLPTR registers with __pidataBANK0
   968  001026  0EDA               	movlw	low __pidataBANK0
   969  001028  6EF6               	movwf	tblptrl,c
   970  00102A  0E11               	movlw	high __pidataBANK0
   971  00102C  6EF7               	movwf	tblptrh,c
   972  00102E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   973  001030  6EF8               	movwf	tblptru,c
   974  001032  EE00  F080         	lfsr	0,__pdataBANK0
   975  001036  EE10 F069          	lfsr	1,105
   976  00103A                     copy_data1:
   977  00103A  0009               	tblrd		*+
   978  00103C  CFF5 FFEE          	movff	tablat,postinc0
   979  001040  50E5               	movf	postdec1,w,c
   980  001042  50E1               	movf	fsr1l,w,c
   981  001044  E1FA               	bnz	copy_data1
   982                           
   983                           ; Initialize objects allocated to COMRAM (22 bytes)
   984                           ; load TBLPTR registers with __pidataCOMRAM
   985  001046  0E08               	movlw	low __pidataCOMRAM
   986  001048  6EF6               	movwf	tblptrl,c
   987  00104A  0E16               	movlw	high __pidataCOMRAM
   988  00104C  6EF7               	movwf	tblptrh,c
   989  00104E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   990  001050  6EF8               	movwf	tblptru,c
   991  001052  EE00  F044         	lfsr	0,__pdataCOMRAM
   992  001056  EE10 F016          	lfsr	1,22
   993  00105A                     copy_data2:
   994  00105A  0009               	tblrd		*+
   995  00105C  CFF5 FFEE          	movff	tablat,postinc0
   996  001060  50E5               	movf	postdec1,w,c
   997  001062  50E1               	movf	fsr1l,w,c
   998  001064  E1FA               	bnz	copy_data2
   999  001066                     end_of_initialization:
  1000                           	opt stack 0
  1001  001066                     __end_of__initialization:
  1002                           	opt stack 0
  1003  001066  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1004  001068  6EF8               	movwf	tblptru,c
  1005  00106A  0100               	movlb	0
  1006  00106C  EF5F  F001         	goto	_main	;jump to C main() function
  1007                           tblptru	equ	0xFF8
  1008                           tblptrh	equ	0xFF7
  1009                           tblptrl	equ	0xFF6
  1010                           tablat	equ	0xFF5
  1011                           postinc0	equ	0xFEE
  1012                           wreg	equ	0xFE8
  1013                           postdec1	equ	0xFE5
  1014                           fsr1l	equ	0xFE1
  1015                           
  1016                           	psect	bssCOMRAM
  1017  00005A                     __pbssCOMRAM:
  1018                           	opt stack 0
  1019  00005A                     _Nec_code:
  1020                           	opt stack 0
  1021  00005A                     	ds	4
  1022  00005E                     _Time_Elapsed:
  1023                           	opt stack 0
  1024  00005E                     	ds	2
  1025  000060                     _nbr:
  1026                           	opt stack 0
  1027  000060                     	ds	2
  1028  000062                     _nec_ok:
  1029                           	opt stack 0
  1030  000062                     	ds	2
  1031  000064                     _txt:
  1032                           	opt stack 0
  1033  000064                     	ds	2
  1034  000066                     _Nec_code1:
  1035                           	opt stack 0
  1036  000066                     	ds	1
  1037  000067                     _Nec_state:
  1038                           	opt stack 0
  1039  000067                     	ds	1
  1040  000068                     __tft_type:
  1041                           	opt stack 0
  1042  000068                     	ds	1
  1043  000069                     _bit_count:
  1044                           	opt stack 0
  1045  000069                     	ds	1
  1046  00006A                     _colstart:
  1047                           	opt stack 0
  1048  00006A                     	ds	1
  1049  00006B                     _i:
  1050                           	opt stack 0
  1051  00006B                     	ds	1
  1052  00006C                     _rowstart:
  1053                           	opt stack 0
  1054  00006C                     	ds	1
  1055                           tblptru	equ	0xFF8
  1056                           tblptrh	equ	0xFF7
  1057                           tblptrl	equ	0xFF6
  1058                           tablat	equ	0xFF5
  1059                           postinc0	equ	0xFEE
  1060                           wreg	equ	0xFE8
  1061                           postdec1	equ	0xFE5
  1062                           fsr1l	equ	0xFE1
  1063                           
  1064                           	psect	dataCOMRAM
  1065  000044                     __pdataCOMRAM:
  1066                           	opt stack 0
  1067  000044                     _array1:
  1068                           	opt stack 0
  1069  000044                     	ds	21
  1070  000059                     _wrap:
  1071                           	opt stack 0
  1072  000059                     	ds	1
  1073                           tblptru	equ	0xFF8
  1074                           tblptrh	equ	0xFF7
  1075                           tblptrl	equ	0xFF6
  1076                           tablat	equ	0xFF5
  1077                           postinc0	equ	0xFEE
  1078                           wreg	equ	0xFE8
  1079                           postdec1	equ	0xFE5
  1080                           fsr1l	equ	0xFE1
  1081                           
  1082                           	psect	dataBANK0
  1083  000080                     __pdataBANK0:
  1084                           	opt stack 0
  1085  000080                     _color:
  1086                           	opt stack 0
  1087  000080                     	ds	42
  1088  0000AA                     _d1:
  1089                           	opt stack 0
  1090  0000AA                     	ds	21
  1091  0000BF                     _d2:
  1092                           	opt stack 0
  1093  0000BF                     	ds	21
  1094  0000D4                     _d3:
  1095                           	opt stack 0
  1096  0000D4                     	ds	21
  1097                           tblptru	equ	0xFF8
  1098                           tblptrh	equ	0xFF7
  1099                           tblptrl	equ	0xFF6
  1100                           tablat	equ	0xFF5
  1101                           postinc0	equ	0xFEE
  1102                           wreg	equ	0xFE8
  1103                           postdec1	equ	0xFE5
  1104                           fsr1l	equ	0xFE1
  1105                           
  1106                           	psect	bssBANK1
  1107  00017E                     __pbssBANK1:
  1108                           	opt stack 0
  1109  00017E                     _buffer:
  1110                           	opt stack 0
  1111  00017E                     	ds	31
  1112                           tblptru	equ	0xFF8
  1113                           tblptrh	equ	0xFF7
  1114                           tblptrl	equ	0xFF6
  1115                           tablat	equ	0xFF5
  1116                           postinc0	equ	0xFEE
  1117                           wreg	equ	0xFE8
  1118                           postdec1	equ	0xFE5
  1119                           fsr1l	equ	0xFE1
  1120                           
  1121                           	psect	dataBANK1
  1122  000100                     __pdataBANK1:
  1123                           	opt stack 0
  1124  000100                     _color_font:
  1125                           	opt stack 0
  1126  000100                     	ds	42
  1127  00012A                     _txt1:
  1128                           	opt stack 0
  1129  00012A                     	ds	84
  1130                           tblptru	equ	0xFF8
  1131                           tblptrh	equ	0xFF7
  1132                           tblptrl	equ	0xFF6
  1133                           tablat	equ	0xFF5
  1134                           postinc0	equ	0xFEE
  1135                           wreg	equ	0xFE8
  1136                           postdec1	equ	0xFE5
  1137                           fsr1l	equ	0xFE1
  1138                           
  1139                           	psect	cstackBANK0
  1140  0000E9                     __pcstackBANK0:
  1141                           	opt stack 0
  1142  0000E9                     drawtext@x:
  1143                           	opt stack 0
  1144                           
  1145                           ; 1 bytes @ 0x0
  1146  0000E9                     	ds	1
  1147  0000EA                     drawtext@textsize:
  1148                           	opt stack 0
  1149                           
  1150                           ; 2 bytes @ 0x1
  1151  0000EA                     	ds	2
  1152  0000EC                     drawtext@i:
  1153                           	opt stack 0
  1154                           
  1155                           ; 2 bytes @ 0x3
  1156  0000EC                     	ds	2
  1157  0000EE                     drawtext@cursor_y:
  1158                           	opt stack 0
  1159                           
  1160                           ; 1 bytes @ 0x5
  1161  0000EE                     	ds	1
  1162  0000EF                     drawtext@cursor_x:
  1163                           	opt stack 0
  1164                           
  1165                           ; 1 bytes @ 0x6
  1166  0000EF                     	ds	1
  1167  0000F0                     main@led_c:
  1168                           	opt stack 0
  1169                           
  1170                           ; 1 bytes @ 0x7
  1171  0000F0                     	ds	1
  1172  0000F1                     main@i:
  1173                           	opt stack 0
  1174                           
  1175                           ; 2 bytes @ 0x8
  1176  0000F1                     	ds	2
  1177  0000F3                     main@found:
  1178                           	opt stack 0
  1179                           
  1180                           ; 1 bytes @ 0xA
  1181  0000F3                     	ds	1
  1182                           tblptru	equ	0xFF8
  1183                           tblptrh	equ	0xFF7
  1184                           tblptrl	equ	0xFF6
  1185                           tablat	equ	0xFF5
  1186                           postinc0	equ	0xFEE
  1187                           wreg	equ	0xFE8
  1188                           postdec1	equ	0xFE5
  1189                           fsr1l	equ	0xFE1
  1190                           
  1191                           	psect	cstackCOMRAM
  1192  000001                     __pcstackCOMRAM:
  1193                           	opt stack 0
  1194  000001                     ??_INT0_isr:
  1195  000001                     
  1196                           ; 0 bytes @ 0x0
  1197  000001                     	ds	2
  1198  000003                     ??_chkisr:
  1199                           
  1200                           ; 0 bytes @ 0x2
  1201  000003                     	ds	14
  1202  000011                     ??_isdigit:
  1203  000011                     ?_strlen:
  1204                           	opt stack 0
  1205  000011                     ?___wmul:
  1206                           	opt stack 0
  1207  000011                     ?___lldiv:
  1208                           	opt stack 0
  1209  000011                     spiwrite@x:
  1210                           	opt stack 0
  1211  000011                     putch@c:
  1212                           	opt stack 0
  1213  000011                     set_d1@color:
  1214                           	opt stack 0
  1215  000011                     set_d2@color:
  1216                           	opt stack 0
  1217  000011                     set_d3@color:
  1218                           	opt stack 0
  1219  000011                     wait_one_sec@k:
  1220                           	opt stack 0
  1221  000011                     OpenUSART@spbrg:
  1222                           	opt stack 0
  1223  000011                     ___wmul@multiplier:
  1224                           	opt stack 0
  1225  000011                     strcpy@to:
  1226                           	opt stack 0
  1227  000011                     strlen@s:
  1228                           	opt stack 0
  1229  000011                     ___lldiv@dividend:
  1230                           	opt stack 0
  1231                           
  1232                           ; 4 bytes @ 0x10
  1233  000011                     	ds	1
  1234  000012                     spiwrite@spidata:
  1235                           	opt stack 0
  1236  000012                     _isdigit$1757:
  1237                           	opt stack 0
  1238                           
  1239                           ; 1 bytes @ 0x11
  1240  000012                     	ds	1
  1241  000013                     ??_strlen:
  1242  000013                     write_command@cmd_:
  1243                           	opt stack 0
  1244  000013                     write_data@data_:
  1245                           	opt stack 0
  1246  000013                     OpenUSART@config:
  1247                           	opt stack 0
  1248  000013                     isdigit@c:
  1249                           	opt stack 0
  1250  000013                     ___wmul@multiplicand:
  1251                           	opt stack 0
  1252  000013                     strcpy@from:
  1253                           	opt stack 0
  1254                           
  1255                           ; 2 bytes @ 0x12
  1256  000013                     	ds	1
  1257  000014                     setAddrWindow@y0:
  1258                           	opt stack 0
  1259                           
  1260                           ; 1 bytes @ 0x13
  1261  000014                     	ds	1
  1262  000015                     setAddrWindow@x1:
  1263                           	opt stack 0
  1264  000015                     ___wmul@product:
  1265                           	opt stack 0
  1266  000015                     strcpy@cp:
  1267                           	opt stack 0
  1268  000015                     strlen@cp:
  1269                           	opt stack 0
  1270  000015                     ___lldiv@divisor:
  1271                           	opt stack 0
  1272                           
  1273                           ; 4 bytes @ 0x14
  1274  000015                     	ds	1
  1275  000016                     setAddrWindow@y1:
  1276                           	opt stack 0
  1277                           
  1278                           ; 1 bytes @ 0x15
  1279  000016                     	ds	1
  1280  000017                     setAddrWindow@x0:
  1281                           	opt stack 0
  1282  000017                     delay_ms@ms:
  1283                           	opt stack 0
  1284                           
  1285                           ; 2 bytes @ 0x16
  1286  000017                     	ds	1
  1287  000018                     drawPixel@y:
  1288                           	opt stack 0
  1289  000018                     drawFastVLine@y:
  1290                           	opt stack 0
  1291  000018                     fillRectangle@y:
  1292                           	opt stack 0
  1293                           
  1294                           ; 1 bytes @ 0x17
  1295  000018                     	ds	1
  1296  000019                     ??_delay_ms:
  1297  000019                     drawFastVLine@h:
  1298                           	opt stack 0
  1299  000019                     fillRectangle@w:
  1300                           	opt stack 0
  1301  000019                     drawPixel@color:
  1302                           	opt stack 0
  1303  000019                     ___lldiv@quotient:
  1304                           	opt stack 0
  1305                           
  1306                           ; 4 bytes @ 0x18
  1307  000019                     	ds	1
  1308  00001A                     fillRectangle@h:
  1309                           	opt stack 0
  1310  00001A                     drawFastVLine@color:
  1311                           	opt stack 0
  1312                           
  1313                           ; 2 bytes @ 0x19
  1314  00001A                     	ds	1
  1315  00001B                     drawPixel@x:
  1316                           	opt stack 0
  1317  00001B                     delay_ms@count:
  1318                           	opt stack 0
  1319  00001B                     fillRectangle@color:
  1320                           	opt stack 0
  1321                           
  1322                           ; 2 bytes @ 0x1A
  1323  00001B                     	ds	1
  1324  00001C                     ??_drawFastVLine:
  1325  00001C                     drawCircle@x0:
  1326                           	opt stack 0
  1327                           
  1328                           ; 2 bytes @ 0x1B
  1329  00001C                     	ds	1
  1330  00001D                     ??_fillRectangle:
  1331  00001D                     ___lldiv@counter:
  1332                           	opt stack 0
  1333                           
  1334                           ; 1 bytes @ 0x1C
  1335  00001D                     	ds	1
  1336  00001E                     ?_printf:
  1337                           	opt stack 0
  1338  00001E                     drawCircle@y0:
  1339                           	opt stack 0
  1340  00001E                     printf@f:
  1341                           	opt stack 0
  1342                           
  1343                           ; 2 bytes @ 0x1D
  1344  00001E                     	ds	2
  1345  000020                     drawFastVLine@hi:
  1346                           	opt stack 0
  1347  000020                     drawCircle@r:
  1348                           	opt stack 0
  1349                           
  1350                           ; 2 bytes @ 0x1F
  1351  000020                     	ds	1
  1352  000021                     drawFastVLine@lo:
  1353                           	opt stack 0
  1354  000021                     fillRectangle@hi:
  1355                           	opt stack 0
  1356                           
  1357                           ; 1 bytes @ 0x20
  1358  000021                     	ds	1
  1359  000022                     drawFastVLine@x:
  1360                           	opt stack 0
  1361  000022                     fillRectangle@lo:
  1362                           	opt stack 0
  1363  000022                     drawCircle@color:
  1364                           	opt stack 0
  1365                           
  1366                           ; 2 bytes @ 0x21
  1367  000022                     	ds	1
  1368  000023                     fillRect@y:
  1369                           	opt stack 0
  1370  000023                     fillRectangle@x:
  1371                           	opt stack 0
  1372  000023                     fillCircleHelper@x0:
  1373                           	opt stack 0
  1374                           
  1375                           ; 2 bytes @ 0x22
  1376  000023                     	ds	1
  1377  000024                     ??_drawCircle:
  1378  000024                     fillRect@w:
  1379                           	opt stack 0
  1380  000024                     fillScreen@color:
  1381                           	opt stack 0
  1382                           
  1383                           ; 2 bytes @ 0x23
  1384  000024                     	ds	1
  1385  000025                     fillRect@h:
  1386                           	opt stack 0
  1387  000025                     fillCircleHelper@y0:
  1388                           	opt stack 0
  1389                           
  1390                           ; 2 bytes @ 0x24
  1391  000025                     	ds	1
  1392  000026                     ??_printf:
  1393  000026                     fillRect@color:
  1394                           	opt stack 0
  1395  000026                     drawCircle@ddF_x:
  1396                           	opt stack 0
  1397                           
  1398                           ; 2 bytes @ 0x25
  1399  000026                     	ds	1
  1400  000027                     fillCircleHelper@r:
  1401                           	opt stack 0
  1402                           
  1403                           ; 2 bytes @ 0x26
  1404  000027                     	ds	1
  1405  000028                     ??_fillRect:
  1406  000028                     drawCircle@ddF_y:
  1407                           	opt stack 0
  1408                           
  1409                           ; 2 bytes @ 0x27
  1410  000028                     	ds	1
  1411  000029                     fillCircleHelper@cornername:
  1412                           	opt stack 0
  1413                           
  1414                           ; 2 bytes @ 0x28
  1415  000029                     	ds	1
  1416  00002A                     printf@idx:
  1417                           	opt stack 0
  1418  00002A                     drawCircle@f:
  1419                           	opt stack 0
  1420                           
  1421                           ; 2 bytes @ 0x29
  1422  00002A                     	ds	1
  1423  00002B                     fillRect@x:
  1424                           	opt stack 0
  1425  00002B                     fillCircleHelper@delta:
  1426                           	opt stack 0
  1427  00002B                     printf@prec:
  1428                           	opt stack 0
  1429                           
  1430                           ; 2 bytes @ 0x2A
  1431  00002B                     	ds	1
  1432  00002C                     fillRect@i:
  1433                           	opt stack 0
  1434  00002C                     drawCircle@x:
  1435                           	opt stack 0
  1436                           
  1437                           ; 2 bytes @ 0x2B
  1438  00002C                     	ds	1
  1439  00002D                     fillCircleHelper@color:
  1440                           	opt stack 0
  1441  00002D                     printf@val:
  1442                           	opt stack 0
  1443                           
  1444                           ; 4 bytes @ 0x2C
  1445  00002D                     	ds	1
  1446  00002E                     drawChar@y:
  1447                           	opt stack 0
  1448  00002E                     drawCircle@y:
  1449                           	opt stack 0
  1450                           
  1451                           ; 2 bytes @ 0x2D
  1452  00002E                     	ds	1
  1453  00002F                     ??_fillCircleHelper:
  1454  00002F                     drawChar@c:
  1455                           	opt stack 0
  1456                           
  1457                           ; 1 bytes @ 0x2E
  1458  00002F                     	ds	1
  1459  000030                     drawChar@color:
  1460                           	opt stack 0
  1461                           
  1462                           ; 2 bytes @ 0x2F
  1463  000030                     	ds	1
  1464  000031                     fillCircleHelper@ddF_x:
  1465                           	opt stack 0
  1466  000031                     printf@ap:
  1467                           	opt stack 0
  1468                           
  1469                           ; 2 bytes @ 0x30
  1470  000031                     	ds	1
  1471  000032                     drawChar@bg:
  1472                           	opt stack 0
  1473                           
  1474                           ; 2 bytes @ 0x31
  1475  000032                     	ds	1
  1476  000033                     printf@flag:
  1477                           	opt stack 0
  1478  000033                     fillCircleHelper@ddF_y:
  1479                           	opt stack 0
  1480                           
  1481                           ; 2 bytes @ 0x32
  1482  000033                     	ds	1
  1483  000034                     drawChar@size:
  1484                           	opt stack 0
  1485  000034                     printf@width:
  1486                           	opt stack 0
  1487                           
  1488                           ; 2 bytes @ 0x33
  1489  000034                     	ds	1
  1490  000035                     drawChar@line:
  1491                           	opt stack 0
  1492  000035                     fillCircleHelper@f:
  1493                           	opt stack 0
  1494                           
  1495                           ; 2 bytes @ 0x34
  1496  000035                     	ds	1
  1497  000036                     drawChar@x:
  1498                           	opt stack 0
  1499  000036                     printf@c:
  1500                           	opt stack 0
  1501                           
  1502                           ; 1 bytes @ 0x35
  1503  000036                     	ds	1
  1504  000037                     drawChar@j:
  1505                           	opt stack 0
  1506  000037                     fillCircleHelper@x:
  1507                           	opt stack 0
  1508                           
  1509                           ; 2 bytes @ 0x36
  1510  000037                     	ds	1
  1511  000038                     drawChar@i:
  1512                           	opt stack 0
  1513                           
  1514                           ; 1 bytes @ 0x37
  1515  000038                     	ds	1
  1516  000039                     drawtext@y:
  1517                           	opt stack 0
  1518  000039                     fillCircleHelper@y:
  1519                           	opt stack 0
  1520                           
  1521                           ; 2 bytes @ 0x38
  1522  000039                     	ds	1
  1523  00003A                     drawtext@_text:
  1524                           	opt stack 0
  1525                           
  1526                           ; 2 bytes @ 0x39
  1527  00003A                     	ds	1
  1528  00003B                     fillCircle@x0:
  1529                           	opt stack 0
  1530                           
  1531                           ; 2 bytes @ 0x3A
  1532  00003B                     	ds	1
  1533  00003C                     drawtext@color:
  1534                           	opt stack 0
  1535                           
  1536                           ; 2 bytes @ 0x3B
  1537  00003C                     	ds	1
  1538  00003D                     fillCircle@y0:
  1539                           	opt stack 0
  1540                           
  1541                           ; 2 bytes @ 0x3C
  1542  00003D                     	ds	1
  1543  00003E                     drawtext@bg:
  1544                           	opt stack 0
  1545                           
  1546                           ; 2 bytes @ 0x3D
  1547  00003E                     	ds	1
  1548  00003F                     fillCircle@r:
  1549                           	opt stack 0
  1550                           
  1551                           ; 2 bytes @ 0x3E
  1552  00003F                     	ds	1
  1553  000040                     drawtext@size:
  1554                           	opt stack 0
  1555                           
  1556                           ; 1 bytes @ 0x3F
  1557  000040                     	ds	1
  1558  000041                     ??_drawtext:
  1559  000041                     fillCircle@color:
  1560                           	opt stack 0
  1561                           
  1562                           ; 2 bytes @ 0x40
  1563  000041                     	ds	2
  1564  000043                     
  1565                           ; 0 bytes @ 0x42
  1566  000043                     	ds	1
  1567                           tblptru	equ	0xFF8
  1568                           tblptrh	equ	0xFF7
  1569                           tblptrl	equ	0xFF6
  1570                           tablat	equ	0xFF5
  1571                           postinc0	equ	0xFEE
  1572                           wreg	equ	0xFE8
  1573                           postdec1	equ	0xFE5
  1574                           fsr1l	equ	0xFE1
  1575                           
  1576 ;;
  1577 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1578 ;;
  1579 ;; *************** function _main *****************
  1580 ;; Defined at:
  1581 ;;		line 262 in file "Lab10ptest.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;		None
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  i               2    8[BANK0 ] int 
  1586 ;;  found           1   10[BANK0 ] unsigned char 
  1587 ;;  led_c           1    7[BANK0 ] unsigned char 
  1588 ;; Return value:  Size  Location     Type
  1589 ;;		None               void
  1590 ;; Registers used:
  1591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1598 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1599 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1600 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1601 ;;Total ram usage:        5 bytes
  1602 ;; Hardware stack levels required when called:   11
  1603 ;; This function calls:
  1604 ;;		_Activate_Buzzer
  1605 ;;		_Deactivate_Buzzer
  1606 ;;		_Initialize_Screen
  1607 ;;		_drawCircle
  1608 ;;		_drawtext
  1609 ;;		_fillCircle
  1610 ;;		_init_UART
  1611 ;;		_printf
  1612 ;;		_set_d1
  1613 ;;		_set_d2
  1614 ;;		_set_d3
  1615 ;;		_wait_one_sec
  1616 ;; This function is called by:
  1617 ;;		Startup code after reset
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text0
  1622  0002BE                     __ptext0:
  1623                           	opt stack 0
  1624  0002BE                     _main:
  1625                           	opt stack 20
  1626                           
  1627                           ;Lab10ptest.c: 264: init_UART();
  1628                           
  1629                           ;incstack = 0
  1630  0002BE  EC0F  F00B         	call	_init_UART	;wreg free
  1631                           
  1632                           ;Lab10ptest.c: 265: OSCCON = 0x70;
  1633  0002C2  0E70               	movlw	112
  1634  0002C4  6ED3               	movwf	4051,c	;volatile
  1635                           
  1636                           ;Lab10ptest.c: 266: nRBPU = 0;
  1637  0002C6  9EF1               	bcf	intcon2,7,c	;volatile
  1638                           
  1639                           ;Lab10ptest.c: 267: TRISA = 0x00;
  1640  0002C8  0E00               	movlw	0
  1641  0002CA  6E92               	movwf	3986,c	;volatile
  1642                           
  1643                           ;Lab10ptest.c: 268: TRISB = 0x01;
  1644  0002CC  0E01               	movlw	1
  1645  0002CE  6E93               	movwf	3987,c	;volatile
  1646                           
  1647                           ;Lab10ptest.c: 269: TRISC = 0x00;
  1648  0002D0  0E00               	movlw	0
  1649  0002D2  6E94               	movwf	3988,c	;volatile
  1650                           
  1651                           ;Lab10ptest.c: 270: TRISD = 0x00;
  1652  0002D4  0E00               	movlw	0
  1653  0002D6  6E95               	movwf	3989,c	;volatile
  1654                           
  1655                           ;Lab10ptest.c: 271: TRISE = 0x00;
  1656  0002D8  0E00               	movlw	0
  1657  0002DA  6E96               	movwf	3990,c	;volatile
  1658                           
  1659                           ;Lab10ptest.c: 272: ADCON1 = 0x0F;
  1660  0002DC  0E0F               	movlw	15
  1661  0002DE  6EC1               	movwf	4033,c	;volatile
  1662                           
  1663                           ;Lab10ptest.c: 273: Initialize_Screen();
  1664  0002E0  EC26  F007         	call	_Initialize_Screen	;wreg free
  1665                           
  1666                           ;Lab10ptest.c: 274: INTCONbits.INT0IF = 0;
  1667  0002E4  92F2               	bcf	intcon,1,c	;volatile
  1668                           
  1669                           ;Lab10ptest.c: 275: INTCON2bits.INTEDG0 = 0;
  1670  0002E6  9CF1               	bcf	intcon2,6,c	;volatile
  1671                           
  1672                           ;Lab10ptest.c: 276: INTCONbits.INT0IE = 1;
  1673  0002E8  88F2               	bsf	intcon,4,c	;volatile
  1674                           
  1675                           ;Lab10ptest.c: 277: TMR1H = 0;
  1676  0002EA  0E00               	movlw	0
  1677  0002EC  6ECF               	movwf	4047,c	;volatile
  1678                           
  1679                           ;Lab10ptest.c: 278: TMR1L = 0;
  1680  0002EE  0E00               	movlw	0
  1681  0002F0  6ECE               	movwf	4046,c	;volatile
  1682                           
  1683                           ;Lab10ptest.c: 279: PIR1bits.TMR1IF = 0;
  1684  0002F2  909E               	bcf	3998,0,c	;volatile
  1685                           
  1686                           ;Lab10ptest.c: 280: PIE1bits.TMR1IE = 1;
  1687  0002F4  809D               	bsf	3997,0,c	;volatile
  1688                           
  1689                           ;Lab10ptest.c: 281: INTCONbits.PEIE = 1;
  1690  0002F6  8CF2               	bsf	intcon,6,c	;volatile
  1691                           
  1692                           ;Lab10ptest.c: 282: INTCONbits.GIE = 1;
  1693  0002F8  8EF2               	bsf	intcon,7,c	;volatile
  1694                           
  1695                           ;Lab10ptest.c: 283: nec_ok = 0;
  1696  0002FA  0E00               	movlw	0
  1697  0002FC  6E63               	movwf	_nec_ok+1,c
  1698  0002FE  0E00               	movlw	0
  1699  000300  6E62               	movwf	_nec_ok,c
  1700                           
  1701                           ;Lab10ptest.c: 284: Nec_code = 0x0;
  1702  000302  0E00               	movlw	0
  1703  000304  6E5A               	movwf	_Nec_code,c
  1704  000306  0E00               	movlw	0
  1705  000308  6E5B               	movwf	_Nec_code+1,c
  1706  00030A  0E00               	movlw	0
  1707  00030C  6E5C               	movwf	_Nec_code+2,c
  1708  00030E  0E00               	movlw	0
  1709  000310  6E5D               	movwf	_Nec_code+3,c
  1710  000312  D000               	goto	l4212
  1711  000314                     l4212:
  1712                           
  1713                           ;Lab10ptest.c: 287: {
  1714                           ;Lab10ptest.c: 288: if (nec_ok == 1)
  1715  000314  0462               	decf	_nec_ok,w,c
  1716  000316  1063               	iorwf	_nec_ok+1,w,c
  1717  000318  A4D8               	btfss	status,2,c
  1718  00031A  D7FC               	goto	l4212
  1719                           
  1720                           ;Lab10ptest.c: 289: {
  1721                           ;Lab10ptest.c: 290: nec_ok = 0;
  1722  00031C  0E00               	movlw	0
  1723  00031E  6E63               	movwf	_nec_ok+1,c
  1724  000320  0E00               	movlw	0
  1725  000322  6E62               	movwf	_nec_ok,c
  1726                           
  1727                           ;Lab10ptest.c: 292: Nec_code1 = (char) ((Nec_code >> 8));
  1728  000324  C05B  F066         	movff	_Nec_code+1,_Nec_code1
  1729                           
  1730                           ;Lab10ptest.c: 293: printf ("NEC_Code = %08lx %x\r\n", Nec_code, Nec_code1);
  1731  000328  0EBC               	movlw	low STR_1
  1732  00032A  6E1E               	movwf	printf@f,c
  1733  00032C  0EFF               	movlw	high STR_1
  1734  00032E  6E1F               	movwf	printf@f+1,c
  1735  000330  C05A  F020         	movff	_Nec_code,?_printf+2
  1736  000334  C05B  F021         	movff	_Nec_code+1,?_printf+3
  1737  000338  C05C  F022         	movff	_Nec_code+2,?_printf+4
  1738  00033C  C05D  F023         	movff	_Nec_code+3,?_printf+5
  1739  000340  C066  F024         	movff	_Nec_code1,?_printf+6
  1740  000344  6A25               	clrf	?_printf+7,c
  1741  000346  EC0E  F000         	call	_printf	;wreg free
  1742                           
  1743                           ;Lab10ptest.c: 294: INTCONbits.INT0IE = 1;
  1744  00034A  88F2               	bsf	intcon,4,c	;volatile
  1745                           
  1746                           ;Lab10ptest.c: 295: INTCON2bits.INTEDG0 = 0;
  1747  00034C  9CF1               	bcf	intcon2,6,c	;volatile
  1748                           
  1749                           ;Lab10ptest.c: 297: char found = 0xff;
  1750  00034E  0100               	movlb	0	; () banked
  1751  000350  69F3               	setf	main@found& (0+255),b
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;Lab10ptest.c: 298: char led_c = 0xff;
  1755  000352  0100               	movlb	0	; () banked
  1756  000354  69F0               	setf	main@led_c& (0+255),b
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;Lab10ptest.c: 300: for(int i = 0; i < 21; i++)
  1760  000356  0E00               	movlw	0
  1761  000358  0100               	movlb	0	; () banked
  1762  00035A  6FF2               	movwf	(main@i+1)& (0+255),b
  1763  00035C  0E00               	movlw	0
  1764  00035E  6FF1               	movwf	main@i& (0+255),b
  1765  000360                     l4230:
  1766                           
  1767                           ; BSR set to: 0
  1768  000360  0100               	movlb	0	; () banked
  1769  000362  BFF2               	btfsc	(main@i+1)& (0+255),7,b
  1770  000364  D00A               	goto	l4234
  1771  000366  0100               	movlb	0	; () banked
  1772  000368  51F2               	movf	(main@i+1)& (0+255),w,b
  1773  00036A  E11D               	bnz	l4242
  1774  00036C  0E15               	movlw	21
  1775  00036E  0100               	movlb	0	; () banked
  1776  000370  5DF1               	subwf	main@i& (0+255),w,b
  1777  000372  B0D8               	btfsc	status,0,c
  1778  000374  D018               	goto	l4242
  1779  000376  D001               	goto	l4234
  1780                           
  1781                           ; BSR set to: 0
  1782  000378  D016               	goto	l4242
  1783  00037A                     l4234:
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;Lab10ptest.c: 301: {
  1787                           ;Lab10ptest.c: 302: if(Nec_code1 == array1[i])
  1788  00037A  0E44               	movlw	low _array1
  1789  00037C  0100               	movlb	0	; () banked
  1790  00037E  25F1               	addwf	main@i& (0+255),w,b
  1791  000380  6ED9               	movwf	fsr2l,c
  1792  000382  0E00               	movlw	high _array1
  1793  000384  0100               	movlb	0	; () banked
  1794  000386  21F2               	addwfc	(main@i+1)& (0+255),w,b
  1795  000388  6EDA               	movwf	fsr2h,c
  1796  00038A  5066               	movf	_Nec_code1,w,c
  1797  00038C  18DE               	xorwf	postinc2,w,c
  1798  00038E  A4D8               	btfss	status,2,c
  1799  000390  D005               	goto	l4238
  1800                           
  1801                           ; BSR set to: 0
  1802                           ;Lab10ptest.c: 303: {
  1803                           ;Lab10ptest.c: 304: found = i;
  1804  000392  C0F1  F0F3         	movff	main@i,main@found
  1805                           
  1806                           ;Lab10ptest.c: 305: led_c = i;
  1807  000396  C0F1  F0F0         	movff	main@i,main@led_c
  1808  00039A  D000               	goto	l4238
  1809  00039C                     l4238:
  1810                           
  1811                           ; BSR set to: 0
  1812  00039C  0100               	movlb	0	; () banked
  1813  00039E  4BF1               	infsnz	main@i& (0+255),f,b
  1814  0003A0  2BF2               	incf	(main@i+1)& (0+255),f,b
  1815  0003A2  D7DE               	goto	l4230
  1816                           
  1817                           ; BSR set to: 0
  1818  0003A4  D000               	goto	l4242
  1819  0003A6                     l4242:
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;Lab10ptest.c: 306: }
  1823                           ;Lab10ptest.c: 307: }
  1824                           ;Lab10ptest.c: 309: set_d1(0);
  1825  0003A6  0E00               	movlw	0
  1826  0003A8  EC74  F009         	call	_set_d1
  1827                           
  1828                           ;Lab10ptest.c: 310: set_d2(0);
  1829  0003AC  0E00               	movlw	0
  1830  0003AE  EC4B  F009         	call	_set_d2
  1831                           
  1832                           ;Lab10ptest.c: 311: set_d3(0);
  1833  0003B2  0E00               	movlw	0
  1834  0003B4  EC22  F009         	call	_set_d3
  1835                           
  1836                           ;Lab10ptest.c: 314: if (found != 0xff)
  1837  0003B8  0100               	movlb	0	; () banked
  1838  0003BA  29F3               	incf	main@found& (0+255),w,b
  1839  0003BC  B4D8               	btfsc	status,2,c
  1840  0003BE  D057               	goto	l4252
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;Lab10ptest.c: 315: {
  1844                           ;Lab10ptest.c: 316: fillCircle(60, 80, 20, color[found]);
  1845  0003C0  0E00               	movlw	0
  1846  0003C2  6E3C               	movwf	fillCircle@x0+1,c
  1847  0003C4  0E3C               	movlw	60
  1848  0003C6  6E3B               	movwf	fillCircle@x0,c
  1849  0003C8  0E00               	movlw	0
  1850  0003CA  6E3E               	movwf	fillCircle@y0+1,c
  1851  0003CC  0E50               	movlw	80
  1852  0003CE  6E3D               	movwf	fillCircle@y0,c
  1853  0003D0  0E00               	movlw	0
  1854  0003D2  6E40               	movwf	fillCircle@r+1,c
  1855  0003D4  0E14               	movlw	20
  1856  0003D6  6E3F               	movwf	fillCircle@r,c
  1857  0003D8  0100               	movlb	0	; () banked
  1858  0003DA  51F3               	movf	main@found& (0+255),w,b
  1859  0003DC  0D02               	mullw	2
  1860  0003DE  0E80               	movlw	low _color
  1861  0003E0  24F3               	addwf	prodl,w,c
  1862  0003E2  6ED9               	movwf	fsr2l,c
  1863  0003E4  0E00               	movlw	high _color
  1864  0003E6  20F4               	addwfc	prodh,w,c
  1865  0003E8  6EDA               	movwf	fsr2h,c
  1866  0003EA  CFDE F041          	movff	postinc2,fillCircle@color
  1867  0003EE  CFDD F042          	movff	postdec2,fillCircle@color+1
  1868  0003F2  EC9D  F009         	call	_fillCircle	;wreg free
  1869                           
  1870                           ;Lab10ptest.c: 317: drawCircle(60, 80, 20, 0xFFFF);
  1871  0003F6  0E00               	movlw	0
  1872  0003F8  6E1D               	movwf	drawCircle@x0+1,c
  1873  0003FA  0E3C               	movlw	60
  1874  0003FC  6E1C               	movwf	drawCircle@x0,c
  1875  0003FE  0E00               	movlw	0
  1876  000400  6E1F               	movwf	drawCircle@y0+1,c
  1877  000402  0E50               	movlw	80
  1878  000404  6E1E               	movwf	drawCircle@y0,c
  1879  000406  0E00               	movlw	0
  1880  000408  6E21               	movwf	drawCircle@r+1,c
  1881  00040A  0E14               	movlw	20
  1882  00040C  6E20               	movwf	drawCircle@r,c
  1883  00040E  0EFF               	movlw	255
  1884  000410  6E23               	movwf	drawCircle@color+1,c
  1885  000412  6822               	setf	drawCircle@color,c
  1886  000414  EC64  F002         	call	_drawCircle	;wreg free
  1887                           
  1888                           ;Lab10ptest.c: 318: drawtext(52, 77, txt1[found], color_font[found], color[found],1);
  1889  000418  0E4D               	movlw	77
  1890  00041A  6E39               	movwf	drawtext@y,c
  1891  00041C  0100               	movlb	0	; () banked
  1892  00041E  51F3               	movf	main@found& (0+255),w,b
  1893  000420  0D04               	mullw	4
  1894  000422  0E2A               	movlw	low _txt1
  1895  000424  24F3               	addwf	prodl,w,c
  1896  000426  6E3A               	movwf	drawtext@_text,c
  1897  000428  0E01               	movlw	high _txt1
  1898  00042A  20F4               	addwfc	prodh,w,c
  1899  00042C  6E3B               	movwf	drawtext@_text+1,c
  1900  00042E  0100               	movlb	0	; () banked
  1901  000430  51F3               	movf	main@found& (0+255),w,b
  1902  000432  0D02               	mullw	2
  1903  000434  0E00               	movlw	low _color_font
  1904  000436  24F3               	addwf	prodl,w,c
  1905  000438  6ED9               	movwf	fsr2l,c
  1906  00043A  0E01               	movlw	high _color_font
  1907  00043C  20F4               	addwfc	prodh,w,c
  1908  00043E  6EDA               	movwf	fsr2h,c
  1909  000440  CFDE F03C          	movff	postinc2,drawtext@color
  1910  000444  CFDD F03D          	movff	postdec2,drawtext@color+1
  1911  000448  0100               	movlb	0	; () banked
  1912  00044A  51F3               	movf	main@found& (0+255),w,b
  1913  00044C  0D02               	mullw	2
  1914  00044E  0E80               	movlw	low _color
  1915  000450  24F3               	addwf	prodl,w,c
  1916  000452  6ED9               	movwf	fsr2l,c
  1917  000454  0E00               	movlw	high _color
  1918  000456  20F4               	addwfc	prodh,w,c
  1919  000458  6EDA               	movwf	fsr2h,c
  1920  00045A  CFDE F03E          	movff	postinc2,drawtext@bg
  1921  00045E  CFDD F03F          	movff	postdec2,drawtext@bg+1
  1922  000462  0E01               	movlw	1
  1923  000464  6E40               	movwf	drawtext@size,c
  1924  000466  0E34               	movlw	52
  1925  000468  ECBA  F005         	call	_drawtext
  1926  00046C  D000               	goto	l4252
  1927  00046E                     l4252:
  1928                           
  1929                           ;Lab10ptest.c: 319: }
  1930                           ;Lab10ptest.c: 321: set_d1(d1[led_c]);
  1931  00046E  0100               	movlb	0	; () banked
  1932  000470  51F0               	movf	main@led_c& (0+255),w,b
  1933  000472  0D01               	mullw	1
  1934  000474  0EAA               	movlw	low _d1
  1935  000476  24F3               	addwf	prodl,w,c
  1936  000478  6ED9               	movwf	fsr2l,c
  1937  00047A  0E00               	movlw	high _d1
  1938  00047C  20F4               	addwfc	prodh,w,c
  1939  00047E  6EDA               	movwf	fsr2h,c
  1940  000480  50DF               	movf	indf2,w,c
  1941  000482  EC74  F009         	call	_set_d1
  1942                           
  1943                           ;Lab10ptest.c: 322: set_d2(d2[led_c]);
  1944  000486  0100               	movlb	0	; () banked
  1945  000488  51F0               	movf	main@led_c& (0+255),w,b
  1946  00048A  0D01               	mullw	1
  1947  00048C  0EBF               	movlw	low _d2
  1948  00048E  24F3               	addwf	prodl,w,c
  1949  000490  6ED9               	movwf	fsr2l,c
  1950  000492  0E00               	movlw	high _d2
  1951  000494  20F4               	addwfc	prodh,w,c
  1952  000496  6EDA               	movwf	fsr2h,c
  1953  000498  50DF               	movf	indf2,w,c
  1954  00049A  EC4B  F009         	call	_set_d2
  1955                           
  1956                           ;Lab10ptest.c: 323: set_d3(d3[led_c]);
  1957  00049E  0100               	movlb	0	; () banked
  1958  0004A0  51F0               	movf	main@led_c& (0+255),w,b
  1959  0004A2  0D01               	mullw	1
  1960  0004A4  0ED4               	movlw	low _d3
  1961  0004A6  24F3               	addwf	prodl,w,c
  1962  0004A8  6ED9               	movwf	fsr2l,c
  1963  0004AA  0E00               	movlw	high _d3
  1964  0004AC  20F4               	addwfc	prodh,w,c
  1965  0004AE  6EDA               	movwf	fsr2h,c
  1966  0004B0  50DF               	movf	indf2,w,c
  1967  0004B2  EC22  F009         	call	_set_d3
  1968                           
  1969                           ;Lab10ptest.c: 324: Activate_Buzzer();
  1970  0004B6  EC2C  F00B         	call	_Activate_Buzzer	;wreg free
  1971                           
  1972                           ;Lab10ptest.c: 325: wait_one_sec();
  1973  0004BA  ECD3  F00A         	call	_wait_one_sec	;wreg free
  1974                           
  1975                           ;Lab10ptest.c: 326: Deactivate_Buzzer();
  1976  0004BE  EC52  F00B         	call	_Deactivate_Buzzer	;wreg free
  1977  0004C2  D728               	goto	l4212
  1978  0004C4  EF0C  F000         	goto	start
  1979  0004C8                     __end_of_main:
  1980                           	opt stack 0
  1981                           tblptru	equ	0xFF8
  1982                           tblptrh	equ	0xFF7
  1983                           tblptrl	equ	0xFF6
  1984                           tablat	equ	0xFF5
  1985                           prodh	equ	0xFF4
  1986                           prodl	equ	0xFF3
  1987                           intcon	equ	0xFF2
  1988                           intcon2	equ	0xFF1
  1989                           postinc0	equ	0xFEE
  1990                           wreg	equ	0xFE8
  1991                           postdec1	equ	0xFE5
  1992                           fsr1l	equ	0xFE1
  1993                           indf2	equ	0xFDF
  1994                           postinc2	equ	0xFDE
  1995                           postdec2	equ	0xFDD
  1996                           fsr2h	equ	0xFDA
  1997                           fsr2l	equ	0xFD9
  1998                           status	equ	0xFD8
  1999                           
  2000 ;; *************** function _wait_one_sec *****************
  2001 ;; Defined at:
  2002 ;;		line 345 in file "Lab10ptest.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  k               2   16[COMRAM] int 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;		None               void
  2009 ;; Registers used:
  2010 ;;		wreg, status,2, status,0
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2019 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2020 ;;Total ram usage:        2 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:    3
  2023 ;; This function calls:
  2024 ;;		Nothing
  2025 ;; This function is called by:
  2026 ;;		_main
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	text1
  2031  0015A6                     __ptext1:
  2032                           	opt stack 0
  2033  0015A6                     _wait_one_sec:
  2034                           	opt stack 27
  2035                           
  2036                           ;Lab10ptest.c: 347: for (int k=0; k<17000; k++);
  2037                           
  2038                           ;incstack = 0
  2039  0015A6  0E00               	movlw	0
  2040  0015A8  6E12               	movwf	wait_one_sec@k+1,c
  2041  0015AA  0E00               	movlw	0
  2042  0015AC  6E11               	movwf	wait_one_sec@k,c
  2043  0015AE                     l3920:
  2044  0015AE  BE12               	btfsc	wait_one_sec@k+1,7,c
  2045  0015B0  D008               	goto	l3924
  2046  0015B2  0E68               	movlw	104
  2047  0015B4  5C11               	subwf	wait_one_sec@k,w,c
  2048  0015B6  0E42               	movlw	66
  2049  0015B8  5812               	subwfb	wait_one_sec@k+1,w,c
  2050  0015BA  B0D8               	btfsc	status,0,c
  2051  0015BC  D005               	goto	l419
  2052  0015BE  D001               	goto	l3924
  2053  0015C0  D003               	goto	l419
  2054  0015C2                     l3924:
  2055  0015C2  4A11               	infsnz	wait_one_sec@k,f,c
  2056  0015C4  2A12               	incf	wait_one_sec@k+1,f,c
  2057  0015C6  D7F3               	goto	l3920
  2058  0015C8                     l419:
  2059  0015C8  0012               	return		;funcret
  2060  0015CA                     __end_of_wait_one_sec:
  2061                           	opt stack 0
  2062                           tblptru	equ	0xFF8
  2063                           tblptrh	equ	0xFF7
  2064                           tblptrl	equ	0xFF6
  2065                           tablat	equ	0xFF5
  2066                           prodh	equ	0xFF4
  2067                           prodl	equ	0xFF3
  2068                           intcon	equ	0xFF2
  2069                           intcon2	equ	0xFF1
  2070                           postinc0	equ	0xFEE
  2071                           wreg	equ	0xFE8
  2072                           postdec1	equ	0xFE5
  2073                           fsr1l	equ	0xFE1
  2074                           indf2	equ	0xFDF
  2075                           postinc2	equ	0xFDE
  2076                           postdec2	equ	0xFDD
  2077                           fsr2h	equ	0xFDA
  2078                           fsr2l	equ	0xFD9
  2079                           status	equ	0xFD8
  2080                           
  2081 ;; *************** function _set_d3 *****************
  2082 ;; Defined at:
  2083 ;;		line 145 in file "Lab10ptest.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;  color           1    wreg     unsigned char 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  color           1   16[COMRAM] unsigned char 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;		None               void
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;Total ram usage:        1 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:    3
  2104 ;; This function calls:
  2105 ;;		Nothing
  2106 ;; This function is called by:
  2107 ;;		_main
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text2
  2112  001244                     __ptext2:
  2113                           	opt stack 0
  2114  001244                     _set_d3:
  2115                           	opt stack 27
  2116                           
  2117                           ;incstack = 0
  2118                           ;set_d3@color stored from wreg
  2119  001244  6E11               	movwf	set_d3@color,c
  2120                           
  2121                           ;Lab10ptest.c: 147: switch(color)
  2122  001246  D012               	goto	l3814
  2123  001248                     l369:
  2124  001248  9680               	bcf	3968,3,c	;volatile
  2125  00124A  D001               	goto	L1
  2126  00124C                     l371:
  2127  00124C  8680               	bsf	3968,3,c	;volatile
  2128  00124E                     L1:
  2129  00124E  9880               	bcf	3968,4,c	;volatile
  2130  001250  D002               	goto	L2
  2131  001252                     l372:
  2132  001252  9680               	bcf	3968,3,c	;volatile
  2133  001254  8880               	bsf	3968,4,c	;volatile
  2134  001256                     L2:
  2135  001256  9A80               	bcf	3968,5,c	;volatile
  2136  001258  D01D               	goto	l376
  2137  00125A                     l373:
  2138  00125A  9680               	bcf	3968,3,c	;volatile
  2139  00125C  D001               	goto	L3
  2140  00125E                     l374:
  2141  00125E  8680               	bsf	3968,3,c	;volatile
  2142  001260                     L3:
  2143  001260  9880               	bcf	3968,4,c	;volatile
  2144  001262  D002               	goto	L4
  2145  001264                     l375:
  2146  001264  8680               	bsf	3968,3,c	;volatile
  2147  001266  8880               	bsf	3968,4,c	;volatile
  2148  001268                     L4:
  2149  001268  8A80               	bsf	3968,5,c	;volatile
  2150                           
  2151                           ;Lab10ptest.c: 155: }
  2152  00126A  D014               	goto	l376
  2153  00126C                     l3814:
  2154  00126C  5011               	movf	set_d3@color,w,c
  2155                           
  2156                           ; Switch size 1, requested type "space"
  2157                           ; Number of cases is 6, Range of values is 0 to 5
  2158                           ; switch strategies available:
  2159                           ; Name         Instructions Cycles
  2160                           ; simple_byte           19    10 (average)
  2161                           ;	Chosen strategy is simple_byte
  2162  00126E  0A00               	xorlw	0	; case 0
  2163  001270  B4D8               	btfsc	status,2,c
  2164  001272  D7EA               	goto	l369
  2165  001274  0A01               	xorlw	1	; case 1
  2166  001276  B4D8               	btfsc	status,2,c
  2167  001278  D7E9               	goto	l371
  2168  00127A  0A03               	xorlw	3	; case 2
  2169  00127C  B4D8               	btfsc	status,2,c
  2170  00127E  D7E9               	goto	l372
  2171  001280  0A01               	xorlw	1	; case 3
  2172  001282  B4D8               	btfsc	status,2,c
  2173  001284  D7EA               	goto	l373
  2174  001286  0A07               	xorlw	7	; case 4
  2175  001288  B4D8               	btfsc	status,2,c
  2176  00128A  D7E9               	goto	l374
  2177  00128C  0A01               	xorlw	1	; case 5
  2178  00128E  B4D8               	btfsc	status,2,c
  2179  001290  D7E9               	goto	l375
  2180  001292  D000               	goto	l376
  2181  001294                     l376:
  2182  001294  0012               	return		;funcret
  2183  001296                     __end_of_set_d3:
  2184                           	opt stack 0
  2185                           tblptru	equ	0xFF8
  2186                           tblptrh	equ	0xFF7
  2187                           tblptrl	equ	0xFF6
  2188                           tablat	equ	0xFF5
  2189                           prodh	equ	0xFF4
  2190                           prodl	equ	0xFF3
  2191                           intcon	equ	0xFF2
  2192                           intcon2	equ	0xFF1
  2193                           postinc0	equ	0xFEE
  2194                           wreg	equ	0xFE8
  2195                           postdec1	equ	0xFE5
  2196                           fsr1l	equ	0xFE1
  2197                           indf2	equ	0xFDF
  2198                           postinc2	equ	0xFDE
  2199                           postdec2	equ	0xFDD
  2200                           fsr2h	equ	0xFDA
  2201                           fsr2l	equ	0xFD9
  2202                           status	equ	0xFD8
  2203                           
  2204 ;; *************** function _set_d2 *****************
  2205 ;; Defined at:
  2206 ;;		line 131 in file "Lab10ptest.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  color           1    wreg     unsigned char 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;  color           1   16[COMRAM] unsigned char 
  2211 ;; Return value:  Size  Location     Type
  2212 ;;		None               void
  2213 ;; Registers used:
  2214 ;;		wreg, status,2, status,0
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2223 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2224 ;;Total ram usage:        1 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; Hardware stack levels required when called:    3
  2227 ;; This function calls:
  2228 ;;		Nothing
  2229 ;; This function is called by:
  2230 ;;		_main
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	text3
  2235  001296                     __ptext3:
  2236                           	opt stack 0
  2237  001296                     _set_d2:
  2238                           	opt stack 27
  2239                           
  2240                           ;incstack = 0
  2241                           ;set_d2@color stored from wreg
  2242  001296  6E11               	movwf	set_d2@color,c
  2243                           
  2244                           ;Lab10ptest.c: 133: switch(color)
  2245  001298  D012               	goto	l3808
  2246  00129A                     l358:
  2247  00129A  9A83               	bcf	3971,5,c	;volatile
  2248  00129C  D001               	goto	L5
  2249  00129E                     l360:
  2250  00129E  8A83               	bsf	3971,5,c	;volatile
  2251  0012A0                     L5:
  2252  0012A0  9C83               	bcf	3971,6,c	;volatile
  2253  0012A2  D002               	goto	L6
  2254  0012A4                     l361:
  2255  0012A4  9A83               	bcf	3971,5,c	;volatile
  2256  0012A6  8C83               	bsf	3971,6,c	;volatile
  2257  0012A8                     L6:
  2258  0012A8  9E83               	bcf	3971,7,c	;volatile
  2259  0012AA  D01D               	goto	l365
  2260  0012AC                     l362:
  2261  0012AC  9A83               	bcf	3971,5,c	;volatile
  2262  0012AE  D001               	goto	L7
  2263  0012B0                     l363:
  2264  0012B0  8A83               	bsf	3971,5,c	;volatile
  2265  0012B2                     L7:
  2266  0012B2  9C83               	bcf	3971,6,c	;volatile
  2267  0012B4  D002               	goto	L8
  2268  0012B6                     l364:
  2269  0012B6  8A83               	bsf	3971,5,c	;volatile
  2270  0012B8  8C83               	bsf	3971,6,c	;volatile
  2271  0012BA                     L8:
  2272  0012BA  8E83               	bsf	3971,7,c	;volatile
  2273                           
  2274                           ;Lab10ptest.c: 141: }
  2275  0012BC  D014               	goto	l365
  2276  0012BE                     l3808:
  2277  0012BE  5011               	movf	set_d2@color,w,c
  2278                           
  2279                           ; Switch size 1, requested type "space"
  2280                           ; Number of cases is 6, Range of values is 0 to 5
  2281                           ; switch strategies available:
  2282                           ; Name         Instructions Cycles
  2283                           ; simple_byte           19    10 (average)
  2284                           ;	Chosen strategy is simple_byte
  2285  0012C0  0A00               	xorlw	0	; case 0
  2286  0012C2  B4D8               	btfsc	status,2,c
  2287  0012C4  D7EA               	goto	l358
  2288  0012C6  0A01               	xorlw	1	; case 1
  2289  0012C8  B4D8               	btfsc	status,2,c
  2290  0012CA  D7E9               	goto	l360
  2291  0012CC  0A03               	xorlw	3	; case 2
  2292  0012CE  B4D8               	btfsc	status,2,c
  2293  0012D0  D7E9               	goto	l361
  2294  0012D2  0A01               	xorlw	1	; case 3
  2295  0012D4  B4D8               	btfsc	status,2,c
  2296  0012D6  D7EA               	goto	l362
  2297  0012D8  0A07               	xorlw	7	; case 4
  2298  0012DA  B4D8               	btfsc	status,2,c
  2299  0012DC  D7E9               	goto	l363
  2300  0012DE  0A01               	xorlw	1	; case 5
  2301  0012E0  B4D8               	btfsc	status,2,c
  2302  0012E2  D7E9               	goto	l364
  2303  0012E4  D000               	goto	l365
  2304  0012E6                     l365:
  2305  0012E6  0012               	return		;funcret
  2306  0012E8                     __end_of_set_d2:
  2307                           	opt stack 0
  2308                           tblptru	equ	0xFF8
  2309                           tblptrh	equ	0xFF7
  2310                           tblptrl	equ	0xFF6
  2311                           tablat	equ	0xFF5
  2312                           prodh	equ	0xFF4
  2313                           prodl	equ	0xFF3
  2314                           intcon	equ	0xFF2
  2315                           intcon2	equ	0xFF1
  2316                           postinc0	equ	0xFEE
  2317                           wreg	equ	0xFE8
  2318                           postdec1	equ	0xFE5
  2319                           fsr1l	equ	0xFE1
  2320                           indf2	equ	0xFDF
  2321                           postinc2	equ	0xFDE
  2322                           postdec2	equ	0xFDD
  2323                           fsr2h	equ	0xFDA
  2324                           fsr2l	equ	0xFD9
  2325                           status	equ	0xFD8
  2326                           
  2327 ;; *************** function _set_d1 *****************
  2328 ;; Defined at:
  2329 ;;		line 117 in file "Lab10ptest.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  color           1    wreg     unsigned char 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  color           1   16[COMRAM] unsigned char 
  2334 ;; Return value:  Size  Location     Type
  2335 ;;		None               void
  2336 ;; Registers used:
  2337 ;;		wreg, status,2, status,0
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2344 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;Total ram usage:        1 bytes
  2348 ;; Hardware stack levels used:    1
  2349 ;; Hardware stack levels required when called:    3
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_main
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text4
  2358  0012E8                     __ptext4:
  2359                           	opt stack 0
  2360  0012E8                     _set_d1:
  2361                           	opt stack 27
  2362                           
  2363                           ;incstack = 0
  2364                           ;set_d1@color stored from wreg
  2365  0012E8  6E11               	movwf	set_d1@color,c
  2366                           
  2367                           ;Lab10ptest.c: 119: switch(color)
  2368  0012EA  D012               	goto	l3802
  2369  0012EC                     l347:
  2370  0012EC  9083               	bcf	3971,0,c	;volatile
  2371  0012EE  D001               	goto	L9
  2372  0012F0                     l349:
  2373  0012F0  8083               	bsf	3971,0,c	;volatile
  2374  0012F2                     L9:
  2375  0012F2  9283               	bcf	3971,1,c	;volatile
  2376  0012F4  D002               	goto	L10
  2377  0012F6                     l350:
  2378  0012F6  9083               	bcf	3971,0,c	;volatile
  2379  0012F8  8283               	bsf	3971,1,c	;volatile
  2380  0012FA                     L10:
  2381  0012FA  9483               	bcf	3971,2,c	;volatile
  2382  0012FC  D01D               	goto	l354
  2383  0012FE                     l351:
  2384  0012FE  9083               	bcf	3971,0,c	;volatile
  2385  001300  D001               	goto	L11
  2386  001302                     l352:
  2387  001302  8083               	bsf	3971,0,c	;volatile
  2388  001304                     L11:
  2389  001304  9283               	bcf	3971,1,c	;volatile
  2390  001306  D002               	goto	L12
  2391  001308                     l353:
  2392  001308  8083               	bsf	3971,0,c	;volatile
  2393  00130A  8283               	bsf	3971,1,c	;volatile
  2394  00130C                     L12:
  2395  00130C  8483               	bsf	3971,2,c	;volatile
  2396                           
  2397                           ;Lab10ptest.c: 127: }
  2398  00130E  D014               	goto	l354
  2399  001310                     l3802:
  2400  001310  5011               	movf	set_d1@color,w,c
  2401                           
  2402                           ; Switch size 1, requested type "space"
  2403                           ; Number of cases is 6, Range of values is 0 to 5
  2404                           ; switch strategies available:
  2405                           ; Name         Instructions Cycles
  2406                           ; simple_byte           19    10 (average)
  2407                           ;	Chosen strategy is simple_byte
  2408  001312  0A00               	xorlw	0	; case 0
  2409  001314  B4D8               	btfsc	status,2,c
  2410  001316  D7EA               	goto	l347
  2411  001318  0A01               	xorlw	1	; case 1
  2412  00131A  B4D8               	btfsc	status,2,c
  2413  00131C  D7E9               	goto	l349
  2414  00131E  0A03               	xorlw	3	; case 2
  2415  001320  B4D8               	btfsc	status,2,c
  2416  001322  D7E9               	goto	l350
  2417  001324  0A01               	xorlw	1	; case 3
  2418  001326  B4D8               	btfsc	status,2,c
  2419  001328  D7EA               	goto	l351
  2420  00132A  0A07               	xorlw	7	; case 4
  2421  00132C  B4D8               	btfsc	status,2,c
  2422  00132E  D7E9               	goto	l352
  2423  001330  0A01               	xorlw	1	; case 5
  2424  001332  B4D8               	btfsc	status,2,c
  2425  001334  D7E9               	goto	l353
  2426  001336  D000               	goto	l354
  2427  001338                     l354:
  2428  001338  0012               	return		;funcret
  2429  00133A                     __end_of_set_d1:
  2430                           	opt stack 0
  2431                           tblptru	equ	0xFF8
  2432                           tblptrh	equ	0xFF7
  2433                           tblptrl	equ	0xFF6
  2434                           tablat	equ	0xFF5
  2435                           prodh	equ	0xFF4
  2436                           prodl	equ	0xFF3
  2437                           intcon	equ	0xFF2
  2438                           intcon2	equ	0xFF1
  2439                           postinc0	equ	0xFEE
  2440                           wreg	equ	0xFE8
  2441                           postdec1	equ	0xFE5
  2442                           fsr1l	equ	0xFE1
  2443                           indf2	equ	0xFDF
  2444                           postinc2	equ	0xFDE
  2445                           postdec2	equ	0xFDD
  2446                           fsr2h	equ	0xFDA
  2447                           fsr2l	equ	0xFD9
  2448                           status	equ	0xFD8
  2449                           
  2450 ;; *************** function _printf *****************
  2451 ;; Defined at:
  2452 ;;		line 464 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;  f               2   29[COMRAM] PTR const unsigned char 
  2455 ;;		 -> STR_1(22), 
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;  idx             1   41[COMRAM] unsigned char 
  2458 ;;  val             4   44[COMRAM] unsigned long 
  2459 ;;  tmpval          4    0        struct .
  2460 ;;  cp              3    0        PTR const unsigned char 
  2461 ;;  width           2   51[COMRAM] int 
  2462 ;;  ap              2   48[COMRAM] PTR void [1]
  2463 ;;		 -> ?_printf(2), 
  2464 ;;  prec            2   42[COMRAM] int 
  2465 ;;  len             2    0        unsigned int 
  2466 ;;  c               1   53[COMRAM] char 
  2467 ;;  flag            1   50[COMRAM] unsigned char 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  2   29[COMRAM] int 
  2470 ;; Registers used:
  2471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2477 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2480 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2481 ;;Total ram usage:       25 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:    4
  2484 ;; This function calls:
  2485 ;;		___lldiv
  2486 ;;		___wmul
  2487 ;;		_isdigit
  2488 ;;		_putch
  2489 ;; This function is called by:
  2490 ;;		_main
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text5
  2495  00001C                     __ptext5:
  2496                           	opt stack 0
  2497  00001C                     _printf:
  2498                           	opt stack 26
  2499                           
  2500                           ;doprnt.c: 466: va_list ap;
  2501                           ;doprnt.c: 499: signed char c;
  2502                           ;doprnt.c: 501: int width;
  2503                           ;doprnt.c: 504: int prec;
  2504                           ;doprnt.c: 508: unsigned char flag;
  2505                           ;doprnt.c: 523: union {
  2506                           ;doprnt.c: 524: unsigned long vd;
  2507                           ;doprnt.c: 525: double integ;
  2508                           ;doprnt.c: 526: } tmpval;
  2509                           ;doprnt.c: 528: unsigned long val;
  2510                           ;doprnt.c: 529: unsigned len;
  2511                           ;doprnt.c: 530: const char * cp;
  2512                           ;doprnt.c: 533: *ap = __va_start();
  2513                           
  2514                           ;incstack = 0
  2515  00001C  0E20               	movlw	low (?_printf+2)
  2516  00001E  6E31               	movwf	printf@ap,c
  2517  000020  0E00               	movlw	high (?_printf+2)
  2518  000022  6E32               	movwf	printf@ap+1,c
  2519                           
  2520                           ;doprnt.c: 536: while(c = *f++) {
  2521  000024  D13D               	goto	l3914
  2522  000026                     l3832:
  2523                           
  2524                           ;doprnt.c: 538: if(c != '%')
  2525  000026  0E25               	movlw	37
  2526  000028  1836               	xorwf	printf@c,w,c
  2527  00002A  B4D8               	btfsc	status,2,c
  2528  00002C  D004               	goto	l3836
  2529                           
  2530                           ;doprnt.c: 540: {
  2531                           ;doprnt.c: 541: (putch(c) );
  2532  00002E  5036               	movf	printf@c,w,c
  2533  000030  EC45  F00B         	call	_putch
  2534                           
  2535                           ;doprnt.c: 542: continue;
  2536  000034  D135               	goto	l3914
  2537  000036                     l3836:
  2538                           
  2539                           ;doprnt.c: 543: }
  2540                           ;doprnt.c: 546: width = 0;
  2541  000036  0E00               	movlw	0
  2542  000038  6E35               	movwf	printf@width+1,c
  2543  00003A  0E00               	movlw	0
  2544  00003C  6E34               	movwf	printf@width,c
  2545                           
  2546                           ;doprnt.c: 548: flag = 0;
  2547  00003E  0E00               	movlw	0
  2548  000040  6E33               	movwf	printf@flag,c
  2549                           
  2550                           ;doprnt.c: 551: switch(*f) {
  2551                           
  2552                           ;doprnt.c: 550: for(;;) {
  2553  000042  D005               	goto	l3842
  2554  000044                     l3838:
  2555                           
  2556                           ;doprnt.c: 580: flag |= 0x04;
  2557  000044  8433               	bsf	printf@flag,2,c
  2558                           
  2559                           ;doprnt.c: 581: f++;
  2560  000046  4A1E               	infsnz	printf@f,f,c
  2561  000048  2A1F               	incf	printf@f+1,f,c
  2562                           
  2563                           ;doprnt.c: 582: continue;
  2564  00004A  D001               	goto	l3842
  2565                           
  2566                           ;doprnt.c: 584: }
  2567  00004C  D00B               	goto	l3844
  2568  00004E                     l3842:
  2569  00004E  C01E  FFF6         	movff	printf@f,tblptrl
  2570  000052  C01F  FFF7         	movff	printf@f+1,tblptrh
  2571  000056                     	if	0	;tblptru may be non-zero
  2572  000056                     	endif
  2573  000056                     	if	0	;tblptru may be non-zero
  2574  000056                     	endif
  2575  000056  0008               	tblrd		*
  2576  000058  50F5               	movf	tablat,w,c
  2577                           
  2578                           ; Switch size 1, requested type "space"
  2579                           ; Number of cases is 1, Range of values is 48 to 48
  2580                           ; switch strategies available:
  2581                           ; Name         Instructions Cycles
  2582                           ; simple_byte            4     3 (average)
  2583                           ;	Chosen strategy is simple_byte
  2584  00005A  0A30               	xorlw	48	; case 48
  2585  00005C  B4D8               	btfsc	status,2,c
  2586  00005E  D7F2               	goto	l3838
  2587                           
  2588                           ;doprnt.c: 585: break;
  2589  000060  D001               	goto	l3844
  2590                           
  2591                           ;doprnt.c: 586: }
  2592  000062  D7F5               	goto	l3842
  2593  000064                     l3844:
  2594                           
  2595                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2596  000064  C01E  FFF6         	movff	printf@f,tblptrl
  2597  000068  C01F  FFF7         	movff	printf@f+1,tblptrh
  2598  00006C                     	if	0	;tblptru may be non-zero
  2599  00006C                     	endif
  2600  00006C                     	if	0	;tblptru may be non-zero
  2601  00006C                     	endif
  2602  00006C  0008               	tblrd		*
  2603  00006E  50F5               	movf	tablat,w,c
  2604  000070  ECE5  F00A         	call	_isdigit
  2605  000074  A0D8               	btfss	status,0,c
  2606  000076  D03B               	goto	l3860
  2607                           
  2608                           ;doprnt.c: 598: width = 0;
  2609  000078  0E00               	movlw	0
  2610  00007A  6E35               	movwf	printf@width+1,c
  2611  00007C  0E00               	movlw	0
  2612  00007E  6E34               	movwf	printf@width,c
  2613  000080  D000               	goto	l3848
  2614  000082                     l3848:
  2615                           
  2616                           ;doprnt.c: 600: width *= 10;
  2617  000082  C034  F011         	movff	printf@width,___wmul@multiplier
  2618  000086  C035  F012         	movff	printf@width+1,___wmul@multiplier+1
  2619  00008A  0E00               	movlw	0
  2620  00008C  6E14               	movwf	___wmul@multiplicand+1,c
  2621  00008E  0E0A               	movlw	10
  2622  000090  6E13               	movwf	___wmul@multiplicand,c
  2623  000092  ECBF  F00A         	call	___wmul	;wreg free
  2624  000096  C011  F034         	movff	?___wmul,printf@width
  2625  00009A  C012  F035         	movff	?___wmul+1,printf@width+1
  2626                           
  2627                           ;doprnt.c: 601: width += *f++ - '0';
  2628  00009E  0ED0               	movlw	208
  2629  0000A0  6E26               	movwf	??_printf& (0+255),c
  2630  0000A2  0EFF               	movlw	255
  2631  0000A4  6E27               	movwf	(??_printf+1)& (0+255),c
  2632  0000A6  C01E  FFF6         	movff	printf@f,tblptrl
  2633  0000AA  C01F  FFF7         	movff	printf@f+1,tblptrh
  2634  0000AE                     	if	0	;tblptru may be non-zero
  2635  0000AE                     	endif
  2636  0000AE                     	if	0	;tblptru may be non-zero
  2637  0000AE                     	endif
  2638  0000AE  0008               	tblrd		*
  2639  0000B0  50F5               	movf	tablat,w,c
  2640  0000B2  6E28               	movwf	(??_printf+2)& (0+255),c
  2641  0000B4  6A29               	clrf	(??_printf+3)& (0+255),c
  2642  0000B6  5026               	movf	??_printf,w,c
  2643  0000B8  2628               	addwf	??_printf+2,f,c
  2644  0000BA  5027               	movf	??_printf+1,w,c
  2645  0000BC  2229               	addwfc	??_printf+3,f,c
  2646  0000BE  5028               	movf	??_printf+2,w,c
  2647  0000C0  2634               	addwf	printf@width,f,c
  2648  0000C2  5029               	movf	??_printf+3,w,c
  2649  0000C4  2235               	addwfc	printf@width+1,f,c
  2650  0000C6  4A1E               	infsnz	printf@f,f,c
  2651  0000C8  2A1F               	incf	printf@f+1,f,c
  2652                           
  2653                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2654  0000CA  C01E  FFF6         	movff	printf@f,tblptrl
  2655  0000CE  C01F  FFF7         	movff	printf@f+1,tblptrh
  2656  0000D2                     	if	0	;tblptru may be non-zero
  2657  0000D2                     	endif
  2658  0000D2                     	if	0	;tblptru may be non-zero
  2659  0000D2                     	endif
  2660  0000D2  0008               	tblrd		*
  2661  0000D4  50F5               	movf	tablat,w,c
  2662  0000D6  ECE5  F00A         	call	_isdigit
  2663  0000DA  A0D8               	btfss	status,0,c
  2664  0000DC  D008               	goto	l3860
  2665  0000DE  D7D1               	goto	l3848
  2666                           
  2667                           ;doprnt.c: 635: switch(c = *f++) {
  2668                           
  2669                           ;doprnt.c: 608: }
  2670                           ;doprnt.c: 633: loop:
  2671  0000E0  D006               	goto	l3860
  2672                           
  2673                           ;doprnt.c: 638: goto alldone;
  2674                           
  2675                           ;doprnt.c: 637: case 0:
  2676  0000E2  D0EC               	goto	l474
  2677  0000E4                     l3856:
  2678                           
  2679                           ;doprnt.c: 643: flag |= 0x10;
  2680  0000E4  8833               	bsf	printf@flag,4,c
  2681                           
  2682                           ;doprnt.c: 644: goto loop;
  2683  0000E6  D003               	goto	l3860
  2684                           
  2685                           ;doprnt.c: 723: break;
  2686                           
  2687                           ;doprnt.c: 718: case 'x':
  2688  0000E8  D015               	goto	l453
  2689                           
  2690                           ;doprnt.c: 813: continue;
  2691                           
  2692                           ;doprnt.c: 802: default:
  2693  0000EA  D0DA               	goto	l3914
  2694                           
  2695                           ;doprnt.c: 822: }
  2696  0000EC  D013               	goto	l453
  2697  0000EE                     l3860:
  2698  0000EE  C01E  FFF6         	movff	printf@f,tblptrl
  2699  0000F2  C01F  FFF7         	movff	printf@f+1,tblptrh
  2700  0000F6  4A1E               	infsnz	printf@f,f,c
  2701  0000F8  2A1F               	incf	printf@f+1,f,c
  2702  0000FA                     	if	0	;tblptru may be non-zero
  2703  0000FA                     	endif
  2704  0000FA                     	if	0	;tblptru may be non-zero
  2705  0000FA                     	endif
  2706  0000FA  0008               	tblrd		*
  2707  0000FC  CFF5 F036          	movff	tablat,printf@c
  2708  000100  5036               	movf	printf@c,w,c
  2709                           
  2710                           ; Switch size 1, requested type "space"
  2711                           ; Number of cases is 3, Range of values is 0 to 120
  2712                           ; switch strategies available:
  2713                           ; Name         Instructions Cycles
  2714                           ; simple_byte           10     6 (average)
  2715                           ;	Chosen strategy is simple_byte
  2716  000102  0A00               	xorlw	0	; case 0
  2717  000104  B4D8               	btfsc	status,2,c
  2718  000106  D0DA               	goto	l474
  2719  000108  0A6C               	xorlw	108	; case 108
  2720  00010A  B4D8               	btfsc	status,2,c
  2721  00010C  D7EB               	goto	l3856
  2722  00010E  0A14               	xorlw	20	; case 120
  2723  000110  A4D8               	btfss	status,2,c
  2724  000112  D0C6               	goto	l3914
  2725  000114                     l453:
  2726                           
  2727                           ;doprnt.c: 1273: {
  2728                           ;doprnt.c: 1281: if(flag & 0x10)
  2729  000114  A833               	btfss	printf@flag,4,c
  2730  000116  D00E               	goto	l3866
  2731                           
  2732                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  2733  000118  C031  FFD9         	movff	printf@ap,fsr2l
  2734  00011C  C032  FFDA         	movff	printf@ap+1,fsr2h
  2735  000120  CFDE F02D          	movff	postinc2,printf@val
  2736  000124  CFDE F02E          	movff	postinc2,printf@val+1
  2737  000128  CFDE F02F          	movff	postinc2,printf@val+2
  2738  00012C  CFDE F030          	movff	postinc2,printf@val+3
  2739  000130  0E04               	movlw	4
  2740  000132  D00F               	goto	L13
  2741  000134                     l3866:
  2742                           
  2743                           ;doprnt.c: 1283: else
  2744                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2745  000134  C031  FFD9         	movff	printf@ap,fsr2l
  2746  000138  C032  FFDA         	movff	printf@ap+1,fsr2h
  2747  00013C  CFDE F026          	movff	postinc2,??_printf
  2748  000140  CFDD F027          	movff	postdec2,??_printf+1
  2749  000144  C026  F02D         	movff	??_printf,printf@val
  2750  000148  C027  F02E         	movff	??_printf+1,printf@val+1
  2751  00014C  6A2F               	clrf	printf@val+2,c
  2752  00014E  6A30               	clrf	printf@val+3,c
  2753  000150  0E02               	movlw	2
  2754  000152                     L13:
  2755  000152  2631               	addwf	printf@ap,f,c
  2756  000154  0E00               	movlw	0
  2757  000156  2232               	addwfc	printf@ap+1,f,c
  2758  000158  D000               	goto	l3870
  2759  00015A                     l3870:
  2760                           
  2761                           ;doprnt.c: 1287: }
  2762                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  2763  00015A  0E01               	movlw	1
  2764  00015C  6E36               	movwf	printf@c,c
  2765  00015E                     l3872:
  2766  00015E  0E08               	movlw	8
  2767  000160  1836               	xorwf	printf@c,w,c
  2768  000162  B4D8               	btfsc	status,2,c
  2769  000164  D01C               	goto	l3884
  2770  000166  D001               	goto	l3876
  2771  000168  D01A               	goto	l3884
  2772  00016A                     l3876:
  2773                           
  2774                           ;doprnt.c: 1317: if(val < hexpowers[c])
  2775  00016A  5036               	movf	printf@c,w,c
  2776  00016C  0D04               	mullw	4
  2777  00016E  0E9C               	movlw	low _hexpowers
  2778  000170  24F3               	addwf	prodl,w,c
  2779  000172  6EF6               	movwf	tblptrl,c
  2780  000174  0EFF               	movlw	high _hexpowers
  2781  000176  20F4               	addwfc	prodh,w,c
  2782  000178  6EF7               	movwf	tblptrh,c
  2783  00017A                     	if	0	;There are less than 3 active tblptr bytes
  2784  00017A                     	endif
  2785  00017A  0009               	tblrd		*+
  2786  00017C  50F5               	movf	tablat,w,c
  2787  00017E  5C2D               	subwf	printf@val,w,c
  2788  000180  0009               	tblrd		*+
  2789  000182  50F5               	movf	tablat,w,c
  2790  000184  582E               	subwfb	printf@val+1,w,c
  2791  000186  0009               	tblrd		*+
  2792  000188  50F5               	movf	tablat,w,c
  2793  00018A  582F               	subwfb	printf@val+2,w,c
  2794  00018C  0009               	tblrd		*+
  2795  00018E  50F5               	movf	tablat,w,c
  2796  000190  5830               	subwfb	printf@val+3,w,c
  2797  000192  A0D8               	btfss	status,0,c
  2798  000194  D004               	goto	l3884
  2799  000196  D001               	goto	l3880
  2800                           
  2801                           ;doprnt.c: 1318: break;
  2802  000198  D002               	goto	l3884
  2803  00019A                     l3880:
  2804  00019A  2A36               	incf	printf@c,f,c
  2805  00019C  D7E0               	goto	l3872
  2806  00019E                     l3884:
  2807                           
  2808                           ;doprnt.c: 1381: if(width > c)
  2809  00019E  0E80               	movlw	128
  2810  0001A0  BE36               	btfsc	printf@c,7,c
  2811  0001A2  0E7F               	movlw	127
  2812  0001A4  6E26               	movwf	??_printf& (0+255),c
  2813  0001A6  5034               	movf	printf@width,w,c
  2814  0001A8  5C36               	subwf	printf@c,w,c
  2815  0001AA  5035               	movf	printf@width+1,w,c
  2816  0001AC  0A80               	xorlw	128
  2817  0001AE  5826               	subwfb	??_printf& (0+255),w,c
  2818  0001B0  B0D8               	btfsc	status,0,c
  2819  0001B2  D007               	goto	l3888
  2820                           
  2821                           ;doprnt.c: 1382: width -= c;
  2822  0001B4  5036               	movf	printf@c,w,c
  2823  0001B6  5E34               	subwf	printf@width,f,c
  2824  0001B8  0E00               	movlw	0
  2825  0001BA  BE36               	btfsc	printf@c,7,c
  2826  0001BC  0EFF               	movlw	255
  2827  0001BE  5A35               	subwfb	printf@width+1,f,c
  2828  0001C0  D005               	goto	l3890
  2829  0001C2                     l3888:
  2830                           
  2831                           ;doprnt.c: 1383: else
  2832                           ;doprnt.c: 1384: width = 0;
  2833  0001C2  0E00               	movlw	0
  2834  0001C4  6E35               	movwf	printf@width+1,c
  2835  0001C6  0E00               	movlw	0
  2836  0001C8  6E34               	movwf	printf@width,c
  2837  0001CA  D000               	goto	l3890
  2838  0001CC                     l3890:
  2839                           
  2840                           ;doprnt.c: 1387: if(flag & 0x04) {
  2841  0001CC  A433               	btfss	printf@flag,2,c
  2842  0001CE  D010               	goto	l3898
  2843                           
  2844                           ;doprnt.c: 1415: if(width)
  2845  0001D0  5034               	movf	printf@width,w,c
  2846  0001D2  1035               	iorwf	printf@width+1,w,c
  2847  0001D4  B4D8               	btfsc	status,2,c
  2848  0001D6  D01C               	goto	l3904
  2849  0001D8                     l3894:
  2850                           
  2851                           ;doprnt.c: 1417: (putch('0') );
  2852  0001D8  0E30               	movlw	48
  2853  0001DA  EC45  F00B         	call	_putch
  2854                           
  2855                           ;doprnt.c: 1418: while(--width);
  2856  0001DE  0634               	decf	printf@width,f,c
  2857  0001E0  A0D8               	btfss	status,0,c
  2858  0001E2  0635               	decf	printf@width+1,f,c
  2859  0001E4  5034               	movf	printf@width,w,c
  2860  0001E6  1035               	iorwf	printf@width+1,w,c
  2861  0001E8  B4D8               	btfsc	status,2,c
  2862  0001EA  D012               	goto	l3904
  2863  0001EC  D7F5               	goto	l3894
  2864                           
  2865                           ;doprnt.c: 1420: } else
  2866  0001EE  D010               	goto	l3904
  2867  0001F0                     l3898:
  2868                           
  2869                           ;doprnt.c: 1422: {
  2870                           ;doprnt.c: 1424: if(width
  2871                           ;doprnt.c: 1428: )
  2872  0001F0  5034               	movf	printf@width,w,c
  2873  0001F2  1035               	iorwf	printf@width+1,w,c
  2874  0001F4  B4D8               	btfsc	status,2,c
  2875  0001F6  D00C               	goto	l3904
  2876  0001F8                     l3900:
  2877                           
  2878                           ;doprnt.c: 1430: (putch(' ') );
  2879  0001F8  0E20               	movlw	32
  2880  0001FA  EC45  F00B         	call	_putch
  2881                           
  2882                           ;doprnt.c: 1431: while(--width);
  2883  0001FE  0634               	decf	printf@width,f,c
  2884  000200  A0D8               	btfss	status,0,c
  2885  000202  0635               	decf	printf@width+1,f,c
  2886  000204  5034               	movf	printf@width,w,c
  2887  000206  1035               	iorwf	printf@width+1,w,c
  2888  000208  B4D8               	btfsc	status,2,c
  2889  00020A  D002               	goto	l3904
  2890  00020C  D7F5               	goto	l3900
  2891  00020E  D000               	goto	l3904
  2892  000210                     l3904:
  2893                           
  2894                           ;doprnt.c: 1469: }
  2895                           ;doprnt.c: 1472: prec = c;
  2896  000210  5036               	movf	printf@c,w,c
  2897  000212  6E2B               	movwf	printf@prec,c
  2898  000214  6A2C               	clrf	printf@prec+1,c
  2899  000216  BE2B               	btfsc	printf@prec,7,c
  2900  000218  062C               	decf	printf@prec+1,f,c
  2901                           
  2902                           ;doprnt.c: 1474: while(prec--) {
  2903  00021A  D038               	goto	l3912
  2904  00021C                     l3906:
  2905                           
  2906                           ;doprnt.c: 1478: {
  2907                           ;doprnt.c: 1499: {
  2908                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  2909  00021C  C02D  F011         	movff	printf@val,___lldiv@dividend
  2910  000220  C02E  F012         	movff	printf@val+1,___lldiv@dividend+1
  2911  000224  C02F  F013         	movff	printf@val+2,___lldiv@dividend+2
  2912  000228  C030  F014         	movff	printf@val+3,___lldiv@dividend+3
  2913  00022C  C02B  F026         	movff	printf@prec,??_printf
  2914  000230  C02C  F027         	movff	printf@prec+1,??_printf+1
  2915  000234  90D8               	bcf	status,0,c
  2916  000236  3626               	rlcf	??_printf,f,c
  2917  000238  3627               	rlcf	??_printf+1,f,c
  2918  00023A  90D8               	bcf	status,0,c
  2919  00023C  3626               	rlcf	??_printf,f,c
  2920  00023E  3627               	rlcf	??_printf+1,f,c
  2921  000240  0E9C               	movlw	low _hexpowers
  2922  000242  2426               	addwf	??_printf,w,c
  2923  000244  6EF6               	movwf	tblptrl,c
  2924  000246  0EFF               	movlw	high _hexpowers
  2925  000248  2027               	addwfc	??_printf+1,w,c
  2926  00024A  6EF7               	movwf	tblptrh,c
  2927  00024C                     	if	0	;There are less than 3 active tblptr bytes
  2928  00024C                     	endif
  2929  00024C  0009               	tblrd		*+
  2930  00024E  CFF5 F015          	movff	tablat,___lldiv@divisor
  2931  000252  0009               	tblrd		*+
  2932  000254  CFF5 F016          	movff	tablat,___lldiv@divisor+1
  2933  000258  0009               	tblrd		*+
  2934  00025A  CFF5 F017          	movff	tablat,___lldiv@divisor+2
  2935  00025E  000A               	tblrd		*-
  2936  000260  CFF5 F018          	movff	tablat,___lldiv@divisor+3
  2937  000264  EC6D  F007         	call	___lldiv	;wreg free
  2938  000268  5011               	movf	?___lldiv,w,c
  2939  00026A  0B0F               	andlw	15
  2940  00026C  6E2A               	movwf	printf@idx,c
  2941                           
  2942                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  2943  00026E  502A               	movf	printf@idx,w,c
  2944  000270  0D01               	mullw	1
  2945  000272  0EE6               	movlw	low STR_4
  2946  000274  24F3               	addwf	prodl,w,c
  2947  000276  6EF6               	movwf	tblptrl,c
  2948  000278  0EFF               	movlw	high STR_4
  2949  00027A  20F4               	addwfc	prodh,w,c
  2950  00027C  6EF7               	movwf	tblptrh,c
  2951  00027E                     	if	0	;There are less than 3 active tblptr bytes
  2952  00027E                     	endif
  2953  00027E  0008               	tblrd		*
  2954  000280  CFF5 F036          	movff	tablat,printf@c
  2955                           
  2956                           ;doprnt.c: 1508: }
  2957                           ;doprnt.c: 1523: }
  2958                           ;doprnt.c: 1524: (putch(c) );
  2959  000284  5036               	movf	printf@c,w,c
  2960  000286  EC45  F00B         	call	_putch
  2961  00028A  D000               	goto	l3912
  2962  00028C                     l3912:
  2963  00028C  062B               	decf	printf@prec,f,c
  2964  00028E  A0D8               	btfss	status,0,c
  2965  000290  062C               	decf	printf@prec+1,f,c
  2966  000292  282B               	incf	printf@prec,w,c
  2967  000294  E1C3               	bnz	l3906
  2968  000296  282C               	incf	printf@prec+1,w,c
  2969  000298  B4D8               	btfsc	status,2,c
  2970  00029A  D002               	goto	l3914
  2971  00029C  D7BF               	goto	l3906
  2972  00029E  D000               	goto	l3914
  2973  0002A0                     l3914:
  2974  0002A0  C01E  FFF6         	movff	printf@f,tblptrl
  2975  0002A4  C01F  FFF7         	movff	printf@f+1,tblptrh
  2976  0002A8  4A1E               	infsnz	printf@f,f,c
  2977  0002AA  2A1F               	incf	printf@f+1,f,c
  2978  0002AC                     	if	0	;tblptru may be non-zero
  2979  0002AC                     	endif
  2980  0002AC                     	if	0	;tblptru may be non-zero
  2981  0002AC                     	endif
  2982  0002AC  0008               	tblrd		*
  2983  0002AE  CFF5 F036          	movff	tablat,printf@c
  2984  0002B2  5036               	movf	printf@c,w,c
  2985  0002B4  B4D8               	btfsc	status,2,c
  2986  0002B6  D002               	goto	l474
  2987  0002B8  D6B6               	goto	l3832
  2988  0002BA  D000               	goto	l474
  2989  0002BC                     l474:
  2990  0002BC  0012               	return		;funcret
  2991  0002BE                     __end_of_printf:
  2992                           	opt stack 0
  2993                           tblptru	equ	0xFF8
  2994                           tblptrh	equ	0xFF7
  2995                           tblptrl	equ	0xFF6
  2996                           tablat	equ	0xFF5
  2997                           prodh	equ	0xFF4
  2998                           prodl	equ	0xFF3
  2999                           intcon	equ	0xFF2
  3000                           intcon2	equ	0xFF1
  3001                           postinc0	equ	0xFEE
  3002                           wreg	equ	0xFE8
  3003                           postdec1	equ	0xFE5
  3004                           fsr1l	equ	0xFE1
  3005                           indf2	equ	0xFDF
  3006                           postinc2	equ	0xFDE
  3007                           postdec2	equ	0xFDD
  3008                           fsr2h	equ	0xFDA
  3009                           fsr2l	equ	0xFD9
  3010                           status	equ	0xFD8
  3011                           
  3012 ;; *************** function _putch *****************
  3013 ;; Defined at:
  3014 ;;		line 82 in file "Lab10ptest.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  c               1    wreg     unsigned char 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  c               1   16[COMRAM] unsigned char 
  3019 ;; Return value:  Size  Location     Type
  3020 ;;		None               void
  3021 ;; Registers used:
  3022 ;;		wreg
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;Total ram usage:        1 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; Hardware stack levels required when called:    3
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_printf
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text6
  3043  00168A                     __ptext6:
  3044                           	opt stack 0
  3045  00168A                     _putch:
  3046                           	opt stack 26
  3047                           
  3048                           ;incstack = 0
  3049                           ;putch@c stored from wreg
  3050  00168A  6E11               	movwf	putch@c,c
  3051                           
  3052                           ;Lab10ptest.c: 84: while (!TRMT);
  3053  00168C  D000               	goto	l326
  3054  00168E                     l326:
  3055  00168E  A2AC               	btfss	4012,1,c	;volatile
  3056  001690  D7FE               	goto	l326
  3057                           
  3058                           ;Lab10ptest.c: 85: TXREG = c;
  3059  001692  C011  FFAD         	movff	putch@c,4013	;volatile
  3060  001696  0012               	return		;funcret
  3061  001698                     __end_of_putch:
  3062                           	opt stack 0
  3063                           tblptru	equ	0xFF8
  3064                           tblptrh	equ	0xFF7
  3065                           tblptrl	equ	0xFF6
  3066                           tablat	equ	0xFF5
  3067                           prodh	equ	0xFF4
  3068                           prodl	equ	0xFF3
  3069                           intcon	equ	0xFF2
  3070                           intcon2	equ	0xFF1
  3071                           postinc0	equ	0xFEE
  3072                           wreg	equ	0xFE8
  3073                           postdec1	equ	0xFE5
  3074                           fsr1l	equ	0xFE1
  3075                           indf2	equ	0xFDF
  3076                           postinc2	equ	0xFDE
  3077                           postdec2	equ	0xFDD
  3078                           fsr2h	equ	0xFDA
  3079                           fsr2l	equ	0xFD9
  3080                           status	equ	0xFD8
  3081                           
  3082 ;; *************** function _isdigit *****************
  3083 ;; Defined at:
  3084 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\isdigit.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;  c               1    wreg     unsigned char 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  c               1   18[COMRAM] unsigned char 
  3089 ;; Return value:  Size  Location     Type
  3090 ;;		None               void
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3102 ;;Total ram usage:        3 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    3
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_printf
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text7
  3113  0015CA                     __ptext7:
  3114                           	opt stack 0
  3115  0015CA                     _isdigit:
  3116                           	opt stack 26
  3117                           
  3118                           ;incstack = 0
  3119                           ;isdigit@c stored from wreg
  3120  0015CA  6E13               	movwf	isdigit@c,c
  3121  0015CC  0E00               	movlw	0
  3122  0015CE  6E12               	movwf	_isdigit$1757,c
  3123  0015D0  0E3A               	movlw	58
  3124  0015D2  6013               	cpfslt	isdigit@c,c
  3125  0015D4  D006               	goto	l3694
  3126  0015D6  0E2F               	movlw	47
  3127  0015D8  6413               	cpfsgt	isdigit@c,c
  3128  0015DA  D003               	goto	l3694
  3129  0015DC  0E01               	movlw	1
  3130  0015DE  6E12               	movwf	_isdigit$1757,c
  3131  0015E0  D000               	goto	l3694
  3132  0015E2                     l3694:
  3133  0015E2  C012  F011         	movff	_isdigit$1757,??_isdigit
  3134  0015E6  3011               	rrcf	??_isdigit,w,c
  3135  0015E8  D000               	goto	l941
  3136  0015EA                     l941:
  3137  0015EA  0012               	return		;funcret
  3138  0015EC                     __end_of_isdigit:
  3139                           	opt stack 0
  3140                           tblptru	equ	0xFF8
  3141                           tblptrh	equ	0xFF7
  3142                           tblptrl	equ	0xFF6
  3143                           tablat	equ	0xFF5
  3144                           prodh	equ	0xFF4
  3145                           prodl	equ	0xFF3
  3146                           intcon	equ	0xFF2
  3147                           intcon2	equ	0xFF1
  3148                           postinc0	equ	0xFEE
  3149                           wreg	equ	0xFE8
  3150                           postdec1	equ	0xFE5
  3151                           fsr1l	equ	0xFE1
  3152                           indf2	equ	0xFDF
  3153                           postinc2	equ	0xFDE
  3154                           postdec2	equ	0xFDD
  3155                           fsr2h	equ	0xFDA
  3156                           fsr2l	equ	0xFD9
  3157                           status	equ	0xFD8
  3158                           
  3159 ;; *************** function ___lldiv *****************
  3160 ;; Defined at:
  3161 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\lldiv.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;  dividend        4   16[COMRAM] unsigned long 
  3164 ;;  divisor         4   20[COMRAM] unsigned long 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  quotient        4   24[COMRAM] unsigned long 
  3167 ;;  counter         1   28[COMRAM] unsigned char 
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  4   16[COMRAM] unsigned long 
  3170 ;; Registers used:
  3171 ;;		wreg, status,2, status,0
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3177 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3180 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3181 ;;Total ram usage:       13 bytes
  3182 ;; Hardware stack levels used:    1
  3183 ;; Hardware stack levels required when called:    3
  3184 ;; This function calls:
  3185 ;;		Nothing
  3186 ;; This function is called by:
  3187 ;;		_printf
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text8
  3192  000EDA                     __ptext8:
  3193                           	opt stack 0
  3194  000EDA                     ___lldiv:
  3195                           	opt stack 26
  3196                           
  3197                           ;incstack = 0
  3198  000EDA  0E00               	movlw	0
  3199  000EDC  6E19               	movwf	___lldiv@quotient,c
  3200  000EDE  0E00               	movlw	0
  3201  000EE0  6E1A               	movwf	___lldiv@quotient+1,c
  3202  000EE2  0E00               	movlw	0
  3203  000EE4  6E1B               	movwf	___lldiv@quotient+2,c
  3204  000EE6  0E00               	movlw	0
  3205  000EE8  6E1C               	movwf	___lldiv@quotient+3,c
  3206  000EEA  5015               	movf	___lldiv@divisor,w,c
  3207  000EEC  1016               	iorwf	___lldiv@divisor+1,w,c
  3208  000EEE  1017               	iorwf	___lldiv@divisor+2,w,c
  3209  000EF0  1018               	iorwf	___lldiv@divisor+3,w,c
  3210  000EF2  B4D8               	btfsc	status,2,c
  3211  000EF4  D02F               	goto	l970
  3212  000EF6  0E01               	movlw	1
  3213  000EF8  6E1D               	movwf	___lldiv@counter,c
  3214  000EFA  D007               	goto	l3706
  3215  000EFC                     l3704:
  3216  000EFC  90D8               	bcf	status,0,c
  3217  000EFE  3615               	rlcf	___lldiv@divisor,f,c
  3218  000F00  3616               	rlcf	___lldiv@divisor+1,f,c
  3219  000F02  3617               	rlcf	___lldiv@divisor+2,f,c
  3220  000F04  3618               	rlcf	___lldiv@divisor+3,f,c
  3221  000F06  2A1D               	incf	___lldiv@counter,f,c
  3222  000F08  D000               	goto	l3706
  3223  000F0A                     l3706:
  3224  000F0A  BE18               	btfsc	___lldiv@divisor+3,7,c
  3225  000F0C  D002               	goto	l3708
  3226  000F0E  D7F6               	goto	l3704
  3227  000F10  D000               	goto	l3708
  3228  000F12                     l3708:
  3229  000F12  90D8               	bcf	status,0,c
  3230  000F14  3619               	rlcf	___lldiv@quotient,f,c
  3231  000F16  361A               	rlcf	___lldiv@quotient+1,f,c
  3232  000F18  361B               	rlcf	___lldiv@quotient+2,f,c
  3233  000F1A  361C               	rlcf	___lldiv@quotient+3,f,c
  3234  000F1C  5015               	movf	___lldiv@divisor,w,c
  3235  000F1E  5C11               	subwf	___lldiv@dividend,w,c
  3236  000F20  5016               	movf	___lldiv@divisor+1,w,c
  3237  000F22  5812               	subwfb	___lldiv@dividend+1,w,c
  3238  000F24  5017               	movf	___lldiv@divisor+2,w,c
  3239  000F26  5813               	subwfb	___lldiv@dividend+2,w,c
  3240  000F28  5018               	movf	___lldiv@divisor+3,w,c
  3241  000F2A  5814               	subwfb	___lldiv@dividend+3,w,c
  3242  000F2C  A0D8               	btfss	status,0,c
  3243  000F2E  D00A               	goto	l3716
  3244  000F30  5015               	movf	___lldiv@divisor,w,c
  3245  000F32  5E11               	subwf	___lldiv@dividend,f,c
  3246  000F34  5016               	movf	___lldiv@divisor+1,w,c
  3247  000F36  5A12               	subwfb	___lldiv@dividend+1,f,c
  3248  000F38  5017               	movf	___lldiv@divisor+2,w,c
  3249  000F3A  5A13               	subwfb	___lldiv@dividend+2,f,c
  3250  000F3C  5018               	movf	___lldiv@divisor+3,w,c
  3251  000F3E  5A14               	subwfb	___lldiv@dividend+3,f,c
  3252  000F40  8019               	bsf	___lldiv@quotient,0,c
  3253  000F42  D000               	goto	l3716
  3254  000F44                     l3716:
  3255  000F44  90D8               	bcf	status,0,c
  3256  000F46  3218               	rrcf	___lldiv@divisor+3,f,c
  3257  000F48  3217               	rrcf	___lldiv@divisor+2,f,c
  3258  000F4A  3216               	rrcf	___lldiv@divisor+1,f,c
  3259  000F4C  3215               	rrcf	___lldiv@divisor,f,c
  3260  000F4E  2E1D               	decfsz	___lldiv@counter,f,c
  3261  000F50  D7E0               	goto	l3708
  3262  000F52  D000               	goto	l970
  3263  000F54                     l970:
  3264  000F54  C019  F011         	movff	___lldiv@quotient,?___lldiv
  3265  000F58  C01A  F012         	movff	___lldiv@quotient+1,?___lldiv+1
  3266  000F5C  C01B  F013         	movff	___lldiv@quotient+2,?___lldiv+2
  3267  000F60  C01C  F014         	movff	___lldiv@quotient+3,?___lldiv+3
  3268  000F64  0012               	return		;funcret
  3269  000F66                     __end_of___lldiv:
  3270                           	opt stack 0
  3271                           tblptru	equ	0xFF8
  3272                           tblptrh	equ	0xFF7
  3273                           tblptrl	equ	0xFF6
  3274                           tablat	equ	0xFF5
  3275                           prodh	equ	0xFF4
  3276                           prodl	equ	0xFF3
  3277                           intcon	equ	0xFF2
  3278                           intcon2	equ	0xFF1
  3279                           postinc0	equ	0xFEE
  3280                           wreg	equ	0xFE8
  3281                           postdec1	equ	0xFE5
  3282                           fsr1l	equ	0xFE1
  3283                           indf2	equ	0xFDF
  3284                           postinc2	equ	0xFDE
  3285                           postdec2	equ	0xFDD
  3286                           fsr2h	equ	0xFDA
  3287                           fsr2l	equ	0xFD9
  3288                           status	equ	0xFD8
  3289                           
  3290 ;; *************** function _init_UART *****************
  3291 ;; Defined at:
  3292 ;;		line 87 in file "Lab10ptest.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;		None
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;		None               void
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3310 ;;Total ram usage:        0 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    4
  3313 ;; This function calls:
  3314 ;;		_OpenUSART
  3315 ;; This function is called by:
  3316 ;;		_main
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text9
  3321  00161E                     __ptext9:
  3322                           	opt stack 0
  3323  00161E                     _init_UART:
  3324                           	opt stack 26
  3325                           
  3326                           ;Lab10ptest.c: 89: OpenUSART (0b01111111 & 0b10111111 &
  3327                           ;Lab10ptest.c: 90: 0b11111110 & 0b11111101 & 0b11111111 &
  3328                           ;Lab10ptest.c: 91: 0b11111111, 25);
  3329                           
  3330                           ;incstack = 0
  3331  00161E  0E00               	movlw	0
  3332  001620  6E12               	movwf	OpenUSART@spbrg+1,c
  3333  001622  0E19               	movlw	25
  3334  001624  6E11               	movwf	OpenUSART@spbrg,c
  3335  001626  0E3C               	movlw	60
  3336  001628  ECB5  F008         	call	_OpenUSART
  3337                           
  3338                           ;Lab10ptest.c: 92: OSCCON = 0x60;
  3339  00162C  0E60               	movlw	96
  3340  00162E  6ED3               	movwf	4051,c	;volatile
  3341  001630  0012               	return		;funcret
  3342  001632                     __end_of_init_UART:
  3343                           	opt stack 0
  3344                           tblptru	equ	0xFF8
  3345                           tblptrh	equ	0xFF7
  3346                           tblptrl	equ	0xFF6
  3347                           tablat	equ	0xFF5
  3348                           prodh	equ	0xFF4
  3349                           prodl	equ	0xFF3
  3350                           intcon	equ	0xFF2
  3351                           intcon2	equ	0xFF1
  3352                           postinc0	equ	0xFEE
  3353                           wreg	equ	0xFE8
  3354                           postdec1	equ	0xFE5
  3355                           fsr1l	equ	0xFE1
  3356                           indf2	equ	0xFDF
  3357                           postinc2	equ	0xFDE
  3358                           postdec2	equ	0xFDD
  3359                           fsr2h	equ	0xFDA
  3360                           fsr2l	equ	0xFD9
  3361                           status	equ	0xFD8
  3362                           
  3363 ;; *************** function _OpenUSART *****************
  3364 ;; Defined at:
  3365 ;;		line 73 in file "C:\My Programs\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  config          1    wreg     unsigned char 
  3368 ;;  spbrg           2   16[COMRAM] unsigned int 
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;  config          1   18[COMRAM] unsigned char 
  3371 ;; Return value:  Size  Location     Type
  3372 ;;		None               void
  3373 ;; Registers used:
  3374 ;;		wreg, status,2
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3380 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3381 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3383 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3384 ;;Total ram usage:        3 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:    3
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_init_UART
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text10
  3395  00116A                     __ptext10:
  3396                           	opt stack 0
  3397  00116A                     _OpenUSART:
  3398                           	opt stack 26
  3399                           
  3400                           ;incstack = 0
  3401                           ;OpenUSART@config stored from wreg
  3402  00116A  6E13               	movwf	OpenUSART@config,c
  3403  00116C  0E00               	movlw	0
  3404  00116E  6EAC               	movwf	4012,c	;volatile
  3405  001170  0E00               	movlw	0
  3406  001172  6EAB               	movwf	4011,c	;volatile
  3407  001174  A013               	btfss	OpenUSART@config,0,c
  3408  001176  D002               	goto	l3636
  3409  001178  88AC               	bsf	4012,4,c	;volatile
  3410  00117A  D000               	goto	l3636
  3411  00117C                     l3636:
  3412  00117C  A213               	btfss	OpenUSART@config,1,c
  3413  00117E  D003               	goto	l3640
  3414  001180  8CAC               	bsf	4012,6,c	;volatile
  3415  001182  8CAB               	bsf	4011,6,c	;volatile
  3416  001184  D000               	goto	l3640
  3417  001186                     l3640:
  3418  001186  A413               	btfss	OpenUSART@config,2,c
  3419  001188  D002               	goto	l3644
  3420  00118A  8EAC               	bsf	4012,7,c	;volatile
  3421  00118C  D000               	goto	l3644
  3422  00118E                     l3644:
  3423  00118E  A613               	btfss	OpenUSART@config,3,c
  3424  001190  D002               	goto	l498
  3425  001192  88AB               	bsf	4011,4,c	;volatile
  3426  001194  D002               	goto	l3648
  3427  001196                     l498:
  3428  001196  8AAB               	bsf	4011,5,c	;volatile
  3429  001198  D000               	goto	l3648
  3430  00119A                     l3648:
  3431  00119A  B813               	btfsc	OpenUSART@config,4,c
  3432  00119C  84AC               	bsf	4012,2,c	;volatile
  3433  00119E  989E               	bcf	3998,4,c	;volatile
  3434  0011A0  AA13               	btfss	OpenUSART@config,5,c
  3435  0011A2  D002               	goto	l3656
  3436  0011A4  86AB               	bsf	4011,3,c	;volatile
  3437  0011A6  D000               	goto	l3656
  3438  0011A8                     l3656:
  3439  0011A8  AC13               	btfss	OpenUSART@config,6,c
  3440  0011AA  D002               	goto	l502
  3441  0011AC  8A9D               	bsf	3997,5,c	;volatile
  3442  0011AE  D001               	goto	l503
  3443  0011B0                     l502:
  3444  0011B0  9A9D               	bcf	3997,5,c	;volatile
  3445  0011B2                     l503:
  3446  0011B2  9A9E               	bcf	3998,5,c	;volatile
  3447  0011B4  AE13               	btfss	OpenUSART@config,7,c
  3448  0011B6  D002               	goto	l504
  3449  0011B8  889D               	bsf	3997,4,c	;volatile
  3450  0011BA  D001               	goto	l505
  3451  0011BC                     l504:
  3452  0011BC  989D               	bcf	3997,4,c	;volatile
  3453  0011BE                     l505:
  3454  0011BE  C011  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  3455  0011C2  5012               	movf	OpenUSART@spbrg+1,w,c
  3456  0011C4  6EB0               	movwf	4016,c	;volatile
  3457  0011C6  8AAC               	bsf	4012,5,c	;volatile
  3458  0011C8  8EAB               	bsf	4011,7,c	;volatile
  3459  0011CA  9C94               	bcf	3988,6,c	;volatile
  3460  0011CC  8E94               	bsf	3988,7,c	;volatile
  3461  0011CE  B8AC               	btfsc	4012,4,c	;volatile
  3462  0011D0  BEAC               	btfsc	4012,7,c	;volatile
  3463  0011D2  D002               	goto	l507
  3464  0011D4  8C94               	bsf	3988,6,c	;volatile
  3465  0011D6  D000               	goto	l507
  3466  0011D8                     l507:
  3467  0011D8  0012               	return		;funcret
  3468  0011DA                     __end_of_OpenUSART:
  3469                           	opt stack 0
  3470                           tblptru	equ	0xFF8
  3471                           tblptrh	equ	0xFF7
  3472                           tblptrl	equ	0xFF6
  3473                           tablat	equ	0xFF5
  3474                           prodh	equ	0xFF4
  3475                           prodl	equ	0xFF3
  3476                           intcon	equ	0xFF2
  3477                           intcon2	equ	0xFF1
  3478                           postinc0	equ	0xFEE
  3479                           wreg	equ	0xFE8
  3480                           postdec1	equ	0xFE5
  3481                           fsr1l	equ	0xFE1
  3482                           indf2	equ	0xFDF
  3483                           postinc2	equ	0xFDE
  3484                           postdec2	equ	0xFDD
  3485                           fsr2h	equ	0xFDA
  3486                           fsr2l	equ	0xFD9
  3487                           status	equ	0xFD8
  3488                           
  3489 ;; *************** function _fillCircle *****************
  3490 ;; Defined at:
  3491 ;;		line 611 in file "ST7735_TFT.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;  x0              2   58[COMRAM] int 
  3494 ;;  y0              2   60[COMRAM] int 
  3495 ;;  r               2   62[COMRAM] int 
  3496 ;;  color           2   64[COMRAM] unsigned int 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;		None
  3499 ;; Return value:  Size  Location     Type
  3500 ;;		None               void
  3501 ;; Registers used:
  3502 ;;		wreg, status,2, status,0, cstack
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3508 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3511 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3512 ;;Total ram usage:        8 bytes
  3513 ;; Hardware stack levels used:    1
  3514 ;; Hardware stack levels required when called:    8
  3515 ;; This function calls:
  3516 ;;		_drawFastVLine
  3517 ;;		_fillCircleHelper
  3518 ;; This function is called by:
  3519 ;;		_main
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           	psect	text11
  3524  00133A                     __ptext11:
  3525                           	opt stack 0
  3526  00133A                     _fillCircle:
  3527                           	opt stack 22
  3528                           
  3529                           ;ST7735_TFT.c: 613: drawFastVLine(x0, y0 - r, 2 * r + 1, color);
  3530                           
  3531                           ;incstack = 0
  3532  00133A  503F               	movf	fillCircle@r,w,c
  3533  00133C  0800               	sublw	0
  3534  00133E  243D               	addwf	fillCircle@y0,w,c
  3535  001340  6E18               	movwf	drawFastVLine@y,c
  3536  001342  80D8               	bsf	status,0,c
  3537  001344  343F               	rlcf	fillCircle@r,w,c
  3538  001346  6E19               	movwf	drawFastVLine@h,c
  3539  001348  C041  F01A         	movff	fillCircle@color,drawFastVLine@color
  3540  00134C  C042  F01B         	movff	fillCircle@color+1,drawFastVLine@color+1
  3541  001350  503B               	movf	fillCircle@x0,w,c
  3542  001352  ECB3  F007         	call	_drawFastVLine
  3543                           
  3544                           ;ST7735_TFT.c: 614: fillCircleHelper(x0, y0, r, 3, 0, color);
  3545  001356  C03B  F023         	movff	fillCircle@x0,fillCircleHelper@x0
  3546  00135A  C03C  F024         	movff	fillCircle@x0+1,fillCircleHelper@x0+1
  3547  00135E  C03D  F025         	movff	fillCircle@y0,fillCircleHelper@y0
  3548  001362  C03E  F026         	movff	fillCircle@y0+1,fillCircleHelper@y0+1
  3549  001366  C03F  F027         	movff	fillCircle@r,fillCircleHelper@r
  3550  00136A  C040  F028         	movff	fillCircle@r+1,fillCircleHelper@r+1
  3551  00136E  0E00               	movlw	0
  3552  001370  6E2A               	movwf	fillCircleHelper@cornername+1,c
  3553  001372  0E03               	movlw	3
  3554  001374  6E29               	movwf	fillCircleHelper@cornername,c
  3555  001376  0E00               	movlw	0
  3556  001378  6E2C               	movwf	fillCircleHelper@delta+1,c
  3557  00137A  0E00               	movlw	0
  3558  00137C  6E2B               	movwf	fillCircleHelper@delta,c
  3559  00137E  C041  F02D         	movff	fillCircle@color,fillCircleHelper@color
  3560  001382  C042  F02E         	movff	fillCircle@color+1,fillCircleHelper@color+1
  3561  001386  EC96  F004         	call	_fillCircleHelper	;wreg free
  3562  00138A  0012               	return		;funcret
  3563  00138C                     __end_of_fillCircle:
  3564                           	opt stack 0
  3565                           tblptru	equ	0xFF8
  3566                           tblptrh	equ	0xFF7
  3567                           tblptrl	equ	0xFF6
  3568                           tablat	equ	0xFF5
  3569                           prodh	equ	0xFF4
  3570                           prodl	equ	0xFF3
  3571                           intcon	equ	0xFF2
  3572                           intcon2	equ	0xFF1
  3573                           postinc0	equ	0xFEE
  3574                           wreg	equ	0xFE8
  3575                           postdec1	equ	0xFE5
  3576                           fsr1l	equ	0xFE1
  3577                           indf2	equ	0xFDF
  3578                           postinc2	equ	0xFDE
  3579                           postdec2	equ	0xFDD
  3580                           fsr2h	equ	0xFDA
  3581                           fsr2l	equ	0xFD9
  3582                           status	equ	0xFD8
  3583                           
  3584 ;; *************** function _fillCircleHelper *****************
  3585 ;; Defined at:
  3586 ;;		line 586 in file "ST7735_TFT.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;  x0              2   34[COMRAM] int 
  3589 ;;  y0              2   36[COMRAM] int 
  3590 ;;  r               2   38[COMRAM] int 
  3591 ;;  cornername      2   40[COMRAM] unsigned int 
  3592 ;;  delta           2   42[COMRAM] int 
  3593 ;;  color           2   44[COMRAM] unsigned int 
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;  y               2   56[COMRAM] int 
  3596 ;;  x               2   54[COMRAM] int 
  3597 ;;  f               2   52[COMRAM] int 
  3598 ;;  ddF_y           2   50[COMRAM] int 
  3599 ;;  ddF_x           2   48[COMRAM] int 
  3600 ;; Return value:  Size  Location     Type
  3601 ;;		None               void
  3602 ;; Registers used:
  3603 ;;		wreg, status,2, status,0, cstack
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3609 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;Total ram usage:       24 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:    7
  3616 ;; This function calls:
  3617 ;;		_drawFastVLine
  3618 ;; This function is called by:
  3619 ;;		_fillCircle
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           	psect	text12
  3624  00092C                     __ptext12:
  3625                           	opt stack 0
  3626  00092C                     _fillCircleHelper:
  3627                           	opt stack 22
  3628                           
  3629                           ;ST7735_TFT.c: 588: signed int f, ddF_x, ddF_y, x, y;
  3630                           ;ST7735_TFT.c: 589: f = 1 - r, ddF_x = 1, ddF_y = -2 * r, x = 0, y = r;
  3631                           
  3632                           ;incstack = 0
  3633  00092C  C027  F02F         	movff	fillCircleHelper@r,??_fillCircleHelper
  3634  000930  C028  F030         	movff	fillCircleHelper@r+1,??_fillCircleHelper+1
  3635  000934  1E2F               	comf	??_fillCircleHelper,f,c
  3636  000936  1E30               	comf	??_fillCircleHelper+1,f,c
  3637  000938  4A2F               	infsnz	??_fillCircleHelper,f,c
  3638  00093A  2A30               	incf	??_fillCircleHelper+1,f,c
  3639  00093C  0E01               	movlw	1
  3640  00093E  242F               	addwf	??_fillCircleHelper,w,c
  3641  000940  6E35               	movwf	fillCircleHelper@f,c
  3642  000942  0E00               	movlw	0
  3643  000944  2030               	addwfc	??_fillCircleHelper+1,w,c
  3644  000946  6E36               	movwf	fillCircleHelper@f+1,c
  3645  000948  0E00               	movlw	0
  3646  00094A  6E32               	movwf	fillCircleHelper@ddF_x+1,c
  3647  00094C  0E01               	movlw	1
  3648  00094E  6E31               	movwf	fillCircleHelper@ddF_x,c
  3649  000950  C027  F02F         	movff	fillCircleHelper@r,??_fillCircleHelper
  3650  000954  C028  F030         	movff	fillCircleHelper@r+1,??_fillCircleHelper+1
  3651  000958  90D8               	bcf	status,0,c
  3652  00095A  362F               	rlcf	??_fillCircleHelper,f,c
  3653  00095C  3630               	rlcf	??_fillCircleHelper+1,f,c
  3654  00095E  1E2F               	comf	??_fillCircleHelper,f,c
  3655  000960  1E30               	comf	??_fillCircleHelper+1,f,c
  3656  000962  4A2F               	infsnz	??_fillCircleHelper,f,c
  3657  000964  2A30               	incf	??_fillCircleHelper+1,f,c
  3658  000966  C02F  F033         	movff	??_fillCircleHelper,fillCircleHelper@ddF_y
  3659  00096A  C030  F034         	movff	??_fillCircleHelper+1,fillCircleHelper@ddF_y+1
  3660  00096E  0E00               	movlw	0
  3661  000970  6E38               	movwf	fillCircleHelper@x+1,c
  3662  000972  0E00               	movlw	0
  3663  000974  6E37               	movwf	fillCircleHelper@x,c
  3664  000976  C027  F039         	movff	fillCircleHelper@r,fillCircleHelper@y
  3665  00097A  C028  F03A         	movff	fillCircleHelper@r+1,fillCircleHelper@y+1
  3666                           
  3667                           ;ST7735_TFT.c: 590: while (x<y) {
  3668  00097E  D067               	goto	l3606
  3669  000980                     l3586:
  3670                           
  3671                           ;ST7735_TFT.c: 591: if (f >= 0) {
  3672  000980  BE36               	btfsc	fillCircleHelper@f+1,7,c
  3673  000982  D00B               	goto	l177
  3674                           
  3675                           ;ST7735_TFT.c: 592: y--;
  3676  000984  0639               	decf	fillCircleHelper@y,f,c
  3677  000986  A0D8               	btfss	status,0,c
  3678  000988  063A               	decf	fillCircleHelper@y+1,f,c
  3679                           
  3680                           ;ST7735_TFT.c: 593: ddF_y += 2;
  3681  00098A  0E02               	movlw	2
  3682  00098C  2633               	addwf	fillCircleHelper@ddF_y,f,c
  3683  00098E  0E00               	movlw	0
  3684  000990  2234               	addwfc	fillCircleHelper@ddF_y+1,f,c
  3685                           
  3686                           ;ST7735_TFT.c: 594: f += ddF_y;
  3687  000992  5033               	movf	fillCircleHelper@ddF_y,w,c
  3688  000994  2635               	addwf	fillCircleHelper@f,f,c
  3689  000996  5034               	movf	fillCircleHelper@ddF_y+1,w,c
  3690  000998  2236               	addwfc	fillCircleHelper@f+1,f,c
  3691  00099A                     l177:
  3692                           
  3693                           ;ST7735_TFT.c: 595: }
  3694                           ;ST7735_TFT.c: 596: x++;
  3695  00099A  4A37               	infsnz	fillCircleHelper@x,f,c
  3696  00099C  2A38               	incf	fillCircleHelper@x+1,f,c
  3697                           
  3698                           ;ST7735_TFT.c: 597: ddF_x += 2;
  3699  00099E  0E02               	movlw	2
  3700  0009A0  2631               	addwf	fillCircleHelper@ddF_x,f,c
  3701  0009A2  0E00               	movlw	0
  3702  0009A4  2232               	addwfc	fillCircleHelper@ddF_x+1,f,c
  3703                           
  3704                           ;ST7735_TFT.c: 598: f += ddF_x;
  3705  0009A6  5031               	movf	fillCircleHelper@ddF_x,w,c
  3706  0009A8  2635               	addwf	fillCircleHelper@f,f,c
  3707  0009AA  5032               	movf	fillCircleHelper@ddF_x+1,w,c
  3708  0009AC  2236               	addwfc	fillCircleHelper@f+1,f,c
  3709                           
  3710                           ;ST7735_TFT.c: 600: if (cornername & 0x1) {
  3711  0009AE  A029               	btfss	fillCircleHelper@cornername,0,c
  3712  0009B0  D025               	goto	l3602
  3713                           
  3714                           ;ST7735_TFT.c: 601: drawFastVLine(x0+x, y0-y, 2*y+1+delta, color);
  3715  0009B2  5039               	movf	fillCircleHelper@y,w,c
  3716  0009B4  0800               	sublw	0
  3717  0009B6  2425               	addwf	fillCircleHelper@y0,w,c
  3718  0009B8  6E18               	movwf	drawFastVLine@y,c
  3719  0009BA  5039               	movf	fillCircleHelper@y,w,c
  3720  0009BC  2439               	addwf	fillCircleHelper@y,w,c
  3721  0009BE  242B               	addwf	fillCircleHelper@delta,w,c
  3722  0009C0  6E2F               	movwf	??_fillCircleHelper& (0+255),c
  3723  0009C2  282F               	incf	??_fillCircleHelper,w,c
  3724  0009C4  6E19               	movwf	drawFastVLine@h,c
  3725  0009C6  C02D  F01A         	movff	fillCircleHelper@color,drawFastVLine@color
  3726  0009CA  C02E  F01B         	movff	fillCircleHelper@color+1,drawFastVLine@color+1
  3727  0009CE  5023               	movf	fillCircleHelper@x0,w,c
  3728  0009D0  2437               	addwf	fillCircleHelper@x,w,c
  3729  0009D2  ECB3  F007         	call	_drawFastVLine
  3730                           
  3731                           ;ST7735_TFT.c: 602: drawFastVLine(x0+y, y0-x, 2*x+1+delta, color);
  3732  0009D6  5037               	movf	fillCircleHelper@x,w,c
  3733  0009D8  0800               	sublw	0
  3734  0009DA  2425               	addwf	fillCircleHelper@y0,w,c
  3735  0009DC  6E18               	movwf	drawFastVLine@y,c
  3736  0009DE  5037               	movf	fillCircleHelper@x,w,c
  3737  0009E0  2437               	addwf	fillCircleHelper@x,w,c
  3738  0009E2  242B               	addwf	fillCircleHelper@delta,w,c
  3739  0009E4  6E2F               	movwf	??_fillCircleHelper& (0+255),c
  3740  0009E6  282F               	incf	??_fillCircleHelper,w,c
  3741  0009E8  6E19               	movwf	drawFastVLine@h,c
  3742  0009EA  C02D  F01A         	movff	fillCircleHelper@color,drawFastVLine@color
  3743  0009EE  C02E  F01B         	movff	fillCircleHelper@color+1,drawFastVLine@color+1
  3744  0009F2  5023               	movf	fillCircleHelper@x0,w,c
  3745  0009F4  2439               	addwf	fillCircleHelper@y,w,c
  3746  0009F6  ECB3  F007         	call	_drawFastVLine
  3747  0009FA  D000               	goto	l3602
  3748  0009FC                     l3602:
  3749                           
  3750                           ;ST7735_TFT.c: 603: }
  3751                           ;ST7735_TFT.c: 604: if (cornername & 0x2) {
  3752  0009FC  A229               	btfss	fillCircleHelper@cornername,1,c
  3753  0009FE  D027               	goto	l3606
  3754                           
  3755                           ;ST7735_TFT.c: 605: drawFastVLine(x0-x, y0-y, 2*y+1+delta, color);
  3756  000A00  5039               	movf	fillCircleHelper@y,w,c
  3757  000A02  0800               	sublw	0
  3758  000A04  2425               	addwf	fillCircleHelper@y0,w,c
  3759  000A06  6E18               	movwf	drawFastVLine@y,c
  3760  000A08  5039               	movf	fillCircleHelper@y,w,c
  3761  000A0A  2439               	addwf	fillCircleHelper@y,w,c
  3762  000A0C  242B               	addwf	fillCircleHelper@delta,w,c
  3763  000A0E  6E2F               	movwf	??_fillCircleHelper& (0+255),c
  3764  000A10  282F               	incf	??_fillCircleHelper,w,c
  3765  000A12  6E19               	movwf	drawFastVLine@h,c
  3766  000A14  C02D  F01A         	movff	fillCircleHelper@color,drawFastVLine@color
  3767  000A18  C02E  F01B         	movff	fillCircleHelper@color+1,drawFastVLine@color+1
  3768  000A1C  5037               	movf	fillCircleHelper@x,w,c
  3769  000A1E  0800               	sublw	0
  3770  000A20  2423               	addwf	fillCircleHelper@x0,w,c
  3771  000A22  ECB3  F007         	call	_drawFastVLine
  3772                           
  3773                           ;ST7735_TFT.c: 606: drawFastVLine(x0-y, y0-x, 2*x+1+delta, color);
  3774  000A26  5037               	movf	fillCircleHelper@x,w,c
  3775  000A28  0800               	sublw	0
  3776  000A2A  2425               	addwf	fillCircleHelper@y0,w,c
  3777  000A2C  6E18               	movwf	drawFastVLine@y,c
  3778  000A2E  5037               	movf	fillCircleHelper@x,w,c
  3779  000A30  2437               	addwf	fillCircleHelper@x,w,c
  3780  000A32  242B               	addwf	fillCircleHelper@delta,w,c
  3781  000A34  6E2F               	movwf	??_fillCircleHelper& (0+255),c
  3782  000A36  282F               	incf	??_fillCircleHelper,w,c
  3783  000A38  6E19               	movwf	drawFastVLine@h,c
  3784  000A3A  C02D  F01A         	movff	fillCircleHelper@color,drawFastVLine@color
  3785  000A3E  C02E  F01B         	movff	fillCircleHelper@color+1,drawFastVLine@color+1
  3786  000A42  5039               	movf	fillCircleHelper@y,w,c
  3787  000A44  0800               	sublw	0
  3788  000A46  2423               	addwf	fillCircleHelper@x0,w,c
  3789  000A48  ECB3  F007         	call	_drawFastVLine
  3790  000A4C  D000               	goto	l3606
  3791  000A4E                     l3606:
  3792  000A4E  5039               	movf	fillCircleHelper@y,w,c
  3793  000A50  5C37               	subwf	fillCircleHelper@x,w,c
  3794  000A52  5038               	movf	fillCircleHelper@x+1,w,c
  3795  000A54  0A80               	xorlw	128
  3796  000A56  6E2F               	movwf	??_fillCircleHelper& (0+255),c
  3797  000A58  503A               	movf	fillCircleHelper@y+1,w,c
  3798  000A5A  0A80               	xorlw	128
  3799  000A5C  582F               	subwfb	??_fillCircleHelper& (0+255),w,c
  3800  000A5E  A0D8               	btfss	status,0,c
  3801  000A60  D78F               	goto	l3586
  3802  000A62  0012               	return		;funcret
  3803  000A64                     __end_of_fillCircleHelper:
  3804                           	opt stack 0
  3805                           tblptru	equ	0xFF8
  3806                           tblptrh	equ	0xFF7
  3807                           tblptrl	equ	0xFF6
  3808                           tablat	equ	0xFF5
  3809                           prodh	equ	0xFF4
  3810                           prodl	equ	0xFF3
  3811                           intcon	equ	0xFF2
  3812                           intcon2	equ	0xFF1
  3813                           postinc0	equ	0xFEE
  3814                           wreg	equ	0xFE8
  3815                           postdec1	equ	0xFE5
  3816                           fsr1l	equ	0xFE1
  3817                           indf2	equ	0xFDF
  3818                           postinc2	equ	0xFDE
  3819                           postdec2	equ	0xFDD
  3820                           fsr2h	equ	0xFDA
  3821                           fsr2l	equ	0xFD9
  3822                           status	equ	0xFD8
  3823                           
  3824 ;; *************** function _drawCircle *****************
  3825 ;; Defined at:
  3826 ;;		line 526 in file "ST7735_TFT.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;  x0              2   27[COMRAM] int 
  3829 ;;  y0              2   29[COMRAM] int 
  3830 ;;  r               2   31[COMRAM] int 
  3831 ;;  color           2   33[COMRAM] unsigned int 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;  y               2   45[COMRAM] int 
  3834 ;;  x               2   43[COMRAM] int 
  3835 ;;  f               2   41[COMRAM] int 
  3836 ;;  ddF_y           2   39[COMRAM] int 
  3837 ;;  ddF_x           2   37[COMRAM] int 
  3838 ;; Return value:  Size  Location     Type
  3839 ;;		None               void
  3840 ;; Registers used:
  3841 ;;		wreg, status,2, status,0, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3847 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3848 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3849 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;Total ram usage:       20 bytes
  3852 ;; Hardware stack levels used:    1
  3853 ;; Hardware stack levels required when called:    7
  3854 ;; This function calls:
  3855 ;;		_drawPixel
  3856 ;; This function is called by:
  3857 ;;		_main
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           	psect	text13
  3862  0004C8                     __ptext13:
  3863                           	opt stack 0
  3864  0004C8                     _drawCircle:
  3865                           	opt stack 23
  3866                           
  3867                           ;ST7735_TFT.c: 528: signed int f, ddF_x, ddF_y, x, y;
  3868                           ;ST7735_TFT.c: 529: f = 1 - r, ddF_x = 1, ddF_y = -2 * r, x = 0, y = r;
  3869                           
  3870                           ;incstack = 0
  3871  0004C8  C020  F024         	movff	drawCircle@r,??_drawCircle
  3872  0004CC  C021  F025         	movff	drawCircle@r+1,??_drawCircle+1
  3873  0004D0  1E24               	comf	??_drawCircle,f,c
  3874  0004D2  1E25               	comf	??_drawCircle+1,f,c
  3875  0004D4  4A24               	infsnz	??_drawCircle,f,c
  3876  0004D6  2A25               	incf	??_drawCircle+1,f,c
  3877  0004D8  0E01               	movlw	1
  3878  0004DA  2424               	addwf	??_drawCircle,w,c
  3879  0004DC  6E2A               	movwf	drawCircle@f,c
  3880  0004DE  0E00               	movlw	0
  3881  0004E0  2025               	addwfc	??_drawCircle+1,w,c
  3882  0004E2  6E2B               	movwf	drawCircle@f+1,c
  3883  0004E4  0E00               	movlw	0
  3884  0004E6  6E27               	movwf	drawCircle@ddF_x+1,c
  3885  0004E8  0E01               	movlw	1
  3886  0004EA  6E26               	movwf	drawCircle@ddF_x,c
  3887  0004EC  C020  F024         	movff	drawCircle@r,??_drawCircle
  3888  0004F0  C021  F025         	movff	drawCircle@r+1,??_drawCircle+1
  3889  0004F4  90D8               	bcf	status,0,c
  3890  0004F6  3624               	rlcf	??_drawCircle,f,c
  3891  0004F8  3625               	rlcf	??_drawCircle+1,f,c
  3892  0004FA  1E24               	comf	??_drawCircle,f,c
  3893  0004FC  1E25               	comf	??_drawCircle+1,f,c
  3894  0004FE  4A24               	infsnz	??_drawCircle,f,c
  3895  000500  2A25               	incf	??_drawCircle+1,f,c
  3896  000502  C024  F028         	movff	??_drawCircle,drawCircle@ddF_y
  3897  000506  C025  F029         	movff	??_drawCircle+1,drawCircle@ddF_y+1
  3898  00050A  0E00               	movlw	0
  3899  00050C  6E2D               	movwf	drawCircle@x+1,c
  3900  00050E  0E00               	movlw	0
  3901  000510  6E2C               	movwf	drawCircle@x,c
  3902  000512  C020  F02E         	movff	drawCircle@r,drawCircle@y
  3903  000516  C021  F02F         	movff	drawCircle@r+1,drawCircle@y+1
  3904                           
  3905                           ;ST7735_TFT.c: 530: drawPixel(x0 , y0 + r, color);
  3906  00051A  501E               	movf	drawCircle@y0,w,c
  3907  00051C  2420               	addwf	drawCircle@r,w,c
  3908  00051E  6E18               	movwf	drawPixel@y,c
  3909  000520  C022  F019         	movff	drawCircle@color,drawPixel@color
  3910  000524  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3911  000528  501C               	movf	drawCircle@x0,w,c
  3912  00052A  EC92  F00A         	call	_drawPixel
  3913                           
  3914                           ;ST7735_TFT.c: 531: drawPixel(x0 , y0 - r, color);
  3915  00052E  5020               	movf	drawCircle@r,w,c
  3916  000530  0800               	sublw	0
  3917  000532  241E               	addwf	drawCircle@y0,w,c
  3918  000534  6E18               	movwf	drawPixel@y,c
  3919  000536  C022  F019         	movff	drawCircle@color,drawPixel@color
  3920  00053A  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3921  00053E  501C               	movf	drawCircle@x0,w,c
  3922  000540  EC92  F00A         	call	_drawPixel
  3923                           
  3924                           ;ST7735_TFT.c: 532: drawPixel(x0+r, y0 , color);
  3925  000544  C01E  F018         	movff	drawCircle@y0,drawPixel@y
  3926  000548  C022  F019         	movff	drawCircle@color,drawPixel@color
  3927  00054C  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3928  000550  501C               	movf	drawCircle@x0,w,c
  3929  000552  2420               	addwf	drawCircle@r,w,c
  3930  000554  EC92  F00A         	call	_drawPixel
  3931                           
  3932                           ;ST7735_TFT.c: 533: drawPixel(x0-r, y0 , color);
  3933  000558  C01E  F018         	movff	drawCircle@y0,drawPixel@y
  3934  00055C  C022  F019         	movff	drawCircle@color,drawPixel@color
  3935  000560  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3936  000564  5020               	movf	drawCircle@r,w,c
  3937  000566  0800               	sublw	0
  3938  000568  241C               	addwf	drawCircle@x0,w,c
  3939  00056A  EC92  F00A         	call	_drawPixel
  3940                           
  3941                           ;ST7735_TFT.c: 534: while (x < y) {
  3942  00056E  D078               	goto	l3768
  3943  000570                     l3740:
  3944                           
  3945                           ;ST7735_TFT.c: 535: if (f >= 0) {
  3946  000570  BE2B               	btfsc	drawCircle@f+1,7,c
  3947  000572  D00B               	goto	l159
  3948                           
  3949                           ;ST7735_TFT.c: 536: y--;
  3950  000574  062E               	decf	drawCircle@y,f,c
  3951  000576  A0D8               	btfss	status,0,c
  3952  000578  062F               	decf	drawCircle@y+1,f,c
  3953                           
  3954                           ;ST7735_TFT.c: 537: ddF_y += 2;
  3955  00057A  0E02               	movlw	2
  3956  00057C  2628               	addwf	drawCircle@ddF_y,f,c
  3957  00057E  0E00               	movlw	0
  3958  000580  2229               	addwfc	drawCircle@ddF_y+1,f,c
  3959                           
  3960                           ;ST7735_TFT.c: 538: f += ddF_y;
  3961  000582  5028               	movf	drawCircle@ddF_y,w,c
  3962  000584  262A               	addwf	drawCircle@f,f,c
  3963  000586  5029               	movf	drawCircle@ddF_y+1,w,c
  3964  000588  222B               	addwfc	drawCircle@f+1,f,c
  3965  00058A                     l159:
  3966                           
  3967                           ;ST7735_TFT.c: 539: }
  3968                           ;ST7735_TFT.c: 540: x++;
  3969  00058A  4A2C               	infsnz	drawCircle@x,f,c
  3970  00058C  2A2D               	incf	drawCircle@x+1,f,c
  3971                           
  3972                           ;ST7735_TFT.c: 541: ddF_x += 2;
  3973  00058E  0E02               	movlw	2
  3974  000590  2626               	addwf	drawCircle@ddF_x,f,c
  3975  000592  0E00               	movlw	0
  3976  000594  2227               	addwfc	drawCircle@ddF_x+1,f,c
  3977                           
  3978                           ;ST7735_TFT.c: 542: f += ddF_x;
  3979  000596  5026               	movf	drawCircle@ddF_x,w,c
  3980  000598  262A               	addwf	drawCircle@f,f,c
  3981  00059A  5027               	movf	drawCircle@ddF_x+1,w,c
  3982  00059C  222B               	addwfc	drawCircle@f+1,f,c
  3983                           
  3984                           ;ST7735_TFT.c: 543: drawPixel(x0 + x, y0 + y, color);
  3985  00059E  501E               	movf	drawCircle@y0,w,c
  3986  0005A0  242E               	addwf	drawCircle@y,w,c
  3987  0005A2  6E18               	movwf	drawPixel@y,c
  3988  0005A4  C022  F019         	movff	drawCircle@color,drawPixel@color
  3989  0005A8  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3990  0005AC  501C               	movf	drawCircle@x0,w,c
  3991  0005AE  242C               	addwf	drawCircle@x,w,c
  3992  0005B0  EC92  F00A         	call	_drawPixel
  3993                           
  3994                           ;ST7735_TFT.c: 544: drawPixel(x0 - x, y0 + y, color);
  3995  0005B4  501E               	movf	drawCircle@y0,w,c
  3996  0005B6  242E               	addwf	drawCircle@y,w,c
  3997  0005B8  6E18               	movwf	drawPixel@y,c
  3998  0005BA  C022  F019         	movff	drawCircle@color,drawPixel@color
  3999  0005BE  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  4000  0005C2  502C               	movf	drawCircle@x,w,c
  4001  0005C4  0800               	sublw	0
  4002  0005C6  241C               	addwf	drawCircle@x0,w,c
  4003  0005C8  EC92  F00A         	call	_drawPixel
  4004                           
  4005                           ;ST7735_TFT.c: 545: drawPixel(x0 + x, y0 - y, color);
  4006  0005CC  502E               	movf	drawCircle@y,w,c
  4007  0005CE  0800               	sublw	0
  4008  0005D0  241E               	addwf	drawCircle@y0,w,c
  4009  0005D2  6E18               	movwf	drawPixel@y,c
  4010  0005D4  C022  F019         	movff	drawCircle@color,drawPixel@color
  4011  0005D8  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  4012  0005DC  501C               	movf	drawCircle@x0,w,c
  4013  0005DE  242C               	addwf	drawCircle@x,w,c
  4014  0005E0  EC92  F00A         	call	_drawPixel
  4015                           
  4016                           ;ST7735_TFT.c: 546: drawPixel(x0 - x, y0 - y, color);
  4017  0005E4  502E               	movf	drawCircle@y,w,c
  4018  0005E6  0800               	sublw	0
  4019  0005E8  241E               	addwf	drawCircle@y0,w,c
  4020  0005EA  6E18               	movwf	drawPixel@y,c
  4021  0005EC  C022  F019         	movff	drawCircle@color,drawPixel@color
  4022  0005F0  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  4023  0005F4  502C               	movf	drawCircle@x,w,c
  4024  0005F6  0800               	sublw	0
  4025  0005F8  241C               	addwf	drawCircle@x0,w,c
  4026  0005FA  EC92  F00A         	call	_drawPixel
  4027                           
  4028                           ;ST7735_TFT.c: 547: drawPixel(x0 + y, y0 + x, color);
  4029  0005FE  501E               	movf	drawCircle@y0,w,c
  4030  000600  242C               	addwf	drawCircle@x,w,c
  4031  000602  6E18               	movwf	drawPixel@y,c
  4032  000604  C022  F019         	movff	drawCircle@color,drawPixel@color
  4033  000608  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  4034  00060C  501C               	movf	drawCircle@x0,w,c
  4035  00060E  242E               	addwf	drawCircle@y,w,c
  4036  000610  EC92  F00A         	call	_drawPixel
  4037                           
  4038                           ;ST7735_TFT.c: 548: drawPixel(x0 - y, y0 + x, color);
  4039  000614  501E               	movf	drawCircle@y0,w,c
  4040  000616  242C               	addwf	drawCircle@x,w,c
  4041  000618  6E18               	movwf	drawPixel@y,c
  4042  00061A  C022  F019         	movff	drawCircle@color,drawPixel@color
  4043  00061E  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  4044  000622  502E               	movf	drawCircle@y,w,c
  4045  000624  0800               	sublw	0
  4046  000626  241C               	addwf	drawCircle@x0,w,c
  4047  000628  EC92  F00A         	call	_drawPixel
  4048                           
  4049                           ;ST7735_TFT.c: 549: drawPixel(x0 + y, y0 - x, color);
  4050  00062C  502C               	movf	drawCircle@x,w,c
  4051  00062E  0800               	sublw	0
  4052  000630  241E               	addwf	drawCircle@y0,w,c
  4053  000632  6E18               	movwf	drawPixel@y,c
  4054  000634  C022  F019         	movff	drawCircle@color,drawPixel@color
  4055  000638  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  4056  00063C  501C               	movf	drawCircle@x0,w,c
  4057  00063E  242E               	addwf	drawCircle@y,w,c
  4058  000640  EC92  F00A         	call	_drawPixel
  4059                           
  4060                           ;ST7735_TFT.c: 550: drawPixel(x0 - y, y0 - x, color);
  4061  000644  502C               	movf	drawCircle@x,w,c
  4062  000646  0800               	sublw	0
  4063  000648  241E               	addwf	drawCircle@y0,w,c
  4064  00064A  6E18               	movwf	drawPixel@y,c
  4065  00064C  C022  F019         	movff	drawCircle@color,drawPixel@color
  4066  000650  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  4067  000654  502E               	movf	drawCircle@y,w,c
  4068  000656  0800               	sublw	0
  4069  000658  241C               	addwf	drawCircle@x0,w,c
  4070  00065A  EC92  F00A         	call	_drawPixel
  4071  00065E  D000               	goto	l3768
  4072  000660                     l3768:
  4073  000660  502E               	movf	drawCircle@y,w,c
  4074  000662  5C2C               	subwf	drawCircle@x,w,c
  4075  000664  502D               	movf	drawCircle@x+1,w,c
  4076  000666  0A80               	xorlw	128
  4077  000668  6E24               	movwf	??_drawCircle& (0+255),c
  4078  00066A  502F               	movf	drawCircle@y+1,w,c
  4079  00066C  0A80               	xorlw	128
  4080  00066E  5824               	subwfb	??_drawCircle& (0+255),w,c
  4081  000670  A0D8               	btfss	status,0,c
  4082  000672  D77E               	goto	l3740
  4083  000674  0012               	return		;funcret
  4084  000676                     __end_of_drawCircle:
  4085                           	opt stack 0
  4086                           tblptru	equ	0xFF8
  4087                           tblptrh	equ	0xFF7
  4088                           tblptrl	equ	0xFF6
  4089                           tablat	equ	0xFF5
  4090                           prodh	equ	0xFF4
  4091                           prodl	equ	0xFF3
  4092                           intcon	equ	0xFF2
  4093                           intcon2	equ	0xFF1
  4094                           postinc0	equ	0xFEE
  4095                           wreg	equ	0xFE8
  4096                           postdec1	equ	0xFE5
  4097                           fsr1l	equ	0xFE1
  4098                           indf2	equ	0xFDF
  4099                           postinc2	equ	0xFDE
  4100                           postdec2	equ	0xFDD
  4101                           fsr2h	equ	0xFDA
  4102                           fsr2l	equ	0xFD9
  4103                           status	equ	0xFD8
  4104                           
  4105 ;; *************** function _Initialize_Screen *****************
  4106 ;; Defined at:
  4107 ;;		line 349 in file "Lab10ptest.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;		None
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;		None
  4112 ;; Return value:  Size  Location     Type
  4113 ;;		None               void
  4114 ;; Registers used:
  4115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4125 ;;Total ram usage:        0 bytes
  4126 ;; Hardware stack levels used:    1
  4127 ;; Hardware stack levels required when called:   10
  4128 ;; This function calls:
  4129 ;;		_LCD_Reset
  4130 ;;		_TFT_GreenTab_Initialize
  4131 ;;		_drawtext
  4132 ;;		_fillScreen
  4133 ;;		_strcpy
  4134 ;; This function is called by:
  4135 ;;		_main
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           	psect	text14
  4140  000E4C                     __ptext14:
  4141                           	opt stack 0
  4142  000E4C                     _Initialize_Screen:
  4143                           	opt stack 20
  4144                           
  4145                           ;Lab10ptest.c: 351: LCD_Reset();
  4146                           
  4147                           ;incstack = 0
  4148  000E4C  EC23  F00B         	call	_LCD_Reset	;wreg free
  4149                           
  4150                           ;Lab10ptest.c: 352: TFT_GreenTab_Initialize();
  4151  000E50  ECAA  F00A         	call	_TFT_GreenTab_Initialize	;wreg free
  4152                           
  4153                           ;Lab10ptest.c: 353: fillScreen(0x0000);
  4154  000E54  0E00               	movlw	0
  4155  000E56  6E25               	movwf	fillScreen@color+1,c
  4156  000E58  0E00               	movlw	0
  4157  000E5A  6E24               	movwf	fillScreen@color,c
  4158  000E5C  ECF6  F00A         	call	_fillScreen	;wreg free
  4159                           
  4160                           ;Lab10ptest.c: 356: txt = buffer;
  4161  000E60  0E7E               	movlw	low _buffer
  4162  000E62  6E64               	movwf	_txt,c
  4163  000E64  0E01               	movlw	high _buffer
  4164  000E66  6E65               	movwf	_txt+1,c
  4165                           
  4166                           ;Lab10ptest.c: 357: strcpy(txt, "ECE3301L Fall 22-S1");
  4167  000E68  C064  F011         	movff	_txt,strcpy@to
  4168  000E6C  C065  F012         	movff	_txt+1,strcpy@to+1
  4169  000E70  0ED2               	movlw	low STR_2
  4170  000E72  6E13               	movwf	strcpy@from,c
  4171  000E74  0EFF               	movlw	high STR_2
  4172  000E76  6E14               	movwf	strcpy@from+1,c
  4173  000E78  EC79  F00A         	call	_strcpy	;wreg free
  4174                           
  4175                           ;Lab10ptest.c: 358: drawtext(2, 2, txt, 0xFFFF, 0x0000, 1);
  4176  000E7C  0E02               	movlw	2
  4177  000E7E  6E39               	movwf	drawtext@y,c
  4178  000E80  C064  F03A         	movff	_txt,drawtext@_text
  4179  000E84  C065  F03B         	movff	_txt+1,drawtext@_text+1
  4180  000E88  0EFF               	movlw	255
  4181  000E8A  6E3D               	movwf	drawtext@color+1,c
  4182  000E8C  683C               	setf	drawtext@color,c
  4183  000E8E  0E00               	movlw	0
  4184  000E90  6E3F               	movwf	drawtext@bg+1,c
  4185  000E92  0E00               	movlw	0
  4186  000E94  6E3E               	movwf	drawtext@bg,c
  4187  000E96  0E01               	movlw	1
  4188  000E98  6E40               	movwf	drawtext@size,c
  4189  000E9A  0E02               	movlw	2
  4190  000E9C  ECBA  F005         	call	_drawtext
  4191                           
  4192                           ;Lab10ptest.c: 360: strcpy(txt, "LAB 10 ");
  4193  000EA0  C064  F011         	movff	_txt,strcpy@to
  4194  000EA4  C065  F012         	movff	_txt+1,strcpy@to+1
  4195  000EA8  0EF7               	movlw	low STR_3
  4196  000EAA  6E13               	movwf	strcpy@from,c
  4197  000EAC  0EFF               	movlw	high STR_3
  4198  000EAE  6E14               	movwf	strcpy@from+1,c
  4199  000EB0  EC79  F00A         	call	_strcpy	;wreg free
  4200                           
  4201                           ;Lab10ptest.c: 361: drawtext(50, 10, txt, 0xFFFF, 0x0000, 1);
  4202  000EB4  0E0A               	movlw	10
  4203  000EB6  6E39               	movwf	drawtext@y,c
  4204  000EB8  C064  F03A         	movff	_txt,drawtext@_text
  4205  000EBC  C065  F03B         	movff	_txt+1,drawtext@_text+1
  4206  000EC0  0EFF               	movlw	255
  4207  000EC2  6E3D               	movwf	drawtext@color+1,c
  4208  000EC4  683C               	setf	drawtext@color,c
  4209  000EC6  0E00               	movlw	0
  4210  000EC8  6E3F               	movwf	drawtext@bg+1,c
  4211  000ECA  0E00               	movlw	0
  4212  000ECC  6E3E               	movwf	drawtext@bg,c
  4213  000ECE  0E01               	movlw	1
  4214  000ED0  6E40               	movwf	drawtext@size,c
  4215  000ED2  0E32               	movlw	50
  4216  000ED4  ECBA  F005         	call	_drawtext
  4217  000ED8  0012               	return		;funcret
  4218  000EDA                     __end_of_Initialize_Screen:
  4219                           	opt stack 0
  4220                           tblptru	equ	0xFF8
  4221                           tblptrh	equ	0xFF7
  4222                           tblptrl	equ	0xFF6
  4223                           tablat	equ	0xFF5
  4224                           prodh	equ	0xFF4
  4225                           prodl	equ	0xFF3
  4226                           intcon	equ	0xFF2
  4227                           intcon2	equ	0xFF1
  4228                           postinc0	equ	0xFEE
  4229                           wreg	equ	0xFE8
  4230                           postdec1	equ	0xFE5
  4231                           fsr1l	equ	0xFE1
  4232                           indf2	equ	0xFDF
  4233                           postinc2	equ	0xFDE
  4234                           postdec2	equ	0xFDD
  4235                           fsr2h	equ	0xFDA
  4236                           fsr2l	equ	0xFD9
  4237                           status	equ	0xFD8
  4238                           
  4239 ;; *************** function _strcpy *****************
  4240 ;; Defined at:
  4241 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\strcpy.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;  to              2   16[COMRAM] PTR unsigned char 
  4244 ;;		 -> NULL(0), buffer(31), 
  4245 ;;  from            2   18[COMRAM] PTR const unsigned char 
  4246 ;;		 -> STR_3(8), STR_2(20), 
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;  cp              2   20[COMRAM] PTR unsigned char 
  4249 ;;		 -> NULL(0), buffer(31), 
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  2   16[COMRAM] PTR unsigned char 
  4252 ;; Registers used:
  4253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4259 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4260 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4262 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4263 ;;Total ram usage:        6 bytes
  4264 ;; Hardware stack levels used:    1
  4265 ;; Hardware stack levels required when called:    3
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_Initialize_Screen
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           	psect	text15
  4274  0014F2                     __ptext15:
  4275                           	opt stack 0
  4276  0014F2                     _strcpy:
  4277                           	opt stack 26
  4278                           
  4279                           ;incstack = 0
  4280  0014F2  C011  F015         	movff	strcpy@to,strcpy@cp
  4281  0014F6  C012  F016         	movff	strcpy@to+1,strcpy@cp+1
  4282  0014FA  D005               	goto	l3684
  4283  0014FC                     l3682:
  4284  0014FC  4A15               	infsnz	strcpy@cp,f,c
  4285  0014FE  2A16               	incf	strcpy@cp+1,f,c
  4286  001500  4A13               	infsnz	strcpy@from,f,c
  4287  001502  2A14               	incf	strcpy@from+1,f,c
  4288  001504  D000               	goto	l3684
  4289  001506                     l3684:
  4290  001506  C013  FFF6         	movff	strcpy@from,tblptrl
  4291  00150A  C014  FFF7         	movff	strcpy@from+1,tblptrh
  4292  00150E                     	if	0	;tblptru may be non-zero
  4293  00150E                     	endif
  4294  00150E                     	if	0	;tblptru may be non-zero
  4295  00150E                     	endif
  4296  00150E  C015  FFD9         	movff	strcpy@cp,fsr2l
  4297  001512  C016  FFDA         	movff	strcpy@cp+1,fsr2h
  4298  001516  0008               	tblrd		*
  4299  001518  CFF5 FFDF          	movff	tablat,indf2
  4300  00151C  50DF               	movf	indf2,w,c
  4301  00151E  A4D8               	btfss	status,2,c
  4302  001520  D7ED               	goto	l3682
  4303                           
  4304                           ;	Return value of _strcpy is never used
  4305  001522  0012               	return		;funcret
  4306  001524                     __end_of_strcpy:
  4307                           	opt stack 0
  4308                           tblptru	equ	0xFF8
  4309                           tblptrh	equ	0xFF7
  4310                           tblptrl	equ	0xFF6
  4311                           tablat	equ	0xFF5
  4312                           prodh	equ	0xFF4
  4313                           prodl	equ	0xFF3
  4314                           intcon	equ	0xFF2
  4315                           intcon2	equ	0xFF1
  4316                           postinc0	equ	0xFEE
  4317                           wreg	equ	0xFE8
  4318                           postdec1	equ	0xFE5
  4319                           fsr1l	equ	0xFE1
  4320                           indf2	equ	0xFDF
  4321                           postinc2	equ	0xFDE
  4322                           postdec2	equ	0xFDD
  4323                           fsr2h	equ	0xFDA
  4324                           fsr2l	equ	0xFD9
  4325                           status	equ	0xFD8
  4326                           
  4327 ;; *************** function _fillScreen *****************
  4328 ;; Defined at:
  4329 ;;		line 616 in file "ST7735_TFT.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;  color           2   35[COMRAM] unsigned int 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;		None
  4334 ;; Return value:  Size  Location     Type
  4335 ;;		None               void
  4336 ;; Registers used:
  4337 ;;		wreg, status,2, status,0, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;Total ram usage:        2 bytes
  4348 ;; Hardware stack levels used:    1
  4349 ;; Hardware stack levels required when called:    7
  4350 ;; This function calls:
  4351 ;;		_fillRectangle
  4352 ;; This function is called by:
  4353 ;;		_Initialize_Screen
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           	psect	text16
  4358  0015EC                     __ptext16:
  4359                           	opt stack 0
  4360  0015EC                     _fillScreen:
  4361                           	opt stack 22
  4362                           
  4363                           ;ST7735_TFT.c: 618: fillRectangle(0, 0, 128, 160, color);
  4364                           
  4365                           ;incstack = 0
  4366  0015EC  0E00               	movlw	0
  4367  0015EE  6E18               	movwf	fillRectangle@y,c
  4368  0015F0  0E80               	movlw	128
  4369  0015F2  6E19               	movwf	fillRectangle@w,c
  4370  0015F4  0EA0               	movlw	160
  4371  0015F6  6E1A               	movwf	fillRectangle@h,c
  4372  0015F8  C024  F01B         	movff	fillScreen@color,fillRectangle@color
  4373  0015FC  C025  F01C         	movff	fillScreen@color+1,fillRectangle@color+1
  4374  001600  0E00               	movlw	0
  4375  001602  ECB8  F006         	call	_fillRectangle
  4376  001606  0012               	return		;funcret
  4377  001608                     __end_of_fillScreen:
  4378                           	opt stack 0
  4379                           tblptru	equ	0xFF8
  4380                           tblptrh	equ	0xFF7
  4381                           tblptrl	equ	0xFF6
  4382                           tablat	equ	0xFF5
  4383                           prodh	equ	0xFF4
  4384                           prodl	equ	0xFF3
  4385                           intcon	equ	0xFF2
  4386                           intcon2	equ	0xFF1
  4387                           postinc0	equ	0xFEE
  4388                           wreg	equ	0xFE8
  4389                           postdec1	equ	0xFE5
  4390                           fsr1l	equ	0xFE1
  4391                           indf2	equ	0xFDF
  4392                           postinc2	equ	0xFDE
  4393                           postdec2	equ	0xFDD
  4394                           fsr2h	equ	0xFDA
  4395                           fsr2l	equ	0xFD9
  4396                           status	equ	0xFD8
  4397                           
  4398 ;; *************** function _fillRectangle *****************
  4399 ;; Defined at:
  4400 ;;		line 501 in file "ST7735_TFT.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  x               1    wreg     unsigned char 
  4403 ;;  y               1   23[COMRAM] unsigned char 
  4404 ;;  w               1   24[COMRAM] unsigned char 
  4405 ;;  h               1   25[COMRAM] unsigned char 
  4406 ;;  color           2   26[COMRAM] unsigned int 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  x               1   34[COMRAM] unsigned char 
  4409 ;;  lo              1   33[COMRAM] unsigned char 
  4410 ;;  hi              1   32[COMRAM] unsigned char 
  4411 ;; Return value:  Size  Location     Type
  4412 ;;		None               void
  4413 ;; Registers used:
  4414 ;;		wreg, status,2, status,0, cstack
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4420 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4421 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4422 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4423 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4424 ;;Total ram usage:       12 bytes
  4425 ;; Hardware stack levels used:    1
  4426 ;; Hardware stack levels required when called:    6
  4427 ;; This function calls:
  4428 ;;		_setAddrWindow
  4429 ;;		_spiwrite
  4430 ;; This function is called by:
  4431 ;;		_fillScreen
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           	psect	text17
  4436  000D70                     __ptext17:
  4437                           	opt stack 0
  4438  000D70                     _fillRectangle:
  4439                           	opt stack 22
  4440                           
  4441                           ;incstack = 0
  4442                           ;fillRectangle@x stored from wreg
  4443  000D70  6E23               	movwf	fillRectangle@x,c
  4444                           
  4445                           ;ST7735_TFT.c: 503: unsigned char hi, lo;
  4446                           ;ST7735_TFT.c: 504: if((x >= 128) || (y >= 160))
  4447  000D72  0E80               	movlw	128
  4448  000D74  6023               	cpfslt	fillRectangle@x,c
  4449  000D76  D069               	goto	l148
  4450  000D78  0E9F               	movlw	159
  4451  000D7A  6418               	cpfsgt	fillRectangle@y,c
  4452  000D7C  D001               	goto	l3498
  4453                           
  4454                           ;ST7735_TFT.c: 505: return;
  4455  000D7E  D065               	goto	l148
  4456  000D80                     l3498:
  4457                           
  4458                           ;ST7735_TFT.c: 506: if((x + w - 1) >= 128)
  4459  000D80  0EFF               	movlw	255
  4460  000D82  6E1D               	movwf	??_fillRectangle& (0+255),c
  4461  000D84  0EFF               	movlw	255
  4462  000D86  6E1E               	movwf	(??_fillRectangle+1)& (0+255),c
  4463  000D88  5019               	movf	fillRectangle@w,w,c
  4464  000D8A  C023  F01F         	movff	fillRectangle@x,??_fillRectangle+2
  4465  000D8E  6A20               	clrf	(??_fillRectangle+3)& (0+255),c
  4466  000D90  261F               	addwf	??_fillRectangle+2,f,c
  4467  000D92  0E00               	movlw	0
  4468  000D94  2220               	addwfc	??_fillRectangle+3,f,c
  4469  000D96  501D               	movf	??_fillRectangle,w,c
  4470  000D98  261F               	addwf	??_fillRectangle+2,f,c
  4471  000D9A  501E               	movf	??_fillRectangle+1,w,c
  4472  000D9C  2220               	addwfc	??_fillRectangle+3,f,c
  4473  000D9E  BE20               	btfsc	??_fillRectangle+3,7,c
  4474  000DA0  D00A               	goto	l149
  4475  000DA2  5020               	movf	??_fillRectangle+3,w,c
  4476  000DA4  E104               	bnz	u2400
  4477  000DA6  0E80               	movlw	128
  4478  000DA8  5C1F               	subwf	??_fillRectangle+2,w,c
  4479  000DAA  A0D8               	btfss	status,0,c
  4480  000DAC  D004               	goto	l149
  4481  000DAE                     u2400:
  4482                           
  4483                           ;ST7735_TFT.c: 507: w = 128 - x;
  4484  000DAE  5023               	movf	fillRectangle@x,w,c
  4485  000DB0  0800               	sublw	0
  4486  000DB2  0F80               	addlw	128
  4487  000DB4  6E19               	movwf	fillRectangle@w,c
  4488  000DB6                     l149:
  4489                           
  4490                           ;ST7735_TFT.c: 508: if((y + h - 1) >= 160)
  4491  000DB6  0EFF               	movlw	255
  4492  000DB8  6E1D               	movwf	??_fillRectangle& (0+255),c
  4493  000DBA  0EFF               	movlw	255
  4494  000DBC  6E1E               	movwf	(??_fillRectangle+1)& (0+255),c
  4495  000DBE  501A               	movf	fillRectangle@h,w,c
  4496  000DC0  C018  F01F         	movff	fillRectangle@y,??_fillRectangle+2
  4497  000DC4  6A20               	clrf	(??_fillRectangle+3)& (0+255),c
  4498  000DC6  261F               	addwf	??_fillRectangle+2,f,c
  4499  000DC8  0E00               	movlw	0
  4500  000DCA  2220               	addwfc	??_fillRectangle+3,f,c
  4501  000DCC  501D               	movf	??_fillRectangle,w,c
  4502  000DCE  261F               	addwf	??_fillRectangle+2,f,c
  4503  000DD0  501E               	movf	??_fillRectangle+1,w,c
  4504  000DD2  2220               	addwfc	??_fillRectangle+3,f,c
  4505  000DD4  BE20               	btfsc	??_fillRectangle+3,7,c
  4506  000DD6  D00B               	goto	l3504
  4507  000DD8  5020               	movf	??_fillRectangle+3,w,c
  4508  000DDA  E104               	bnz	u2410
  4509  000DDC  0EA0               	movlw	160
  4510  000DDE  5C1F               	subwf	??_fillRectangle+2,w,c
  4511  000DE0  A0D8               	btfss	status,0,c
  4512  000DE2  D005               	goto	l3504
  4513  000DE4                     u2410:
  4514                           
  4515                           ;ST7735_TFT.c: 509: h = 160 - y;
  4516  000DE4  5018               	movf	fillRectangle@y,w,c
  4517  000DE6  0800               	sublw	0
  4518  000DE8  0FA0               	addlw	160
  4519  000DEA  6E1A               	movwf	fillRectangle@h,c
  4520  000DEC  D000               	goto	l3504
  4521  000DEE                     l3504:
  4522                           
  4523                           ;ST7735_TFT.c: 510: setAddrWindow(x, y, x+w-1, y+h-1);
  4524  000DEE  C018  F014         	movff	fillRectangle@y,setAddrWindow@y0
  4525  000DF2  5023               	movf	fillRectangle@x,w,c
  4526  000DF4  2419               	addwf	fillRectangle@w,w,c
  4527  000DF6  6E1D               	movwf	??_fillRectangle& (0+255),c
  4528  000DF8  041D               	decf	??_fillRectangle,w,c
  4529  000DFA  6E15               	movwf	setAddrWindow@x1,c
  4530  000DFC  5018               	movf	fillRectangle@y,w,c
  4531  000DFE  241A               	addwf	fillRectangle@h,w,c
  4532  000E00  6E1E               	movwf	(??_fillRectangle+1)& (0+255),c
  4533  000E02  041E               	decf	??_fillRectangle+1,w,c
  4534  000E04  6E16               	movwf	setAddrWindow@y1,c
  4535  000E06  5023               	movf	fillRectangle@x,w,c
  4536  000E08  ECEF  F009         	call	_setAddrWindow
  4537                           
  4538                           ;ST7735_TFT.c: 511: hi = color >> 8; lo = color;
  4539  000E0C  501C               	movf	fillRectangle@color+1,w,c
  4540  000E0E  6E21               	movwf	fillRectangle@hi,c
  4541  000E10  C01B  F022         	movff	fillRectangle@color,fillRectangle@lo
  4542                           
  4543                           ;ST7735_TFT.c: 512: PORTCbits.RC2 = 1;
  4544  000E14  8482               	bsf	3970,2,c	;volatile
  4545                           
  4546                           ;ST7735_TFT.c: 513: PORTCbits.RC4 = 0;
  4547  000E16  9882               	bcf	3970,4,c	;volatile
  4548                           
  4549                           ;ST7735_TFT.c: 515: for(y=h; y>0; y--) {
  4550  000E18  C01A  F018         	movff	fillRectangle@h,fillRectangle@y
  4551  000E1C                     l3516:
  4552  000E1C  5018               	movf	fillRectangle@y,w,c
  4553  000E1E  B4D8               	btfsc	status,2,c
  4554  000E20  D013               	goto	l152
  4555  000E22  D001               	goto	l151
  4556  000E24  D011               	goto	l152
  4557  000E26                     l151:
  4558                           
  4559                           ;ST7735_TFT.c: 516: for(x = w; x > 0; x--) {
  4560  000E26  C019  F023         	movff	fillRectangle@w,fillRectangle@x
  4561  000E2A                     l3520:
  4562  000E2A  5023               	movf	fillRectangle@x,w,c
  4563  000E2C  B4D8               	btfsc	status,2,c
  4564  000E2E  D00A               	goto	l3530
  4565  000E30  D001               	goto	l3524
  4566  000E32  D008               	goto	l3530
  4567  000E34                     l3524:
  4568                           
  4569                           ;ST7735_TFT.c: 517: spiwrite(hi);
  4570  000E34  5021               	movf	fillRectangle@hi,w,c
  4571  000E36  EC19  F00B         	call	_spiwrite
  4572                           
  4573                           ;ST7735_TFT.c: 518: spiwrite(lo);
  4574  000E3A  5022               	movf	fillRectangle@lo,w,c
  4575  000E3C  EC19  F00B         	call	_spiwrite
  4576  000E40  0623               	decf	fillRectangle@x,f,c
  4577  000E42  D7F3               	goto	l3520
  4578  000E44                     l3530:
  4579  000E44  0618               	decf	fillRectangle@y,f,c
  4580  000E46  D7EA               	goto	l3516
  4581  000E48                     l152:
  4582                           
  4583                           ;ST7735_TFT.c: 519: }
  4584                           ;ST7735_TFT.c: 520: }
  4585                           ;ST7735_TFT.c: 521: PORTCbits.RC4 = 1;
  4586  000E48  8882               	bsf	3970,4,c	;volatile
  4587  000E4A                     l148:
  4588  000E4A  0012               	return		;funcret
  4589  000E4C                     __end_of_fillRectangle:
  4590                           	opt stack 0
  4591                           tblptru	equ	0xFF8
  4592                           tblptrh	equ	0xFF7
  4593                           tblptrl	equ	0xFF6
  4594                           tablat	equ	0xFF5
  4595                           prodh	equ	0xFF4
  4596                           prodl	equ	0xFF3
  4597                           intcon	equ	0xFF2
  4598                           intcon2	equ	0xFF1
  4599                           postinc0	equ	0xFEE
  4600                           wreg	equ	0xFE8
  4601                           postdec1	equ	0xFE5
  4602                           fsr1l	equ	0xFE1
  4603                           indf2	equ	0xFDF
  4604                           postinc2	equ	0xFDE
  4605                           postdec2	equ	0xFDD
  4606                           fsr2h	equ	0xFDA
  4607                           fsr2l	equ	0xFD9
  4608                           status	equ	0xFD8
  4609                           
  4610 ;; *************** function _drawtext *****************
  4611 ;; Defined at:
  4612 ;;		line 473 in file "ST7735_TFT.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  x               1    wreg     unsigned char 
  4615 ;;  y               1   56[COMRAM] unsigned char 
  4616 ;;  _text           2   57[COMRAM] PTR unsigned char 
  4617 ;;		 -> NULL(0), buffer(31), txt1(84), 
  4618 ;;  color           2   59[COMRAM] unsigned int 
  4619 ;;  bg              2   61[COMRAM] unsigned int 
  4620 ;;  size            1   63[COMRAM] unsigned char 
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;  x               1    0[BANK0 ] unsigned char 
  4623 ;;  i               2    3[BANK0 ] unsigned int 
  4624 ;;  textsize        2    1[BANK0 ] unsigned int 
  4625 ;;  cursor_x        1    6[BANK0 ] unsigned char 
  4626 ;;  cursor_y        1    5[BANK0 ] unsigned char 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;		None               void
  4629 ;; Registers used:
  4630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4636 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4637 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4638 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4639 ;;      Totals:        10       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4640 ;;Total ram usage:       17 bytes
  4641 ;; Hardware stack levels used:    1
  4642 ;; Hardware stack levels required when called:    9
  4643 ;; This function calls:
  4644 ;;		_drawChar
  4645 ;;		_strlen
  4646 ;; This function is called by:
  4647 ;;		_main
  4648 ;;		_Initialize_Screen
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           	psect	text18
  4653  000B74                     __ptext18:
  4654                           	opt stack 0
  4655  000B74                     _drawtext:
  4656                           	opt stack 21
  4657                           
  4658                           ;incstack = 0
  4659                           ;drawtext@x stored from wreg
  4660  000B74  0100               	movlb	0	; () banked
  4661  000B76  6FE9               	movwf	drawtext@x& (0+255),b
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;ST7735_TFT.c: 475: unsigned char cursor_x, cursor_y;
  4665                           ;ST7735_TFT.c: 476: unsigned int textsize, i;
  4666                           ;ST7735_TFT.c: 477: cursor_x = x, cursor_y = y;
  4667  000B78  C0E9  F0EF         	movff	drawtext@x,drawtext@cursor_x
  4668                           
  4669                           ; BSR set to: 0
  4670  000B7C  C039  F0EE         	movff	drawtext@y,drawtext@cursor_y
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;ST7735_TFT.c: 478: textsize = strlen(_text);
  4674  000B80  C03A  F011         	movff	drawtext@_text,strlen@s
  4675  000B84  C03B  F012         	movff	drawtext@_text+1,strlen@s+1
  4676  000B88  EC3B  F00A         	call	_strlen	;wreg free
  4677  000B8C  C011  F0EA         	movff	?_strlen,drawtext@textsize
  4678  000B90  C012  F0EB         	movff	?_strlen+1,drawtext@textsize+1
  4679                           
  4680                           ;ST7735_TFT.c: 479: for(i = 0; i < textsize; i++){
  4681  000B94  0E00               	movlw	0
  4682  000B96  0100               	movlb	0	; () banked
  4683  000B98  6FED               	movwf	(drawtext@i+1)& (0+255),b
  4684  000B9A  0E00               	movlw	0
  4685  000B9C  6FEC               	movwf	drawtext@i& (0+255),b
  4686  000B9E  D064               	goto	l3574
  4687  000BA0                     l3548:
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;ST7735_TFT.c: 480: if(wrap && ((cursor_x + size * 5) > 128)){
  4691  000BA0  5059               	movf	_wrap,w,c
  4692  000BA2  B4D8               	btfsc	status,2,c
  4693  000BA4  D034               	goto	l3564
  4694                           
  4695                           ; BSR set to: 0
  4696  000BA6  5040               	movf	drawtext@size,w,c
  4697  000BA8  0D05               	mullw	5
  4698  000BAA  0100               	movlb	0	; () banked
  4699  000BAC  51EF               	movf	drawtext@cursor_x& (0+255),w,b
  4700  000BAE  6E41               	movwf	??_drawtext& (0+255),c
  4701  000BB0  6A42               	clrf	(??_drawtext+1)& (0+255),c
  4702  000BB2  50F3               	movf	prodl,w,c
  4703  000BB4  2641               	addwf	??_drawtext,f,c
  4704  000BB6  50F4               	movf	prodh,w,c
  4705  000BB8  2242               	addwfc	??_drawtext+1,f,c
  4706  000BBA  BE42               	btfsc	??_drawtext+1,7,c
  4707  000BBC  D028               	goto	l3564
  4708  000BBE  5042               	movf	??_drawtext+1,w,c
  4709  000BC0  E104               	bnz	u2470
  4710  000BC2  0E81               	movlw	129
  4711  000BC4  5C41               	subwf	??_drawtext,w,c
  4712  000BC6  A0D8               	btfss	status,0,c
  4713  000BC8  D022               	goto	l3564
  4714  000BCA                     u2470:
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;ST7735_TFT.c: 481: cursor_x = 0;
  4718  000BCA  0E00               	movlw	0
  4719  000BCC  0100               	movlb	0	; () banked
  4720  000BCE  6FEF               	movwf	drawtext@cursor_x& (0+255),b
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;ST7735_TFT.c: 482: cursor_y = cursor_y + size * 7 + 3 ;
  4724  000BD0  5040               	movf	drawtext@size,w,c
  4725  000BD2  0D07               	mullw	7
  4726  000BD4  50F3               	movf	prodl,w,c
  4727  000BD6  0100               	movlb	0	; () banked
  4728  000BD8  25EE               	addwf	drawtext@cursor_y& (0+255),w,b
  4729  000BDA  0F03               	addlw	3
  4730  000BDC  0100               	movlb	0	; () banked
  4731  000BDE  6FEE               	movwf	drawtext@cursor_y& (0+255),b
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;ST7735_TFT.c: 483: if(cursor_y > 160) cursor_y = 160;
  4735  000BE0  0EA0               	movlw	160
  4736  000BE2  0100               	movlb	0	; () banked
  4737  000BE4  65EE               	cpfsgt	drawtext@cursor_y& (0+255),b
  4738  000BE6  D004               	goto	l3560
  4739                           
  4740                           ; BSR set to: 0
  4741  000BE8  0EA0               	movlw	160
  4742  000BEA  0100               	movlb	0	; () banked
  4743  000BEC  6FEE               	movwf	drawtext@cursor_y& (0+255),b
  4744  000BEE  D000               	goto	l3560
  4745  000BF0                     l3560:
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;ST7735_TFT.c: 484: if(_text[i] == 0x20) goto _skip; }
  4749  000BF0  0100               	movlb	0	; () banked
  4750  000BF2  51EC               	movf	drawtext@i& (0+255),w,b
  4751  000BF4  243A               	addwf	drawtext@_text,w,c
  4752  000BF6  6ED9               	movwf	fsr2l,c
  4753  000BF8  0100               	movlb	0	; () banked
  4754  000BFA  51ED               	movf	(drawtext@i+1)& (0+255),w,b
  4755  000BFC  203B               	addwfc	drawtext@_text+1,w,c
  4756  000BFE  6EDA               	movwf	fsr2h,c
  4757  000C00  0E20               	movlw	32
  4758  000C02  18DE               	xorwf	postinc2,w,c
  4759  000C04  B4D8               	btfsc	status,2,c
  4760  000C06  D02C               	goto	l3572
  4761  000C08  D002               	goto	l3564
  4762                           
  4763                           ; BSR set to: 0
  4764  000C0A  D02A               	goto	l3572
  4765                           
  4766                           ; BSR set to: 0
  4767  000C0C  D000               	goto	l3564
  4768  000C0E                     l3564:
  4769                           
  4770                           ; BSR set to: 0
  4771                           ;ST7735_TFT.c: 485: drawChar(cursor_x, cursor_y, _text[i], color, bg, size);
  4772  000C0E  C0EE  F02E         	movff	drawtext@cursor_y,drawChar@y
  4773  000C12  0100               	movlb	0	; () banked
  4774  000C14  51EC               	movf	drawtext@i& (0+255),w,b
  4775  000C16  243A               	addwf	drawtext@_text,w,c
  4776  000C18  6ED9               	movwf	fsr2l,c
  4777  000C1A  0100               	movlb	0	; () banked
  4778  000C1C  51ED               	movf	(drawtext@i+1)& (0+255),w,b
  4779  000C1E  203B               	addwfc	drawtext@_text+1,w,c
  4780  000C20  6EDA               	movwf	fsr2h,c
  4781  000C22  50DF               	movf	indf2,w,c
  4782  000C24  6E2F               	movwf	drawChar@c,c
  4783  000C26  C03C  F030         	movff	drawtext@color,drawChar@color
  4784  000C2A  C03D  F031         	movff	drawtext@color+1,drawChar@color+1
  4785  000C2E  C03E  F032         	movff	drawtext@bg,drawChar@bg
  4786  000C32  C03F  F033         	movff	drawtext@bg+1,drawChar@bg+1
  4787  000C36  C040  F034         	movff	drawtext@size,drawChar@size
  4788  000C3A  0100               	movlb	0	; () banked
  4789  000C3C  51EF               	movf	drawtext@cursor_x& (0+255),w,b
  4790  000C3E  ECEB  F003         	call	_drawChar
  4791                           
  4792                           ;ST7735_TFT.c: 486: cursor_x = cursor_x + size * 6;
  4793  000C42  5040               	movf	drawtext@size,w,c
  4794  000C44  0D06               	mullw	6
  4795  000C46  50F3               	movf	prodl,w,c
  4796  000C48  0100               	movlb	0	; () banked
  4797  000C4A  25EF               	addwf	drawtext@cursor_x& (0+255),w,b
  4798  000C4C  0100               	movlb	0	; () banked
  4799  000C4E  6FEF               	movwf	drawtext@cursor_x& (0+255),b
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;ST7735_TFT.c: 487: if(cursor_x > 128) cursor_x = 128;
  4803  000C50  0E80               	movlw	128
  4804  000C52  0100               	movlb	0	; () banked
  4805  000C54  65EF               	cpfsgt	drawtext@cursor_x& (0+255),b
  4806  000C56  D004               	goto	l3572
  4807                           
  4808                           ; BSR set to: 0
  4809  000C58  0E80               	movlw	128
  4810  000C5A  0100               	movlb	0	; () banked
  4811  000C5C  6FEF               	movwf	drawtext@cursor_x& (0+255),b
  4812                           
  4813                           ; BSR set to: 0
  4814  000C5E  D000               	goto	l3572
  4815  000C60                     l3572:
  4816                           
  4817                           ; BSR set to: 0
  4818  000C60  0100               	movlb	0	; () banked
  4819  000C62  4BEC               	infsnz	drawtext@i& (0+255),f,b
  4820  000C64  2BED               	incf	(drawtext@i+1)& (0+255),f,b
  4821  000C66  D000               	goto	l3574
  4822  000C68                     l3574:
  4823                           
  4824                           ; BSR set to: 0
  4825  000C68  0100               	movlb	0	; () banked
  4826  000C6A  51EA               	movf	drawtext@textsize& (0+255),w,b
  4827  000C6C  0100               	movlb	0	; () banked
  4828  000C6E  5DEC               	subwf	drawtext@i& (0+255),w,b
  4829  000C70  0100               	movlb	0	; () banked
  4830  000C72  51EB               	movf	(drawtext@textsize+1)& (0+255),w,b
  4831  000C74  0100               	movlb	0	; () banked
  4832  000C76  59ED               	subwfb	(drawtext@i+1)& (0+255),w,b
  4833  000C78  A0D8               	btfss	status,0,c
  4834  000C7A  D792               	goto	l3548
  4835                           
  4836                           ; BSR set to: 0
  4837                           
  4838                           ; BSR set to: 0
  4839  000C7C  0012               	return		;funcret
  4840  000C7E                     __end_of_drawtext:
  4841                           	opt stack 0
  4842                           tblptru	equ	0xFF8
  4843                           tblptrh	equ	0xFF7
  4844                           tblptrl	equ	0xFF6
  4845                           tablat	equ	0xFF5
  4846                           prodh	equ	0xFF4
  4847                           prodl	equ	0xFF3
  4848                           intcon	equ	0xFF2
  4849                           intcon2	equ	0xFF1
  4850                           postinc0	equ	0xFEE
  4851                           wreg	equ	0xFE8
  4852                           postdec1	equ	0xFE5
  4853                           fsr1l	equ	0xFE1
  4854                           indf2	equ	0xFDF
  4855                           postinc2	equ	0xFDE
  4856                           postdec2	equ	0xFDD
  4857                           fsr2h	equ	0xFDA
  4858                           fsr2l	equ	0xFD9
  4859                           status	equ	0xFD8
  4860                           
  4861 ;; *************** function _strlen *****************
  4862 ;; Defined at:
  4863 ;;		line 4 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\strlen.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;  s               2   16[COMRAM] PTR const unsigned char 
  4866 ;;		 -> NULL(0), buffer(31), txt1(84), 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  cp              2   20[COMRAM] PTR const unsigned char 
  4869 ;;		 -> NULL(0), buffer(31), txt1(84), 
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  2   16[COMRAM] unsigned int 
  4872 ;; Registers used:
  4873 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4879 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4881 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4882 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4883 ;;Total ram usage:        6 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; Hardware stack levels required when called:    3
  4886 ;; This function calls:
  4887 ;;		Nothing
  4888 ;; This function is called by:
  4889 ;;		_drawtext
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	text19
  4894  001476                     __ptext19:
  4895                           	opt stack 0
  4896  001476                     _strlen:
  4897                           	opt stack 26
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;incstack = 0
  4901  001476  C011  F015         	movff	strlen@s,strlen@cp
  4902  00147A  C012  F016         	movff	strlen@s+1,strlen@cp+1
  4903  00147E  D003               	goto	l3488
  4904  001480                     l3486:
  4905  001480  4A15               	infsnz	strlen@cp,f,c
  4906  001482  2A16               	incf	strlen@cp+1,f,c
  4907  001484  D000               	goto	l3488
  4908  001486                     l3488:
  4909  001486  C015  FFD9         	movff	strlen@cp,fsr2l
  4910  00148A  C016  FFDA         	movff	strlen@cp+1,fsr2h
  4911  00148E  50DF               	movf	indf2,w,c
  4912  001490  A4D8               	btfss	status,2,c
  4913  001492  D7F6               	goto	l3486
  4914  001494  C011  F013         	movff	strlen@s,??_strlen
  4915  001498  C012  F014         	movff	strlen@s+1,??_strlen+1
  4916  00149C  1E13               	comf	??_strlen,f,c
  4917  00149E  1E14               	comf	??_strlen+1,f,c
  4918  0014A0  4A13               	infsnz	??_strlen,f,c
  4919  0014A2  2A14               	incf	??_strlen+1,f,c
  4920  0014A4  5015               	movf	strlen@cp,w,c
  4921  0014A6  2413               	addwf	??_strlen,w,c
  4922  0014A8  6E11               	movwf	?_strlen,c
  4923  0014AA  5016               	movf	strlen@cp+1,w,c
  4924  0014AC  2014               	addwfc	??_strlen+1,w,c
  4925  0014AE  6E12               	movwf	?_strlen+1,c
  4926  0014B0  D000               	goto	l1072
  4927  0014B2                     l1072:
  4928  0014B2  0012               	return		;funcret
  4929  0014B4                     __end_of_strlen:
  4930                           	opt stack 0
  4931                           tblptru	equ	0xFF8
  4932                           tblptrh	equ	0xFF7
  4933                           tblptrl	equ	0xFF6
  4934                           tablat	equ	0xFF5
  4935                           prodh	equ	0xFF4
  4936                           prodl	equ	0xFF3
  4937                           intcon	equ	0xFF2
  4938                           intcon2	equ	0xFF1
  4939                           postinc0	equ	0xFEE
  4940                           wreg	equ	0xFE8
  4941                           postdec1	equ	0xFE5
  4942                           fsr1l	equ	0xFE1
  4943                           indf2	equ	0xFDF
  4944                           postinc2	equ	0xFDE
  4945                           postdec2	equ	0xFDD
  4946                           fsr2h	equ	0xFDA
  4947                           fsr2l	equ	0xFD9
  4948                           status	equ	0xFD8
  4949                           
  4950 ;; *************** function _drawChar *****************
  4951 ;; Defined at:
  4952 ;;		line 446 in file "ST7735_TFT.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;  x               1    wreg     unsigned char 
  4955 ;;  y               1   45[COMRAM] unsigned char 
  4956 ;;  c               1   46[COMRAM] unsigned char 
  4957 ;;  color           2   47[COMRAM] unsigned int 
  4958 ;;  bg              2   49[COMRAM] unsigned int 
  4959 ;;  size            1   51[COMRAM] unsigned char 
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  x               1   53[COMRAM] unsigned char 
  4962 ;;  line            1   52[COMRAM] unsigned char 
  4963 ;;  i               1   55[COMRAM] unsigned char 
  4964 ;;  j               1   54[COMRAM] unsigned char 
  4965 ;; Return value:  Size  Location     Type
  4966 ;;		None               void
  4967 ;; Registers used:
  4968 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4974 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4975 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4977 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4978 ;;Total ram usage:       11 bytes
  4979 ;; Hardware stack levels used:    1
  4980 ;; Hardware stack levels required when called:    8
  4981 ;; This function calls:
  4982 ;;		___wmul
  4983 ;;		_drawPixel
  4984 ;;		_fillRect
  4985 ;; This function is called by:
  4986 ;;		_drawtext
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           	psect	text20
  4991  0007D6                     __ptext20:
  4992                           	opt stack 0
  4993  0007D6                     _drawChar:
  4994                           	opt stack 21
  4995                           
  4996                           ;incstack = 0
  4997                           ;drawChar@x stored from wreg
  4998  0007D6  6E36               	movwf	drawChar@x,c
  4999                           
  5000                           ;ST7735_TFT.c: 448: char i, j;
  5001                           ;ST7735_TFT.c: 449: if((x >= 128) || (y >= 160))
  5002  0007D8  0E80               	movlw	128
  5003  0007DA  6036               	cpfslt	drawChar@x,c
  5004  0007DC  D0A6               	goto	l111
  5005  0007DE  0E9F               	movlw	159
  5006  0007E0  642E               	cpfsgt	drawChar@y,c
  5007  0007E2  D001               	goto	l3434
  5008                           
  5009                           ;ST7735_TFT.c: 450: return;
  5010  0007E4  D0A2               	goto	l111
  5011  0007E6                     l3434:
  5012                           
  5013                           ;ST7735_TFT.c: 451: if(size < 1) size = 1;
  5014  0007E6  5034               	movf	drawChar@size,w,c
  5015  0007E8  A4D8               	btfss	status,2,c
  5016  0007EA  D003               	goto	l3438
  5017  0007EC  0E01               	movlw	1
  5018  0007EE  6E34               	movwf	drawChar@size,c
  5019  0007F0  D000               	goto	l3438
  5020  0007F2                     l3438:
  5021                           
  5022                           ;ST7735_TFT.c: 452: if((c < ' ') || (c > '~'))
  5023  0007F2  0E1F               	movlw	31
  5024  0007F4  642F               	cpfsgt	drawChar@c,c
  5025  0007F6  D004               	goto	l3442
  5026  0007F8  0E7E               	movlw	126
  5027  0007FA  642F               	cpfsgt	drawChar@c,c
  5028  0007FC  D003               	goto	l113
  5029  0007FE  D000               	goto	l3442
  5030  000800                     l3442:
  5031                           
  5032                           ;ST7735_TFT.c: 453: c = '?';
  5033  000800  0E3F               	movlw	63
  5034  000802  6E2F               	movwf	drawChar@c,c
  5035  000804                     l113:
  5036                           
  5037                           ;ST7735_TFT.c: 454: for(i=0; i<5; i++ ) {
  5038  000804  0E00               	movlw	0
  5039  000806  6E38               	movwf	drawChar@i,c
  5040  000808                     l3444:
  5041  000808  0E04               	movlw	4
  5042  00080A  6438               	cpfsgt	drawChar@i,c
  5043  00080C  D001               	goto	l3448
  5044  00080E  D08D               	goto	l111
  5045  000810                     l3448:
  5046                           
  5047                           ;ST7735_TFT.c: 455: unsigned char line;
  5048                           ;ST7735_TFT.c: 456: if(c < 'S')
  5049  000810  0E53               	movlw	83
  5050  000812  602F               	cpfslt	drawChar@c,c
  5051  000814  D015               	goto	l3452
  5052                           
  5053                           ;ST7735_TFT.c: 457: line = font[(c - 32)*5 + i];
  5054  000816  0EE0               	movlw	224
  5055  000818  242F               	addwf	drawChar@c,w,c
  5056  00081A  6E11               	movwf	___wmul@multiplier,c
  5057  00081C  6A12               	clrf	___wmul@multiplier+1,c
  5058  00081E  0EFF               	movlw	255
  5059  000820  2212               	addwfc	___wmul@multiplier+1,f,c
  5060  000822  0E00               	movlw	0
  5061  000824  6E14               	movwf	___wmul@multiplicand+1,c
  5062  000826  0E05               	movlw	5
  5063  000828  6E13               	movwf	___wmul@multiplicand,c
  5064  00082A  ECBF  F00A         	call	___wmul	;wreg free
  5065  00082E  5038               	movf	drawChar@i,w,c
  5066  000830  2611               	addwf	?___wmul,f,c
  5067  000832  0E00               	movlw	0
  5068  000834  2212               	addwfc	?___wmul+1,f,c
  5069  000836  0EC1               	movlw	low _font
  5070  000838  2411               	addwf	?___wmul,w,c
  5071  00083A  6EF6               	movwf	tblptrl,c
  5072  00083C  0EFD               	movlw	high _font
  5073  00083E  D014               	goto	L14
  5074  000840                     l3452:
  5075                           
  5076                           ;ST7735_TFT.c: 458: else
  5077                           ;ST7735_TFT.c: 459: line = font2[(c - 'S')*5 + i];
  5078  000840  0EAD               	movlw	173
  5079  000842  242F               	addwf	drawChar@c,w,c
  5080  000844  6E11               	movwf	___wmul@multiplier,c
  5081  000846  6A12               	clrf	___wmul@multiplier+1,c
  5082  000848  0EFF               	movlw	255
  5083  00084A  2212               	addwfc	___wmul@multiplier+1,f,c
  5084  00084C  0E00               	movlw	0
  5085  00084E  6E14               	movwf	___wmul@multiplicand+1,c
  5086  000850  0E05               	movlw	5
  5087  000852  6E13               	movwf	___wmul@multiplicand,c
  5088  000854  ECBF  F00A         	call	___wmul	;wreg free
  5089  000858  5038               	movf	drawChar@i,w,c
  5090  00085A  2611               	addwf	?___wmul,f,c
  5091  00085C  0E00               	movlw	0
  5092  00085E  2212               	addwfc	?___wmul+1,f,c
  5093  000860  0EC0               	movlw	low _font2
  5094  000862  2411               	addwf	?___wmul,w,c
  5095  000864  6EF6               	movwf	tblptrl,c
  5096  000866  0EFE               	movlw	high _font2
  5097  000868                     L14:
  5098  000868  2012               	addwfc	?___wmul+1,w,c
  5099  00086A  6EF7               	movwf	tblptrh,c
  5100  00086C                     	if	0	;There are less than 3 active tblptr bytes
  5101  00086C                     	endif
  5102  00086C  0008               	tblrd		*
  5103  00086E  CFF5 F035          	movff	tablat,drawChar@line
  5104  000872  D000               	goto	l3454
  5105  000874                     l3454:
  5106                           
  5107                           ;ST7735_TFT.c: 460: for(j=0; j<7; j++, line >>= 1) {
  5108  000874  0E00               	movlw	0
  5109  000876  6E37               	movwf	drawChar@j,c
  5110  000878                     l3456:
  5111  000878  0E06               	movlw	6
  5112  00087A  6437               	cpfsgt	drawChar@j,c
  5113  00087C  D001               	goto	l120
  5114  00087E  D053               	goto	l3480
  5115  000880                     l120:
  5116                           
  5117                           ;ST7735_TFT.c: 461: if(line & 0x01) {
  5118  000880  A035               	btfss	drawChar@line,0,c
  5119  000882  D023               	goto	l3466
  5120                           
  5121                           ;ST7735_TFT.c: 462: if(size == 1) drawPixel(x+i, y+j, color);
  5122  000884  0434               	decf	drawChar@size,w,c
  5123  000886  A4D8               	btfss	status,2,c
  5124  000888  D00C               	goto	l3464
  5125  00088A  502E               	movf	drawChar@y,w,c
  5126  00088C  2437               	addwf	drawChar@j,w,c
  5127  00088E  6E18               	movwf	drawPixel@y,c
  5128  000890  C030  F019         	movff	drawChar@color,drawPixel@color
  5129  000894  C031  F01A         	movff	drawChar@color+1,drawPixel@color+1
  5130  000898  5036               	movf	drawChar@x,w,c
  5131  00089A  2438               	addwf	drawChar@i,w,c
  5132  00089C  EC92  F00A         	call	_drawPixel
  5133  0008A0  D03E               	goto	l3474
  5134  0008A2                     l3464:
  5135                           
  5136                           ;ST7735_TFT.c: 463: else fillRect(x+(i*size), y+(j*size), size, size, color);
  5137  0008A2  5037               	movf	drawChar@j,w,c
  5138  0008A4  0234               	mulwf	drawChar@size,c
  5139  0008A6  50F3               	movf	prodl,w,c
  5140  0008A8  242E               	addwf	drawChar@y,w,c
  5141  0008AA  6E23               	movwf	fillRect@y,c
  5142  0008AC  C034  F024         	movff	drawChar@size,fillRect@w
  5143  0008B0  C034  F025         	movff	drawChar@size,fillRect@h
  5144  0008B4  C030  F026         	movff	drawChar@color,fillRect@color
  5145  0008B8  C031  F027         	movff	drawChar@color+1,fillRect@color+1
  5146  0008BC  5038               	movf	drawChar@i,w,c
  5147  0008BE  0234               	mulwf	drawChar@size,c
  5148  0008C0  50F3               	movf	prodl,w,c
  5149  0008C2  2436               	addwf	drawChar@x,w,c
  5150  0008C4  EC16  F00A         	call	_fillRect
  5151                           
  5152                           ;ST7735_TFT.c: 464: }
  5153  0008C8  D02A               	goto	l3474
  5154  0008CA                     l3466:
  5155                           
  5156                           ;ST7735_TFT.c: 465: else if(bg != color) {
  5157  0008CA  5030               	movf	drawChar@color,w,c
  5158  0008CC  1832               	xorwf	drawChar@bg,w,c
  5159  0008CE  E104               	bnz	u2330
  5160  0008D0  5031               	movf	drawChar@color+1,w,c
  5161  0008D2  1833               	xorwf	drawChar@bg+1,w,c
  5162  0008D4  B4D8               	btfsc	status,2,c
  5163  0008D6  D023               	goto	l3474
  5164  0008D8                     u2330:
  5165                           
  5166                           ;ST7735_TFT.c: 466: if(size == 1) drawPixel(x+i, y+j, bg);
  5167  0008D8  0434               	decf	drawChar@size,w,c
  5168  0008DA  A4D8               	btfss	status,2,c
  5169  0008DC  D00C               	goto	l3472
  5170  0008DE  502E               	movf	drawChar@y,w,c
  5171  0008E0  2437               	addwf	drawChar@j,w,c
  5172  0008E2  6E18               	movwf	drawPixel@y,c
  5173  0008E4  C032  F019         	movff	drawChar@bg,drawPixel@color
  5174  0008E8  C033  F01A         	movff	drawChar@bg+1,drawPixel@color+1
  5175  0008EC  5036               	movf	drawChar@x,w,c
  5176  0008EE  2438               	addwf	drawChar@i,w,c
  5177  0008F0  EC92  F00A         	call	_drawPixel
  5178  0008F4  D014               	goto	l3474
  5179  0008F6                     l3472:
  5180                           
  5181                           ;ST7735_TFT.c: 467: else fillRect(x+i*size, y+j*size, size, size, bg);
  5182  0008F6  5037               	movf	drawChar@j,w,c
  5183  0008F8  0234               	mulwf	drawChar@size,c
  5184  0008FA  50F3               	movf	prodl,w,c
  5185  0008FC  242E               	addwf	drawChar@y,w,c
  5186  0008FE  6E23               	movwf	fillRect@y,c
  5187  000900  C034  F024         	movff	drawChar@size,fillRect@w
  5188  000904  C034  F025         	movff	drawChar@size,fillRect@h
  5189  000908  C032  F026         	movff	drawChar@bg,fillRect@color
  5190  00090C  C033  F027         	movff	drawChar@bg+1,fillRect@color+1
  5191  000910  5038               	movf	drawChar@i,w,c
  5192  000912  0234               	mulwf	drawChar@size,c
  5193  000914  50F3               	movf	prodl,w,c
  5194  000916  2436               	addwf	drawChar@x,w,c
  5195  000918  EC16  F00A         	call	_fillRect
  5196  00091C  D000               	goto	l3474
  5197  00091E                     l3474:
  5198  00091E  2A37               	incf	drawChar@j,f,c
  5199  000920  90D8               	bcf	status,0,c
  5200  000922  3235               	rrcf	drawChar@line,f,c
  5201  000924  D7A9               	goto	l3456
  5202  000926                     l3480:
  5203  000926  2A38               	incf	drawChar@i,f,c
  5204  000928  D76F               	goto	l3444
  5205  00092A                     l111:
  5206  00092A  0012               	return		;funcret
  5207  00092C                     __end_of_drawChar:
  5208                           	opt stack 0
  5209                           tblptru	equ	0xFF8
  5210                           tblptrh	equ	0xFF7
  5211                           tblptrl	equ	0xFF6
  5212                           tablat	equ	0xFF5
  5213                           prodh	equ	0xFF4
  5214                           prodl	equ	0xFF3
  5215                           intcon	equ	0xFF2
  5216                           intcon2	equ	0xFF1
  5217                           postinc0	equ	0xFEE
  5218                           wreg	equ	0xFE8
  5219                           postdec1	equ	0xFE5
  5220                           fsr1l	equ	0xFE1
  5221                           indf2	equ	0xFDF
  5222                           postinc2	equ	0xFDE
  5223                           postdec2	equ	0xFDD
  5224                           fsr2h	equ	0xFDA
  5225                           fsr2l	equ	0xFD9
  5226                           status	equ	0xFD8
  5227                           
  5228 ;; *************** function _fillRect *****************
  5229 ;; Defined at:
  5230 ;;		line 436 in file "ST7735_TFT.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;  x               1    wreg     unsigned char 
  5233 ;;  y               1   34[COMRAM] unsigned char 
  5234 ;;  w               1   35[COMRAM] unsigned char 
  5235 ;;  h               1   36[COMRAM] unsigned char 
  5236 ;;  color           2   37[COMRAM] unsigned int 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;  x               1   42[COMRAM] unsigned char 
  5239 ;;  i               2   43[COMRAM] int 
  5240 ;; Return value:  Size  Location     Type
  5241 ;;		None               void
  5242 ;; Registers used:
  5243 ;;		wreg, status,2, status,0, cstack
  5244 ;; Tracked objects:
  5245 ;;		On entry : 0/0
  5246 ;;		On exit  : 0/0
  5247 ;;		Unchanged: 0/0
  5248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5249 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5250 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5251 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5252 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5253 ;;Total ram usage:       11 bytes
  5254 ;; Hardware stack levels used:    1
  5255 ;; Hardware stack levels required when called:    7
  5256 ;; This function calls:
  5257 ;;		_drawFastVLine
  5258 ;; This function is called by:
  5259 ;;		_drawChar
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263                           	psect	text21
  5264  00142C                     __ptext21:
  5265                           	opt stack 0
  5266  00142C                     _fillRect:
  5267                           	opt stack 21
  5268                           
  5269                           ;incstack = 0
  5270                           ;fillRect@x stored from wreg
  5271  00142C  6E2B               	movwf	fillRect@x,c
  5272                           
  5273                           ;ST7735_TFT.c: 438: signed int i;
  5274                           ;ST7735_TFT.c: 440: for (i = x; i < x + w; i++)
  5275  00142E  C02B  F02C         	movff	fillRect@x,fillRect@i
  5276  001432  6A2D               	clrf	fillRect@i+1,c
  5277  001434  D00E               	goto	l3336
  5278  001436                     l3332:
  5279                           
  5280                           ;ST7735_TFT.c: 441: {
  5281                           ;ST7735_TFT.c: 442: drawFastVLine(i, y, h, color);
  5282  001436  C023  F018         	movff	fillRect@y,drawFastVLine@y
  5283  00143A  C025  F019         	movff	fillRect@h,drawFastVLine@h
  5284  00143E  C026  F01A         	movff	fillRect@color,drawFastVLine@color
  5285  001442  C027  F01B         	movff	fillRect@color+1,drawFastVLine@color+1
  5286  001446  502C               	movf	fillRect@i,w,c
  5287  001448  ECB3  F007         	call	_drawFastVLine
  5288  00144C  4A2C               	infsnz	fillRect@i,f,c
  5289  00144E  2A2D               	incf	fillRect@i+1,f,c
  5290  001450  D000               	goto	l3336
  5291  001452                     l3336:
  5292  001452  5024               	movf	fillRect@w,w,c
  5293  001454  C02B  F028         	movff	fillRect@x,??_fillRect
  5294  001458  6A29               	clrf	(??_fillRect+1)& (0+255),c
  5295  00145A  2628               	addwf	??_fillRect,f,c
  5296  00145C  0E00               	movlw	0
  5297  00145E  2229               	addwfc	??_fillRect+1,f,c
  5298  001460  5028               	movf	??_fillRect,w,c
  5299  001462  5C2C               	subwf	fillRect@i,w,c
  5300  001464  502D               	movf	fillRect@i+1,w,c
  5301  001466  0A80               	xorlw	128
  5302  001468  6E2A               	movwf	(??_fillRect+2)& (0+255),c
  5303  00146A  5029               	movf	??_fillRect+1,w,c
  5304  00146C  0A80               	xorlw	128
  5305  00146E  582A               	subwfb	(??_fillRect+2)& (0+255),w,c
  5306  001470  A0D8               	btfss	status,0,c
  5307  001472  D7E1               	goto	l3332
  5308  001474  0012               	return		;funcret
  5309  001476                     __end_of_fillRect:
  5310                           	opt stack 0
  5311                           tblptru	equ	0xFF8
  5312                           tblptrh	equ	0xFF7
  5313                           tblptrl	equ	0xFF6
  5314                           tablat	equ	0xFF5
  5315                           prodh	equ	0xFF4
  5316                           prodl	equ	0xFF3
  5317                           intcon	equ	0xFF2
  5318                           intcon2	equ	0xFF1
  5319                           postinc0	equ	0xFEE
  5320                           wreg	equ	0xFE8
  5321                           postdec1	equ	0xFE5
  5322                           fsr1l	equ	0xFE1
  5323                           indf2	equ	0xFDF
  5324                           postinc2	equ	0xFDE
  5325                           postdec2	equ	0xFDD
  5326                           fsr2h	equ	0xFDA
  5327                           fsr2l	equ	0xFD9
  5328                           status	equ	0xFD8
  5329                           
  5330 ;; *************** function _drawFastVLine *****************
  5331 ;; Defined at:
  5332 ;;		line 415 in file "ST7735_TFT.c"
  5333 ;; Parameters:    Size  Location     Type
  5334 ;;  x               1    wreg     unsigned char 
  5335 ;;  y               1   23[COMRAM] unsigned char 
  5336 ;;  h               1   24[COMRAM] unsigned char 
  5337 ;;  color           2   25[COMRAM] unsigned int 
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;  x               1   33[COMRAM] unsigned char 
  5340 ;;  lo              1   32[COMRAM] unsigned char 
  5341 ;;  hi              1   31[COMRAM] unsigned char 
  5342 ;; Return value:  Size  Location     Type
  5343 ;;		None               void
  5344 ;; Registers used:
  5345 ;;		wreg, status,2, status,0, cstack
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5351 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5352 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;Total ram usage:       11 bytes
  5356 ;; Hardware stack levels used:    1
  5357 ;; Hardware stack levels required when called:    6
  5358 ;; This function calls:
  5359 ;;		_setAddrWindow
  5360 ;;		_spiwrite
  5361 ;; This function is called by:
  5362 ;;		_fillRect
  5363 ;;		_fillCircleHelper
  5364 ;;		_fillCircle
  5365 ;;		_drawRect
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           	psect	text22
  5370  000F66                     __ptext22:
  5371                           	opt stack 0
  5372  000F66                     _drawFastVLine:
  5373                           	opt stack 22
  5374                           
  5375                           ;incstack = 0
  5376                           ;drawFastVLine@x stored from wreg
  5377  000F66  6E22               	movwf	drawFastVLine@x,c
  5378                           
  5379                           ;ST7735_TFT.c: 417: unsigned char hi, lo;
  5380                           ;ST7735_TFT.c: 418: if((x >= 128) || (y >= 160))
  5381  000F68  0E80               	movlw	128
  5382  000F6A  6022               	cpfslt	drawFastVLine@x,c
  5383  000F6C  D03F               	goto	l95
  5384  000F6E  0E9F               	movlw	159
  5385  000F70  6418               	cpfsgt	drawFastVLine@y,c
  5386  000F72  D001               	goto	l3282
  5387                           
  5388                           ;ST7735_TFT.c: 419: return;
  5389  000F74  D03B               	goto	l95
  5390  000F76                     l3282:
  5391                           
  5392                           ;ST7735_TFT.c: 420: if((y + h - 1) >= 160)
  5393  000F76  0EFF               	movlw	255
  5394  000F78  6E1C               	movwf	??_drawFastVLine& (0+255),c
  5395  000F7A  0EFF               	movlw	255
  5396  000F7C  6E1D               	movwf	(??_drawFastVLine+1)& (0+255),c
  5397  000F7E  5019               	movf	drawFastVLine@h,w,c
  5398  000F80  C018  F01E         	movff	drawFastVLine@y,??_drawFastVLine+2
  5399  000F84  6A1F               	clrf	(??_drawFastVLine+3)& (0+255),c
  5400  000F86  261E               	addwf	??_drawFastVLine+2,f,c
  5401  000F88  0E00               	movlw	0
  5402  000F8A  221F               	addwfc	??_drawFastVLine+3,f,c
  5403  000F8C  501C               	movf	??_drawFastVLine,w,c
  5404  000F8E  261E               	addwf	??_drawFastVLine+2,f,c
  5405  000F90  501D               	movf	??_drawFastVLine+1,w,c
  5406  000F92  221F               	addwfc	??_drawFastVLine+3,f,c
  5407  000F94  BE1F               	btfsc	??_drawFastVLine+3,7,c
  5408  000F96  D00B               	goto	l3286
  5409  000F98  501F               	movf	??_drawFastVLine+3,w,c
  5410  000F9A  E104               	bnz	u2170
  5411  000F9C  0EA0               	movlw	160
  5412  000F9E  5C1E               	subwf	??_drawFastVLine+2,w,c
  5413  000FA0  A0D8               	btfss	status,0,c
  5414  000FA2  D005               	goto	l3286
  5415  000FA4                     u2170:
  5416                           
  5417                           ;ST7735_TFT.c: 421: h = 160 - y;
  5418  000FA4  5018               	movf	drawFastVLine@y,w,c
  5419  000FA6  0800               	sublw	0
  5420  000FA8  0FA0               	addlw	160
  5421  000FAA  6E19               	movwf	drawFastVLine@h,c
  5422  000FAC  D000               	goto	l3286
  5423  000FAE                     l3286:
  5424                           
  5425                           ;ST7735_TFT.c: 422: hi = color >> 8; lo = color;
  5426  000FAE  501B               	movf	drawFastVLine@color+1,w,c
  5427  000FB0  6E20               	movwf	drawFastVLine@hi,c
  5428  000FB2  C01A  F021         	movff	drawFastVLine@color,drawFastVLine@lo
  5429                           
  5430                           ;ST7735_TFT.c: 423: setAddrWindow(x, y, x, y + h - 1);
  5431  000FB6  C018  F014         	movff	drawFastVLine@y,setAddrWindow@y0
  5432  000FBA  C022  F015         	movff	drawFastVLine@x,setAddrWindow@x1
  5433  000FBE  5018               	movf	drawFastVLine@y,w,c
  5434  000FC0  2419               	addwf	drawFastVLine@h,w,c
  5435  000FC2  6E1C               	movwf	??_drawFastVLine& (0+255),c
  5436  000FC4  041C               	decf	??_drawFastVLine,w,c
  5437  000FC6  6E16               	movwf	setAddrWindow@y1,c
  5438  000FC8  5022               	movf	drawFastVLine@x,w,c
  5439  000FCA  ECEF  F009         	call	_setAddrWindow
  5440                           
  5441                           ;ST7735_TFT.c: 424: PORTCbits.RC2 = 1;
  5442  000FCE  8482               	bsf	3970,2,c	;volatile
  5443                           
  5444                           ;ST7735_TFT.c: 425: PORTCbits.RC4 = 0;
  5445  000FD0  9882               	bcf	3970,4,c	;volatile
  5446                           
  5447                           ;ST7735_TFT.c: 427: while (h--) {
  5448  000FD2  D007               	goto	l3298
  5449  000FD4                     l3296:
  5450                           
  5451                           ;ST7735_TFT.c: 428: spiwrite(hi);
  5452  000FD4  5020               	movf	drawFastVLine@hi,w,c
  5453  000FD6  EC19  F00B         	call	_spiwrite
  5454                           
  5455                           ;ST7735_TFT.c: 429: spiwrite(lo);
  5456  000FDA  5021               	movf	drawFastVLine@lo,w,c
  5457  000FDC  EC19  F00B         	call	_spiwrite
  5458  000FE0  D000               	goto	l3298
  5459  000FE2                     l3298:
  5460  000FE2  0619               	decf	drawFastVLine@h,f,c
  5461  000FE4  2819               	incf	drawFastVLine@h,w,c
  5462  000FE6  A4D8               	btfss	status,2,c
  5463  000FE8  D7F5               	goto	l3296
  5464                           
  5465                           ;ST7735_TFT.c: 430: }
  5466                           ;ST7735_TFT.c: 431: PORTCbits.RC4 = 1;
  5467  000FEA  8882               	bsf	3970,4,c	;volatile
  5468  000FEC                     l95:
  5469  000FEC  0012               	return		;funcret
  5470  000FEE                     __end_of_drawFastVLine:
  5471                           	opt stack 0
  5472                           tblptru	equ	0xFF8
  5473                           tblptrh	equ	0xFF7
  5474                           tblptrl	equ	0xFF6
  5475                           tablat	equ	0xFF5
  5476                           prodh	equ	0xFF4
  5477                           prodl	equ	0xFF3
  5478                           intcon	equ	0xFF2
  5479                           intcon2	equ	0xFF1
  5480                           postinc0	equ	0xFEE
  5481                           wreg	equ	0xFE8
  5482                           postdec1	equ	0xFE5
  5483                           fsr1l	equ	0xFE1
  5484                           indf2	equ	0xFDF
  5485                           postinc2	equ	0xFDE
  5486                           postdec2	equ	0xFDD
  5487                           fsr2h	equ	0xFDA
  5488                           fsr2l	equ	0xFD9
  5489                           status	equ	0xFD8
  5490                           
  5491 ;; *************** function _drawPixel *****************
  5492 ;; Defined at:
  5493 ;;		line 406 in file "ST7735_TFT.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;  x               1    wreg     unsigned char 
  5496 ;;  y               1   23[COMRAM] unsigned char 
  5497 ;;  color           2   24[COMRAM] unsigned int 
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;  x               1   26[COMRAM] unsigned char 
  5500 ;; Return value:  Size  Location     Type
  5501 ;;		None               void
  5502 ;; Registers used:
  5503 ;;		wreg, status,2, status,0, cstack
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5509 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5510 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5512 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5513 ;;Total ram usage:        4 bytes
  5514 ;; Hardware stack levels used:    1
  5515 ;; Hardware stack levels required when called:    6
  5516 ;; This function calls:
  5517 ;;		_setAddrWindow
  5518 ;;		_write_data
  5519 ;; This function is called by:
  5520 ;;		_drawChar
  5521 ;;		_drawCircle
  5522 ;;		_drawCircleHelper
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text23
  5527  001524                     __ptext23:
  5528                           	opt stack 0
  5529  001524                     _drawPixel:
  5530                           	opt stack 22
  5531                           
  5532                           ;incstack = 0
  5533                           ;drawPixel@x stored from wreg
  5534  001524  6E1B               	movwf	drawPixel@x,c
  5535                           
  5536                           ;ST7735_TFT.c: 408: if((x >= 128) || (y >= 160))
  5537  001526  0E80               	movlw	128
  5538  001528  601B               	cpfslt	drawPixel@x,c
  5539  00152A  D013               	goto	l89
  5540  00152C  0E9F               	movlw	159
  5541  00152E  6418               	cpfsgt	drawPixel@y,c
  5542  001530  D001               	goto	l3324
  5543                           
  5544                           ;ST7735_TFT.c: 409: return;
  5545  001532  D00F               	goto	l89
  5546  001534                     l3324:
  5547                           
  5548                           ;ST7735_TFT.c: 410: setAddrWindow(x,y,x+1,y+1);
  5549  001534  C018  F014         	movff	drawPixel@y,setAddrWindow@y0
  5550  001538  281B               	incf	drawPixel@x,w,c
  5551  00153A  6E15               	movwf	setAddrWindow@x1,c
  5552  00153C  2818               	incf	drawPixel@y,w,c
  5553  00153E  6E16               	movwf	setAddrWindow@y1,c
  5554  001540  501B               	movf	drawPixel@x,w,c
  5555  001542  ECEF  F009         	call	_setAddrWindow
  5556                           
  5557                           ;ST7735_TFT.c: 411: write_data(color >> 8);
  5558  001546  501A               	movf	drawPixel@color+1,w,c
  5559  001548  EC35  F00B         	call	_write_data
  5560                           
  5561                           ;ST7735_TFT.c: 412: write_data(color & 0xFF);
  5562  00154C  5019               	movf	drawPixel@color,w,c
  5563  00154E  EC35  F00B         	call	_write_data
  5564  001552                     l89:
  5565  001552  0012               	return		;funcret
  5566  001554                     __end_of_drawPixel:
  5567                           	opt stack 0
  5568                           tblptru	equ	0xFF8
  5569                           tblptrh	equ	0xFF7
  5570                           tblptrl	equ	0xFF6
  5571                           tablat	equ	0xFF5
  5572                           prodh	equ	0xFF4
  5573                           prodl	equ	0xFF3
  5574                           intcon	equ	0xFF2
  5575                           intcon2	equ	0xFF1
  5576                           postinc0	equ	0xFEE
  5577                           wreg	equ	0xFE8
  5578                           postdec1	equ	0xFE5
  5579                           fsr1l	equ	0xFE1
  5580                           indf2	equ	0xFDF
  5581                           postinc2	equ	0xFDE
  5582                           postdec2	equ	0xFDD
  5583                           fsr2h	equ	0xFDA
  5584                           fsr2l	equ	0xFD9
  5585                           status	equ	0xFD8
  5586                           
  5587 ;; *************** function _setAddrWindow *****************
  5588 ;; Defined at:
  5589 ;;		line 391 in file "ST7735_TFT.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;  x0              1    wreg     unsigned char 
  5592 ;;  y0              1   19[COMRAM] unsigned char 
  5593 ;;  x1              1   20[COMRAM] unsigned char 
  5594 ;;  y1              1   21[COMRAM] unsigned char 
  5595 ;; Auto vars:     Size  Location     Type
  5596 ;;  x0              1   22[COMRAM] unsigned char 
  5597 ;; Return value:  Size  Location     Type
  5598 ;;		None               void
  5599 ;; Registers used:
  5600 ;;		wreg, status,2, status,0, cstack
  5601 ;; Tracked objects:
  5602 ;;		On entry : 0/0
  5603 ;;		On exit  : 0/0
  5604 ;;		Unchanged: 0/0
  5605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5606 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5607 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5609 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5610 ;;Total ram usage:        4 bytes
  5611 ;; Hardware stack levels used:    1
  5612 ;; Hardware stack levels required when called:    5
  5613 ;; This function calls:
  5614 ;;		_write_command
  5615 ;;		_write_data
  5616 ;; This function is called by:
  5617 ;;		_drawPixel
  5618 ;;		_drawFastVLine
  5619 ;;		_fillRectangle
  5620 ;;		_drawFastHLine
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           	psect	text24
  5625  0013DE                     __ptext24:
  5626                           	opt stack 0
  5627  0013DE                     _setAddrWindow:
  5628                           	opt stack 22
  5629                           
  5630                           ;incstack = 0
  5631                           ;setAddrWindow@x0 stored from wreg
  5632  0013DE  6E17               	movwf	setAddrWindow@x0,c
  5633                           
  5634                           ;ST7735_TFT.c: 393: write_command(0x2A);
  5635  0013E0  0E2A               	movlw	42
  5636  0013E2  EC3D  F00B         	call	_write_command
  5637                           
  5638                           ;ST7735_TFT.c: 394: write_data(0);
  5639  0013E6  0E00               	movlw	0
  5640  0013E8  EC35  F00B         	call	_write_data
  5641                           
  5642                           ;ST7735_TFT.c: 395: write_data(x0 + colstart);
  5643  0013EC  5017               	movf	setAddrWindow@x0,w,c
  5644  0013EE  246A               	addwf	_colstart,w,c
  5645  0013F0  EC35  F00B         	call	_write_data
  5646                           
  5647                           ;ST7735_TFT.c: 396: write_data(0);
  5648  0013F4  0E00               	movlw	0
  5649  0013F6  EC35  F00B         	call	_write_data
  5650                           
  5651                           ;ST7735_TFT.c: 397: write_data(x1 + colstart);
  5652  0013FA  5015               	movf	setAddrWindow@x1,w,c
  5653  0013FC  246A               	addwf	_colstart,w,c
  5654  0013FE  EC35  F00B         	call	_write_data
  5655                           
  5656                           ;ST7735_TFT.c: 398: write_command(0x2B);
  5657  001402  0E2B               	movlw	43
  5658  001404  EC3D  F00B         	call	_write_command
  5659                           
  5660                           ;ST7735_TFT.c: 399: write_data(0);
  5661  001408  0E00               	movlw	0
  5662  00140A  EC35  F00B         	call	_write_data
  5663                           
  5664                           ;ST7735_TFT.c: 400: write_data(y0 + rowstart);
  5665  00140E  5014               	movf	setAddrWindow@y0,w,c
  5666  001410  246C               	addwf	_rowstart,w,c
  5667  001412  EC35  F00B         	call	_write_data
  5668                           
  5669                           ;ST7735_TFT.c: 401: write_data(0);
  5670  001416  0E00               	movlw	0
  5671  001418  EC35  F00B         	call	_write_data
  5672                           
  5673                           ;ST7735_TFT.c: 402: write_data(y1 + rowstart);
  5674  00141C  5016               	movf	setAddrWindow@y1,w,c
  5675  00141E  246C               	addwf	_rowstart,w,c
  5676  001420  EC35  F00B         	call	_write_data
  5677                           
  5678                           ;ST7735_TFT.c: 403: write_command(0x2C);
  5679  001424  0E2C               	movlw	44
  5680  001426  EC3D  F00B         	call	_write_command
  5681  00142A  0012               	return		;funcret
  5682  00142C                     __end_of_setAddrWindow:
  5683                           	opt stack 0
  5684                           tblptru	equ	0xFF8
  5685                           tblptrh	equ	0xFF7
  5686                           tblptrl	equ	0xFF6
  5687                           tablat	equ	0xFF5
  5688                           prodh	equ	0xFF4
  5689                           prodl	equ	0xFF3
  5690                           intcon	equ	0xFF2
  5691                           intcon2	equ	0xFF1
  5692                           postinc0	equ	0xFEE
  5693                           wreg	equ	0xFE8
  5694                           postdec1	equ	0xFE5
  5695                           fsr1l	equ	0xFE1
  5696                           indf2	equ	0xFDF
  5697                           postinc2	equ	0xFDE
  5698                           postdec2	equ	0xFDD
  5699                           fsr2h	equ	0xFDA
  5700                           fsr2l	equ	0xFD9
  5701                           status	equ	0xFD8
  5702                           
  5703 ;; *************** function _TFT_GreenTab_Initialize *****************
  5704 ;; Defined at:
  5705 ;;		line 641 in file "ST7735_TFT.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;		None
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;		None
  5710 ;; Return value:  Size  Location     Type
  5711 ;;		None               void
  5712 ;; Registers used:
  5713 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5714 ;; Tracked objects:
  5715 ;;		On entry : 0/0
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;Total ram usage:        0 bytes
  5724 ;; Hardware stack levels used:    1
  5725 ;; Hardware stack levels required when called:    6
  5726 ;; This function calls:
  5727 ;;		_Rcmd1
  5728 ;;		_Rcmd2red
  5729 ;;		_Rcmd3
  5730 ;;		_write_command
  5731 ;;		_write_data
  5732 ;; This function is called by:
  5733 ;;		_Initialize_Screen
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           	psect	text25
  5738  001554                     __ptext25:
  5739                           	opt stack 0
  5740  001554                     _TFT_GreenTab_Initialize:
  5741                           	opt stack 23
  5742                           
  5743                           ;ST7735_TFT.c: 643: PORTCbits.RC4 = 1;
  5744                           
  5745                           ;incstack = 0
  5746  001554  8882               	bsf	3970,4,c	;volatile
  5747                           
  5748                           ;ST7735_TFT.c: 644: PORTCbits.RC2 = 0;
  5749  001556  9482               	bcf	3970,2,c	;volatile
  5750                           
  5751                           ;ST7735_TFT.c: 646: SSPSTAT=0x80;
  5752  001558  0E80               	movlw	128
  5753  00155A  6EC7               	movwf	4039,c	;volatile
  5754                           
  5755                           ;ST7735_TFT.c: 647: SSPCON1=0x30;
  5756  00155C  0E30               	movlw	48
  5757  00155E  6EC6               	movwf	4038,c	;volatile
  5758                           
  5759                           ;ST7735_TFT.c: 650: Rcmd1();
  5760  001560  EC32  F005         	call	_Rcmd1	;wreg free
  5761                           
  5762                           ;ST7735_TFT.c: 651: Rcmd2red();
  5763  001564  EC5A  F00A         	call	_Rcmd2red	;wreg free
  5764                           
  5765                           ;ST7735_TFT.c: 652: Rcmd3();
  5766  001568  EC3F  F006         	call	_Rcmd3	;wreg free
  5767                           
  5768                           ;ST7735_TFT.c: 653: write_command(0x36);
  5769  00156C  0E36               	movlw	54
  5770  00156E  EC3D  F00B         	call	_write_command
  5771                           
  5772                           ;ST7735_TFT.c: 654: write_data(0xC0);
  5773  001572  0EC0               	movlw	192
  5774  001574  EC35  F00B         	call	_write_data
  5775                           
  5776                           ;ST7735_TFT.c: 655: _tft_type = 1;
  5777  001578  0E01               	movlw	1
  5778  00157A  6E68               	movwf	__tft_type,c
  5779  00157C  0012               	return		;funcret
  5780  00157E                     __end_of_TFT_GreenTab_Initialize:
  5781                           	opt stack 0
  5782                           tblptru	equ	0xFF8
  5783                           tblptrh	equ	0xFF7
  5784                           tblptrl	equ	0xFF6
  5785                           tablat	equ	0xFF5
  5786                           prodh	equ	0xFF4
  5787                           prodl	equ	0xFF3
  5788                           intcon	equ	0xFF2
  5789                           intcon2	equ	0xFF1
  5790                           postinc0	equ	0xFEE
  5791                           wreg	equ	0xFE8
  5792                           postdec1	equ	0xFE5
  5793                           fsr1l	equ	0xFE1
  5794                           indf2	equ	0xFDF
  5795                           postinc2	equ	0xFDE
  5796                           postdec2	equ	0xFDD
  5797                           fsr2h	equ	0xFDA
  5798                           fsr2l	equ	0xFD9
  5799                           status	equ	0xFD8
  5800                           
  5801 ;; *************** function _Rcmd3 *****************
  5802 ;; Defined at:
  5803 ;;		line 337 in file "ST7735_TFT.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;		None
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;		None
  5808 ;; Return value:  Size  Location     Type
  5809 ;;		None               void
  5810 ;; Registers used:
  5811 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;Total ram usage:        0 bytes
  5822 ;; Hardware stack levels used:    1
  5823 ;; Hardware stack levels required when called:    5
  5824 ;; This function calls:
  5825 ;;		_delay_ms
  5826 ;;		_write_command
  5827 ;;		_write_data
  5828 ;; This function is called by:
  5829 ;;		_TFT_GreenTab_Initialize
  5830 ;;		_TFT_BlackTab_Initialize
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           	psect	text26
  5835  000C7E                     __ptext26:
  5836                           	opt stack 0
  5837  000C7E                     _Rcmd3:
  5838                           	opt stack 23
  5839                           
  5840                           ;ST7735_TFT.c: 339: write_command(0xE0);
  5841                           
  5842                           ;incstack = 0
  5843  000C7E  0EE0               	movlw	224
  5844  000C80  EC3D  F00B         	call	_write_command
  5845                           
  5846                           ;ST7735_TFT.c: 340: write_data(0x02); write_data(0x1C); write_data(0x07); write_data(0x1
      +                          2);
  5847  000C84  0E02               	movlw	2
  5848  000C86  EC35  F00B         	call	_write_data
  5849  000C8A  0E1C               	movlw	28
  5850  000C8C  EC35  F00B         	call	_write_data
  5851  000C90  0E07               	movlw	7
  5852  000C92  EC35  F00B         	call	_write_data
  5853  000C96  0E12               	movlw	18
  5854  000C98  EC35  F00B         	call	_write_data
  5855                           
  5856                           ;ST7735_TFT.c: 341: write_data(0x37); write_data(0x32); write_data(0x29); write_data(0x2
      +                          D);
  5857  000C9C  0E37               	movlw	55
  5858  000C9E  EC35  F00B         	call	_write_data
  5859  000CA2  0E32               	movlw	50
  5860  000CA4  EC35  F00B         	call	_write_data
  5861  000CA8  0E29               	movlw	41
  5862  000CAA  EC35  F00B         	call	_write_data
  5863  000CAE  0E2D               	movlw	45
  5864  000CB0  EC35  F00B         	call	_write_data
  5865                           
  5866                           ;ST7735_TFT.c: 342: write_data(0x29); write_data(0x25); write_data(0x2B); write_data(0x3
      +                          9);
  5867  000CB4  0E29               	movlw	41
  5868  000CB6  EC35  F00B         	call	_write_data
  5869  000CBA  0E25               	movlw	37
  5870  000CBC  EC35  F00B         	call	_write_data
  5871  000CC0  0E2B               	movlw	43
  5872  000CC2  EC35  F00B         	call	_write_data
  5873  000CC6  0E39               	movlw	57
  5874  000CC8  EC35  F00B         	call	_write_data
  5875                           
  5876                           ;ST7735_TFT.c: 343: write_data(0x00); write_data(0x01); write_data(0x03); write_data(0x1
      +                          0);
  5877  000CCC  0E00               	movlw	0
  5878  000CCE  EC35  F00B         	call	_write_data
  5879  000CD2  0E01               	movlw	1
  5880  000CD4  EC35  F00B         	call	_write_data
  5881  000CD8  0E03               	movlw	3
  5882  000CDA  EC35  F00B         	call	_write_data
  5883  000CDE  0E10               	movlw	16
  5884  000CE0  EC35  F00B         	call	_write_data
  5885                           
  5886                           ;ST7735_TFT.c: 344: write_command(0xE1);
  5887  000CE4  0EE1               	movlw	225
  5888  000CE6  EC3D  F00B         	call	_write_command
  5889                           
  5890                           ;ST7735_TFT.c: 345: write_data(0x03); write_data(0x1D); write_data(0x07); write_data(0x0
      +                          6);
  5891  000CEA  0E03               	movlw	3
  5892  000CEC  EC35  F00B         	call	_write_data
  5893  000CF0  0E1D               	movlw	29
  5894  000CF2  EC35  F00B         	call	_write_data
  5895  000CF6  0E07               	movlw	7
  5896  000CF8  EC35  F00B         	call	_write_data
  5897  000CFC  0E06               	movlw	6
  5898  000CFE  EC35  F00B         	call	_write_data
  5899                           
  5900                           ;ST7735_TFT.c: 346: write_data(0x2E); write_data(0x2C); write_data(0x29); write_data(0x2
      +                          D);
  5901  000D02  0E2E               	movlw	46
  5902  000D04  EC35  F00B         	call	_write_data
  5903  000D08  0E2C               	movlw	44
  5904  000D0A  EC35  F00B         	call	_write_data
  5905  000D0E  0E29               	movlw	41
  5906  000D10  EC35  F00B         	call	_write_data
  5907  000D14  0E2D               	movlw	45
  5908  000D16  EC35  F00B         	call	_write_data
  5909                           
  5910                           ;ST7735_TFT.c: 347: write_data(0x2E); write_data(0x2E); write_data(0x37); write_data(0x3
      +                          F);
  5911  000D1A  0E2E               	movlw	46
  5912  000D1C  EC35  F00B         	call	_write_data
  5913  000D20  0E2E               	movlw	46
  5914  000D22  EC35  F00B         	call	_write_data
  5915  000D26  0E37               	movlw	55
  5916  000D28  EC35  F00B         	call	_write_data
  5917  000D2C  0E3F               	movlw	63
  5918  000D2E  EC35  F00B         	call	_write_data
  5919                           
  5920                           ;ST7735_TFT.c: 348: write_data(0x00); write_data(0x00); write_data(0x02); write_data(0x1
      +                          0);
  5921  000D32  0E00               	movlw	0
  5922  000D34  EC35  F00B         	call	_write_data
  5923  000D38  0E00               	movlw	0
  5924  000D3A  EC35  F00B         	call	_write_data
  5925  000D3E  0E02               	movlw	2
  5926  000D40  EC35  F00B         	call	_write_data
  5927  000D44  0E10               	movlw	16
  5928  000D46  EC35  F00B         	call	_write_data
  5929                           
  5930                           ;ST7735_TFT.c: 349: write_command(0x13);
  5931  000D4A  0E13               	movlw	19
  5932  000D4C  EC3D  F00B         	call	_write_command
  5933                           
  5934                           ;ST7735_TFT.c: 350: delay_ms(10);
  5935  000D50  0E00               	movlw	0
  5936  000D52  6E18               	movwf	delay_ms@ms+1,c
  5937  000D54  0E0A               	movlw	10
  5938  000D56  6E17               	movwf	delay_ms@ms,c
  5939  000D58  ECC6  F009         	call	_delay_ms	;wreg free
  5940                           
  5941                           ;ST7735_TFT.c: 351: write_command(0x29);
  5942  000D5C  0E29               	movlw	41
  5943  000D5E  EC3D  F00B         	call	_write_command
  5944                           
  5945                           ;ST7735_TFT.c: 352: delay_ms(100);
  5946  000D62  0E00               	movlw	0
  5947  000D64  6E18               	movwf	delay_ms@ms+1,c
  5948  000D66  0E64               	movlw	100
  5949  000D68  6E17               	movwf	delay_ms@ms,c
  5950  000D6A  ECC6  F009         	call	_delay_ms	;wreg free
  5951  000D6E  0012               	return		;funcret
  5952  000D70                     __end_of_Rcmd3:
  5953                           	opt stack 0
  5954                           tblptru	equ	0xFF8
  5955                           tblptrh	equ	0xFF7
  5956                           tblptrl	equ	0xFF6
  5957                           tablat	equ	0xFF5
  5958                           prodh	equ	0xFF4
  5959                           prodl	equ	0xFF3
  5960                           intcon	equ	0xFF2
  5961                           intcon2	equ	0xFF1
  5962                           postinc0	equ	0xFEE
  5963                           wreg	equ	0xFE8
  5964                           postdec1	equ	0xFE5
  5965                           fsr1l	equ	0xFE1
  5966                           indf2	equ	0xFDF
  5967                           postinc2	equ	0xFDE
  5968                           postdec2	equ	0xFDD
  5969                           fsr2h	equ	0xFDA
  5970                           fsr2l	equ	0xFD9
  5971                           status	equ	0xFD8
  5972                           
  5973 ;; *************** function _Rcmd2red *****************
  5974 ;; Defined at:
  5975 ;;		line 327 in file "ST7735_TFT.c"
  5976 ;; Parameters:    Size  Location     Type
  5977 ;;		None
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;		None
  5980 ;; Return value:  Size  Location     Type
  5981 ;;		None               void
  5982 ;; Registers used:
  5983 ;;		wreg, status,2, cstack
  5984 ;; Tracked objects:
  5985 ;;		On entry : 0/0
  5986 ;;		On exit  : 0/0
  5987 ;;		Unchanged: 0/0
  5988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;Total ram usage:        0 bytes
  5994 ;; Hardware stack levels used:    1
  5995 ;; Hardware stack levels required when called:    5
  5996 ;; This function calls:
  5997 ;;		_write_command
  5998 ;;		_write_data
  5999 ;; This function is called by:
  6000 ;;		_TFT_GreenTab_Initialize
  6001 ;; This function uses a non-reentrant model
  6002 ;;
  6003                           
  6004                           	psect	text27
  6005  0014B4                     __ptext27:
  6006                           	opt stack 0
  6007  0014B4                     _Rcmd2red:
  6008                           	opt stack 23
  6009                           
  6010                           ;ST7735_TFT.c: 329: write_command(0x2A);
  6011                           
  6012                           ;incstack = 0
  6013  0014B4  0E2A               	movlw	42
  6014  0014B6  EC3D  F00B         	call	_write_command
  6015                           
  6016                           ;ST7735_TFT.c: 330: write_data(0x00); write_data(0x00);
  6017  0014BA  0E00               	movlw	0
  6018  0014BC  EC35  F00B         	call	_write_data
  6019  0014C0  0E00               	movlw	0
  6020  0014C2  EC35  F00B         	call	_write_data
  6021                           
  6022                           ;ST7735_TFT.c: 331: write_data(0x00); write_data(0x7F);
  6023  0014C6  0E00               	movlw	0
  6024  0014C8  EC35  F00B         	call	_write_data
  6025  0014CC  0E7F               	movlw	127
  6026  0014CE  EC35  F00B         	call	_write_data
  6027                           
  6028                           ;ST7735_TFT.c: 332: write_command(0x2B);
  6029  0014D2  0E2B               	movlw	43
  6030  0014D4  EC3D  F00B         	call	_write_command
  6031                           
  6032                           ;ST7735_TFT.c: 333: write_data(0x00); write_data(0x00);
  6033  0014D8  0E00               	movlw	0
  6034  0014DA  EC35  F00B         	call	_write_data
  6035  0014DE  0E00               	movlw	0
  6036  0014E0  EC35  F00B         	call	_write_data
  6037                           
  6038                           ;ST7735_TFT.c: 334: write_data(0x00); write_data(0x9F);
  6039  0014E4  0E00               	movlw	0
  6040  0014E6  EC35  F00B         	call	_write_data
  6041  0014EA  0E9F               	movlw	159
  6042  0014EC  EC35  F00B         	call	_write_data
  6043  0014F0  0012               	return		;funcret
  6044  0014F2                     __end_of_Rcmd2red:
  6045                           	opt stack 0
  6046                           tblptru	equ	0xFF8
  6047                           tblptrh	equ	0xFF7
  6048                           tblptrl	equ	0xFF6
  6049                           tablat	equ	0xFF5
  6050                           prodh	equ	0xFF4
  6051                           prodl	equ	0xFF3
  6052                           intcon	equ	0xFF2
  6053                           intcon2	equ	0xFF1
  6054                           postinc0	equ	0xFEE
  6055                           wreg	equ	0xFE8
  6056                           postdec1	equ	0xFE5
  6057                           fsr1l	equ	0xFE1
  6058                           indf2	equ	0xFDF
  6059                           postinc2	equ	0xFDE
  6060                           postdec2	equ	0xFDD
  6061                           fsr2h	equ	0xFDA
  6062                           fsr2l	equ	0xFD9
  6063                           status	equ	0xFD8
  6064                           
  6065 ;; *************** function _Rcmd1 *****************
  6066 ;; Defined at:
  6067 ;;		line 280 in file "ST7735_TFT.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;		None
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;		None
  6072 ;; Return value:  Size  Location     Type
  6073 ;;		None               void
  6074 ;; Registers used:
  6075 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6085 ;;Total ram usage:        0 bytes
  6086 ;; Hardware stack levels used:    1
  6087 ;; Hardware stack levels required when called:    5
  6088 ;; This function calls:
  6089 ;;		_delay_ms
  6090 ;;		_write_command
  6091 ;;		_write_data
  6092 ;; This function is called by:
  6093 ;;		_TFT_GreenTab_Initialize
  6094 ;;		_TFT_BlackTab_Initialize
  6095 ;; This function uses a non-reentrant model
  6096 ;;
  6097                           
  6098                           	psect	text28
  6099  000A64                     __ptext28:
  6100                           	opt stack 0
  6101  000A64                     _Rcmd1:
  6102                           	opt stack 23
  6103                           
  6104                           ;ST7735_TFT.c: 282: write_command(0x01);
  6105                           
  6106                           ;incstack = 0
  6107  000A64  0E01               	movlw	1
  6108  000A66  EC3D  F00B         	call	_write_command
  6109                           
  6110                           ;ST7735_TFT.c: 283: delay_ms(150);
  6111  000A6A  0E00               	movlw	0
  6112  000A6C  6E18               	movwf	delay_ms@ms+1,c
  6113  000A6E  0E96               	movlw	150
  6114  000A70  6E17               	movwf	delay_ms@ms,c
  6115  000A72  ECC6  F009         	call	_delay_ms	;wreg free
  6116                           
  6117                           ;ST7735_TFT.c: 284: write_command(0x11);
  6118  000A76  0E11               	movlw	17
  6119  000A78  EC3D  F00B         	call	_write_command
  6120                           
  6121                           ;ST7735_TFT.c: 285: delay_ms(500);
  6122  000A7C  0E01               	movlw	1
  6123  000A7E  6E18               	movwf	delay_ms@ms+1,c
  6124  000A80  0EF4               	movlw	244
  6125  000A82  6E17               	movwf	delay_ms@ms,c
  6126  000A84  ECC6  F009         	call	_delay_ms	;wreg free
  6127                           
  6128                           ;ST7735_TFT.c: 286: write_command(0xB1);
  6129  000A88  0EB1               	movlw	177
  6130  000A8A  EC3D  F00B         	call	_write_command
  6131                           
  6132                           ;ST7735_TFT.c: 287: write_data(0x01);
  6133  000A8E  0E01               	movlw	1
  6134  000A90  EC35  F00B         	call	_write_data
  6135                           
  6136                           ;ST7735_TFT.c: 288: write_data(0x2C);
  6137  000A94  0E2C               	movlw	44
  6138  000A96  EC35  F00B         	call	_write_data
  6139                           
  6140                           ;ST7735_TFT.c: 289: write_data(0x2D);
  6141  000A9A  0E2D               	movlw	45
  6142  000A9C  EC35  F00B         	call	_write_data
  6143                           
  6144                           ;ST7735_TFT.c: 290: write_command(0xB2);
  6145  000AA0  0EB2               	movlw	178
  6146  000AA2  EC3D  F00B         	call	_write_command
  6147                           
  6148                           ;ST7735_TFT.c: 291: write_data(0x01);
  6149  000AA6  0E01               	movlw	1
  6150  000AA8  EC35  F00B         	call	_write_data
  6151                           
  6152                           ;ST7735_TFT.c: 292: write_data(0x2C);
  6153  000AAC  0E2C               	movlw	44
  6154  000AAE  EC35  F00B         	call	_write_data
  6155                           
  6156                           ;ST7735_TFT.c: 293: write_data(0x2D);
  6157  000AB2  0E2D               	movlw	45
  6158  000AB4  EC35  F00B         	call	_write_data
  6159                           
  6160                           ;ST7735_TFT.c: 294: write_command(0xB3);
  6161  000AB8  0EB3               	movlw	179
  6162  000ABA  EC3D  F00B         	call	_write_command
  6163                           
  6164                           ;ST7735_TFT.c: 295: write_data(0x01);
  6165  000ABE  0E01               	movlw	1
  6166  000AC0  EC35  F00B         	call	_write_data
  6167                           
  6168                           ;ST7735_TFT.c: 296: write_data(0x2C);
  6169  000AC4  0E2C               	movlw	44
  6170  000AC6  EC35  F00B         	call	_write_data
  6171                           
  6172                           ;ST7735_TFT.c: 297: write_data(0x2D);
  6173  000ACA  0E2D               	movlw	45
  6174  000ACC  EC35  F00B         	call	_write_data
  6175                           
  6176                           ;ST7735_TFT.c: 298: write_data(0x01);
  6177  000AD0  0E01               	movlw	1
  6178  000AD2  EC35  F00B         	call	_write_data
  6179                           
  6180                           ;ST7735_TFT.c: 299: write_data(0x2C);
  6181  000AD6  0E2C               	movlw	44
  6182  000AD8  EC35  F00B         	call	_write_data
  6183                           
  6184                           ;ST7735_TFT.c: 300: write_data(0x2D);
  6185  000ADC  0E2D               	movlw	45
  6186  000ADE  EC35  F00B         	call	_write_data
  6187                           
  6188                           ;ST7735_TFT.c: 301: write_command(0xB4);
  6189  000AE2  0EB4               	movlw	180
  6190  000AE4  EC3D  F00B         	call	_write_command
  6191                           
  6192                           ;ST7735_TFT.c: 302: write_data(0x07);
  6193  000AE8  0E07               	movlw	7
  6194  000AEA  EC35  F00B         	call	_write_data
  6195                           
  6196                           ;ST7735_TFT.c: 303: write_command(0xC0);
  6197  000AEE  0EC0               	movlw	192
  6198  000AF0  EC3D  F00B         	call	_write_command
  6199                           
  6200                           ;ST7735_TFT.c: 304: write_data(0xA2);
  6201  000AF4  0EA2               	movlw	162
  6202  000AF6  EC35  F00B         	call	_write_data
  6203                           
  6204                           ;ST7735_TFT.c: 305: write_data(0x02);
  6205  000AFA  0E02               	movlw	2
  6206  000AFC  EC35  F00B         	call	_write_data
  6207                           
  6208                           ;ST7735_TFT.c: 306: write_data(0x84);
  6209  000B00  0E84               	movlw	132
  6210  000B02  EC35  F00B         	call	_write_data
  6211                           
  6212                           ;ST7735_TFT.c: 307: write_command(0xC1);
  6213  000B06  0EC1               	movlw	193
  6214  000B08  EC3D  F00B         	call	_write_command
  6215                           
  6216                           ;ST7735_TFT.c: 308: write_data(0xC5);
  6217  000B0C  0EC5               	movlw	197
  6218  000B0E  EC35  F00B         	call	_write_data
  6219                           
  6220                           ;ST7735_TFT.c: 309: write_command(0xC2);
  6221  000B12  0EC2               	movlw	194
  6222  000B14  EC3D  F00B         	call	_write_command
  6223                           
  6224                           ;ST7735_TFT.c: 310: write_data(0x0A);
  6225  000B18  0E0A               	movlw	10
  6226  000B1A  EC35  F00B         	call	_write_data
  6227                           
  6228                           ;ST7735_TFT.c: 311: write_data(0x00);
  6229  000B1E  0E00               	movlw	0
  6230  000B20  EC35  F00B         	call	_write_data
  6231                           
  6232                           ;ST7735_TFT.c: 312: write_command(0xC3);
  6233  000B24  0EC3               	movlw	195
  6234  000B26  EC3D  F00B         	call	_write_command
  6235                           
  6236                           ;ST7735_TFT.c: 313: write_data(0x8A);
  6237  000B2A  0E8A               	movlw	138
  6238  000B2C  EC35  F00B         	call	_write_data
  6239                           
  6240                           ;ST7735_TFT.c: 314: write_data(0x2A);
  6241  000B30  0E2A               	movlw	42
  6242  000B32  EC35  F00B         	call	_write_data
  6243                           
  6244                           ;ST7735_TFT.c: 315: write_command(0xC4);
  6245  000B36  0EC4               	movlw	196
  6246  000B38  EC3D  F00B         	call	_write_command
  6247                           
  6248                           ;ST7735_TFT.c: 316: write_data(0x8A);
  6249  000B3C  0E8A               	movlw	138
  6250  000B3E  EC35  F00B         	call	_write_data
  6251                           
  6252                           ;ST7735_TFT.c: 317: write_data(0xEE);
  6253  000B42  0EEE               	movlw	238
  6254  000B44  EC35  F00B         	call	_write_data
  6255                           
  6256                           ;ST7735_TFT.c: 318: write_command(0xC5);
  6257  000B48  0EC5               	movlw	197
  6258  000B4A  EC3D  F00B         	call	_write_command
  6259                           
  6260                           ;ST7735_TFT.c: 319: write_data(0x0E);
  6261  000B4E  0E0E               	movlw	14
  6262  000B50  EC35  F00B         	call	_write_data
  6263                           
  6264                           ;ST7735_TFT.c: 320: write_command(0x20);
  6265  000B54  0E20               	movlw	32
  6266  000B56  EC3D  F00B         	call	_write_command
  6267                           
  6268                           ;ST7735_TFT.c: 321: write_command(0x36);
  6269  000B5A  0E36               	movlw	54
  6270  000B5C  EC3D  F00B         	call	_write_command
  6271                           
  6272                           ;ST7735_TFT.c: 322: write_data(0xC8);
  6273  000B60  0EC8               	movlw	200
  6274  000B62  EC35  F00B         	call	_write_data
  6275                           
  6276                           ;ST7735_TFT.c: 323: write_command(0x3A);
  6277  000B66  0E3A               	movlw	58
  6278  000B68  EC3D  F00B         	call	_write_command
  6279                           
  6280                           ;ST7735_TFT.c: 324: write_data(0x05);
  6281  000B6C  0E05               	movlw	5
  6282  000B6E  EC35  F00B         	call	_write_data
  6283  000B72  0012               	return		;funcret
  6284  000B74                     __end_of_Rcmd1:
  6285                           	opt stack 0
  6286                           tblptru	equ	0xFF8
  6287                           tblptrh	equ	0xFF7
  6288                           tblptrl	equ	0xFF6
  6289                           tablat	equ	0xFF5
  6290                           prodh	equ	0xFF4
  6291                           prodl	equ	0xFF3
  6292                           intcon	equ	0xFF2
  6293                           intcon2	equ	0xFF1
  6294                           postinc0	equ	0xFEE
  6295                           wreg	equ	0xFE8
  6296                           postdec1	equ	0xFE5
  6297                           fsr1l	equ	0xFE1
  6298                           indf2	equ	0xFDF
  6299                           postinc2	equ	0xFDE
  6300                           postdec2	equ	0xFDD
  6301                           fsr2h	equ	0xFDA
  6302                           fsr2l	equ	0xFD9
  6303                           status	equ	0xFD8
  6304                           
  6305 ;; *************** function _write_data *****************
  6306 ;; Defined at:
  6307 ;;		line 208 in file "ST7735_TFT.c"
  6308 ;; Parameters:    Size  Location     Type
  6309 ;;  data_           1    wreg     unsigned char 
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;  data_           1   18[COMRAM] unsigned char 
  6312 ;; Return value:  Size  Location     Type
  6313 ;;		None               void
  6314 ;; Registers used:
  6315 ;;		wreg, status,2, cstack
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6322 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6324 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6325 ;;Total ram usage:        1 bytes
  6326 ;; Hardware stack levels used:    1
  6327 ;; Hardware stack levels required when called:    4
  6328 ;; This function calls:
  6329 ;;		_spiwrite
  6330 ;; This function is called by:
  6331 ;;		_Rcmd1
  6332 ;;		_Rcmd2red
  6333 ;;		_Rcmd3
  6334 ;;		_setAddrWindow
  6335 ;;		_drawPixel
  6336 ;;		_TFT_GreenTab_Initialize
  6337 ;;		_Bcmd
  6338 ;;		_setScrollDefinition
  6339 ;;		_Rcmd2green
  6340 ;;		_VerticalScroll
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           	psect	text29
  6345  00166A                     __ptext29:
  6346                           	opt stack 0
  6347  00166A                     _write_data:
  6348                           	opt stack 22
  6349                           
  6350                           ;incstack = 0
  6351                           ;write_data@data_ stored from wreg
  6352  00166A  6E13               	movwf	write_data@data_,c
  6353                           
  6354                           ;ST7735_TFT.c: 210: PORTCbits.RC4 = 0;
  6355  00166C  9882               	bcf	3970,4,c	;volatile
  6356                           
  6357                           ;ST7735_TFT.c: 211: PORTCbits.RC2 = 1;
  6358  00166E  8482               	bsf	3970,2,c	;volatile
  6359                           
  6360                           ;ST7735_TFT.c: 212: spiwrite(data_);
  6361  001670  5013               	movf	write_data@data_,w,c
  6362  001672  EC19  F00B         	call	_spiwrite
  6363                           
  6364                           ;ST7735_TFT.c: 213: PORTCbits.RC4 = 1;
  6365  001676  8882               	bsf	3970,4,c	;volatile
  6366  001678  0012               	return		;funcret
  6367  00167A                     __end_of_write_data:
  6368                           	opt stack 0
  6369                           tblptru	equ	0xFF8
  6370                           tblptrh	equ	0xFF7
  6371                           tblptrl	equ	0xFF6
  6372                           tablat	equ	0xFF5
  6373                           prodh	equ	0xFF4
  6374                           prodl	equ	0xFF3
  6375                           intcon	equ	0xFF2
  6376                           intcon2	equ	0xFF1
  6377                           postinc0	equ	0xFEE
  6378                           wreg	equ	0xFE8
  6379                           postdec1	equ	0xFE5
  6380                           fsr1l	equ	0xFE1
  6381                           indf2	equ	0xFDF
  6382                           postinc2	equ	0xFDE
  6383                           postdec2	equ	0xFDD
  6384                           fsr2h	equ	0xFDA
  6385                           fsr2l	equ	0xFD9
  6386                           status	equ	0xFD8
  6387                           
  6388 ;; *************** function _write_command *****************
  6389 ;; Defined at:
  6390 ;;		line 197 in file "ST7735_TFT.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;  cmd_            1    wreg     unsigned char 
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;  cmd_            1   18[COMRAM] unsigned char 
  6395 ;; Return value:  Size  Location     Type
  6396 ;;		None               void
  6397 ;; Registers used:
  6398 ;;		wreg, status,2, cstack
  6399 ;; Tracked objects:
  6400 ;;		On entry : 0/0
  6401 ;;		On exit  : 0/0
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6407 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6408 ;;Total ram usage:        1 bytes
  6409 ;; Hardware stack levels used:    1
  6410 ;; Hardware stack levels required when called:    4
  6411 ;; This function calls:
  6412 ;;		_spiwrite
  6413 ;; This function is called by:
  6414 ;;		_Rcmd1
  6415 ;;		_Rcmd2red
  6416 ;;		_Rcmd3
  6417 ;;		_setAddrWindow
  6418 ;;		_TFT_GreenTab_Initialize
  6419 ;;		_Bcmd
  6420 ;;		_setScrollDefinition
  6421 ;;		_Rcmd2green
  6422 ;;		_VerticalScroll
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text30
  6427  00167A                     __ptext30:
  6428                           	opt stack 0
  6429  00167A                     _write_command:
  6430                           	opt stack 22
  6431                           
  6432                           ;incstack = 0
  6433                           ;write_command@cmd_ stored from wreg
  6434  00167A  6E13               	movwf	write_command@cmd_,c
  6435                           
  6436                           ;ST7735_TFT.c: 199: PORTCbits.RC4 = 0;
  6437  00167C  9882               	bcf	3970,4,c	;volatile
  6438                           
  6439                           ;ST7735_TFT.c: 201: PORTCbits.RC2 = 0;
  6440  00167E  9482               	bcf	3970,2,c	;volatile
  6441                           
  6442                           ;ST7735_TFT.c: 202: spiwrite(cmd_);
  6443  001680  5013               	movf	write_command@cmd_,w,c
  6444  001682  EC19  F00B         	call	_spiwrite
  6445                           
  6446                           ;ST7735_TFT.c: 204: PORTCbits.RC4 = 1;
  6447  001686  8882               	bsf	3970,4,c	;volatile
  6448  001688  0012               	return		;funcret
  6449  00168A                     __end_of_write_command:
  6450                           	opt stack 0
  6451                           tblptru	equ	0xFF8
  6452                           tblptrh	equ	0xFF7
  6453                           tblptrl	equ	0xFF6
  6454                           tablat	equ	0xFF5
  6455                           prodh	equ	0xFF4
  6456                           prodl	equ	0xFF3
  6457                           intcon	equ	0xFF2
  6458                           intcon2	equ	0xFF1
  6459                           postinc0	equ	0xFEE
  6460                           wreg	equ	0xFE8
  6461                           postdec1	equ	0xFE5
  6462                           fsr1l	equ	0xFE1
  6463                           indf2	equ	0xFDF
  6464                           postinc2	equ	0xFDE
  6465                           postdec2	equ	0xFDD
  6466                           fsr2h	equ	0xFDA
  6467                           fsr2l	equ	0xFD9
  6468                           status	equ	0xFD8
  6469                           
  6470 ;; *************** function _spiwrite *****************
  6471 ;; Defined at:
  6472 ;;		line 188 in file "ST7735_TFT.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;  spidata         1    wreg     unsigned char 
  6475 ;; Auto vars:     Size  Location     Type
  6476 ;;  spidata         1   17[COMRAM] unsigned char 
  6477 ;;  x               1   16[COMRAM] unsigned char 
  6478 ;; Return value:  Size  Location     Type
  6479 ;;		None               void
  6480 ;; Registers used:
  6481 ;;		wreg
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6488 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6490 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6491 ;;Total ram usage:        2 bytes
  6492 ;; Hardware stack levels used:    1
  6493 ;; Hardware stack levels required when called:    3
  6494 ;; This function calls:
  6495 ;;		Nothing
  6496 ;; This function is called by:
  6497 ;;		_write_command
  6498 ;;		_write_data
  6499 ;;		_drawFastVLine
  6500 ;;		_fillRectangle
  6501 ;;		_drawFastHLine
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505                           	psect	text31
  6506  001632                     __ptext31:
  6507                           	opt stack 0
  6508  001632                     _spiwrite:
  6509                           	opt stack 24
  6510                           
  6511                           ;incstack = 0
  6512                           ;spiwrite@spidata stored from wreg
  6513  001632  6E12               	movwf	spiwrite@spidata,c
  6514                           
  6515                           ;ST7735_TFT.c: 190: char x;
  6516                           ;ST7735_TFT.c: 191: PIR1bits.SSPIF = 0;
  6517  001634  969E               	bcf	3998,3,c	;volatile
  6518                           
  6519                           ;ST7735_TFT.c: 192: x = SSPBUF;
  6520  001636  CFC9 F011          	movff	4041,spiwrite@x	;volatile
  6521                           
  6522                           ;ST7735_TFT.c: 193: SSPBUF = spidata;
  6523  00163A  C012  FFC9         	movff	spiwrite@spidata,4041	;volatile
  6524                           
  6525                           ;ST7735_TFT.c: 194: while (!SSPSTATbits.BF);
  6526  00163E  D000               	goto	l45
  6527  001640                     l45:
  6528  001640  A0C7               	btfss	4039,0,c	;volatile
  6529  001642  D7FE               	goto	l45
  6530  001644  0012               	return		;funcret
  6531  001646                     __end_of_spiwrite:
  6532                           	opt stack 0
  6533                           tblptru	equ	0xFF8
  6534                           tblptrh	equ	0xFF7
  6535                           tblptrl	equ	0xFF6
  6536                           tablat	equ	0xFF5
  6537                           prodh	equ	0xFF4
  6538                           prodl	equ	0xFF3
  6539                           intcon	equ	0xFF2
  6540                           intcon2	equ	0xFF1
  6541                           postinc0	equ	0xFEE
  6542                           wreg	equ	0xFE8
  6543                           postdec1	equ	0xFE5
  6544                           fsr1l	equ	0xFE1
  6545                           indf2	equ	0xFDF
  6546                           postinc2	equ	0xFDE
  6547                           postdec2	equ	0xFDD
  6548                           fsr2h	equ	0xFDA
  6549                           fsr2l	equ	0xFD9
  6550                           status	equ	0xFD8
  6551                           
  6552 ;; *************** function _LCD_Reset *****************
  6553 ;; Defined at:
  6554 ;;		line 216 in file "ST7735_TFT.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;		None
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;		None
  6559 ;; Return value:  Size  Location     Type
  6560 ;;		None               void
  6561 ;; Registers used:
  6562 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6572 ;;Total ram usage:        0 bytes
  6573 ;; Hardware stack levels used:    1
  6574 ;; Hardware stack levels required when called:    5
  6575 ;; This function calls:
  6576 ;;		_delay_ms
  6577 ;; This function is called by:
  6578 ;;		_Initialize_Screen
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           	psect	text32
  6583  001646                     __ptext32:
  6584                           	opt stack 0
  6585  001646                     _LCD_Reset:
  6586                           	opt stack 24
  6587                           
  6588                           ;ST7735_TFT.c: 218: PORTCbits.RC1 = 0;
  6589                           
  6590                           ;incstack = 0
  6591  001646  9282               	bcf	3970,1,c	;volatile
  6592                           
  6593                           ;ST7735_TFT.c: 219: delay_ms(100);
  6594  001648  0E00               	movlw	0
  6595  00164A  6E18               	movwf	delay_ms@ms+1,c
  6596  00164C  0E64               	movlw	100
  6597  00164E  6E17               	movwf	delay_ms@ms,c
  6598  001650  ECC6  F009         	call	_delay_ms	;wreg free
  6599                           
  6600                           ;ST7735_TFT.c: 220: PORTCbits.RC1 = 1;
  6601  001654  8282               	bsf	3970,1,c	;volatile
  6602  001656  0012               	return		;funcret
  6603  001658                     __end_of_LCD_Reset:
  6604                           	opt stack 0
  6605                           tblptru	equ	0xFF8
  6606                           tblptrh	equ	0xFF7
  6607                           tblptrl	equ	0xFF6
  6608                           tablat	equ	0xFF5
  6609                           prodh	equ	0xFF4
  6610                           prodl	equ	0xFF3
  6611                           intcon	equ	0xFF2
  6612                           intcon2	equ	0xFF1
  6613                           postinc0	equ	0xFEE
  6614                           wreg	equ	0xFE8
  6615                           postdec1	equ	0xFE5
  6616                           fsr1l	equ	0xFE1
  6617                           indf2	equ	0xFDF
  6618                           postinc2	equ	0xFDE
  6619                           postdec2	equ	0xFDD
  6620                           fsr2h	equ	0xFDA
  6621                           fsr2l	equ	0xFD9
  6622                           status	equ	0xFD8
  6623                           
  6624 ;; *************** function _delay_ms *****************
  6625 ;; Defined at:
  6626 ;;		line 63 in file "ST7735_TFT.c"
  6627 ;; Parameters:    Size  Location     Type
  6628 ;;  ms              2   22[COMRAM] int 
  6629 ;; Auto vars:     Size  Location     Type
  6630 ;;  count           2   26[COMRAM] int 
  6631 ;; Return value:  Size  Location     Type
  6632 ;;		None               void
  6633 ;; Registers used:
  6634 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6635 ;; Tracked objects:
  6636 ;;		On entry : 0/0
  6637 ;;		On exit  : 0/0
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6640 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6641 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6642 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6643 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6644 ;;Total ram usage:        6 bytes
  6645 ;; Hardware stack levels used:    1
  6646 ;; Hardware stack levels required when called:    4
  6647 ;; This function calls:
  6648 ;;		___wmul
  6649 ;; This function is called by:
  6650 ;;		_LCD_Reset
  6651 ;;		_Rcmd1
  6652 ;;		_Rcmd3
  6653 ;;		_Bcmd
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text33
  6658  00138C                     __ptext33:
  6659                           	opt stack 0
  6660  00138C                     _delay_ms:
  6661                           	opt stack 23
  6662                           
  6663                           ;ST7735_TFT.c: 69: int count;
  6664                           ;ST7735_TFT.c: 70: count = 8000000/4000/8 * ms;
  6665                           
  6666                           ;incstack = 0
  6667  00138C  C017  F011         	movff	delay_ms@ms,___wmul@multiplier
  6668  001390  C018  F012         	movff	delay_ms@ms+1,___wmul@multiplier+1
  6669  001394  0E00               	movlw	0
  6670  001396  6E14               	movwf	___wmul@multiplicand+1,c
  6671  001398  0EFA               	movlw	250
  6672  00139A  6E13               	movwf	___wmul@multiplicand,c
  6673  00139C  ECBF  F00A         	call	___wmul	;wreg free
  6674  0013A0  C011  F01B         	movff	?___wmul,delay_ms@count
  6675  0013A4  C012  F01C         	movff	?___wmul+1,delay_ms@count+1
  6676                           
  6677                           ;ST7735_TFT.c: 71: count = (0xffff - count);
  6678  0013A8  C01B  F019         	movff	delay_ms@count,??_delay_ms
  6679  0013AC  C01C  F01A         	movff	delay_ms@count+1,??_delay_ms+1
  6680  0013B0  1E19               	comf	??_delay_ms,f,c
  6681  0013B2  1E1A               	comf	??_delay_ms+1,f,c
  6682  0013B4  4A19               	infsnz	??_delay_ms,f,c
  6683  0013B6  2A1A               	incf	??_delay_ms+1,f,c
  6684  0013B8  0EFF               	movlw	255
  6685  0013BA  2419               	addwf	??_delay_ms,w,c
  6686  0013BC  6E1B               	movwf	delay_ms@count,c
  6687  0013BE  0EFF               	movlw	255
  6688  0013C0  201A               	addwfc	??_delay_ms+1,w,c
  6689  0013C2  6E1C               	movwf	delay_ms@count+1,c
  6690                           
  6691                           ;ST7735_TFT.c: 73: T3CON = 0xb8;
  6692  0013C4  0EB8               	movlw	184
  6693  0013C6  6EB1               	movwf	4017,c	;volatile
  6694                           
  6695                           ;ST7735_TFT.c: 75: TMR3L = count & 0x00ff;
  6696  0013C8  C01B  FFB2         	movff	delay_ms@count,4018	;volatile
  6697                           
  6698                           ;ST7735_TFT.c: 76: TMR3H = count >> 8;
  6699  0013CC  501C               	movf	delay_ms@count+1,w,c
  6700  0013CE  6EB3               	movwf	4019,c	;volatile
  6701                           
  6702                           ;ST7735_TFT.c: 78: PIR2bits.TMR3IF = 0;
  6703  0013D0  92A1               	bcf	4001,1,c	;volatile
  6704                           
  6705                           ;ST7735_TFT.c: 79: T3CONbits.TMR3ON = 1;
  6706  0013D2  80B1               	bsf	4017,0,c	;volatile
  6707                           
  6708                           ;ST7735_TFT.c: 81: while (PIR2bits.TMR3IF == 0);
  6709  0013D4  D000               	goto	l35
  6710  0013D6                     l35:
  6711  0013D6  A2A1               	btfss	4001,1,c	;volatile
  6712  0013D8  D7FE               	goto	l35
  6713                           
  6714                           ;ST7735_TFT.c: 82: T3CONbits.TMR3ON = 0;
  6715  0013DA  90B1               	bcf	4017,0,c	;volatile
  6716  0013DC  0012               	return		;funcret
  6717  0013DE                     __end_of_delay_ms:
  6718                           	opt stack 0
  6719                           tblptru	equ	0xFF8
  6720                           tblptrh	equ	0xFF7
  6721                           tblptrl	equ	0xFF6
  6722                           tablat	equ	0xFF5
  6723                           prodh	equ	0xFF4
  6724                           prodl	equ	0xFF3
  6725                           intcon	equ	0xFF2
  6726                           intcon2	equ	0xFF1
  6727                           postinc0	equ	0xFEE
  6728                           wreg	equ	0xFE8
  6729                           postdec1	equ	0xFE5
  6730                           fsr1l	equ	0xFE1
  6731                           indf2	equ	0xFDF
  6732                           postinc2	equ	0xFDE
  6733                           postdec2	equ	0xFDD
  6734                           fsr2h	equ	0xFDA
  6735                           fsr2l	equ	0xFD9
  6736                           status	equ	0xFD8
  6737                           
  6738 ;; *************** function ___wmul *****************
  6739 ;; Defined at:
  6740 ;;		line 15 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\Umul16.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  multiplier      2   16[COMRAM] unsigned int 
  6743 ;;  multiplicand    2   18[COMRAM] unsigned int 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  product         2   20[COMRAM] unsigned int 
  6746 ;; Return value:  Size  Location     Type
  6747 ;;                  2   16[COMRAM] unsigned int 
  6748 ;; Registers used:
  6749 ;;		wreg, status,2, status,0, prodl, prodh
  6750 ;; Tracked objects:
  6751 ;;		On entry : 0/0
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6755 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6756 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6758 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6759 ;;Total ram usage:        6 bytes
  6760 ;; Hardware stack levels used:    1
  6761 ;; Hardware stack levels required when called:    3
  6762 ;; This function calls:
  6763 ;;		Nothing
  6764 ;; This function is called by:
  6765 ;;		_delay_ms
  6766 ;;		_drawChar
  6767 ;;		_printf
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           
  6771                           	psect	text34
  6772  00157E                     __ptext34:
  6773                           	opt stack 0
  6774  00157E                     ___wmul:
  6775                           	opt stack 26
  6776                           
  6777                           ;incstack = 0
  6778  00157E  5011               	movf	___wmul@multiplier,w,c
  6779  001580  0213               	mulwf	___wmul@multiplicand,c
  6780  001582  CFF3 F015          	movff	prodl,___wmul@product
  6781  001586  CFF4 F016          	movff	prodh,___wmul@product+1
  6782  00158A  5011               	movf	___wmul@multiplier,w,c
  6783  00158C  0214               	mulwf	___wmul@multiplicand+1,c
  6784  00158E  50F3               	movf	prodl,w,c
  6785  001590  2616               	addwf	___wmul@product+1,f,c
  6786  001592  5012               	movf	___wmul@multiplier+1,w,c
  6787  001594  0213               	mulwf	___wmul@multiplicand,c
  6788  001596  50F3               	movf	prodl,w,c
  6789  001598  2616               	addwf	___wmul@product+1,f,c
  6790  00159A  C015  F011         	movff	___wmul@product,?___wmul
  6791  00159E  C016  F012         	movff	___wmul@product+1,?___wmul+1
  6792  0015A2  D000               	goto	l510
  6793  0015A4                     l510:
  6794  0015A4  0012               	return		;funcret
  6795  0015A6                     __end_of___wmul:
  6796                           	opt stack 0
  6797                           tblptru	equ	0xFF8
  6798                           tblptrh	equ	0xFF7
  6799                           tblptrl	equ	0xFF6
  6800                           tablat	equ	0xFF5
  6801                           prodh	equ	0xFF4
  6802                           prodl	equ	0xFF3
  6803                           intcon	equ	0xFF2
  6804                           intcon2	equ	0xFF1
  6805                           postinc0	equ	0xFEE
  6806                           wreg	equ	0xFE8
  6807                           postdec1	equ	0xFE5
  6808                           fsr1l	equ	0xFE1
  6809                           indf2	equ	0xFDF
  6810                           postinc2	equ	0xFDE
  6811                           postdec2	equ	0xFDD
  6812                           fsr2h	equ	0xFDA
  6813                           fsr2l	equ	0xFD9
  6814                           status	equ	0xFD8
  6815                           
  6816 ;; *************** function _Deactivate_Buzzer *****************
  6817 ;; Defined at:
  6818 ;;		line 340 in file "Lab10ptest.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;		None
  6821 ;; Auto vars:     Size  Location     Type
  6822 ;;		None
  6823 ;; Return value:  Size  Location     Type
  6824 ;;		None               void
  6825 ;; Registers used:
  6826 ;;		wreg, status,2
  6827 ;; Tracked objects:
  6828 ;;		On entry : 0/0
  6829 ;;		On exit  : 0/0
  6830 ;;		Unchanged: 0/0
  6831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6836 ;;Total ram usage:        0 bytes
  6837 ;; Hardware stack levels used:    1
  6838 ;; Hardware stack levels required when called:    3
  6839 ;; This function calls:
  6840 ;;		Nothing
  6841 ;; This function is called by:
  6842 ;;		_main
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           	psect	text35
  6847  0016A4                     __ptext35:
  6848                           	opt stack 0
  6849  0016A4                     _Deactivate_Buzzer:
  6850                           	opt stack 27
  6851                           
  6852                           ;Lab10ptest.c: 342: CCP2CON = 0x0;
  6853                           
  6854                           ;incstack = 0
  6855  0016A4  0E00               	movlw	0
  6856  0016A6  6EBA               	movwf	4026,c	;volatile
  6857                           
  6858                           ;Lab10ptest.c: 343: PORTBbits.RB3 = 0;
  6859  0016A8  9681               	bcf	3969,3,c	;volatile
  6860  0016AA  0012               	return		;funcret
  6861  0016AC                     __end_of_Deactivate_Buzzer:
  6862                           	opt stack 0
  6863                           tblptru	equ	0xFF8
  6864                           tblptrh	equ	0xFF7
  6865                           tblptrl	equ	0xFF6
  6866                           tablat	equ	0xFF5
  6867                           prodh	equ	0xFF4
  6868                           prodl	equ	0xFF3
  6869                           intcon	equ	0xFF2
  6870                           intcon2	equ	0xFF1
  6871                           postinc0	equ	0xFEE
  6872                           wreg	equ	0xFE8
  6873                           postdec1	equ	0xFE5
  6874                           fsr1l	equ	0xFE1
  6875                           indf2	equ	0xFDF
  6876                           postinc2	equ	0xFDE
  6877                           postdec2	equ	0xFDD
  6878                           fsr2h	equ	0xFDA
  6879                           fsr2l	equ	0xFD9
  6880                           status	equ	0xFD8
  6881                           
  6882 ;; *************** function _Activate_Buzzer *****************
  6883 ;; Defined at:
  6884 ;;		line 333 in file "Lab10ptest.c"
  6885 ;; Parameters:    Size  Location     Type
  6886 ;;		None
  6887 ;; Auto vars:     Size  Location     Type
  6888 ;;		None
  6889 ;; Return value:  Size  Location     Type
  6890 ;;		None               void
  6891 ;; Registers used:
  6892 ;;		wreg, status,2
  6893 ;; Tracked objects:
  6894 ;;		On entry : 0/0
  6895 ;;		On exit  : 0/0
  6896 ;;		Unchanged: 0/0
  6897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6902 ;;Total ram usage:        0 bytes
  6903 ;; Hardware stack levels used:    1
  6904 ;; Hardware stack levels required when called:    3
  6905 ;; This function calls:
  6906 ;;		Nothing
  6907 ;; This function is called by:
  6908 ;;		_main
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           	psect	text36
  6913  001658                     __ptext36:
  6914                           	opt stack 0
  6915  001658                     _Activate_Buzzer:
  6916                           	opt stack 27
  6917                           
  6918                           ;Lab10ptest.c: 335: PR2 = 0b11111001 ;
  6919                           
  6920                           ;incstack = 0
  6921  001658  0EF9               	movlw	249
  6922  00165A  6ECB               	movwf	4043,c	;volatile
  6923                           
  6924                           ;Lab10ptest.c: 336: T2CON = 0b00000101 ;
  6925  00165C  0E05               	movlw	5
  6926  00165E  6ECA               	movwf	4042,c	;volatile
  6927                           
  6928                           ;Lab10ptest.c: 337: CCPR2L = 0b01001010 ;
  6929  001660  0E4A               	movlw	74
  6930  001662  6EBB               	movwf	4027,c	;volatile
  6931                           
  6932                           ;Lab10ptest.c: 338: CCP2CON = 0b00111100 ;
  6933  001664  0E3C               	movlw	60
  6934  001666  6EBA               	movwf	4026,c	;volatile
  6935  001668  0012               	return		;funcret
  6936  00166A                     __end_of_Activate_Buzzer:
  6937                           	opt stack 0
  6938                           tblptru	equ	0xFF8
  6939                           tblptrh	equ	0xFF7
  6940                           tblptrl	equ	0xFF6
  6941                           tablat	equ	0xFF5
  6942                           prodh	equ	0xFF4
  6943                           prodl	equ	0xFF3
  6944                           intcon	equ	0xFF2
  6945                           intcon2	equ	0xFF1
  6946                           postinc0	equ	0xFEE
  6947                           wreg	equ	0xFE8
  6948                           postdec1	equ	0xFE5
  6949                           fsr1l	equ	0xFE1
  6950                           indf2	equ	0xFDF
  6951                           postinc2	equ	0xFDE
  6952                           postdec2	equ	0xFDD
  6953                           fsr2h	equ	0xFDA
  6954                           fsr2l	equ	0xFD9
  6955                           status	equ	0xFD8
  6956                           
  6957 ;; *************** function _chkisr *****************
  6958 ;; Defined at:
  6959 ;;		line 95 in file "Lab10ptest.c"
  6960 ;; Parameters:    Size  Location     Type
  6961 ;;		None
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;		None
  6964 ;; Return value:  Size  Location     Type
  6965 ;;		None               void
  6966 ;; Registers used:
  6967 ;;		wreg, status,2, status,0, cstack
  6968 ;; Tracked objects:
  6969 ;;		On entry : 0/0
  6970 ;;		On exit  : 0/0
  6971 ;;		Unchanged: 0/0
  6972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6975 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6976 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6977 ;;Total ram usage:       14 bytes
  6978 ;; Hardware stack levels used:    1
  6979 ;; Hardware stack levels required when called:    2
  6980 ;; This function calls:
  6981 ;;		_INT0_isr
  6982 ;;		_TIMER1_isr
  6983 ;; This function is called by:
  6984 ;;		Interrupt level 2
  6985 ;; This function uses a non-reentrant model
  6986 ;;
  6987                           
  6988                           	psect	intcode
  6989  000008                     __pintcode:
  6990                           	opt stack 0
  6991  000008                     _chkisr:
  6992                           	opt stack 20
  6993                           
  6994                           ;incstack = 0
  6995  000008  CFFA F003          	movff	pclath,??_chkisr
  6996  00000C  CFFB F004          	movff	pclatu,??_chkisr+1
  6997  000010  CFE9 F005          	movff	fsr0l,??_chkisr+2
  6998  000014  ED77  F008         	call	int_func,f	;refresh shadow registers
  6999                           pclatu	equ	0xFFB
  7000                           pclath	equ	0xFFA
  7001                           tblptru	equ	0xFF8
  7002                           tblptrh	equ	0xFF7
  7003                           tblptrl	equ	0xFF6
  7004                           tablat	equ	0xFF5
  7005                           prodh	equ	0xFF4
  7006                           prodl	equ	0xFF3
  7007                           intcon	equ	0xFF2
  7008                           intcon2	equ	0xFF1
  7009                           postinc0	equ	0xFEE
  7010                           fsr0l	equ	0xFE9
  7011                           wreg	equ	0xFE8
  7012                           postdec1	equ	0xFE5
  7013                           fsr1l	equ	0xFE1
  7014                           indf2	equ	0xFDF
  7015                           postinc2	equ	0xFDE
  7016                           postdec2	equ	0xFDD
  7017                           fsr2h	equ	0xFDA
  7018                           fsr2l	equ	0xFD9
  7019                           status	equ	0xFD8
  7020                           
  7021                           	psect	intcode_body
  7022  0010EE                     __pintcode_body:
  7023                           	opt stack 20
  7024  0010EE                     int_func:
  7025                           	opt stack 20
  7026  0010EE  0006               	pop		; remove dummy address from shadow register refresh
  7027  0010F0  CFEA F006          	movff	fsr0h,??_chkisr+3
  7028  0010F4  CFE1 F007          	movff	fsr1l,??_chkisr+4
  7029  0010F8  CFE2 F008          	movff	fsr1h,??_chkisr+5
  7030  0010FC  CFD9 F009          	movff	fsr2l,??_chkisr+6
  7031  001100  CFDA F00A          	movff	fsr2h,??_chkisr+7
  7032  001104  CFF3 F00B          	movff	prodl,??_chkisr+8
  7033  001108  CFF4 F00C          	movff	prodh,??_chkisr+9
  7034  00110C  CFF6 F00D          	movff	tblptrl,??_chkisr+10
  7035  001110  CFF7 F00E          	movff	tblptrh,??_chkisr+11
  7036  001114  CFF8 F00F          	movff	tblptru,??_chkisr+12
  7037  001118  CFF5 F010          	movff	tablat,??_chkisr+13
  7038                           
  7039                           ;Lab10ptest.c: 97: if (PIR1bits.TMR1IF == 1) TIMER1_isr();
  7040  00111C  A09E               	btfss	3998,0,c	;volatile
  7041  00111E  D003               	goto	i2l2134
  7042  001120  EC4C  F00B         	call	_TIMER1_isr	;wreg free
  7043  001124  D000               	goto	i2l2134
  7044  001126                     i2l2134:
  7045                           
  7046                           ;Lab10ptest.c: 98: if (INTCONbits.INT0IF == 1) INT0_isr();
  7047  001126  A2F2               	btfss	intcon,1,c	;volatile
  7048  001128  D003               	goto	i2l337
  7049  00112A  EC3B  F003         	call	_INT0_isr	;wreg free
  7050  00112E  D000               	goto	i2l337
  7051  001130                     i2l337:
  7052  001130  C010  FFF5         	movff	??_chkisr+13,tablat
  7053  001134  C00F  FFF8         	movff	??_chkisr+12,tblptru
  7054  001138  C00E  FFF7         	movff	??_chkisr+11,tblptrh
  7055  00113C  C00D  FFF6         	movff	??_chkisr+10,tblptrl
  7056  001140  C00C  FFF4         	movff	??_chkisr+9,prodh
  7057  001144  C00B  FFF3         	movff	??_chkisr+8,prodl
  7058  001148  C00A  FFDA         	movff	??_chkisr+7,fsr2h
  7059  00114C  C009  FFD9         	movff	??_chkisr+6,fsr2l
  7060  001150  C008  FFE2         	movff	??_chkisr+5,fsr1h
  7061  001154  C007  FFE1         	movff	??_chkisr+4,fsr1l
  7062  001158  C006  FFEA         	movff	??_chkisr+3,fsr0h
  7063  00115C  C005  FFE9         	movff	??_chkisr+2,fsr0l
  7064  001160  C004  FFFB         	movff	??_chkisr+1,pclatu
  7065  001164  C003  FFFA         	movff	??_chkisr,pclath
  7066  001168  0011               	retfie		f
  7067  00116A                     __end_of_chkisr:
  7068                           	opt stack 0
  7069                           pclatu	equ	0xFFB
  7070                           pclath	equ	0xFFA
  7071                           tblptru	equ	0xFF8
  7072                           tblptrh	equ	0xFF7
  7073                           tblptrl	equ	0xFF6
  7074                           tablat	equ	0xFF5
  7075                           prodh	equ	0xFF4
  7076                           prodl	equ	0xFF3
  7077                           intcon	equ	0xFF2
  7078                           intcon2	equ	0xFF1
  7079                           postinc0	equ	0xFEE
  7080                           fsr0h	equ	0xFEA
  7081                           fsr0l	equ	0xFE9
  7082                           wreg	equ	0xFE8
  7083                           postdec1	equ	0xFE5
  7084                           fsr1h	equ	0xFE2
  7085                           fsr1l	equ	0xFE1
  7086                           indf2	equ	0xFDF
  7087                           postinc2	equ	0xFDE
  7088                           postdec2	equ	0xFDD
  7089                           fsr2h	equ	0xFDA
  7090                           fsr2l	equ	0xFD9
  7091                           status	equ	0xFD8
  7092                           
  7093 ;; *************** function _TIMER1_isr *****************
  7094 ;; Defined at:
  7095 ;;		line 101 in file "Lab10ptest.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;		None
  7098 ;; Auto vars:     Size  Location     Type
  7099 ;;		None
  7100 ;; Return value:  Size  Location     Type
  7101 ;;		None               void
  7102 ;; Registers used:
  7103 ;;		wreg, status,2
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7113 ;;Total ram usage:        0 bytes
  7114 ;; Hardware stack levels used:    1
  7115 ;; This function calls:
  7116 ;;		Nothing
  7117 ;; This function is called by:
  7118 ;;		_chkisr
  7119 ;; This function uses a non-reentrant model
  7120 ;;
  7121                           
  7122                           	psect	text38
  7123  001698                     __ptext38:
  7124                           	opt stack 0
  7125  001698                     _TIMER1_isr:
  7126                           	opt stack 21
  7127                           
  7128                           ;Lab10ptest.c: 103: Nec_state = 0;
  7129                           
  7130                           ;incstack = 0
  7131  001698  0E00               	movlw	0
  7132  00169A  6E67               	movwf	_Nec_state,c
  7133                           
  7134                           ;Lab10ptest.c: 104: INTCON2bits.INTEDG0 = 0;
  7135  00169C  9CF1               	bcf	intcon2,6,c	;volatile
  7136                           
  7137                           ;Lab10ptest.c: 105: T1CONbits.TMR1ON = 0;
  7138  00169E  90CD               	bcf	4045,0,c	;volatile
  7139                           
  7140                           ;Lab10ptest.c: 106: PIR1bits.TMR1IF = 0;
  7141  0016A0  909E               	bcf	3998,0,c	;volatile
  7142  0016A2  0012               	return		;funcret
  7143  0016A4                     __end_of_TIMER1_isr:
  7144                           	opt stack 0
  7145                           pclatu	equ	0xFFB
  7146                           pclath	equ	0xFFA
  7147                           tblptru	equ	0xFF8
  7148                           tblptrh	equ	0xFF7
  7149                           tblptrl	equ	0xFF6
  7150                           tablat	equ	0xFF5
  7151                           prodh	equ	0xFF4
  7152                           prodl	equ	0xFF3
  7153                           intcon	equ	0xFF2
  7154                           intcon2	equ	0xFF1
  7155                           postinc0	equ	0xFEE
  7156                           fsr0h	equ	0xFEA
  7157                           fsr0l	equ	0xFE9
  7158                           wreg	equ	0xFE8
  7159                           postdec1	equ	0xFE5
  7160                           fsr1h	equ	0xFE2
  7161                           fsr1l	equ	0xFE1
  7162                           indf2	equ	0xFDF
  7163                           postinc2	equ	0xFDE
  7164                           postdec2	equ	0xFDD
  7165                           fsr2h	equ	0xFDA
  7166                           fsr2l	equ	0xFD9
  7167                           status	equ	0xFD8
  7168                           
  7169 ;; *************** function _INT0_isr *****************
  7170 ;; Defined at:
  7171 ;;		line 160 in file "Lab10ptest.c"
  7172 ;; Parameters:    Size  Location     Type
  7173 ;;		None
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;		None
  7176 ;; Return value:  Size  Location     Type
  7177 ;;		None               void
  7178 ;; Registers used:
  7179 ;;		wreg, status,2, status,0, cstack
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7187 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7188 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7189 ;;Total ram usage:        2 bytes
  7190 ;; Hardware stack levels used:    1
  7191 ;; Hardware stack levels required when called:    1
  7192 ;; This function calls:
  7193 ;;		_force_nec_state0
  7194 ;; This function is called by:
  7195 ;;		_chkisr
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           
  7199                           	psect	text39
  7200  000676                     __ptext39:
  7201                           	opt stack 0
  7202  000676                     _INT0_isr:
  7203                           	opt stack 20
  7204                           
  7205                           ;Lab10ptest.c: 162: INTCONbits.INT0IF = 0;
  7206                           
  7207                           ;incstack = 0
  7208  000676  92F2               	bcf	intcon,1,c	;volatile
  7209                           
  7210                           ;Lab10ptest.c: 163: if (Nec_state != 0)
  7211  000678  5067               	movf	_Nec_state,w,c
  7212  00067A  B4D8               	btfsc	status,2,c
  7213  00067C  D09A               	goto	i2l1756
  7214                           
  7215                           ;Lab10ptest.c: 164: {
  7216                           ;Lab10ptest.c: 165: Time_Elapsed = (TMR1H << 8) | TMR1L;
  7217  00067E  50CE               	movf	4046,w,c	;volatile
  7218  000680  CFCF F001          	movff	4047,??_INT0_isr	;volatile
  7219  000684  6A02               	clrf	(??_INT0_isr+1)& (0+255),c
  7220  000686  C001  F002         	movff	??_INT0_isr,??_INT0_isr+1
  7221  00068A  6A01               	clrf	??_INT0_isr,c
  7222  00068C  1001               	iorwf	??_INT0_isr,w,c
  7223  00068E  6E5E               	movwf	_Time_Elapsed,c
  7224  000690  5002               	movf	??_INT0_isr+1,w,c
  7225  000692  6E5F               	movwf	_Time_Elapsed+1,c
  7226                           
  7227                           ;Lab10ptest.c: 166: TMR1H = 0;
  7228  000694  0E00               	movlw	0
  7229  000696  6ECF               	movwf	4047,c	;volatile
  7230                           
  7231                           ;Lab10ptest.c: 167: TMR1L = 0;
  7232  000698  0E00               	movlw	0
  7233  00069A  6ECE               	movwf	4046,c	;volatile
  7234                           
  7235                           ;Lab10ptest.c: 168: }
  7236                           ;Lab10ptest.c: 170: switch(Nec_state)
  7237  00069C  D08A               	goto	i2l1756
  7238  00069E                     i2l1686:
  7239                           
  7240                           ;Lab10ptest.c: 173: {
  7241                           ;Lab10ptest.c: 175: TMR1H = 0;
  7242  00069E  0E00               	movlw	0
  7243  0006A0  6ECF               	movwf	4047,c	;volatile
  7244                           
  7245                           ;Lab10ptest.c: 176: TMR1L = 0;
  7246  0006A2  0E00               	movlw	0
  7247  0006A4  6ECE               	movwf	4046,c	;volatile
  7248                           
  7249                           ;Lab10ptest.c: 177: PIR1bits.TMR1IF = 0;
  7250  0006A6  909E               	bcf	3998,0,c	;volatile
  7251                           
  7252                           ;Lab10ptest.c: 178: T1CON= 0x90;
  7253  0006A8  0E90               	movlw	144
  7254  0006AA  6ECD               	movwf	4045,c	;volatile
  7255                           
  7256                           ;Lab10ptest.c: 179: T1CONbits.TMR1ON = 1;
  7257  0006AC  80CD               	bsf	4045,0,c	;volatile
  7258                           
  7259                           ;Lab10ptest.c: 180: bit_count = 0;
  7260  0006AE  0E00               	movlw	0
  7261  0006B0  6E69               	movwf	_bit_count,c
  7262                           
  7263                           ;Lab10ptest.c: 181: Nec_code = 0;
  7264  0006B2  0E00               	movlw	0
  7265  0006B4  6E5A               	movwf	_Nec_code,c
  7266  0006B6  0E00               	movlw	0
  7267  0006B8  6E5B               	movwf	_Nec_code+1,c
  7268  0006BA  0E00               	movlw	0
  7269  0006BC  6E5C               	movwf	_Nec_code+2,c
  7270  0006BE  0E00               	movlw	0
  7271  0006C0  6E5D               	movwf	_Nec_code+3,c
  7272                           
  7273                           ;Lab10ptest.c: 182: Nec_state = 1;
  7274  0006C2  0E01               	movlw	1
  7275  0006C4  6E67               	movwf	_Nec_state,c
  7276  0006C6  D073               	goto	i2l1750
  7277                           
  7278                           ;Lab10ptest.c: 184: return;
  7279                           
  7280                           ;Lab10ptest.c: 183: INTCON2bits.INTEDG0 = 1;
  7281  0006C8  D085               	goto	i2l382
  7282  0006CA                     i2l1696:
  7283                           
  7284                           ;Lab10ptest.c: 188: {
  7285                           ;Lab10ptest.c: 189: if ((Time_Elapsed > 8500) && (Time_Elapsed < 9500))
  7286  0006CA  0E35               	movlw	53
  7287  0006CC  5C5E               	subwf	_Time_Elapsed,w,c
  7288  0006CE  0E21               	movlw	33
  7289  0006D0  585F               	subwfb	_Time_Elapsed+1,w,c
  7290  0006D2  A0D8               	btfss	status,0,c
  7291  0006D4  D009               	goto	i2l1702
  7292  0006D6  0E1C               	movlw	28
  7293  0006D8  5C5E               	subwf	_Time_Elapsed,w,c
  7294  0006DA  0E25               	movlw	37
  7295  0006DC  585F               	subwfb	_Time_Elapsed+1,w,c
  7296  0006DE  B0D8               	btfsc	status,0,c
  7297  0006E0  D003               	goto	i2l1702
  7298                           
  7299                           ;Lab10ptest.c: 190: {
  7300                           ;Lab10ptest.c: 191: Nec_state = 2;
  7301  0006E2  0E02               	movlw	2
  7302  0006E4  6E67               	movwf	_Nec_state,c
  7303                           
  7304                           ;Lab10ptest.c: 192: }
  7305  0006E6  D02A               	goto	i2l1728
  7306  0006E8                     i2l1702:
  7307                           
  7308                           ;Lab10ptest.c: 193: else
  7309                           ;Lab10ptest.c: 194: {
  7310                           ;Lab10ptest.c: 195: force_nec_state0();
  7311  0006E8  EC56  F00B         	call	_force_nec_state0	;wreg free
  7312  0006EC  D027               	goto	i2l1728
  7313  0006EE  D026               	goto	i2l1728
  7314                           
  7315                           ;Lab10ptest.c: 199: return;
  7316                           
  7317                           ;Lab10ptest.c: 197: }
  7318                           ;Lab10ptest.c: 198: INTCON2bits.INTEDG0 = 0;
  7319  0006F0  D071               	goto	i2l382
  7320  0006F2                     i2l1708:
  7321                           
  7322                           ;Lab10ptest.c: 203: {
  7323                           ;Lab10ptest.c: 204: if ((Time_Elapsed > 4000) && (Time_Elapsed < 5000))
  7324  0006F2  0EA1               	movlw	161
  7325  0006F4  5C5E               	subwf	_Time_Elapsed,w,c
  7326  0006F6  0E0F               	movlw	15
  7327  0006F8  585F               	subwfb	_Time_Elapsed+1,w,c
  7328  0006FA  A0D8               	btfss	status,0,c
  7329  0006FC  D009               	goto	i2l1714
  7330  0006FE  0E88               	movlw	136
  7331  000700  5C5E               	subwf	_Time_Elapsed,w,c
  7332  000702  0E13               	movlw	19
  7333  000704  585F               	subwfb	_Time_Elapsed+1,w,c
  7334  000706  B0D8               	btfsc	status,0,c
  7335  000708  D003               	goto	i2l1714
  7336  00070A                     
  7337                           ;Lab10ptest.c: 205: {
  7338                           ;Lab10ptest.c: 206: Nec_state = 3;
  7339  00070A  0E03               	movlw	3
  7340  00070C  6E67               	movwf	_Nec_state,c
  7341                           
  7342                           ;Lab10ptest.c: 207: }
  7343  00070E  D04F               	goto	i2l1750
  7344  000710                     i2l1714:
  7345                           
  7346                           ;Lab10ptest.c: 208: else
  7347                           ;Lab10ptest.c: 209: {
  7348                           ;Lab10ptest.c: 210: force_nec_state0();
  7349  000710  EC56  F00B         	call	_force_nec_state0	;wreg free
  7350  000714  D04C               	goto	i2l1750
  7351  000716  D04B               	goto	i2l1750
  7352                           
  7353                           ;Lab10ptest.c: 214: return;
  7354                           
  7355                           ;Lab10ptest.c: 212: }
  7356                           ;Lab10ptest.c: 213: INTCON2bits.INTEDG0 = 1;
  7357  000718  D05D               	goto	i2l382
  7358  00071A                     i2l1720:
  7359                           
  7360                           ;Lab10ptest.c: 218: {
  7361                           ;Lab10ptest.c: 219: if ((Time_Elapsed > 400) && (Time_Elapsed < 700))
  7362  00071A  0E91               	movlw	145
  7363  00071C  5C5E               	subwf	_Time_Elapsed,w,c
  7364  00071E  0E01               	movlw	1
  7365  000720  585F               	subwfb	_Time_Elapsed+1,w,c
  7366  000722  A0D8               	btfss	status,0,c
  7367  000724  D008               	goto	i2l1726
  7368  000726  0EBC               	movlw	188
  7369  000728  5C5E               	subwf	_Time_Elapsed,w,c
  7370  00072A  0E02               	movlw	2
  7371  00072C  585F               	subwfb	_Time_Elapsed+1,w,c
  7372  00072E  B0D8               	btfsc	status,0,c
  7373  000730  D002               	goto	i2l1726
  7374                           
  7375                           ;Lab10ptest.c: 220: {
  7376                           ;Lab10ptest.c: 221: Nec_state = 4;
  7377  000732  0E04               	movlw	4
  7378  000734  D7D7               	goto	L15
  7379  000736                     i2l1726:
  7380                           
  7381                           ;Lab10ptest.c: 223: else
  7382                           ;Lab10ptest.c: 224: {
  7383                           ;Lab10ptest.c: 225: force_nec_state0();
  7384  000736  EC56  F00B         	call	_force_nec_state0	;wreg free
  7385  00073A  D000               	goto	i2l1728
  7386  00073C                     i2l1728:
  7387                           
  7388                           ;Lab10ptest.c: 227: }
  7389                           ;Lab10ptest.c: 228: INTCON2bits.INTEDG0 = 0;
  7390  00073C  9CF1               	bcf	intcon2,6,c	;volatile
  7391                           
  7392                           ;Lab10ptest.c: 229: return;
  7393  00073E  D04A               	goto	i2l382
  7394  000740                     i2l1732:
  7395                           
  7396                           ;Lab10ptest.c: 233: {
  7397                           ;Lab10ptest.c: 234: if ((Time_Elapsed > 400) && (Time_Elapsed < 1800))
  7398  000740  0E91               	movlw	145
  7399  000742  5C5E               	subwf	_Time_Elapsed,w,c
  7400  000744  0E01               	movlw	1
  7401  000746  585F               	subwfb	_Time_Elapsed+1,w,c
  7402  000748  A0D8               	btfss	status,0,c
  7403  00074A  D02E               	goto	i2l1748
  7404  00074C  0E08               	movlw	8
  7405  00074E  5C5E               	subwf	_Time_Elapsed,w,c
  7406  000750  0E07               	movlw	7
  7407  000752  585F               	subwfb	_Time_Elapsed+1,w,c
  7408  000754  B0D8               	btfsc	status,0,c
  7409  000756  D028               	goto	i2l1748
  7410                           
  7411                           ;Lab10ptest.c: 235: {
  7412                           ;Lab10ptest.c: 236: Nec_code = Nec_code << 1;
  7413  000758  90D8               	bcf	status,0,c
  7414  00075A  345A               	rlcf	_Nec_code,w,c
  7415  00075C  6E5A               	movwf	_Nec_code,c
  7416  00075E  345B               	rlcf	_Nec_code+1,w,c
  7417  000760  6E5B               	movwf	_Nec_code+1,c
  7418  000762  345C               	rlcf	_Nec_code+2,w,c
  7419  000764  6E5C               	movwf	_Nec_code+2,c
  7420  000766  345D               	rlcf	_Nec_code+3,w,c
  7421  000768  6E5D               	movwf	_Nec_code+3,c
  7422                           
  7423                           ;Lab10ptest.c: 237: if (Time_Elapsed > 1000)
  7424  00076A  0EE9               	movlw	233
  7425  00076C  5C5E               	subwf	_Time_Elapsed,w,c
  7426  00076E  0E03               	movlw	3
  7427  000770  585F               	subwfb	_Time_Elapsed+1,w,c
  7428  000772  A0D8               	btfss	status,0,c
  7429  000774  D00D               	goto	i2l1740
  7430                           
  7431                           ;Lab10ptest.c: 238: {
  7432                           ;Lab10ptest.c: 239: Nec_code = Nec_code + 1;
  7433  000776  0E01               	movlw	1
  7434  000778  245A               	addwf	_Nec_code,w,c
  7435  00077A  6E5A               	movwf	_Nec_code,c
  7436  00077C  0E00               	movlw	0
  7437  00077E  205B               	addwfc	_Nec_code+1,w,c
  7438  000780  6E5B               	movwf	_Nec_code+1,c
  7439  000782  0E00               	movlw	0
  7440  000784  205C               	addwfc	_Nec_code+2,w,c
  7441  000786  6E5C               	movwf	_Nec_code+2,c
  7442  000788  0E00               	movlw	0
  7443  00078A  205D               	addwfc	_Nec_code+3,w,c
  7444  00078C  6E5D               	movwf	_Nec_code+3,c
  7445  00078E  D000               	goto	i2l1740
  7446  000790                     i2l1740:
  7447                           
  7448                           ;Lab10ptest.c: 240: }
  7449                           ;Lab10ptest.c: 242: bit_count++;
  7450  000790  2A69               	incf	_bit_count,f,c
  7451                           
  7452                           ;Lab10ptest.c: 243: if (bit_count > 31)
  7453  000792  0E1F               	movlw	31
  7454  000794  6469               	cpfsgt	_bit_count,c
  7455  000796  D7B9               	goto	L16
  7456                           
  7457                           ;Lab10ptest.c: 244: {
  7458                           ;Lab10ptest.c: 245: nec_ok = 1;
  7459  000798  0E00               	movlw	0
  7460  00079A  6E63               	movwf	_nec_ok+1,c
  7461  00079C  0E01               	movlw	1
  7462  00079E  6E62               	movwf	_nec_ok,c
  7463                           
  7464                           ;Lab10ptest.c: 246: INTCONbits.INT0IE = 0;
  7465  0007A0  98F2               	bcf	intcon,4,c	;volatile
  7466                           
  7467                           ;Lab10ptest.c: 247: Nec_state = 0;
  7468  0007A2  0E00               	movlw	0
  7469  0007A4  6E67               	movwf	_Nec_state,c
  7470  0007A6  D7B1               	goto	L16
  7471  0007A8                     i2l1748:
  7472                           
  7473                           ;Lab10ptest.c: 251: else
  7474                           ;Lab10ptest.c: 252: {
  7475                           ;Lab10ptest.c: 253: force_nec_state0();
  7476  0007A8  EC56  F00B         	call	_force_nec_state0	;wreg free
  7477  0007AC  D000               	goto	i2l1750
  7478  0007AE                     i2l1750:
  7479                           
  7480                           ;Lab10ptest.c: 255: }
  7481                           ;Lab10ptest.c: 256: INTCON2bits.INTEDG0 = 1;
  7482  0007AE  8CF1               	bsf	intcon2,6,c	;volatile
  7483                           
  7484                           ;Lab10ptest.c: 258: }
  7485                           ;Lab10ptest.c: 259: }
  7486                           
  7487                           ;Lab10ptest.c: 257: return;
  7488  0007B0  D011               	goto	i2l382
  7489  0007B2                     i2l1756:
  7490  0007B2  5067               	movf	_Nec_state,w,c
  7491                           
  7492                           ; Switch size 1, requested type "space"
  7493                           ; Number of cases is 5, Range of values is 0 to 4
  7494                           ; switch strategies available:
  7495                           ; Name         Instructions Cycles
  7496                           ; simple_byte           16     9 (average)
  7497                           ;	Chosen strategy is simple_byte
  7498  0007B4  0A00               	xorlw	0	; case 0
  7499  0007B6  B4D8               	btfsc	status,2,c
  7500  0007B8  D772               	goto	i2l1686
  7501  0007BA  0A01               	xorlw	1	; case 1
  7502  0007BC  B4D8               	btfsc	status,2,c
  7503  0007BE  D785               	goto	i2l1696
  7504  0007C0  0A03               	xorlw	3	; case 2
  7505  0007C2  B4D8               	btfsc	status,2,c
  7506  0007C4  D796               	goto	i2l1708
  7507  0007C6  0A01               	xorlw	1	; case 3
  7508  0007C8  B4D8               	btfsc	status,2,c
  7509  0007CA  D7A7               	goto	i2l1720
  7510  0007CC  0A07               	xorlw	7	; case 4
  7511  0007CE  B4D8               	btfsc	status,2,c
  7512  0007D0  D7B7               	goto	i2l1732
  7513  0007D2  D000               	goto	i2l382
  7514  0007D4                     i2l382:
  7515  0007D4  0012               	return		;funcret
  7516  0007D6                     __end_of_INT0_isr:
  7517                           	opt stack 0
  7518                           pclatu	equ	0xFFB
  7519                           pclath	equ	0xFFA
  7520                           tblptru	equ	0xFF8
  7521                           tblptrh	equ	0xFF7
  7522                           tblptrl	equ	0xFF6
  7523                           tablat	equ	0xFF5
  7524                           prodh	equ	0xFF4
  7525                           prodl	equ	0xFF3
  7526                           intcon	equ	0xFF2
  7527                           intcon2	equ	0xFF1
  7528                           postinc0	equ	0xFEE
  7529                           fsr0h	equ	0xFEA
  7530                           fsr0l	equ	0xFE9
  7531                           wreg	equ	0xFE8
  7532                           postdec1	equ	0xFE5
  7533                           fsr1h	equ	0xFE2
  7534                           fsr1l	equ	0xFE1
  7535                           indf2	equ	0xFDF
  7536                           postinc2	equ	0xFDE
  7537                           postdec2	equ	0xFDD
  7538                           fsr2h	equ	0xFDA
  7539                           fsr2l	equ	0xFD9
  7540                           status	equ	0xFD8
  7541                           
  7542 ;; *************** function _force_nec_state0 *****************
  7543 ;; Defined at:
  7544 ;;		line 109 in file "Lab10ptest.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;		None
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;		None
  7549 ;; Return value:  Size  Location     Type
  7550 ;;		None               void
  7551 ;; Registers used:
  7552 ;;		wreg, status,2
  7553 ;; Tracked objects:
  7554 ;;		On entry : 0/0
  7555 ;;		On exit  : 0/0
  7556 ;;		Unchanged: 0/0
  7557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7562 ;;Total ram usage:        0 bytes
  7563 ;; Hardware stack levels used:    1
  7564 ;; This function calls:
  7565 ;;		Nothing
  7566 ;; This function is called by:
  7567 ;;		_INT0_isr
  7568 ;; This function uses a non-reentrant model
  7569 ;;
  7570                           
  7571                           	psect	text40
  7572  0016AC                     __ptext40:
  7573                           	opt stack 0
  7574  0016AC                     _force_nec_state0:
  7575                           	opt stack 20
  7576                           
  7577                           ;Lab10ptest.c: 111: Nec_state=0;
  7578                           
  7579                           ;incstack = 0
  7580  0016AC  0E00               	movlw	0
  7581  0016AE  6E67               	movwf	_Nec_state,c
  7582                           
  7583                           ;Lab10ptest.c: 112: T1CONbits.TMR1ON = 0;
  7584  0016B0  90CD               	bcf	4045,0,c	;volatile
  7585  0016B2  0012               	return		;funcret
  7586  0016B4                     __end_of_force_nec_state0:
  7587                           	opt stack 0
  7588                           pclatu	equ	0xFFB
  7589                           pclath	equ	0xFFA
  7590                           tblptru	equ	0xFF8
  7591                           tblptrh	equ	0xFF7
  7592                           tblptrl	equ	0xFF6
  7593                           tablat	equ	0xFF5
  7594                           prodh	equ	0xFF4
  7595                           prodl	equ	0xFF3
  7596                           intcon	equ	0xFF2
  7597                           intcon2	equ	0xFF1
  7598                           postinc0	equ	0xFEE
  7599                           fsr0h	equ	0xFEA
  7600                           fsr0l	equ	0xFE9
  7601                           wreg	equ	0xFE8
  7602                           postdec1	equ	0xFE5
  7603                           fsr1h	equ	0xFE2
  7604                           fsr1l	equ	0xFE1
  7605                           indf2	equ	0xFDF
  7606                           postinc2	equ	0xFDE
  7607                           postdec2	equ	0xFDD
  7608                           fsr2h	equ	0xFDA
  7609                           fsr2l	equ	0xFD9
  7610                           status	equ	0xFD8
  7611                           pclatu	equ	0xFFB
  7612                           pclath	equ	0xFFA
  7613                           tblptru	equ	0xFF8
  7614                           tblptrh	equ	0xFF7
  7615                           tblptrl	equ	0xFF6
  7616                           tablat	equ	0xFF5
  7617                           prodh	equ	0xFF4
  7618                           prodl	equ	0xFF3
  7619                           intcon	equ	0xFF2
  7620                           intcon2	equ	0xFF1
  7621                           postinc0	equ	0xFEE
  7622                           fsr0h	equ	0xFEA
  7623                           fsr0l	equ	0xFE9
  7624                           wreg	equ	0xFE8
  7625                           postdec1	equ	0xFE5
  7626                           fsr1h	equ	0xFE2
  7627                           fsr1l	equ	0xFE1
  7628                           indf2	equ	0xFDF
  7629                           postinc2	equ	0xFDE
  7630                           postdec2	equ	0xFDD
  7631                           fsr2h	equ	0xFDA
  7632                           fsr2l	equ	0xFD9
  7633                           status	equ	0xFD8
  7634                           
  7635                           	psect	rparam
  7636  0000                     pclatu	equ	0xFFB
  7637                           pclath	equ	0xFFA
  7638                           tblptru	equ	0xFF8
  7639                           tblptrh	equ	0xFF7
  7640                           tblptrl	equ	0xFF6
  7641                           tablat	equ	0xFF5
  7642                           prodh	equ	0xFF4
  7643                           prodl	equ	0xFF3
  7644                           intcon	equ	0xFF2
  7645                           intcon2	equ	0xFF1
  7646                           postinc0	equ	0xFEE
  7647                           fsr0h	equ	0xFEA
  7648                           fsr0l	equ	0xFE9
  7649                           wreg	equ	0xFE8
  7650                           postdec1	equ	0xFE5
  7651                           fsr1h	equ	0xFE2
  7652                           fsr1l	equ	0xFE1
  7653                           indf2	equ	0xFDF
  7654                           postinc2	equ	0xFDE
  7655                           postdec2	equ	0xFDD
  7656                           fsr2h	equ	0xFDA
  7657                           fsr2l	equ	0xFD9
  7658                           status	equ	0xFD8


Data Sizes:
    Strings     67
    Constant    507
    Data        253
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     67     108
    BANK0           128     11     116
    BANK1           256      0     157
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    nbr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 84
		 -> NULL(NULL[0]), buffer(BANK1[31]), txt1(BANK1[84]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 84
		 -> NULL(NULL[0]), buffer(BANK1[31]), txt1(BANK1[84]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[8]), STR_2(CODE[20]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), buffer(BANK1[31]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), buffer(BANK1[31]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), buffer(BANK1[31]), 

    txt	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), buffer(BANK1[31]), 

    drawtext@_text	PTR unsigned char  size(2) Largest target is 84
		 -> NULL(NULL[0]), buffer(BANK1[31]), txt1(BANK1[84]), 


Critical Paths under _main in COMRAM

    _main->_drawtext
    _main->_fillCircle
    _printf->___lldiv
    _init_UART->_OpenUSART
    _fillCircle->_fillCircleHelper
    _fillCircleHelper->_drawFastVLine
    _drawCircle->_drawPixel
    _Initialize_Screen->_drawtext
    _fillScreen->_fillRectangle
    _fillRectangle->_setAddrWindow
    _drawtext->_drawChar
    _drawChar->_fillRect
    _fillRect->_drawFastVLine
    _drawFastVLine->_setAddrWindow
    _drawPixel->_setAddrWindow
    _setAddrWindow->_write_command
    _setAddrWindow->_write_data
    _Rcmd3->_delay_ms
    _Rcmd2red->_write_command
    _Rcmd2red->_write_data
    _Rcmd1->_delay_ms
    _write_data->_spiwrite
    _write_command->_spiwrite
    _LCD_Reset->_delay_ms
    _delay_ms->___wmul

Critical Paths under _chkisr in COMRAM

    _chkisr->_INT0_isr

Critical Paths under _main in BANK0

    _main->_drawtext
    _Initialize_Screen->_drawtext

Critical Paths under _chkisr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _chkisr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _chkisr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _chkisr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _chkisr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _chkisr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _chkisr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _chkisr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _chkisr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _chkisr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _chkisr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _chkisr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _chkisr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _chkisr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _chkisr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _chkisr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   51611
                                             66 COMRAM     1     1      0
                                              7 BANK0      4     4      0
                    _Activate_Buzzer
                  _Deactivate_Buzzer
                  _Initialize_Screen
                         _drawCircle
                           _drawtext
                         _fillCircle
                          _init_UART
                             _printf
                             _set_d1
                             _set_d2
                             _set_d3
                       _wait_one_sec
 ---------------------------------------------------------------------------------
 (1) _wait_one_sec                                         2     2      0      68
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _set_d3                                               1     1      0      31
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_d2                                               1     1      0      31
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_d1                                               1     1      0      31
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _printf                                              34    26      8    2317
                                             29 COMRAM    25    17      8
                            ___lldiv
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      31
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             16 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     371
                                             16 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0     375
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     375
                                             16 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _fillCircle                                           8     0      8    8344
                                             58 COMRAM     8     0      8
                      _drawFastVLine
                   _fillCircleHelper
 ---------------------------------------------------------------------------------
 (2) _fillCircleHelper                                    24    12     12    4703
                                             34 COMRAM    24    12     12
                      _drawFastVLine
 ---------------------------------------------------------------------------------
 (1) _drawCircle                                          20    12      8    6484
                                             27 COMRAM    20    12      8
                          _drawPixel
 ---------------------------------------------------------------------------------
 (1) _Initialize_Screen                                    0     0      0   20983
                          _LCD_Reset
            _TFT_GreenTab_Initialize
                           _drawtext
                         _fillScreen
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     369
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _fillScreen                                           2     0      2    2192
                                             35 COMRAM     2     0      2
                      _fillRectangle
 ---------------------------------------------------------------------------------
 (3) _fillRectangle                                       12     7      5    2096
                                             23 COMRAM    12     7      5
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (1) _drawtext                                            17     9      8   12526
                                             56 COMRAM    10     2      8
                                              0 BANK0      7     7      0
                           _drawChar
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     195
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _drawChar                                            11     4      7   10644
                                             45 COMRAM    11     4      7
                             ___wmul
                          _drawPixel
                           _fillRect
 ---------------------------------------------------------------------------------
 (3) _fillRect                                            11     6      5    3876
                                             34 COMRAM    11     6      5
                      _drawFastVLine
 ---------------------------------------------------------------------------------
 (3) _drawFastVLine                                       11     7      4    3102
                                             23 COMRAM    11     7      4
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (3) _drawPixel                                            4     1      3    4207
                                             23 COMRAM     4     1      3
                      _setAddrWindow
                         _write_data
 ---------------------------------------------------------------------------------
 (4) _setAddrWindow                                        4     1      3    1034
                                             19 COMRAM     4     1      3
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _TFT_GreenTab_Initialize                              0     0      0    4104
                              _Rcmd1
                           _Rcmd2red
                              _Rcmd3
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd3                                                0     0      0    1922
                           _delay_ms
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd2red                                             0     0      0     130
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd1                                                0     0      0    1922
                           _delay_ms
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (5) _write_data                                           1     1      0      65
                                             18 COMRAM     1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (5) _write_command                                        1     1      0      65
                                             18 COMRAM     1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (4) _spiwrite                                             2     2      0      34
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Reset                                            0     0      0    1792
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             6     4      2    1792
                                             22 COMRAM     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     752
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Deactivate_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Activate_Buzzer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _chkisr                                              14    14      0       0
                                              2 COMRAM    14    14      0
                           _INT0_isr
                         _TIMER1_isr
 ---------------------------------------------------------------------------------
 (10) _TIMER1_isr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _INT0_isr                                            2     2      0       0
                                              0 COMRAM     2     2      0
                   _force_nec_state0
 ---------------------------------------------------------------------------------
 (11) _force_nec_state0                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Activate_Buzzer
   _Deactivate_Buzzer
   _Initialize_Screen
     _LCD_Reset
       _delay_ms
         ___wmul
     _TFT_GreenTab_Initialize
       _Rcmd1
         _delay_ms
           ___wmul
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _Rcmd2red
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _Rcmd3
         _delay_ms
           ___wmul
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _write_command
         _spiwrite
       _write_data
         _spiwrite
     _drawtext
       _drawChar
         ___wmul
         _drawPixel
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_data
             _spiwrite
         _fillRect
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
       _strlen
     _fillScreen
       _fillRectangle
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _spiwrite
     _strcpy
   _drawCircle
     _drawPixel
       _setAddrWindow
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _write_data
         _spiwrite
   _drawtext
     _drawChar
       ___wmul
       _drawPixel
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _write_data
           _spiwrite
       _fillRect
         _drawFastVLine
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _spiwrite
     _strlen
   _fillCircle
     _drawFastVLine
       _setAddrWindow
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _spiwrite
     _fillCircleHelper
       _drawFastVLine
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _spiwrite
   _init_UART
     _OpenUSART
   _printf
     ___lldiv
     ___wmul
     _isdigit
     _putch
   _set_d1
   _set_d2
   _set_d3
   _wait_one_sec

 _chkisr (ROOT)
   _INT0_isr
     _force_nec_state0
   _TIMER1_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      9D       7       61.3%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      B      74       5       90.6%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     43      6C       1       85.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17D      34        0.0%
DATA                 0      0     17D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Nov 15 14:31:55 2022

                     drawCircle@f 002A                       drawCircle@r 0020  
                     drawCircle@x 002C                       drawCircle@y 002E  
                               _i 006B                       _SSPSTATbits 000FC7  
                    drawCircle@x0 001C                      drawCircle@y0 001E  
                              l35 13D6                                l45 1640  
                              l95 0FEC                                l89 1552  
                              _d1 00AA                                _d2 00BF  
                              _d3 00D4               ___wmul@multiplicand 0013  
                             l111 092A                               l120 0880  
                             l113 0804                               l151 0E26  
                             l152 0E48                               l148 0E4A  
                             l149 0DB6                               l510 15A4  
                             l502 11B0                               l326 168E  
                             l350 12F6                               l159 058A  
                             l503 11B2                               l351 12FE  
                             l504 11BC                               l352 1302  
                             l360 129E                               l177 099A  
                             l505 11BE                               l353 1308  
                             l361 12A4                               l354 1338  
                             l362 12AC                               l507 11D8  
                             l347 12EC                               l363 12B0  
                             l371 124C                               l419 15C8  
                             l364 12B6                               l372 1252  
                             l453 0114                               l349 12F0  
                             l365 12E6                               l373 125A  
                             l358 129A                               l374 125E  
                             l375 1264                               l376 1294  
                             l369 1248                               l474 02BC  
                             l498 1196                               l941 15EA  
                             l970 0F54                               _PR2 000FCB  
               _Deactivate_Buzzer 16A4                               _nbr 0060  
                             _txt 0064                               prod 000FF3  
                             wreg 000FE8                ?_Deactivate_Buzzer 0001  
                 ??_fillRectangle 001D                      __CFG_LVP$OFF 000000  
         _TFT_GreenTab_Initialize 1554                      __CFG_WDT$OFF 000000  
                  drawFastVLine@h 0019                              l1072 14B2  
                  drawFastVLine@x 0022                    drawFastVLine@y 0018  
                            l3324 1534                              l3332 1436  
                            l4212 0314                              l4230 0360  
                            l3336 1452                              l3520 0E2A  
                            l3504 0DEE                              l3282 0F76  
                            l3442 0800                              l3434 07E6  
                            l3530 0E44                              l3602 09FC  
                            l4242 03A6                              l4234 037A  
                            l3452 0840                              l3444 0808  
                            l3524 0E34                              l3516 0E1C  
                            l4252 046E                              l3286 0FAE  
                            l3454 0874                              l3438 07F2  
                            l3606 0A4E                              l4238 039C  
                            l3296 0FD4                              l3472 08F6  
                            l3464 08A2                              l3480 0926  
                            l3456 0878                              l3448 0810  
                            l3560 0BF0                              l3640 1186  
                            l3704 0EFC                              l3298 0FE2  
                            l3474 091E                              l3466 08CA  
                            l3706 0F0A                              l3802 1310  
                            l3572 0C60                              l3564 0C0E  
                            l3548 0BA0                              l3740 0570  
                            l3644 118E                              l3636 117C  
                            l3716 0F44                              l3708 0F12  
                            l3900 01F8                              l3486 1480  
                            l3574 0C68                              l3814 126C  
                            l3488 1486                              l3656 11A8  
                            l3648 119A                              l3912 028C  
                            l3904 0210                              l3832 0026  
                            l3808 12BE                              l3920 15AE  
                            l3498 0D80                              l3682 14FC  
                            l3586 0980                              l3906 021C  
                            l3842 004E                              l3914 02A0  
                            l3684 1506                              l3860 00EE  
                            l3844 0064                              l3836 0036  
                            l3924 15C2                              l3694 15E2  
                            l3870 015A                              l3838 0044  
                            l3768 0660                              l3880 019A  
                            l3872 015E                              l3856 00E4  
                            l3848 0082                              l3890 01CC  
                            l3866 0134                              l3884 019E  
                            l3876 016A                              l3894 01D8  
                            l3888 01C2                              l3898 01F0  
                            STR_1 FFBC                              STR_2 FFD2  
                            STR_3 FFF7                              STR_4 FFE6  
                            u2400 0DAE                              u2170 0FA4  
                            u2330 08D8                              u2410 0DE4  
                            u2470 0BCA                              _TRMT 007D61  
             ??_Deactivate_Buzzer 0011                              _main 02BE  
                            _font FDC1                              fsr0h 000FEA  
                            _txt1 012A                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              _wrap 0059  
                            pclat 000FFA                __size_of_LCD_Reset 0012  
                            prodh 000FF4                              prodl 000FF3  
                            start 0018                   ??_drawFastVLine 001C  
                    ___param_bank 000010                       ?_TIMER1_isr 0001  
                __end_of_INT0_isr 07D6         __end_of_Deactivate_Buzzer 16AC  
                 drawFastVLine@hi 0020                   drawFastVLine@lo 0021  
                           ?_main 0001                   drawCircle@ddF_x 0026  
                 drawCircle@ddF_y 0028                   __end_of___lldiv 0F66  
                           _T1CON 000FCD                             _T2CON 000FCA  
                           _T3CON 000FB1                             i2l337 1130  
                           i2l382 07D4                   drawCircle@color 0022  
                           _RCSTA 000FAB                             _TMR1H 000FCF  
                           _TMR3H 000FB3                             _TMR1L 000FCE  
                           _TMR3L 000FB2                             _SPBRG 000FAF  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                             _TXREG 000FAD  
                           _TXSTA 000FAC                             _Rcmd1 0A64  
                           _Rcmd3 0C7E                             _nRBPU 007F8F  
                           _color 0080                             _font2 FEC0  
           fillCircleHelper@ddF_x 0031             fillCircleHelper@ddF_y 0033  
                 __end_of_isdigit 15EC             fillCircleHelper@delta 002B  
                           _putch 168A             fillCircleHelper@color 002D  
                           main@i 00F1                    __CFG_BOREN$OFF 000000  
                           tablat 000FF5                             status 000FD8  
                 write_data@data_ 0013                   __initialization 0FEE  
                    __end_of_main 04C8                      __end_of_font FEC0  
                __end_of_Rcmd2red 14F2                            ??_main 0043  
                   __activetblptr 000002                 __end_of_LCD_Reset 1658  
       ??_TFT_GreenTab_Initialize 001D                            ?_Rcmd1 0001  
                          ?_Rcmd3 0001                            _ADCON1 000FC1  
                          _CCPR2L 000FBB                            ?_putch 0001  
                          i2l2134 1126                            i2l1702 06E8  
                          i2l1720 071A                            i2l1714 0710  
                          i2l1740 0790                            i2l1732 0740  
                          i2l1708 06F2                            i2l1750 07AE  
                          i2l1726 0736                            i2l1728 073C  
                          i2l1748 07A8                            i2l1756 07B2  
                          i2l1686 069E                            i2l1696 06CA  
                          _OSCCON 000FD3               __size_of_TIMER1_isr 000C  
                          _SPBRGH 000FB0                            _SSPBUF 000FC9  
                _force_nec_state0 16AC                  __end_of_delay_ms 13DE  
                __end_of_fillRect 1476                  __end_of_drawChar 092C  
              __size_of_OpenUSART 0070          __size_of_Activate_Buzzer 0012  
                          ___wmul 157E         __size_of_fillCircleHelper 0138  
                __end_of_drawtext 0C7E                         ??___lldiv 0019  
                          _chkisr 0008                            _array1 0044  
                          _buffer 017E                            _nec_ok 0062  
                          clear_0 0FF4                            clear_1 1000  
                          _set_d1 12E8                            _set_d2 1296  
                          _set_d3 1244        __size_of_Deactivate_Buzzer 0008  
                          _printf 001C                      drawtext@size 0040  
                          _strcpy 14F2                            _strlen 1476  
                    __pdataCOMRAM 0044                         ??_isdigit 0011  
                    __mediumconst FDC0                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                          putch@c 0011                  __end_of_spiwrite 1646  
                      __accesstop 0080           __end_of__initialization 1066  
                       ?_INT0_isr 0001                     ___rparam_used 000001  
                   __end_of_Rcmd1 0B74                     __end_of_Rcmd3 0D70  
                  __pcstackCOMRAM 0001                      __pidataBANK0 11DA  
                    __pidataBANK1 1070                     __end_of_font2 FF9C  
                   __end_of_putch 1698                    drawPixel@color 0019  
          __size_of_write_command 0010        fillCircleHelper@cornername 0029  
                         ??_Rcmd1 001D                           ??_Rcmd3 001D  
              __size_of_drawPixel 0030                 __end_of_OpenUSART 11DA  
                         ??_putch 0011                        __pbssBANK1 017E  
                       ?_Rcmd2red 0001                __size_of_init_UART 0014  
                 spiwrite@spidata 0012                        ??_INT0_isr 0001  
              __CFG_CCP2MX$PORTBE 000000                       set_d1@color 0011  
                         ?___wmul 0011                       set_d2@color 0011  
                     set_d3@color 0011                           ?_chkisr 0001  
          __size_of_setAddrWindow 004E                           _CCP2CON 000FBA  
                    ??_TIMER1_isr 0001                           ?_set_d1 0001  
                         ?_set_d2 0001                           ?_set_d3 0001  
                      _fillCircle 133A                           ?_printf 001E  
                         ?_strcpy 0011                           ?_strlen 0011  
               ??_Activate_Buzzer 0011                        _fillScreen 15EC  
                      _drawCircle 04C8                         ?_delay_ms 0017  
                       ?_fillRect 0023                         ?_drawChar 002E  
                         _SSPCON1 000FC6                        _color_font 0100  
                         _SSPSTAT 000FC7             __end_of_fillRectangle 0E4C  
                       ?_drawtext 0039                        ??_Rcmd2red 0014  
              __end_of_TIMER1_isr 16A4                     _write_command 167A  
                         __Hparam 0000                           __Lparam 0000  
               __end_of_drawPixel 1554             __end_of_drawFastVLine 0FEE  
                _fillCircleHelper 092C                           ___lldiv 0EDA  
                 __size_of___wmul 0028                   __size_of_chkisr 1162  
                       ?_spiwrite 0001                           __pcinit 0FEE  
                         __ramtop 1000                   __size_of_set_d1 0052  
                 __size_of_set_d2 0052                   __size_of_set_d3 0052  
                         __ptext0 02BE                           __ptext1 15A6  
                         __ptext2 1244                           __ptext3 1296  
                         __ptext4 12E8                           __ptext5 001C  
                         __ptext6 168A                           __ptext7 15CA  
                         __ptext8 0EDA                           __ptext9 161E  
                 __size_of_printf 02A2                 __end_of_init_UART 1632  
                 __size_of_strcpy 0032                   __size_of_strlen 003E  
               __end_of_hexpowers FFBC          __end_of_force_nec_state0 16B4  
                       _T1CONbits 000FCD                           _isdigit 15CA  
                       _T3CONbits 000FB1                        ??_delay_ms 0019  
                   drawtext@_text 003A                     drawtext@color 003C  
                      ??_fillRect 0028                        ??_drawChar 0035  
                       _LCD_Reset 1646                     _setAddrWindow 13DE  
                  __pintcode_body 10EE                        delay_ms@ms 0017  
            end_of_initialization 1066                     ?_wait_one_sec 0001  
                      ??_drawtext 0041                    ?_write_command 0001  
                   __Lmediumconst FDC0                           int_func 10EE  
                 ___lldiv@divisor 0015                   ___lldiv@counter 001D  
                       _RCSTAbits 000FAB                           printf@c 0036  
                         printf@f 001E                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE                        ??_spiwrite 0011  
                         strlen@s 0011                   fillCircle@color 0041  
                     ?_fillCircle 003B                         _PORTAbits 000F80  
                drawtext@cursor_x 00EF                  drawtext@cursor_y 00EE  
                       _PORTBbits 000F81                         _PORTCbits 000F82  
                       _PORTDbits 000F83                       ?_fillScreen 0024  
                     ?_drawCircle 001C                        drawChar@bg 0032  
                       _TRISCbits 000F94                    ?_setAddrWindow 0014  
                      ?_LCD_Reset 0001                    ??_wait_one_sec 0011  
                drawtext@textsize 00EA                        drawPixel@x 001B  
                      drawPixel@y 0018                       printf@width 0034  
                       _TXSTAbits 000FAC                 __size_of_INT0_isr 0160  
                  __end_of___wmul 15A6                     delay_ms@count 001B  
                      _write_data 166A                     __pidataCOMRAM 1608  
                  __end_of_chkisr 116A          ?_TFT_GreenTab_Initialize 0001  
                      drawtext@bg 003E                    __end_of_set_d1 133A  
                  __end_of_set_d2 12E8                    __end_of_set_d3 1296  
                       _Nec_code1 0066                    __end_of_printf 02BE  
                  __end_of_strcpy 1524                    __end_of_strlen 14B4  
                       _Nec_state 0067               start_initialization 0FEE  
                 ??_write_command 0013                         _OpenUSART 116A  
             __size_of_fillCircle 0052                  __CFG_OSC$INTIO67 000000  
               __size_of_Rcmd2red 003E               __size_of_fillScreen 001C  
             __size_of_drawCircle 01AE                   _Activate_Buzzer 1658  
                        ??___wmul 0015                          ??_chkisr 0003  
                     __pdataBANK0 0080                       __pdataBANK1 0100  
                        ??_set_d1 0011                          ??_set_d2 0011  
                        ??_set_d3 0011                   setAddrWindow@x0 0017  
                 setAddrWindow@x1 0015                   setAddrWindow@y0 0014  
                 setAddrWindow@y1 0016                          ??_printf 0026  
                        ??_strcpy 0015                          ??_strlen 0013  
                     __pbssCOMRAM 005A                   ??_setAddrWindow 0017  
                   __pcstackBANK0 00E9                       ??_LCD_Reset 001D  
                    _isdigit$1757 0012          __end_of_fillCircleHelper 0A64  
               __size_of_delay_ms 0052                 __size_of_fillRect 004A  
               __size_of_drawChar 0156                        ?_OpenUSART 0011  
               __size_of_drawtext 010A                         _bit_count 0069  
                       __pintcode 0008   __end_of_TFT_GreenTab_Initialize 157E  
                   __pmediumconst FDC0                          ?___lldiv 0011  
                       __tft_type 0068              __end_of_wait_one_sec 15CA  
              drawFastVLine@color 001A                       ?_write_data 0001  
                       _drawPixel 1524                 __size_of_spiwrite 0014  
               ?_force_nec_state0 0001                          ?_isdigit 0001  
               _Initialize_Screen 0E4C                    __size_of_Rcmd1 0110  
                  __size_of_Rcmd3 00F2                         _init_UART 161E  
              ??_force_nec_state0 0001                         _hexpowers FF9C  
              ?_Initialize_Screen 0001                    __size_of_putch 000E  
         __end_of_Activate_Buzzer 166A                    ___wmul@product 0015  
             ??_Initialize_Screen 0043                          _INT0_isr 0676  
                        _PIE1bits 000F9D                          _PIR1bits 000F9E  
                        _PIR2bits 000FA1                         fillRect@h 0025  
                       fillRect@i 002C                         fillRect@w 0024  
                       fillRect@x 002B                         fillRect@y 0023  
                       drawChar@c 002F                         drawChar@i 0038  
                       drawChar@j 0037                      ??_fillCircle 0043  
                       drawChar@x 0036                         drawChar@y 002E  
                      ?_drawPixel 0018            __size_of_fillRectangle 00DC  
               ___wmul@multiplier 0011         __end_of_Initialize_Screen 0EDA  
                    ??_fillScreen 0026                      ??_drawCircle 0024  
                      printf@flag 0033                         main@led_c 00F0  
                      printf@prec 002B                         main@found 00F3  
                      ?_init_UART 0001                       _INTCON2bits 000FF1  
                       copy_data0 101A                         copy_data1 103A  
                       copy_data2 105A                         drawtext@i 00EC  
          __size_of_drawFastVLine 0088                         drawtext@x 00E9  
                       drawtext@y 0039                          _Nec_code 005A  
               write_command@cmd_ 0013                       ??_OpenUSART 0013  
                        _Rcmd2red 14B4               __size_of_write_data 0010  
                 OpenUSART@config 0013                      _Time_Elapsed 005E  
              __end_of_fillCircle 138C                          __Hrparam 0000  
              __end_of_fillScreen 1608                          __Lrparam 0000  
              __end_of_drawCircle 0676                  __size_of___lldiv 008C  
                __size_of_isdigit 0022                          _delay_ms 138C  
                        __ptext10 116A                          __ptext11 133A  
                        __ptext20 07D6                          __ptext12 092C  
                        __ptext21 142C                          __ptext13 04C8  
                        __ptext30 167A                          __ptext22 0F66  
                        __ptext14 0E4C                          __ptext31 1632  
                        __ptext23 1524                          __ptext15 14F2  
                        __ptext40 16AC                          __ptext32 1646  
                        __ptext24 13DE                          __ptext16 15EC  
                        __ptext33 138C                          __ptext25 1554  
                        __ptext17 0D70                          __ptext34 157E  
                        __ptext26 0C7E                          __ptext18 0B74  
                        __ptext35 16A4                          __ptext27 14B4  
                        __ptext19 1476                          __ptext36 1658  
                        __ptext28 0A64                          __ptext29 166A  
                        __ptext38 1698                          __ptext39 0676  
                        _fillRect 142C                          _drawChar 07D6  
__size_of_TFT_GreenTab_Initialize 002A                          _colstart 006A  
                        _drawtext 0B74                        strcpy@from 0013  
                   _fillRectangle 0D70                  ?_Activate_Buzzer 0001  
                   __size_of_main 020A             __size_of_wait_one_sec 0024  
                 fillRectangle@hi 0021                   fillRectangle@lo 0022  
                   _drawFastVLine 0F66                         printf@idx 002A  
                        _spiwrite 1632                         printf@val 002D  
                     ??_drawPixel 001B                          _rowstart 006C  
              fillCircleHelper@x0 0023                fillCircleHelper@y0 0025  
      __size_of_Initialize_Screen 008E                        _INTCONbits 000FF2  
                  OpenUSART@spbrg 0011                       ??_init_UART 0014  
                        isdigit@c 0013                 ?_fillCircleHelper 0023  
                       spiwrite@x 0011                          intlevel2 0000  
                  ?_fillRectangle 0018                      _wait_one_sec 15A6  
              ??_fillCircleHelper 002F             __end_of_write_command 168A  
                ___lldiv@dividend 0011                     wait_one_sec@k 0011  
                 fillScreen@color 0024                      fillCircle@x0 003B  
                    fillCircle@y0 003D                    fillRectangle@h 001A  
                  fillRectangle@w 0019                    fillRectangle@x 0023  
                  fillRectangle@y 0018                    ?_drawFastVLine 0018  
                        printf@ap 0031                 fillCircleHelper@f 0035  
               fillCircleHelper@r 0027                 fillCircleHelper@x 0037  
               fillCircleHelper@y 0039                      ??_write_data 0013  
                      _TIMER1_isr 1698                     fillRect@color 0026  
                ___lldiv@quotient 0019                          strcpy@cp 0015  
                        strlen@cp 0015                          strcpy@to 0011  
                     fillCircle@r 003F             __end_of_setAddrWindow 142C  
              fillRectangle@color 001B                     drawChar@color 0030  
              __end_of_write_data 167A         __size_of_force_nec_state0 0008  
                    drawChar@line 0035                      drawChar@size 0034  
