

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Oct 11 14:45:38 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           	psect	idataCOMRAM
    55  002E36                     __pidataCOMRAM:
    56                           	opt stack 0
    57                           
    58                           ;initializer for _array
    59  002E36  01                 	db	1
    60  002E37  4F                 	db	79
    61  002E38  12                 	db	18
    62  002E39  06                 	db	6
    63  002E3A  4C                 	db	76
    64  002E3B  24                 	db	36
    65  002E3C  20                 	db	32
    66  002E3D  0F                 	db	15
    67  002E3E  00                 	db	0
    68  002E3F  04                 	db	4
    69                           
    70                           	psect	smallconst
    71  001000                     __psmallconst:
    72                           	opt stack 0
    73  001000  00                 	db	0
    74  001001                     _dpowers:
    75                           	opt stack 0
    76  001001  0001               	dw	1
    77  001003  0000               	dw	0
    78  001005  000A               	dw	10
    79  001007  0000               	dw	0
    80  001009  0064               	dw	100
    81  00100B  0000               	dw	0
    82  00100D  03E8               	dw	1000
    83  00100F  0000               	dw	0
    84  001011  2710               	dw	10000
    85  001013  0000               	dw	0
    86  001015  86A0               	dw	34464
    87  001017  0001               	dw	1
    88  001019  4240               	dw	16960
    89  00101B  000F               	dw	15
    90  00101D  9680               	dw	38528
    91  00101F  0098               	dw	152
    92  001021  E100               	dw	57600
    93  001023  05F5               	dw	1525
    94  001025  CA00               	dw	51712
    95  001027  3B9A               	dw	15258
    96  001029                     __end_of_dpowers:
    97                           	opt stack 0
    98  001029                     __npowers_:
    99                           	opt stack 0
   100  001029  00                 	db	0
   101  00102A  80                 	db	128
   102  00102B  3F                 	db	63
   103  00102C  CD                 	db	205
   104  00102D  CC                 	db	204
   105  00102E  3D                 	db	61
   106  00102F  D7                 	db	215
   107  001030  23                 	db	35
   108  001031  3C                 	db	60
   109  001032  12                 	db	18
   110  001033  83                 	db	131
   111  001034  3A                 	db	58
   112  001035  B7                 	db	183
   113  001036  D1                 	db	209
   114  001037  38                 	db	56
   115  001038  C6                 	db	198
   116  001039  27                 	db	39
   117  00103A  37                 	db	55
   118  00103B  38                 	db	56
   119  00103C  86                 	db	134
   120  00103D  35                 	db	53
   121  00103E  C0                 	db	192
   122  00103F  D6                 	db	214
   123  001040  33                 	db	51
   124  001041  CC                 	db	204
   125  001042  2B                 	db	43
   126  001043  32                 	db	50
   127  001044  70                 	db	112
   128  001045  89                 	db	137
   129  001046  30                 	db	48
   130  001047  E7                 	db	231
   131  001048  DB                 	db	219
   132  001049  2E                 	db	46
   133  00104A  E5                 	db	229
   134  00104B  3C                 	db	60
   135  00104C  1E                 	db	30
   136  00104D  42                 	db	66
   137  00104E  A2                 	db	162
   138  00104F  0D                 	db	13
   139  001050                     __end_of__npowers_:
   140                           	opt stack 0
   141  001050                     __powers_:
   142                           	opt stack 0
   143  001050  00                 	db	0
   144  001051  80                 	db	128
   145  001052  3F                 	db	63
   146  001053  00                 	db	0
   147  001054  20                 	db	32
   148  001055  41                 	db	65
   149  001056  00                 	db	0
   150  001057  C8                 	db	200
   151  001058  42                 	db	66
   152  001059  00                 	db	0
   153  00105A  7A                 	db	122
   154  00105B  44                 	db	68
   155  00105C  40                 	db	64
   156  00105D  1C                 	db	28
   157  00105E  46                 	db	70
   158  00105F  50                 	db	80
   159  001060  C3                 	db	195
   160  001061  47                 	db	71
   161  001062  24                 	db	36
   162  001063  74                 	db	116
   163  001064  49                 	db	73
   164  001065  97                 	db	151
   165  001066  18                 	db	24
   166  001067  4B                 	db	75
   167  001068  BC                 	db	188
   168  001069  BE                 	db	190
   169  00106A  4C                 	db	76
   170  00106B  6B                 	db	107
   171  00106C  6E                 	db	110
   172  00106D  4E                 	db	78
   173  00106E  03                 	db	3
   174  00106F  15                 	db	21
   175  001070  50                 	db	80
   176  001071  79                 	db	121
   177  001072  AD                 	db	173
   178  001073  60                 	db	96
   179  001074  F3                 	db	243
   180  001075  49                 	db	73
   181  001076  71                 	db	113
   182  001077                     __end_of__powers_:
   183                           	opt stack 0
   184  0000                     _ADCON0	set	4034
   185  0000                     _ADCON0bits	set	4034
   186  0000                     _ADCON1	set	4033
   187  0000                     _ADCON2	set	4032
   188  0000                     _ADRESH	set	4036
   189  0000                     _ADRESL	set	4035
   190  0000                     _OSCCON	set	4051
   191  0000                     _PIE1bits	set	3997
   192  0000                     _PIR1bits	set	3998
   193  0000                     _PORTA	set	3968
   194  0000                     _PORTB	set	3969
   195  0000                     _PORTBbits	set	3969
   196  0000                     _PORTC	set	3970
   197  0000                     _PORTD	set	3971
   198  0000                     _PORTE	set	3972
   199  0000                     _RCSTA	set	4011
   200  0000                     _RCSTAbits	set	4011
   201  0000                     _SPBRG	set	4015
   202  0000                     _SPBRGH	set	4016
   203  0000                     _TRISA	set	3986
   204  0000                     _TRISB	set	3987
   205  0000                     _TRISC	set	3988
   206  0000                     _TRISCbits	set	3988
   207  0000                     _TRISD	set	3989
   208  0000                     _TRISE	set	3990
   209  0000                     _TXREG	set	4013
   210  0000                     _TXSTA	set	4012
   211  0000                     _TXSTAbits	set	4012
   212  0000                     _TRMT	set	32097
   213  001077                     STR_4:
   214  001077  54                 	db	84	;'T'
   215  001078  65                 	db	101	;'e'
   216  001079  6D                 	db	109	;'m'
   217  00107A  70                 	db	112	;'p'
   218  00107B  65                 	db	101	;'e'
   219  00107C  72                 	db	114	;'r'
   220  00107D  61                 	db	97	;'a'
   221  00107E  74                 	db	116	;'t'
   222  00107F  75                 	db	117	;'u'
   223  001080  72                 	db	114	;'r'
   224  001081  65                 	db	101	;'e'
   225  001082  20                 	db	32
   226  001083  3D                 	db	61	;'='
   227  001084  20                 	db	32
   228  001085  25                 	db	37
   229  001086  66                 	db	102	;'f'
   230  001087  20                 	db	32
   231  001088  46                 	db	70	;'F'
   232  001089  20                 	db	32
   233  00108A  0D                 	db	13
   234  00108B  0A                 	db	10
   235  00108C  0A                 	db	10
   236  00108D  00                 	db	0
   237  00108E                     STR_3:
   238  00108E  56                 	db	86	;'V'
   239  00108F  6F                 	db	111	;'o'
   240  001090  6C                 	db	108	;'l'
   241  001091  74                 	db	116	;'t'
   242  001092  61                 	db	97	;'a'
   243  001093  67                 	db	103	;'g'
   244  001094  65                 	db	101	;'e'
   245  001095  20                 	db	32
   246  001096  3D                 	db	61	;'='
   247  001097  20                 	db	32
   248  001098  25                 	db	37
   249  001099  66                 	db	102	;'f'
   250  00109A  20                 	db	32
   251  00109B  0D                 	db	13
   252  00109C  0A                 	db	10
   253  00109D  00                 	db	0
   254  00109E                     STR_2:
   255  00109E  53                 	db	83	;'S'
   256  00109F  74                 	db	116	;'t'
   257  0010A0  65                 	db	101	;'e'
   258  0010A1  70                 	db	112	;'p'
   259  0010A2  73                 	db	115	;'s'
   260  0010A3  32                 	db	50	;'2'
   261  0010A4  20                 	db	32
   262  0010A5  3D                 	db	61	;'='
   263  0010A6  20                 	db	32
   264  0010A7  25                 	db	37
   265  0010A8  64                 	db	100	;'d'
   266  0010A9  20                 	db	32
   267  0010AA  0D                 	db	13
   268  0010AB  0A                 	db	10
   269  0010AC  00                 	db	0
   270  0010AD                     STR_1:
   271  0010AD  53                 	db	83	;'S'
   272  0010AE  74                 	db	116	;'t'
   273  0010AF  65                 	db	101	;'e'
   274  0010B0  70                 	db	112	;'p'
   275  0010B1  73                 	db	115	;'s'
   276  0010B2  20                 	db	32
   277  0010B3  3D                 	db	61	;'='
   278  0010B4  20                 	db	32
   279  0010B5  25                 	db	37
   280  0010B6  64                 	db	100	;'d'
   281  0010B7  20                 	db	32
   282  0010B8  0D                 	db	13
   283  0010B9  0A                 	db	10
   284  0010BA  00                 	db	0
   285                           
   286                           ; #config settings
   287  0010BB  00                 	db	0	; dummy byte at the end
   288  0000                     
   289                           	psect	cinit
   290  002D1A                     __pcinit:
   291                           	opt stack 0
   292  002D1A                     start_initialization:
   293                           	opt stack 0
   294  002D1A                     __initialization:
   295                           	opt stack 0
   296                           
   297                           ; Initialize objects allocated to COMRAM (10 bytes)
   298                           ; load TBLPTR registers with __pidataCOMRAM
   299  002D1A  0E36               	movlw	low __pidataCOMRAM
   300  002D1C  6EF6               	movwf	tblptrl,c
   301  002D1E  0E2E               	movlw	high __pidataCOMRAM
   302  002D20  6EF7               	movwf	tblptrh,c
   303  002D22  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   304  002D24  6EF8               	movwf	tblptru,c
   305  002D26  EE00  F076         	lfsr	0,__pdataCOMRAM
   306  002D2A  EE10 F00A          	lfsr	1,10
   307  002D2E                     copy_data0:
   308  002D2E  0009               	tblrd		*+
   309  002D30  CFF5 FFEE          	movff	tablat,postinc0
   310  002D34  50E5               	movf	postdec1,w,c
   311  002D36  50E1               	movf	fsr1l,w,c
   312  002D38  E1FA               	bnz	copy_data0
   313  002D3A                     end_of_initialization:
   314                           	opt stack 0
   315  002D3A                     __end_of__initialization:
   316                           	opt stack 0
   317  002D3A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   318  002D3C  6EF8               	movwf	tblptru,c
   319  002D3E  0100               	movlb	0
   320  002D40  EF17  F00F         	goto	_main	;jump to C main() function
   321                           tblptru	equ	0xFF8
   322                           tblptrh	equ	0xFF7
   323                           tblptrl	equ	0xFF6
   324                           tablat	equ	0xFF5
   325                           postinc0	equ	0xFEE
   326                           postdec1	equ	0xFE5
   327                           fsr1l	equ	0xFE1
   328                           
   329                           	psect	dataCOMRAM
   330  000076                     __pdataCOMRAM:
   331                           	opt stack 0
   332  000076                     _array:
   333                           	opt stack 0
   334  000076                     	ds	10
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           postdec1	equ	0xFE5
   341                           fsr1l	equ	0xFE1
   342                           
   343                           	psect	cstackCOMRAM
   344  000001                     __pcstackCOMRAM:
   345                           	opt stack 0
   346  000001                     ?_get_full_ADC:
   347                           	opt stack 0
   348  000001                     ?___awmod:
   349                           	opt stack 0
   350  000001                     ?___ftpack:
   351                           	opt stack 0
   352  000001                     ?___ftneg:
   353                           	opt stack 0
   354  000001                     ?__tdiv_to_l_:
   355                           	opt stack 0
   356  000001                     ?__div_to_l_:
   357                           	opt stack 0
   358  000001                     ?___lldiv:
   359                           	opt stack 0
   360  000001                     Select_ADC_Channel@channel:
   361                           	opt stack 0
   362  000001                     putch@c:
   363                           	opt stack 0
   364  000001                     Display_Upper_Digit@PE:
   365                           	opt stack 0
   366  000001                     Display_Lower_Digit@digit:
   367                           	opt stack 0
   368  000001                     WAIT_1_SEC@j:
   369                           	opt stack 0
   370  000001                     Display_D1@temperature:
   371                           	opt stack 0
   372  000001                     OpenUSART@spbrg:
   373                           	opt stack 0
   374  000001                     ___awmod@dividend:
   375                           	opt stack 0
   376  000001                     __div_to_l_@f1:
   377                           	opt stack 0
   378  000001                     ___ftpack@arg:
   379                           	opt stack 0
   380  000001                     __tdiv_to_l_@f1:
   381                           	opt stack 0
   382  000001                     ___ftge@ff1:
   383                           	opt stack 0
   384  000001                     ___ftneg@f1:
   385                           	opt stack 0
   386  000001                     ___lldiv@dividend:
   387                           	opt stack 0
   388                           
   389                           ; 4 bytes @ 0x0
   390  000001                     	ds	1
   391  000002                     Display_Upper_Digit@digit:
   392                           	opt stack 0
   393                           
   394                           ; 1 bytes @ 0x1
   395  000002                     	ds	1
   396  000003                     ??_get_full_ADC:
   397  000003                     OpenUSART@config:
   398                           	opt stack 0
   399  000003                     ___awmod@divisor:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0x2
   403  000003                     	ds	1
   404  000004                     ___ftpack@exp:
   405                           	opt stack 0
   406  000004                     __div_to_l_@f2:
   407                           	opt stack 0
   408  000004                     __tdiv_to_l_@f2:
   409                           	opt stack 0
   410  000004                     ___ftge@ff2:
   411                           	opt stack 0
   412                           
   413                           ; 3 bytes @ 0x3
   414  000004                     	ds	1
   415  000005                     ___awmod@counter:
   416                           	opt stack 0
   417  000005                     ___ftpack@sign:
   418                           	opt stack 0
   419  000005                     get_full_ADC@result:
   420                           	opt stack 0
   421  000005                     ___lldiv@divisor:
   422                           	opt stack 0
   423                           
   424                           ; 4 bytes @ 0x4
   425  000005                     	ds	1
   426  000006                     ??___ftpack:
   427  000006                     ___awmod@sign:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x5
   431  000006                     	ds	1
   432  000007                     ??__tdiv_to_l_:
   433  000007                     ??___ftge:
   434  000007                     ?___awdiv:
   435                           	opt stack 0
   436  000007                     ___awdiv@dividend:
   437                           	opt stack 0
   438  000007                     __div_to_l_@quot:
   439                           	opt stack 0
   440                           
   441                           ; 4 bytes @ 0x6
   442  000007                     	ds	2
   443  000009                     ?___awtoft:
   444                           	opt stack 0
   445  000009                     ?___lltoft:
   446                           	opt stack 0
   447  000009                     ___awdiv@divisor:
   448                           	opt stack 0
   449  000009                     ___awtoft@c:
   450                           	opt stack 0
   451  000009                     ___lldiv@quotient:
   452                           	opt stack 0
   453  000009                     ___lltoft@c:
   454                           	opt stack 0
   455                           
   456                           ; 4 bytes @ 0x8
   457  000009                     	ds	1
   458  00000A                     __tdiv_to_l_@quot:
   459                           	opt stack 0
   460                           
   461                           ; 4 bytes @ 0x9
   462  00000A                     	ds	1
   463  00000B                     ___awdiv@counter:
   464                           	opt stack 0
   465  00000B                     __div_to_l_@cntr:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0xA
   469  00000B                     	ds	1
   470  00000C                     ___awdiv@sign:
   471                           	opt stack 0
   472  00000C                     ___awtoft@sign:
   473                           	opt stack 0
   474  00000C                     __div_to_l_@exp1:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0xB
   478  00000C                     	ds	1
   479  00000D                     ??___lltoft:
   480  00000D                     ___lldiv@counter:
   481                           	opt stack 0
   482  00000D                     ___awdiv@quotient:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0xC
   486  00000D                     	ds	1
   487  00000E                     ?___llmod:
   488                           	opt stack 0
   489  00000E                     __tdiv_to_l_@cntr:
   490                           	opt stack 0
   491  00000E                     ___llmod@dividend:
   492                           	opt stack 0
   493                           
   494                           ; 4 bytes @ 0xD
   495  00000E                     	ds	1
   496  00000F                     ?___wmul:
   497                           	opt stack 0
   498  00000F                     __tdiv_to_l_@exp1:
   499                           	opt stack 0
   500  00000F                     Display_D2@temperature:
   501                           	opt stack 0
   502  00000F                     ___wmul@multiplier:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0xE
   506  00000F                     	ds	2
   507  000011                     ___lltoft@exp:
   508                           	opt stack 0
   509  000011                     ___wmul@multiplicand:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x10
   513  000011                     	ds	1
   514  000012                     ___llmod@divisor:
   515                           	opt stack 0
   516                           
   517                           ; 4 bytes @ 0x11
   518  000012                     	ds	1
   519  000013                     ___wmul@product:
   520                           	opt stack 0
   521                           
   522                           ; 2 bytes @ 0x12
   523  000013                     	ds	2
   524  000015                     ?___ftmul:
   525                           	opt stack 0
   526  000015                     ___ftmul@f1:
   527                           	opt stack 0
   528                           
   529                           ; 3 bytes @ 0x14
   530  000015                     	ds	1
   531  000016                     ___llmod@counter:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x15
   535  000016                     	ds	2
   536  000018                     ___ftmul@f2:
   537                           	opt stack 0
   538                           
   539                           ; 3 bytes @ 0x17
   540  000018                     	ds	3
   541  00001B                     ??___ftmul:
   542                           
   543                           ; 0 bytes @ 0x1A
   544  00001B                     	ds	3
   545  00001E                     ___ftmul@exp:
   546                           	opt stack 0
   547                           
   548                           ; 1 bytes @ 0x1D
   549  00001E                     	ds	1
   550  00001F                     ___ftmul@f3_as_product:
   551                           	opt stack 0
   552                           
   553                           ; 3 bytes @ 0x1E
   554  00001F                     	ds	3
   555  000022                     ___ftmul@cntr:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0x21
   559  000022                     	ds	1
   560  000023                     ___ftmul@sign:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x22
   564  000023                     	ds	1
   565  000024                     ?_fround:
   566                           	opt stack 0
   567  000024                     ?_scale:
   568                           	opt stack 0
   569                           
   570                           ; 3 bytes @ 0x23
   571  000024                     	ds	3
   572  000027                     _fround$1184:
   573                           	opt stack 0
   574  000027                     _scale$1185:
   575                           	opt stack 0
   576                           
   577                           ; 3 bytes @ 0x26
   578  000027                     	ds	3
   579  00002A                     scale@scl:
   580                           	opt stack 0
   581  00002A                     _fround$1183:
   582                           	opt stack 0
   583                           
   584                           ; 3 bytes @ 0x29
   585  00002A                     	ds	1
   586  00002B                     ?___fttol:
   587                           	opt stack 0
   588  00002B                     ___fttol@f1:
   589                           	opt stack 0
   590                           
   591                           ; 3 bytes @ 0x2A
   592  00002B                     	ds	2
   593  00002D                     fround@prec:
   594                           	opt stack 0
   595                           
   596                           ; 1 bytes @ 0x2C
   597  00002D                     	ds	1
   598  00002E                     ?___ftadd:
   599                           	opt stack 0
   600  00002E                     ___ftadd@f1:
   601                           	opt stack 0
   602                           
   603                           ; 3 bytes @ 0x2D
   604  00002E                     	ds	1
   605  00002F                     ??___fttol:
   606                           
   607                           ; 0 bytes @ 0x2E
   608  00002F                     	ds	2
   609  000031                     ___ftadd@f2:
   610                           	opt stack 0
   611                           
   612                           ; 3 bytes @ 0x30
   613  000031                     	ds	3
   614  000034                     ??___ftadd:
   615  000034                     ___fttol@sign1:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x33
   619  000034                     	ds	1
   620  000035                     ___fttol@lval:
   621                           	opt stack 0
   622                           
   623                           ; 4 bytes @ 0x34
   624  000035                     	ds	2
   625  000037                     ___ftadd@sign:
   626                           	opt stack 0
   627                           
   628                           ; 1 bytes @ 0x36
   629  000037                     	ds	1
   630  000038                     ___ftadd@exp2:
   631                           	opt stack 0
   632                           
   633                           ; 1 bytes @ 0x37
   634  000038                     	ds	1
   635  000039                     ___ftadd@exp1:
   636                           	opt stack 0
   637  000039                     ___fttol@exp1:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0x38
   641  000039                     	ds	1
   642  00003A                     ?___ftdiv:
   643                           	opt stack 0
   644  00003A                     ?___ftsub:
   645                           	opt stack 0
   646  00003A                     Display_D3@voltage:
   647                           	opt stack 0
   648  00003A                     ___ftdiv@f1:
   649                           	opt stack 0
   650  00003A                     ___ftsub@f1:
   651                           	opt stack 0
   652                           
   653                           ; 3 bytes @ 0x39
   654  00003A                     	ds	2
   655  00003C                     
   656                           ; 0 bytes @ 0x3B
   657  00003C                     	ds	1
   658  00003D                     ___ftdiv@f2:
   659                           	opt stack 0
   660  00003D                     ___ftsub@f2:
   661                           	opt stack 0
   662                           
   663                           ; 3 bytes @ 0x3C
   664  00003D                     	ds	3
   665  000040                     ??___ftdiv:
   666  000040                     ?_printf:
   667                           	opt stack 0
   668  000040                     printf@f:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0x3F
   672  000040                     	ds	3
   673  000043                     ___ftdiv@cntr:
   674                           	opt stack 0
   675                           
   676                           ; 1 bytes @ 0x42
   677  000043                     	ds	1
   678  000044                     ___ftdiv@f3:
   679                           	opt stack 0
   680                           
   681                           ; 3 bytes @ 0x43
   682  000044                     	ds	1
   683  000045                     ??_printf:
   684                           
   685                           ; 0 bytes @ 0x44
   686  000045                     	ds	2
   687  000047                     ___ftdiv@exp:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x46
   691  000047                     	ds	1
   692  000048                     ___ftdiv@sign:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x47
   696  000048                     	ds	3
   697  00004B                     _printf$1186:
   698                           	opt stack 0
   699                           
   700                           ; 3 bytes @ 0x4A
   701  00004B                     	ds	3
   702  00004E                     printf@ap:
   703                           	opt stack 0
   704                           
   705                           ; 2 bytes @ 0x4D
   706  00004E                     	ds	2
   707  000050                     printf@flag:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x4F
   711  000050                     	ds	2
   712  000052                     printf@prec:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x51
   716  000052                     	ds	2
   717  000054                     printf@val:
   718                           	opt stack 0
   719                           
   720                           ; 4 bytes @ 0x53
   721  000054                     	ds	4
   722  000058                     printf@exp:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x57
   726  000058                     	ds	2
   727  00005A                     printf@tmpval:
   728                           	opt stack 0
   729                           
   730                           ; 4 bytes @ 0x59
   731  00005A                     	ds	4
   732  00005E                     printf@fval:
   733                           	opt stack 0
   734                           
   735                           ; 3 bytes @ 0x5D
   736  00005E                     	ds	3
   737  000061                     printf@c:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0x60
   741  000061                     	ds	1
   742  000062                     main@voltage_mv:
   743                           	opt stack 0
   744                           
   745                           ; 3 bytes @ 0x61
   746  000062                     	ds	3
   747  000065                     main@temp_c:
   748                           	opt stack 0
   749                           
   750                           ; 3 bytes @ 0x64
   751  000065                     	ds	3
   752  000068                     main@upper:
   753                           	opt stack 0
   754                           
   755                           ; 1 bytes @ 0x67
   756  000068                     	ds	1
   757  000069                     main@lower:
   758                           	opt stack 0
   759                           
   760                           ; 1 bytes @ 0x68
   761  000069                     	ds	1
   762  00006A                     main@temp_f:
   763                           	opt stack 0
   764                           
   765                           ; 3 bytes @ 0x69
   766  00006A                     	ds	3
   767  00006D                     main@pvoltage_mv:
   768                           	opt stack 0
   769                           
   770                           ; 3 bytes @ 0x6C
   771  00006D                     	ds	3
   772  000070                     main@num_step:
   773                           	opt stack 0
   774                           
   775                           ; 2 bytes @ 0x6F
   776  000070                     	ds	2
   777  000072                     main@num_step2:
   778                           	opt stack 0
   779                           
   780                           ; 2 bytes @ 0x71
   781  000072                     	ds	2
   782  000074                     main@intTmpF:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x73
   786  000074                     	ds	2
   787                           tblptru	equ	0xFF8
   788                           tblptrh	equ	0xFF7
   789                           tblptrl	equ	0xFF6
   790                           tablat	equ	0xFF5
   791                           postinc0	equ	0xFEE
   792                           postdec1	equ	0xFE5
   793                           fsr1l	equ	0xFE1
   794                           
   795 ;;
   796 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   797 ;;
   798 ;; *************** function _main *****************
   799 ;; Defined at:
   800 ;;		line 60 in file "Lab5p2.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;		None
   803 ;; Auto vars:     Size  Location     Type
   804 ;;  pvoltage_mv     3  108[COMRAM] float 
   805 ;;  temp_f          3  105[COMRAM] float 
   806 ;;  temp_c          3  100[COMRAM] float 
   807 ;;  voltage_mv      3   97[COMRAM] float 
   808 ;;  intTmpF         2  115[COMRAM] int 
   809 ;;  num_step2       2  113[COMRAM] int 
   810 ;;  num_step        2  111[COMRAM] int 
   811 ;;  lower           1  104[COMRAM] unsigned char 
   812 ;;  upper           1  103[COMRAM] unsigned char 
   813 ;; Return value:  Size  Location     Type
   814 ;;		None               void
   815 ;; Registers used:
   816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   823 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;Total ram usage:       20 bytes
   827 ;; Hardware stack levels required when called:    4
   828 ;; This function calls:
   829 ;;		_Display_D1
   830 ;;		_Display_D2
   831 ;;		_Display_D3
   832 ;;		_Display_Lower_Digit
   833 ;;		_Display_Upper_Digit
   834 ;;		_Init_ADC
   835 ;;		_Init_Tris
   836 ;;		_Select_ADC_Channel
   837 ;;		_WAIT_1_SEC
   838 ;;		___awdiv
   839 ;;		___awmod
   840 ;;		___awtoft
   841 ;;		___ftadd
   842 ;;		___ftdiv
   843 ;;		___ftmul
   844 ;;		___ftneg
   845 ;;		___fttol
   846 ;;		_get_full_ADC
   847 ;;		_init_UART
   848 ;;		_printf
   849 ;; This function is called by:
   850 ;;		Startup code after reset
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           	psect	text0
   855  001E2E                     __ptext0:
   856                           	opt stack 0
   857  001E2E                     _main:
   858                           	opt stack 27
   859                           
   860                           ;Lab5p2.c: 61: Init_ADC();
   861                           
   862                           ;incstack = 0
   863  001E2E  EC20  F017         	call	_Init_ADC	;wreg free
   864                           
   865                           ;Lab5p2.c: 62: init_UART();
   866  001E32  EC04  F017         	call	_init_UART	;wreg free
   867                           
   868                           ;Lab5p2.c: 63: Init_Tris();
   869  001E36  ECF9  F016         	call	_Init_Tris	;wreg free
   870                           
   871                           ;Lab5p2.c: 64: PORTC = 0xFF;
   872  001E3A  6882               	setf	3970,c	;volatile
   873                           
   874                           ;Lab5p2.c: 65: PORTD = 0xFF;
   875  001E3C  6883               	setf	3971,c	;volatile
   876                           
   877                           ;Lab5p2.c: 66: PORTB = 0x00;
   878  001E3E  0E00               	movlw	0
   879  001E40  6E81               	movwf	3969,c	;volatile
   880  001E42  D000               	goto	l2835
   881  001E44                     l2835:
   882                           
   883                           ;Lab5p2.c: 69: Select_ADC_Channel(0);
   884  001E44  0E00               	movlw	0
   885  001E46  EC15  F017         	call	_Select_ADC_Channel
   886                           
   887                           ;Lab5p2.c: 70: int num_step = get_full_ADC();
   888  001E4A  ECB6  F016         	call	_get_full_ADC	;wreg free
   889  001E4E  C001  F070         	movff	?_get_full_ADC,main@num_step
   890  001E52  C002  F071         	movff	?_get_full_ADC+1,main@num_step+1
   891                           
   892                           ;Lab5p2.c: 71: float voltage_mv = num_step*4.0;
   893  001E56  C070  F009         	movff	main@num_step,___awtoft@c
   894  001E5A  C071  F00A         	movff	main@num_step+1,___awtoft@c+1
   895  001E5E  EC6F  F016         	call	___awtoft	;wreg free
   896  001E62  C009  F015         	movff	?___awtoft,___ftmul@f1
   897  001E66  C00A  F016         	movff	?___awtoft+1,___ftmul@f1+1
   898  001E6A  C00B  F017         	movff	?___awtoft+2,___ftmul@f1+2
   899  001E6E  0E00               	movlw	0
   900  001E70  6E18               	movwf	___ftmul@f2,c
   901  001E72  0E80               	movlw	128
   902  001E74  6E19               	movwf	___ftmul@f2+1,c
   903  001E76  0E40               	movlw	64
   904  001E78  6E1A               	movwf	___ftmul@f2+2,c
   905  001E7A  EC18  F012         	call	___ftmul	;wreg free
   906  001E7E  C015  F062         	movff	?___ftmul,main@voltage_mv
   907  001E82  C016  F063         	movff	?___ftmul+1,main@voltage_mv+1
   908  001E86  C017  F064         	movff	?___ftmul+2,main@voltage_mv+2
   909                           
   910                           ;Lab5p2.c: 72: float temp_c = (1035.75 - voltage_mv)/5.575;
   911  001E8A  0E78               	movlw	120
   912  001E8C  6E31               	movwf	___ftadd@f2,c
   913  001E8E  0E81               	movlw	129
   914  001E90  6E32               	movwf	___ftadd@f2+1,c
   915  001E92  0E44               	movlw	68
   916  001E94  6E33               	movwf	___ftadd@f2+2,c
   917  001E96  C062  F001         	movff	main@voltage_mv,___ftneg@f1
   918  001E9A  C063  F002         	movff	main@voltage_mv+1,___ftneg@f1+1
   919  001E9E  C064  F003         	movff	main@voltage_mv+2,___ftneg@f1+2
   920  001EA2  ECC9  F016         	call	___ftneg	;wreg free
   921  001EA6  C001  F02E         	movff	?___ftneg,___ftadd@f1
   922  001EAA  C002  F02F         	movff	?___ftneg+1,___ftadd@f1+1
   923  001EAE  C003  F030         	movff	?___ftneg+2,___ftadd@f1+2
   924  001EB2  EC29  F010         	call	___ftadd	;wreg free
   925  001EB6  C02E  F03A         	movff	?___ftadd,___ftdiv@f1
   926  001EBA  C02F  F03B         	movff	?___ftadd+1,___ftdiv@f1+1
   927  001EBE  C030  F03C         	movff	?___ftadd+2,___ftdiv@f1+2
   928  001EC2  0E66               	movlw	102
   929  001EC4  6E3D               	movwf	___ftdiv@f2,c
   930  001EC6  0EB2               	movlw	178
   931  001EC8  6E3E               	movwf	___ftdiv@f2+1,c
   932  001ECA  0E40               	movlw	64
   933  001ECC  6E3F               	movwf	___ftdiv@f2+2,c
   934  001ECE  EC07  F013         	call	___ftdiv	;wreg free
   935  001ED2  C03A  F065         	movff	?___ftdiv,main@temp_c
   936  001ED6  C03B  F066         	movff	?___ftdiv+1,main@temp_c+1
   937  001EDA  C03C  F067         	movff	?___ftdiv+2,main@temp_c+2
   938                           
   939                           ;Lab5p2.c: 73: float temp_f = (1.80 * temp_c) + 32.0;
   940  001EDE  0E66               	movlw	102
   941  001EE0  6E18               	movwf	___ftmul@f2,c
   942  001EE2  0EE6               	movlw	230
   943  001EE4  6E19               	movwf	___ftmul@f2+1,c
   944  001EE6  0E3F               	movlw	63
   945  001EE8  6E1A               	movwf	___ftmul@f2+2,c
   946  001EEA  C065  F015         	movff	main@temp_c,___ftmul@f1
   947  001EEE  C066  F016         	movff	main@temp_c+1,___ftmul@f1+1
   948  001EF2  C067  F017         	movff	main@temp_c+2,___ftmul@f1+2
   949  001EF6  EC18  F012         	call	___ftmul	;wreg free
   950  001EFA  C015  F02E         	movff	?___ftmul,___ftadd@f1
   951  001EFE  C016  F02F         	movff	?___ftmul+1,___ftadd@f1+1
   952  001F02  C017  F030         	movff	?___ftmul+2,___ftadd@f1+2
   953  001F06  0E00               	movlw	0
   954  001F08  6E31               	movwf	___ftadd@f2,c
   955  001F0A  0E00               	movlw	0
   956  001F0C  6E32               	movwf	___ftadd@f2+1,c
   957  001F0E  0E42               	movlw	66
   958  001F10  6E33               	movwf	___ftadd@f2+2,c
   959  001F12  EC29  F010         	call	___ftadd	;wreg free
   960  001F16  C02E  F06A         	movff	?___ftadd,main@temp_f
   961  001F1A  C02F  F06B         	movff	?___ftadd+1,main@temp_f+1
   962  001F1E  C030  F06C         	movff	?___ftadd+2,main@temp_f+2
   963                           
   964                           ;Lab5p2.c: 74: int intTmpF = (int)temp_f;
   965  001F22  C06A  F02B         	movff	main@temp_f,___fttol@f1
   966  001F26  C06B  F02C         	movff	main@temp_f+1,___fttol@f1+1
   967  001F2A  C06C  F02D         	movff	main@temp_f+2,___fttol@f1+2
   968  001F2E  EC94  F012         	call	___fttol	;wreg free
   969  001F32  C02B  F074         	movff	?___fttol,main@intTmpF
   970  001F36  C02C  F075         	movff	?___fttol+1,main@intTmpF+1
   971                           
   972                           ;Lab5p2.c: 75: char upper = intTmpF /10;
   973  001F3A  C074  F007         	movff	main@intTmpF,___awdiv@dividend
   974  001F3E  C075  F008         	movff	main@intTmpF+1,___awdiv@dividend+1
   975  001F42  0E00               	movlw	0
   976  001F44  6E0A               	movwf	___awdiv@divisor+1,c
   977  001F46  0E0A               	movlw	10
   978  001F48  6E09               	movwf	___awdiv@divisor,c
   979  001F4A  EC76  F014         	call	___awdiv	;wreg free
   980  001F4E  5007               	movf	?___awdiv,w,c
   981  001F50  6E68               	movwf	main@upper,c
   982                           
   983                           ;Lab5p2.c: 76: char lower = intTmpF %10;
   984  001F52  C074  F001         	movff	main@intTmpF,___awmod@dividend
   985  001F56  C075  F002         	movff	main@intTmpF+1,___awmod@dividend+1
   986  001F5A  0E00               	movlw	0
   987  001F5C  6E04               	movwf	___awmod@divisor+1,c
   988  001F5E  0E0A               	movlw	10
   989  001F60  6E03               	movwf	___awmod@divisor,c
   990  001F62  EC07  F015         	call	___awmod	;wreg free
   991  001F66  5001               	movf	?___awmod,w,c
   992  001F68  6E69               	movwf	main@lower,c
   993                           
   994                           ;Lab5p2.c: 77: Display_Upper_Digit(upper);
   995  001F6A  5068               	movf	main@upper,w,c
   996  001F6C  EC4F  F016         	call	_Display_Upper_Digit
   997                           
   998                           ;Lab5p2.c: 78: Display_Lower_Digit(lower);
   999  001F70  5069               	movf	main@lower,w,c
  1000  001F72  ECED  F016         	call	_Display_Lower_Digit
  1001                           
  1002                           ;Lab5p2.c: 79: Display_D2(intTmpF);
  1003  001F76  C074  F00F         	movff	main@intTmpF,Display_D2@temperature
  1004  001F7A  C075  F010         	movff	main@intTmpF+1,Display_D2@temperature+1
  1005  001F7E  ECE8  F015         	call	_Display_D2	;wreg free
  1006                           
  1007                           ;Lab5p2.c: 80: Display_D1(intTmpF);
  1008  001F82  C074  F001         	movff	main@intTmpF,Display_D1@temperature
  1009  001F86  C075  F002         	movff	main@intTmpF+1,Display_D1@temperature+1
  1010  001F8A  ECDB  F013         	call	_Display_D1	;wreg free
  1011                           
  1012                           ;Lab5p2.c: 82: Select_ADC_Channel(1);
  1013  001F8E  0E01               	movlw	1
  1014  001F90  EC15  F017         	call	_Select_ADC_Channel
  1015                           
  1016                           ;Lab5p2.c: 83: int num_step2 = get_full_ADC();
  1017  001F94  ECB6  F016         	call	_get_full_ADC	;wreg free
  1018  001F98  C001  F072         	movff	?_get_full_ADC,main@num_step2
  1019  001F9C  C002  F073         	movff	?_get_full_ADC+1,main@num_step2+1
  1020                           
  1021                           ;Lab5p2.c: 84: float pvoltage_mv = (num_step2*4.0);
  1022  001FA0  C072  F009         	movff	main@num_step2,___awtoft@c
  1023  001FA4  C073  F00A         	movff	main@num_step2+1,___awtoft@c+1
  1024  001FA8  EC6F  F016         	call	___awtoft	;wreg free
  1025  001FAC  C009  F015         	movff	?___awtoft,___ftmul@f1
  1026  001FB0  C00A  F016         	movff	?___awtoft+1,___ftmul@f1+1
  1027  001FB4  C00B  F017         	movff	?___awtoft+2,___ftmul@f1+2
  1028  001FB8  0E00               	movlw	0
  1029  001FBA  6E18               	movwf	___ftmul@f2,c
  1030  001FBC  0E80               	movlw	128
  1031  001FBE  6E19               	movwf	___ftmul@f2+1,c
  1032  001FC0  0E40               	movlw	64
  1033  001FC2  6E1A               	movwf	___ftmul@f2+2,c
  1034  001FC4  EC18  F012         	call	___ftmul	;wreg free
  1035  001FC8  C015  F06D         	movff	?___ftmul,main@pvoltage_mv
  1036  001FCC  C016  F06E         	movff	?___ftmul+1,main@pvoltage_mv+1
  1037  001FD0  C017  F06F         	movff	?___ftmul+2,main@pvoltage_mv+2
  1038                           
  1039                           ;Lab5p2.c: 86: Display_D3(pvoltage_mv);
  1040  001FD4  C06D  F02B         	movff	main@pvoltage_mv,___fttol@f1
  1041  001FD8  C06E  F02C         	movff	main@pvoltage_mv+1,___fttol@f1+1
  1042  001FDC  C06F  F02D         	movff	main@pvoltage_mv+2,___fttol@f1+2
  1043  001FE0  EC94  F012         	call	___fttol	;wreg free
  1044  001FE4  C02B  F03A         	movff	?___fttol,Display_D3@voltage
  1045  001FE8  C02C  F03B         	movff	?___fttol+1,Display_D3@voltage+1
  1046  001FEC  EC2D  F016         	call	_Display_D3	;wreg free
  1047                           
  1048                           ;Lab5p2.c: 88: printf("Steps = %d \r\n", num_step);
  1049  001FF0  0EAD               	movlw	low STR_1
  1050  001FF2  6E40               	movwf	printf@f,c
  1051  001FF4  0E10               	movlw	high STR_1
  1052  001FF6  6E41               	movwf	printf@f+1,c
  1053  001FF8  C070  F042         	movff	main@num_step,?_printf+2
  1054  001FFC  C071  F043         	movff	main@num_step+1,?_printf+3
  1055  002000  EC5E  F008         	call	_printf	;wreg free
  1056                           
  1057                           ;Lab5p2.c: 89: printf("Steps2 = %d \r\n", num_step2);
  1058  002004  0E9E               	movlw	low STR_2
  1059  002006  6E40               	movwf	printf@f,c
  1060  002008  0E10               	movlw	high STR_2
  1061  00200A  6E41               	movwf	printf@f+1,c
  1062  00200C  C072  F042         	movff	main@num_step2,?_printf+2
  1063  002010  C073  F043         	movff	main@num_step2+1,?_printf+3
  1064  002014  EC5E  F008         	call	_printf	;wreg free
  1065                           
  1066                           ;Lab5p2.c: 90: printf("Voltage = %f \r\n", pvoltage_mv);
  1067  002018  0E8E               	movlw	low STR_3
  1068  00201A  6E40               	movwf	printf@f,c
  1069  00201C  0E10               	movlw	high STR_3
  1070  00201E  6E41               	movwf	printf@f+1,c
  1071  002020  C06D  F042         	movff	main@pvoltage_mv,?_printf+2
  1072  002024  C06E  F043         	movff	main@pvoltage_mv+1,?_printf+3
  1073  002028  C06F  F044         	movff	main@pvoltage_mv+2,?_printf+4
  1074  00202C  EC5E  F008         	call	_printf	;wreg free
  1075                           
  1076                           ;Lab5p2.c: 91: printf("Temperature = %f F \r\n\n", temp_f);
  1077  002030  0E77               	movlw	low STR_4
  1078  002032  6E40               	movwf	printf@f,c
  1079  002034  0E10               	movlw	high STR_4
  1080  002036  6E41               	movwf	printf@f+1,c
  1081  002038  C06A  F042         	movff	main@temp_f,?_printf+2
  1082  00203C  C06B  F043         	movff	main@temp_f+1,?_printf+3
  1083  002040  C06C  F044         	movff	main@temp_f+2,?_printf+4
  1084  002044  EC5E  F008         	call	_printf	;wreg free
  1085                           
  1086                           ;Lab5p2.c: 92: WAIT_1_SEC();
  1087  002048  ECDB  F016         	call	_WAIT_1_SEC	;wreg free
  1088  00204C  D6FB               	goto	l2835
  1089  00204E  EF00  F000         	goto	start
  1090  002052                     __end_of_main:
  1091                           	opt stack 0
  1092                           tblptru	equ	0xFF8
  1093                           tblptrh	equ	0xFF7
  1094                           tblptrl	equ	0xFF6
  1095                           tablat	equ	0xFF5
  1096                           postinc0	equ	0xFEE
  1097                           postdec1	equ	0xFE5
  1098                           fsr1l	equ	0xFE1
  1099                           
  1100 ;; *************** function _printf *****************
  1101 ;; Defined at:
  1102 ;;		line 464 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  f               2   63[COMRAM] PTR const unsigned char 
  1105 ;;		 -> STR_4(23), STR_3(16), STR_2(15), STR_1(14), 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  tmpval          4   89[COMRAM] struct .
  1108 ;;  val             4   83[COMRAM] unsigned long 
  1109 ;;  fval            3   93[COMRAM] unsigned long 
  1110 ;;  cp              3    0        PTR const unsigned char 
  1111 ;;  exp             2   87[COMRAM] int 
  1112 ;;  prec            2   81[COMRAM] int 
  1113 ;;  flag            2   79[COMRAM] unsigned short 
  1114 ;;  ap              2   77[COMRAM] PTR void [1]
  1115 ;;		 -> ?_printf(2), 
  1116 ;;  len             2    0        unsigned int 
  1117 ;;  width           2    0        int 
  1118 ;;  c               1   96[COMRAM] char 
  1119 ;;  d               1    0        unsigned char 
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  2   63[COMRAM] int 
  1122 ;; Registers used:
  1123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1129 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1130 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;Total ram usage:       34 bytes
  1134 ;; Hardware stack levels used:    1
  1135 ;; Hardware stack levels required when called:    3
  1136 ;; This function calls:
  1137 ;;		___awdiv
  1138 ;;		___ftadd
  1139 ;;		___ftge
  1140 ;;		___ftmul
  1141 ;;		___ftneg
  1142 ;;		___ftsub
  1143 ;;		___fttol
  1144 ;;		___lldiv
  1145 ;;		___llmod
  1146 ;;		___lltoft
  1147 ;;		___wmul
  1148 ;;		__div_to_l_
  1149 ;;		__tdiv_to_l_
  1150 ;;		_fround
  1151 ;;		_putch
  1152 ;;		_scale
  1153 ;; This function is called by:
  1154 ;;		_main
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           	psect	text1
  1159  0010BC                     __ptext1:
  1160                           	opt stack 0
  1161  0010BC                     _printf:
  1162                           	opt stack 27
  1163                           
  1164                           ;doprnt.c: 466: va_list ap;
  1165                           ;doprnt.c: 499: signed char c;
  1166                           ;doprnt.c: 501: int width;
  1167                           ;doprnt.c: 504: int prec;
  1168                           ;doprnt.c: 508: unsigned short flag;
  1169                           ;doprnt.c: 515: char d;
  1170                           ;doprnt.c: 516: double fval;
  1171                           ;doprnt.c: 517: int exp;
  1172                           ;doprnt.c: 523: union {
  1173                           ;doprnt.c: 524: unsigned long vd;
  1174                           ;doprnt.c: 525: double integ;
  1175                           ;doprnt.c: 526: } tmpval;
  1176                           ;doprnt.c: 528: unsigned long val;
  1177                           ;doprnt.c: 529: unsigned len;
  1178                           ;doprnt.c: 530: const char * cp;
  1179                           ;doprnt.c: 533: *ap = __va_start();
  1180                           
  1181                           ;incstack = 0
  1182  0010BC  0E42               	movlw	low (?_printf+2)
  1183  0010BE  6E4E               	movwf	printf@ap,c
  1184  0010C0  0E00               	movlw	high (?_printf+2)
  1185  0010C2  6E4F               	movwf	printf@ap+1,c
  1186                           
  1187                           ;doprnt.c: 536: while(c = *f++) {
  1188  0010C4  D393               	goto	l2767
  1189  0010C6                     l2587:
  1190                           
  1191                           ;doprnt.c: 538: if(c != '%')
  1192  0010C6  0E25               	movlw	37
  1193  0010C8  1861               	xorwf	printf@c,w,c
  1194  0010CA  B4D8               	btfsc	status,2,c
  1195  0010CC  D004               	goto	l2591
  1196                           
  1197                           ;doprnt.c: 540: {
  1198                           ;doprnt.c: 541: (putch(c) );
  1199  0010CE  5061               	movf	printf@c,w,c
  1200  0010D0  EC0E  F017         	call	_putch
  1201                           
  1202                           ;doprnt.c: 542: continue;
  1203  0010D4  D38B               	goto	l2767
  1204  0010D6                     l2591:
  1205                           
  1206                           ;doprnt.c: 543: }
  1207                           ;doprnt.c: 548: flag = 0;
  1208  0010D6  0E00               	movlw	0
  1209  0010D8  6E51               	movwf	printf@flag+1,c
  1210  0010DA  0E00               	movlw	0
  1211  0010DC  6E50               	movwf	printf@flag,c
  1212                           
  1213                           ;doprnt.c: 635: switch(c = *f++) {
  1214  0010DE  D005               	goto	l2597
  1215                           
  1216                           ;doprnt.c: 638: goto alldone;
  1217                           
  1218                           ;doprnt.c: 637: case 0:
  1219  0010E0  D393               	goto	l264
  1220  0010E2                     l2593:
  1221                           
  1222                           ;doprnt.c: 663: flag |= 0x400;
  1223  0010E2  8451               	bsf	printf@flag+1,2,c
  1224                           
  1225                           ;doprnt.c: 698: case 'i':
  1226                           ;doprnt.c: 699: break;
  1227                           
  1228                           ;doprnt.c: 697: case 'd':
  1229                           
  1230                           ;doprnt.c: 664: break;
  1231  0010E4  D018               	goto	l2599
  1232                           
  1233                           ;doprnt.c: 813: continue;
  1234                           
  1235                           ;doprnt.c: 802: default:
  1236  0010E6  D382               	goto	l2767
  1237                           
  1238                           ;doprnt.c: 822: }
  1239  0010E8  D016               	goto	l2599
  1240  0010EA                     l2597:
  1241  0010EA  C040  FFF6         	movff	printf@f,tblptrl
  1242  0010EE  C041  FFF7         	movff	printf@f+1,tblptrh
  1243  0010F2  4A40               	infsnz	printf@f,f,c
  1244  0010F4  2A41               	incf	printf@f+1,f,c
  1245  0010F6                     	if	0	;tblptru may be non-zero
  1246  0010F6                     	endif
  1247  0010F6                     	if	0	;tblptru may be non-zero
  1248  0010F6                     	endif
  1249  0010F6  0008               	tblrd		*
  1250  0010F8  CFF5 F061          	movff	tablat,printf@c
  1251  0010FC  5061               	movf	printf@c,w,c
  1252                           
  1253                           ; Switch size 1, requested type "space"
  1254                           ; Number of cases is 4, Range of values is 0 to 105
  1255                           ; switch strategies available:
  1256                           ; Name         Instructions Cycles
  1257                           ; simple_byte           13     7 (average)
  1258                           ;	Chosen strategy is simple_byte
  1259  0010FE  0A00               	xorlw	0	; case 0
  1260  001100  B4D8               	btfsc	status,2,c
  1261  001102  D382               	goto	l264
  1262  001104  0A64               	xorlw	100	; case 100
  1263  001106  B4D8               	btfsc	status,2,c
  1264  001108  D006               	goto	l2599
  1265  00110A  0A02               	xorlw	2	; case 102
  1266  00110C  B4D8               	btfsc	status,2,c
  1267  00110E  D7E9               	goto	l2593
  1268  001110  0A0F               	xorlw	15	; case 105
  1269  001112  A4D8               	btfss	status,2,c
  1270  001114  D36B               	goto	l2767
  1271  001116                     l2599:
  1272                           
  1273                           ;doprnt.c: 825: if(flag & (0x700)) {
  1274  001116  0E07               	movlw	7
  1275  001118  1451               	andwf	printf@flag+1,w,c
  1276  00111A  B4D8               	btfsc	status,2,c
  1277  00111C  D2CA               	goto	l2731
  1278                           
  1279                           ;doprnt.c: 829: prec = 6;
  1280  00111E  0E00               	movlw	0
  1281  001120  6E53               	movwf	printf@prec+1,c
  1282  001122  0E06               	movlw	6
  1283  001124  6E52               	movwf	printf@prec,c
  1284                           
  1285                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1286  001126  C04E  FFD9         	movff	printf@ap,fsr2l
  1287  00112A  C04F  FFDA         	movff	printf@ap+1,fsr2h
  1288  00112E  CFDE F05E          	movff	postinc2,printf@fval
  1289  001132  CFDE F05F          	movff	postinc2,printf@fval+1
  1290  001136  CFDD F060          	movff	postdec2,printf@fval+2
  1291  00113A  0E03               	movlw	3
  1292  00113C  264E               	addwf	printf@ap,f,c
  1293  00113E  0E00               	movlw	0
  1294  001140  224F               	addwfc	printf@ap+1,f,c
  1295                           
  1296                           ;doprnt.c: 831: if(fval < 0.0) {
  1297  001142  AE60               	btfss	printf@fval+2,7,c
  1298  001144  D011               	goto	l2613
  1299                           
  1300                           ;doprnt.c: 832: fval = -fval;
  1301  001146  C05E  F001         	movff	printf@fval,___ftneg@f1
  1302  00114A  C05F  F002         	movff	printf@fval+1,___ftneg@f1+1
  1303  00114E  C060  F003         	movff	printf@fval+2,___ftneg@f1+2
  1304  001152  ECC9  F016         	call	___ftneg	;wreg free
  1305  001156  C001  F05E         	movff	?___ftneg,printf@fval
  1306  00115A  C002  F05F         	movff	?___ftneg+1,printf@fval+1
  1307  00115E  C003  F060         	movff	?___ftneg+2,printf@fval+2
  1308                           
  1309                           ;doprnt.c: 833: flag |= 0x03;
  1310  001162  0E03               	movlw	3
  1311  001164  1250               	iorwf	printf@flag,f,c
  1312  001166  D000               	goto	l2613
  1313  001168                     l2613:
  1314                           
  1315                           ;doprnt.c: 834: }
  1316                           ;doprnt.c: 835: exp = 0;
  1317  001168  0E00               	movlw	0
  1318  00116A  6E59               	movwf	printf@exp+1,c
  1319  00116C  0E00               	movlw	0
  1320  00116E  6E58               	movwf	printf@exp,c
  1321                           
  1322                           ;doprnt.c: 836: if( fval!=0) {
  1323  001170  505E               	movf	printf@fval,w,c
  1324  001172  105F               	iorwf	printf@fval+1,w,c
  1325  001174  1060               	iorwf	printf@fval+2,w,c
  1326  001176  B4D8               	btfsc	status,2,c
  1327  001178  D085               	goto	l2641
  1328                           
  1329                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1330  00117A  0E82               	movlw	130
  1331  00117C  6E45               	movwf	??_printf& (0+255),c
  1332  00117E  0EFF               	movlw	255
  1333  001180  6E46               	movwf	(??_printf+1)& (0+255),c
  1334  001182  C05E  F047         	movff	printf@fval,??_printf+2
  1335  001186  C05F  F048         	movff	printf@fval+1,??_printf+3
  1336  00118A  C060  F049         	movff	printf@fval+2,??_printf+4
  1337  00118E  C061  F04A         	movff	printf@fval+3,??_printf+5
  1338  001192  0E10               	movlw	16
  1339  001194  D005               	goto	u2750
  1340  001196                     u2755:
  1341  001196  90D8               	bcf	status,0,c
  1342  001198  324A               	rrcf	??_printf+5,f,c
  1343  00119A  3249               	rrcf	??_printf+4,f,c
  1344  00119C  3248               	rrcf	??_printf+3,f,c
  1345  00119E  3247               	rrcf	??_printf+2,f,c
  1346  0011A0                     u2750:
  1347  0011A0  2EE8               	decfsz	wreg,f,c
  1348  0011A2  D7F9               	goto	u2755
  1349  0011A4  5047               	movf	??_printf+2,w,c
  1350  0011A6  2445               	addwf	??_printf,w,c
  1351  0011A8  6E58               	movwf	printf@exp,c
  1352  0011AA  0E00               	movlw	0
  1353  0011AC  2046               	addwfc	??_printf+1,w,c
  1354  0011AE  6E59               	movwf	printf@exp+1,c
  1355                           
  1356                           ;doprnt.c: 838: exp--;
  1357  0011B0  0658               	decf	printf@exp,f,c
  1358  0011B2  A0D8               	btfss	status,0,c
  1359  0011B4  0659               	decf	printf@exp+1,f,c
  1360                           
  1361                           ;doprnt.c: 839: exp *= 3;
  1362  0011B6  C058  F00F         	movff	printf@exp,___wmul@multiplier
  1363  0011BA  C059  F010         	movff	printf@exp+1,___wmul@multiplier+1
  1364  0011BE  0E00               	movlw	0
  1365  0011C0  6E12               	movwf	___wmul@multiplicand+1,c
  1366  0011C2  0E03               	movlw	3
  1367  0011C4  6E11               	movwf	___wmul@multiplicand,c
  1368  0011C6  ECA2  F016         	call	___wmul	;wreg free
  1369  0011CA  C00F  F058         	movff	?___wmul,printf@exp
  1370  0011CE  C010  F059         	movff	?___wmul+1,printf@exp+1
  1371                           
  1372                           ;doprnt.c: 840: exp /= 10;
  1373  0011D2  C058  F007         	movff	printf@exp,___awdiv@dividend
  1374  0011D6  C059  F008         	movff	printf@exp+1,___awdiv@dividend+1
  1375  0011DA  0E00               	movlw	0
  1376  0011DC  6E0A               	movwf	___awdiv@divisor+1,c
  1377  0011DE  0E0A               	movlw	10
  1378  0011E0  6E09               	movwf	___awdiv@divisor,c
  1379  0011E2  EC76  F014         	call	___awdiv	;wreg free
  1380  0011E6  C007  F058         	movff	?___awdiv,printf@exp
  1381  0011EA  C008  F059         	movff	?___awdiv+1,printf@exp+1
  1382                           
  1383                           ;doprnt.c: 841: if(exp < 0)
  1384  0011EE  AE59               	btfss	printf@exp+1,7,c
  1385  0011F0  D004               	goto	l2629
  1386                           
  1387                           ;doprnt.c: 842: exp--;
  1388  0011F2  0658               	decf	printf@exp,f,c
  1389  0011F4  A0D8               	btfss	status,0,c
  1390  0011F6  0659               	decf	printf@exp+1,f,c
  1391  0011F8  D000               	goto	l2629
  1392  0011FA                     l2629:
  1393                           
  1394                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1395  0011FA  5058               	movf	printf@exp,w,c
  1396  0011FC  0800               	sublw	0
  1397  0011FE  EC05  F00C         	call	_scale
  1398  001202  C024  F05A         	movff	?_scale,printf@tmpval
  1399  001206  C025  F05B         	movff	?_scale+1,printf@tmpval+1
  1400  00120A  C026  F05C         	movff	?_scale+2,printf@tmpval+2
  1401                           
  1402                           ;doprnt.c: 847: tmpval.integ *= fval;
  1403  00120E  C05A  F015         	movff	printf@tmpval,___ftmul@f1
  1404  001212  C05B  F016         	movff	printf@tmpval+1,___ftmul@f1+1
  1405  001216  C05C  F017         	movff	printf@tmpval+2,___ftmul@f1+2
  1406  00121A  C05E  F018         	movff	printf@fval,___ftmul@f2
  1407  00121E  C05F  F019         	movff	printf@fval+1,___ftmul@f2+1
  1408  001222  C060  F01A         	movff	printf@fval+2,___ftmul@f2+2
  1409  001226  EC18  F012         	call	___ftmul	;wreg free
  1410  00122A  C015  F05A         	movff	?___ftmul,printf@tmpval
  1411  00122E  C016  F05B         	movff	?___ftmul+1,printf@tmpval+1
  1412  001232  C017  F05C         	movff	?___ftmul+2,printf@tmpval+2
  1413                           
  1414                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1415  001236  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1416  00123A  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1417  00123E  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1418  001242  0E00               	movlw	0
  1419  001244  6E04               	movwf	___ftge@ff2,c
  1420  001246  0E80               	movlw	128
  1421  001248  6E05               	movwf	___ftge@ff2+1,c
  1422  00124A  0E3F               	movlw	63
  1423  00124C  6E06               	movwf	___ftge@ff2+2,c
  1424  00124E  EC2B  F014         	call	___ftge	;wreg free
  1425  001252  B0D8               	btfsc	status,0,c
  1426  001254  D004               	goto	l2637
  1427                           
  1428                           ;doprnt.c: 849: exp--;
  1429  001256  0658               	decf	printf@exp,f,c
  1430  001258  A0D8               	btfss	status,0,c
  1431  00125A  0659               	decf	printf@exp+1,f,c
  1432  00125C  D013               	goto	l2641
  1433  00125E                     l2637:
  1434                           
  1435                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1436  00125E  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1437  001262  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1438  001266  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1439  00126A  0E00               	movlw	0
  1440  00126C  6E04               	movwf	___ftge@ff2,c
  1441  00126E  0E20               	movlw	32
  1442  001270  6E05               	movwf	___ftge@ff2+1,c
  1443  001272  0E41               	movlw	65
  1444  001274  6E06               	movwf	___ftge@ff2+2,c
  1445  001276  EC2B  F014         	call	___ftge	;wreg free
  1446  00127A  A0D8               	btfss	status,0,c
  1447  00127C  D003               	goto	l2641
  1448                           
  1449                           ;doprnt.c: 851: exp++;
  1450  00127E  4A58               	infsnz	printf@exp,f,c
  1451  001280  2A59               	incf	printf@exp+1,f,c
  1452  001282  D000               	goto	l2641
  1453  001284                     l2641:
  1454                           
  1455                           ;doprnt.c: 852: }
  1456                           ;doprnt.c: 1112: if(prec <= 12)
  1457  001284  BE53               	btfsc	printf@prec+1,7,c
  1458  001286  D006               	goto	l2643
  1459  001288  5053               	movf	printf@prec+1,w,c
  1460  00128A  E11C               	bnz	l2645
  1461  00128C  0E0D               	movlw	13
  1462  00128E  5C52               	subwf	printf@prec,w,c
  1463  001290  B0D8               	btfsc	status,0,c
  1464  001292  D018               	goto	l2645
  1465  001294                     l2643:
  1466                           
  1467                           ;doprnt.c: 1113: fval += fround(prec);
  1468  001294  C05E  F02E         	movff	printf@fval,___ftadd@f1
  1469  001298  C05F  F02F         	movff	printf@fval+1,___ftadd@f1+1
  1470  00129C  C060  F030         	movff	printf@fval+2,___ftadd@f1+2
  1471  0012A0  5052               	movf	printf@prec,w,c
  1472  0012A2  ECF5  F00D         	call	_fround
  1473  0012A6  C024  F031         	movff	?_fround,___ftadd@f2
  1474  0012AA  C025  F032         	movff	?_fround+1,___ftadd@f2+1
  1475  0012AE  C026  F033         	movff	?_fround+2,___ftadd@f2+2
  1476  0012B2  EC29  F010         	call	___ftadd	;wreg free
  1477  0012B6  C02E  F05E         	movff	?___ftadd,printf@fval
  1478  0012BA  C02F  F05F         	movff	?___ftadd+1,printf@fval+1
  1479  0012BE  C030  F060         	movff	?___ftadd+2,printf@fval+2
  1480  0012C2  D000               	goto	l2645
  1481  0012C4                     l2645:
  1482                           
  1483                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1484  0012C4  BE59               	btfsc	printf@exp+1,7,c
  1485  0012C6  D006               	goto	l2647
  1486  0012C8  5059               	movf	printf@exp+1,w,c
  1487  0012CA  E120               	bnz	l2653
  1488  0012CC  0E0A               	movlw	10
  1489  0012CE  5C58               	subwf	printf@exp,w,c
  1490  0012D0  B0D8               	btfsc	status,0,c
  1491  0012D2  D01C               	goto	l2653
  1492  0012D4                     l2647:
  1493  0012D4  505E               	movf	printf@fval,w,c
  1494  0012D6  105F               	iorwf	printf@fval+1,w,c
  1495  0012D8  1060               	iorwf	printf@fval+2,w,c
  1496  0012DA  B4D8               	btfsc	status,2,c
  1497  0012DC  D06D               	goto	l2667
  1498  0012DE  C05E  F02B         	movff	printf@fval,___fttol@f1
  1499  0012E2  C05F  F02C         	movff	printf@fval+1,___fttol@f1+1
  1500  0012E6  C060  F02D         	movff	printf@fval+2,___fttol@f1+2
  1501  0012EA  EC94  F012         	call	___fttol	;wreg free
  1502  0012EE  502B               	movf	?___fttol,w,c
  1503  0012F0  102C               	iorwf	?___fttol+1,w,c
  1504  0012F2  102D               	iorwf	?___fttol+2,w,c
  1505  0012F4  102E               	iorwf	?___fttol+3,w,c
  1506  0012F6  B4D8               	btfsc	status,2,c
  1507  0012F8  BE59               	btfsc	printf@exp+1,7,c
  1508  0012FA  D05E               	goto	l2667
  1509  0012FC  5059               	movf	printf@exp+1,w,c
  1510  0012FE  E106               	bnz	l2653
  1511  001300  0E02               	movlw	2
  1512  001302  5C58               	subwf	printf@exp,w,c
  1513  001304  B0D8               	btfsc	status,0,c
  1514  001306  D002               	goto	l2653
  1515  001308  D057               	goto	l2667
  1516  00130A  D000               	goto	l2653
  1517  00130C                     l2653:
  1518                           
  1519                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1520  00130C  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1521  001310  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1522  001314  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1523  001318  0E70               	movlw	112
  1524  00131A  6E04               	movwf	___ftge@ff2,c
  1525  00131C  0E89               	movlw	137
  1526  00131E  6E05               	movwf	___ftge@ff2+1,c
  1527  001320  0E40               	movlw	64
  1528  001322  6E06               	movwf	___ftge@ff2+2,c
  1529  001324  EC2B  F014         	call	___ftge	;wreg free
  1530  001328  B0D8               	btfsc	status,0,c
  1531  00132A  D002               	goto	l2657
  1532                           
  1533                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1534  00132C  0EF7               	movlw	247
  1535  00132E  D001               	goto	L1
  1536  001330                     l2657:
  1537                           
  1538                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1539  001330  0EF8               	movlw	248
  1540  001332                     L1:
  1541  001332  2658               	addwf	printf@exp,f,c
  1542  001334  0EFF               	movlw	255
  1543  001336  2259               	addwfc	printf@exp+1,f,c
  1544  001338  D000               	goto	l2659
  1545  00133A                     l2659:
  1546                           
  1547                           ;doprnt.c: 1124: }
  1548                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1549  00133A  5058               	movf	printf@exp,w,c
  1550  00133C  EC05  F00C         	call	_scale
  1551  001340  C024  F05A         	movff	?_scale,printf@tmpval
  1552  001344  C025  F05B         	movff	?_scale+1,printf@tmpval+1
  1553  001348  C026  F05C         	movff	?_scale+2,printf@tmpval+2
  1554                           
  1555                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1556  00134C  D017               	goto	l2663
  1557  00134E  C05E  F001         	movff	printf@fval,__div_to_l_@f1
  1558  001352  C05F  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  1559  001356  C060  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  1560  00135A  C05A  F004         	movff	printf@tmpval,__div_to_l_@f2
  1561  00135E  C05B  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  1562  001362  C05C  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  1563  001366  EC93  F011         	call	__div_to_l_	;wreg free
  1564  00136A  C001  F054         	movff	?__div_to_l_,printf@val
  1565  00136E  C002  F055         	movff	?__div_to_l_+1,printf@val+1
  1566  001372  C003  F056         	movff	?__div_to_l_+2,printf@val+2
  1567  001376  C004  F057         	movff	?__div_to_l_+3,printf@val+3
  1568  00137A  D017               	goto	l2665
  1569  00137C                     l2663:
  1570  00137C  C05E  F001         	movff	printf@fval,__tdiv_to_l_@f1
  1571  001380  C05F  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1572  001384  C060  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1573  001388  C05A  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  1574  00138C  C05B  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1575  001390  C05C  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1576  001394  EC0B  F011         	call	__tdiv_to_l_	;wreg free
  1577  001398  C001  F054         	movff	?__tdiv_to_l_,printf@val
  1578  00139C  C002  F055         	movff	?__tdiv_to_l_+1,printf@val+1
  1579  0013A0  C003  F056         	movff	?__tdiv_to_l_+2,printf@val+2
  1580  0013A4  C004  F057         	movff	?__tdiv_to_l_+3,printf@val+3
  1581  0013A8  D000               	goto	l2665
  1582  0013AA                     l2665:
  1583                           
  1584                           ;doprnt.c: 1129: fval = 0.0;
  1585  0013AA  0E00               	movlw	0
  1586  0013AC  6E5E               	movwf	printf@fval,c
  1587  0013AE  0E00               	movlw	0
  1588  0013B0  6E5F               	movwf	printf@fval+1,c
  1589  0013B2  0E00               	movlw	0
  1590  0013B4  6E60               	movwf	printf@fval+2,c
  1591                           
  1592                           ;doprnt.c: 1130: } else {
  1593  0013B6  D033               	goto	l2671
  1594  0013B8                     l2667:
  1595                           
  1596                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1597  0013B8  C05E  F02B         	movff	printf@fval,___fttol@f1
  1598  0013BC  C05F  F02C         	movff	printf@fval+1,___fttol@f1+1
  1599  0013C0  C060  F02D         	movff	printf@fval+2,___fttol@f1+2
  1600  0013C4  EC94  F012         	call	___fttol	;wreg free
  1601  0013C8  C02B  F054         	movff	?___fttol,printf@val
  1602  0013CC  C02C  F055         	movff	?___fttol+1,printf@val+1
  1603  0013D0  C02D  F056         	movff	?___fttol+2,printf@val+2
  1604  0013D4  C02E  F057         	movff	?___fttol+3,printf@val+3
  1605                           
  1606                           ;doprnt.c: 1132: fval -= (double)val;
  1607  0013D8  C05E  F03A         	movff	printf@fval,___ftsub@f1
  1608  0013DC  C05F  F03B         	movff	printf@fval+1,___ftsub@f1+1
  1609  0013E0  C060  F03C         	movff	printf@fval+2,___ftsub@f1+2
  1610  0013E4  C054  F009         	movff	printf@val,___lltoft@c
  1611  0013E8  C055  F00A         	movff	printf@val+1,___lltoft@c+1
  1612  0013EC  C056  F00B         	movff	printf@val+2,___lltoft@c+2
  1613  0013F0  C057  F00C         	movff	printf@val+3,___lltoft@c+3
  1614  0013F4  ECB8  F015         	call	___lltoft	;wreg free
  1615  0013F8  C009  F03D         	movff	?___lltoft,___ftsub@f2
  1616  0013FC  C00A  F03E         	movff	?___lltoft+1,___ftsub@f2+1
  1617  001400  C00B  F03F         	movff	?___lltoft+2,___ftsub@f2+2
  1618  001404  EC0B  F016         	call	___ftsub	;wreg free
  1619  001408  C03A  F05E         	movff	?___ftsub,printf@fval
  1620  00140C  C03B  F05F         	movff	?___ftsub+1,printf@fval+1
  1621  001410  C03C  F060         	movff	?___ftsub+2,printf@fval+2
  1622                           
  1623                           ;doprnt.c: 1133: exp = 0;
  1624  001414  0E00               	movlw	0
  1625  001416  6E59               	movwf	printf@exp+1,c
  1626  001418  0E00               	movlw	0
  1627  00141A  6E58               	movwf	printf@exp,c
  1628  00141C  D000               	goto	l2671
  1629  00141E                     l2671:
  1630                           
  1631                           ;doprnt.c: 1134: }
  1632                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1633  00141E  0E01               	movlw	1
  1634  001420  6E61               	movwf	printf@c,c
  1635  001422                     l2673:
  1636  001422  0E0A               	movlw	10
  1637  001424  1861               	xorwf	printf@c,w,c
  1638  001426  B4D8               	btfsc	status,2,c
  1639  001428  D01C               	goto	l2685
  1640  00142A  D001               	goto	l2677
  1641  00142C  D01A               	goto	l2685
  1642  00142E                     l2677:
  1643                           
  1644                           ;doprnt.c: 1137: if(val < dpowers[c])
  1645  00142E  5061               	movf	printf@c,w,c
  1646  001430  0D04               	mullw	4
  1647  001432  0E01               	movlw	low _dpowers
  1648  001434  24F3               	addwf	prodl,w,c
  1649  001436  6EF6               	movwf	tblptrl,c
  1650  001438  0E10               	movlw	high _dpowers
  1651  00143A  20F4               	addwfc	prodh,w,c
  1652  00143C  6EF7               	movwf	tblptrh,c
  1653  00143E                     	if	0	;There are less than 3 active tblptr bytes
  1654  00143E                     	endif
  1655  00143E  0009               	tblrd		*+
  1656  001440  50F5               	movf	tablat,w,c
  1657  001442  5C54               	subwf	printf@val,w,c
  1658  001444  0009               	tblrd		*+
  1659  001446  50F5               	movf	tablat,w,c
  1660  001448  5855               	subwfb	printf@val+1,w,c
  1661  00144A  0009               	tblrd		*+
  1662  00144C  50F5               	movf	tablat,w,c
  1663  00144E  5856               	subwfb	printf@val+2,w,c
  1664  001450  0009               	tblrd		*+
  1665  001452  50F5               	movf	tablat,w,c
  1666  001454  5857               	subwfb	printf@val+3,w,c
  1667  001456  A0D8               	btfss	status,0,c
  1668  001458  D004               	goto	l2685
  1669  00145A  D001               	goto	l2681
  1670                           
  1671                           ;doprnt.c: 1138: break;
  1672  00145C  D002               	goto	l2685
  1673  00145E                     l2681:
  1674  00145E  2A61               	incf	printf@c,f,c
  1675  001460  D7E0               	goto	l2673
  1676  001462                     l2685:
  1677                           
  1678                           ;doprnt.c: 1175: {
  1679                           ;doprnt.c: 1188: if(flag & 0x03)
  1680  001462  0E03               	movlw	3
  1681  001464  1450               	andwf	printf@flag,w,c
  1682  001466  6E45               	movwf	??_printf& (0+255),c
  1683  001468  0E00               	movlw	0
  1684  00146A  1451               	andwf	printf@flag+1,w,c
  1685  00146C  6E46               	movwf	(??_printf+1)& (0+255),c
  1686  00146E  5045               	movf	??_printf,w,c
  1687  001470  1046               	iorwf	??_printf+1,w,c
  1688  001472  B4D8               	btfsc	status,2,c
  1689  001474  D049               	goto	l2695
  1690                           
  1691                           ;doprnt.c: 1190: (putch('-') );
  1692  001476  0E2D               	movlw	45
  1693  001478  EC0E  F017         	call	_putch
  1694                           
  1695                           ;doprnt.c: 1195: }
  1696                           ;doprnt.c: 1196: while(c--) {
  1697  00147C  D045               	goto	l2695
  1698  00147E                     l2689:
  1699                           
  1700                           ;doprnt.c: 1200: {
  1701                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1702  00147E  C054  F001         	movff	printf@val,___lldiv@dividend
  1703  001482  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  1704  001486  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  1705  00148A  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  1706  00148E  5061               	movf	printf@c,w,c
  1707  001490  0D04               	mullw	4
  1708  001492  0E01               	movlw	low _dpowers
  1709  001494  24F3               	addwf	prodl,w,c
  1710  001496  6EF6               	movwf	tblptrl,c
  1711  001498  0E10               	movlw	high _dpowers
  1712  00149A  20F4               	addwfc	prodh,w,c
  1713  00149C  6EF7               	movwf	tblptrh,c
  1714  00149E                     	if	0	;There are less than 3 active tblptr bytes
  1715  00149E                     	endif
  1716  00149E  0009               	tblrd		*+
  1717  0014A0  CFF5 F005          	movff	tablat,___lldiv@divisor
  1718  0014A4  0009               	tblrd		*+
  1719  0014A6  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1720  0014AA  0009               	tblrd		*+
  1721  0014AC  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1722  0014B0  000A               	tblrd		*-
  1723  0014B2  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1724  0014B6  ECC1  F014         	call	___lldiv	;wreg free
  1725  0014BA  C001  F05A         	movff	?___lldiv,printf@tmpval
  1726  0014BE  C002  F05B         	movff	?___lldiv+1,printf@tmpval+1
  1727  0014C2  C003  F05C         	movff	?___lldiv+2,printf@tmpval+2
  1728  0014C6  C004  F05D         	movff	?___lldiv+3,printf@tmpval+3
  1729                           
  1730                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1731  0014CA  C05A  F00E         	movff	printf@tmpval,___llmod@dividend
  1732  0014CE  C05B  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  1733  0014D2  C05C  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  1734  0014D6  C05D  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  1735  0014DA  0E0A               	movlw	10
  1736  0014DC  6E12               	movwf	___llmod@divisor,c
  1737  0014DE  0E00               	movlw	0
  1738  0014E0  6E13               	movwf	___llmod@divisor+1,c
  1739  0014E2  0E00               	movlw	0
  1740  0014E4  6E14               	movwf	___llmod@divisor+2,c
  1741  0014E6  0E00               	movlw	0
  1742  0014E8  6E15               	movwf	___llmod@divisor+3,c
  1743  0014EA  EC48  F015         	call	___llmod	;wreg free
  1744  0014EE  C00E  F05A         	movff	?___llmod,printf@tmpval
  1745  0014F2  C00F  F05B         	movff	?___llmod+1,printf@tmpval+1
  1746  0014F6  C010  F05C         	movff	?___llmod+2,printf@tmpval+2
  1747  0014FA  C011  F05D         	movff	?___llmod+3,printf@tmpval+3
  1748                           
  1749                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  1750  0014FE  505A               	movf	printf@tmpval,w,c
  1751  001500  0F30               	addlw	48
  1752  001502  EC0E  F017         	call	_putch
  1753  001506  D000               	goto	l2695
  1754  001508                     l2695:
  1755  001508  0661               	decf	printf@c,f,c
  1756  00150A  2861               	incf	printf@c,w,c
  1757  00150C  B4D8               	btfsc	status,2,c
  1758  00150E  D009               	goto	l2701
  1759  001510  D7B6               	goto	l2689
  1760                           
  1761                           ;doprnt.c: 1204: }
  1762                           ;doprnt.c: 1206: }
  1763                           ;doprnt.c: 1207: while(exp > 0) {
  1764  001512  D007               	goto	l2701
  1765  001514                     l2697:
  1766                           
  1767                           ;doprnt.c: 1208: (putch('0') );
  1768  001514  0E30               	movlw	48
  1769  001516  EC0E  F017         	call	_putch
  1770                           
  1771                           ;doprnt.c: 1209: exp--;
  1772  00151A  0658               	decf	printf@exp,f,c
  1773  00151C  A0D8               	btfss	status,0,c
  1774  00151E  0659               	decf	printf@exp+1,f,c
  1775  001520  D000               	goto	l2701
  1776  001522                     l2701:
  1777  001522  BE59               	btfsc	printf@exp+1,7,c
  1778  001524  D005               	goto	l2703
  1779  001526  5059               	movf	printf@exp+1,w,c
  1780  001528  E1F5               	bnz	l2697
  1781  00152A  0458               	decf	printf@exp,w,c
  1782  00152C  B0D8               	btfsc	status,0,c
  1783  00152E  D7F2               	goto	l2697
  1784  001530                     l2703:
  1785                           
  1786                           ;doprnt.c: 1210: }
  1787                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  1788  001530  BE53               	btfsc	printf@prec+1,7,c
  1789  001532  D009               	goto	l246
  1790  001534  5053               	movf	printf@prec+1,w,c
  1791  001536  E104               	bnz	u2910
  1792  001538  0E09               	movlw	9
  1793  00153A  5C52               	subwf	printf@prec,w,c
  1794  00153C  A0D8               	btfss	status,0,c
  1795  00153E  D003               	goto	l246
  1796  001540                     u2910:
  1797                           
  1798                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  1799  001540  0E08               	movlw	8
  1800  001542  6E61               	movwf	printf@c,c
  1801  001544  D003               	goto	l2707
  1802  001546                     l246:
  1803                           
  1804                           ;doprnt.c: 1213: else
  1805                           ;doprnt.c: 1214: c = prec;
  1806  001546  C052  F061         	movff	printf@prec,printf@c
  1807  00154A  D000               	goto	l2707
  1808  00154C                     l2707:
  1809                           
  1810                           ;doprnt.c: 1215: prec -= c;
  1811  00154C  5061               	movf	printf@c,w,c
  1812  00154E  5E52               	subwf	printf@prec,f,c
  1813  001550  0E00               	movlw	0
  1814  001552  BE61               	btfsc	printf@c,7,c
  1815  001554  0EFF               	movlw	255
  1816  001556  5A53               	subwfb	printf@prec+1,f,c
  1817                           
  1818                           ;doprnt.c: 1219: if(c)
  1819  001558  5061               	movf	printf@c,w,c
  1820  00155A  B4D8               	btfsc	status,2,c
  1821  00155C  D004               	goto	l2713
  1822                           
  1823                           ;doprnt.c: 1221: (putch('.') );
  1824  00155E  0E2E               	movlw	46
  1825  001560  EC0E  F017         	call	_putch
  1826  001564  D000               	goto	l2713
  1827  001566                     l2713:
  1828                           
  1829                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1830  001566  5061               	movf	printf@c,w,c
  1831  001568  EC05  F00C         	call	_scale
  1832  00156C  C024  F04B         	movff	?_scale,_printf$1186
  1833  001570  C025  F04C         	movff	?_scale+1,_printf$1186+1
  1834  001574  C026  F04D         	movff	?_scale+2,_printf$1186+2
  1835                           
  1836                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1837  001578  C05E  F018         	movff	printf@fval,___ftmul@f2
  1838  00157C  C05F  F019         	movff	printf@fval+1,___ftmul@f2+1
  1839  001580  C060  F01A         	movff	printf@fval+2,___ftmul@f2+2
  1840  001584  C04B  F015         	movff	_printf$1186,___ftmul@f1
  1841  001588  C04C  F016         	movff	_printf$1186+1,___ftmul@f1+1
  1842  00158C  C04D  F017         	movff	_printf$1186+2,___ftmul@f1+2
  1843  001590  EC18  F012         	call	___ftmul	;wreg free
  1844  001594  C015  F02B         	movff	?___ftmul,___fttol@f1
  1845  001598  C016  F02C         	movff	?___ftmul+1,___fttol@f1+1
  1846  00159C  C017  F02D         	movff	?___ftmul+2,___fttol@f1+2
  1847  0015A0  EC94  F012         	call	___fttol	;wreg free
  1848  0015A4  C02B  F054         	movff	?___fttol,printf@val
  1849  0015A8  C02C  F055         	movff	?___fttol+1,printf@val+1
  1850  0015AC  C02D  F056         	movff	?___fttol+2,printf@val+2
  1851  0015B0  C02E  F057         	movff	?___fttol+3,printf@val+3
  1852                           
  1853                           ;doprnt.c: 1228: while(c--) {
  1854  0015B4  D06B               	goto	l2723
  1855  0015B6                     l2717:
  1856                           
  1857                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  1858  0015B6  C054  F001         	movff	printf@val,___lldiv@dividend
  1859  0015BA  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  1860  0015BE  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  1861  0015C2  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  1862  0015C6  5061               	movf	printf@c,w,c
  1863  0015C8  0D04               	mullw	4
  1864  0015CA  0E01               	movlw	low _dpowers
  1865  0015CC  24F3               	addwf	prodl,w,c
  1866  0015CE  6EF6               	movwf	tblptrl,c
  1867  0015D0  0E10               	movlw	high _dpowers
  1868  0015D2  20F4               	addwfc	prodh,w,c
  1869  0015D4  6EF7               	movwf	tblptrh,c
  1870  0015D6                     	if	0	;There are less than 3 active tblptr bytes
  1871  0015D6                     	endif
  1872  0015D6  0009               	tblrd		*+
  1873  0015D8  CFF5 F005          	movff	tablat,___lldiv@divisor
  1874  0015DC  0009               	tblrd		*+
  1875  0015DE  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1876  0015E2  0009               	tblrd		*+
  1877  0015E4  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1878  0015E8  000A               	tblrd		*-
  1879  0015EA  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1880  0015EE  ECC1  F014         	call	___lldiv	;wreg free
  1881  0015F2  C001  F05A         	movff	?___lldiv,printf@tmpval
  1882  0015F6  C002  F05B         	movff	?___lldiv+1,printf@tmpval+1
  1883  0015FA  C003  F05C         	movff	?___lldiv+2,printf@tmpval+2
  1884  0015FE  C004  F05D         	movff	?___lldiv+3,printf@tmpval+3
  1885                           
  1886                           ;doprnt.c: 1230: tmpval.vd %= 10;
  1887  001602  C05A  F00E         	movff	printf@tmpval,___llmod@dividend
  1888  001606  C05B  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  1889  00160A  C05C  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  1890  00160E  C05D  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  1891  001612  0E0A               	movlw	10
  1892  001614  6E12               	movwf	___llmod@divisor,c
  1893  001616  0E00               	movlw	0
  1894  001618  6E13               	movwf	___llmod@divisor+1,c
  1895  00161A  0E00               	movlw	0
  1896  00161C  6E14               	movwf	___llmod@divisor+2,c
  1897  00161E  0E00               	movlw	0
  1898  001620  6E15               	movwf	___llmod@divisor+3,c
  1899  001622  EC48  F015         	call	___llmod	;wreg free
  1900  001626  C00E  F05A         	movff	?___llmod,printf@tmpval
  1901  00162A  C00F  F05B         	movff	?___llmod+1,printf@tmpval+1
  1902  00162E  C010  F05C         	movff	?___llmod+2,printf@tmpval+2
  1903  001632  C011  F05D         	movff	?___llmod+3,printf@tmpval+3
  1904                           
  1905                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  1906  001636  505A               	movf	printf@tmpval,w,c
  1907  001638  0F30               	addlw	48
  1908  00163A  EC0E  F017         	call	_putch
  1909                           
  1910                           ;doprnt.c: 1232: val %= dpowers[c];
  1911  00163E  C054  F00E         	movff	printf@val,___llmod@dividend
  1912  001642  C055  F00F         	movff	printf@val+1,___llmod@dividend+1
  1913  001646  C056  F010         	movff	printf@val+2,___llmod@dividend+2
  1914  00164A  C057  F011         	movff	printf@val+3,___llmod@dividend+3
  1915  00164E  5061               	movf	printf@c,w,c
  1916  001650  0D04               	mullw	4
  1917  001652  0E01               	movlw	low _dpowers
  1918  001654  24F3               	addwf	prodl,w,c
  1919  001656  6EF6               	movwf	tblptrl,c
  1920  001658  0E10               	movlw	high _dpowers
  1921  00165A  20F4               	addwfc	prodh,w,c
  1922  00165C  6EF7               	movwf	tblptrh,c
  1923  00165E                     	if	0	;There are less than 3 active tblptr bytes
  1924  00165E                     	endif
  1925  00165E  0009               	tblrd		*+
  1926  001660  CFF5 F012          	movff	tablat,___llmod@divisor
  1927  001664  0009               	tblrd		*+
  1928  001666  CFF5 F013          	movff	tablat,___llmod@divisor+1
  1929  00166A  0009               	tblrd		*+
  1930  00166C  CFF5 F014          	movff	tablat,___llmod@divisor+2
  1931  001670  000A               	tblrd		*-
  1932  001672  CFF5 F015          	movff	tablat,___llmod@divisor+3
  1933  001676  EC48  F015         	call	___llmod	;wreg free
  1934  00167A  C00E  F054         	movff	?___llmod,printf@val
  1935  00167E  C00F  F055         	movff	?___llmod+1,printf@val+1
  1936  001682  C010  F056         	movff	?___llmod+2,printf@val+2
  1937  001686  C011  F057         	movff	?___llmod+3,printf@val+3
  1938  00168A  D000               	goto	l2723
  1939  00168C                     l2723:
  1940  00168C  0661               	decf	printf@c,f,c
  1941  00168E  2861               	incf	printf@c,w,c
  1942  001690  B4D8               	btfsc	status,2,c
  1943  001692  D009               	goto	l2729
  1944  001694  D790               	goto	l2717
  1945                           
  1946                           ;doprnt.c: 1233: }
  1947                           ;doprnt.c: 1235: while(prec) {
  1948  001696  D007               	goto	l2729
  1949  001698                     l2725:
  1950                           
  1951                           ;doprnt.c: 1236: (putch('0') );
  1952  001698  0E30               	movlw	48
  1953  00169A  EC0E  F017         	call	_putch
  1954                           
  1955                           ;doprnt.c: 1237: prec--;
  1956  00169E  0652               	decf	printf@prec,f,c
  1957  0016A0  A0D8               	btfss	status,0,c
  1958  0016A2  0653               	decf	printf@prec+1,f,c
  1959  0016A4  D000               	goto	l2729
  1960  0016A6                     l2729:
  1961  0016A6  5052               	movf	printf@prec,w,c
  1962  0016A8  1053               	iorwf	printf@prec+1,w,c
  1963  0016AA  B4D8               	btfsc	status,2,c
  1964  0016AC  D09F               	goto	l2767
  1965  0016AE  D7F4               	goto	l2725
  1966                           
  1967                           ;doprnt.c: 1238: }
  1968                           ;doprnt.c: 1245: continue;
  1969  0016B0  D09D               	goto	l2767
  1970  0016B2                     l2731:
  1971                           
  1972                           ;doprnt.c: 1246: }
  1973                           ;doprnt.c: 1253: {
  1974                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  1975  0016B2  C04E  FFD9         	movff	printf@ap,fsr2l
  1976  0016B6  C04F  FFDA         	movff	printf@ap+1,fsr2h
  1977  0016BA  CFDE F054          	movff	postinc2,printf@val
  1978  0016BE  CFDD F055          	movff	postdec2,printf@val+1
  1979  0016C2  0E00               	movlw	0
  1980  0016C4  BE55               	btfsc	printf@val+1,7,c
  1981  0016C6  0EFF               	movlw	-1
  1982  0016C8  6E56               	movwf	printf@val+2,c
  1983  0016CA  6E57               	movwf	printf@val+3,c
  1984  0016CC  0E02               	movlw	2
  1985  0016CE  264E               	addwf	printf@ap,f,c
  1986  0016D0  0E00               	movlw	0
  1987  0016D2  224F               	addwfc	printf@ap+1,f,c
  1988                           
  1989                           ;doprnt.c: 1261: if((long)val < 0) {
  1990  0016D4  AE57               	btfss	printf@val+3,7,c
  1991  0016D6  D00B               	goto	l2741
  1992                           
  1993                           ;doprnt.c: 1262: flag |= 0x03;
  1994  0016D8  0E03               	movlw	3
  1995  0016DA  1250               	iorwf	printf@flag,f,c
  1996                           
  1997                           ;doprnt.c: 1263: val = -val;
  1998  0016DC  1E57               	comf	printf@val+3,f,c
  1999  0016DE  1E56               	comf	printf@val+2,f,c
  2000  0016E0  1E55               	comf	printf@val+1,f,c
  2001  0016E2  6C54               	negf	printf@val,c
  2002  0016E4  0E00               	movlw	0
  2003  0016E6  2255               	addwfc	printf@val+1,f,c
  2004  0016E8  2256               	addwfc	printf@val+2,f,c
  2005  0016EA  2257               	addwfc	printf@val+3,f,c
  2006  0016EC  D000               	goto	l2741
  2007  0016EE                     l2741:
  2008                           
  2009                           ;doprnt.c: 1264: }
  2010                           ;doprnt.c: 1266: }
  2011                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2012  0016EE  0E01               	movlw	1
  2013  0016F0  6E61               	movwf	printf@c,c
  2014  0016F2                     l2743:
  2015  0016F2  0E0A               	movlw	10
  2016  0016F4  1861               	xorwf	printf@c,w,c
  2017  0016F6  B4D8               	btfsc	status,2,c
  2018  0016F8  D01C               	goto	l2755
  2019  0016FA  D001               	goto	l2747
  2020  0016FC  D01A               	goto	l2755
  2021  0016FE                     l2747:
  2022                           
  2023                           ;doprnt.c: 1306: if(val < dpowers[c])
  2024  0016FE  5061               	movf	printf@c,w,c
  2025  001700  0D04               	mullw	4
  2026  001702  0E01               	movlw	low _dpowers
  2027  001704  24F3               	addwf	prodl,w,c
  2028  001706  6EF6               	movwf	tblptrl,c
  2029  001708  0E10               	movlw	high _dpowers
  2030  00170A  20F4               	addwfc	prodh,w,c
  2031  00170C  6EF7               	movwf	tblptrh,c
  2032  00170E                     	if	0	;There are less than 3 active tblptr bytes
  2033  00170E                     	endif
  2034  00170E  0009               	tblrd		*+
  2035  001710  50F5               	movf	tablat,w,c
  2036  001712  5C54               	subwf	printf@val,w,c
  2037  001714  0009               	tblrd		*+
  2038  001716  50F5               	movf	tablat,w,c
  2039  001718  5855               	subwfb	printf@val+1,w,c
  2040  00171A  0009               	tblrd		*+
  2041  00171C  50F5               	movf	tablat,w,c
  2042  00171E  5856               	subwfb	printf@val+2,w,c
  2043  001720  0009               	tblrd		*+
  2044  001722  50F5               	movf	tablat,w,c
  2045  001724  5857               	subwfb	printf@val+3,w,c
  2046  001726  A0D8               	btfss	status,0,c
  2047  001728  D004               	goto	l2755
  2048  00172A  D001               	goto	l2751
  2049                           
  2050                           ;doprnt.c: 1307: break;
  2051  00172C  D002               	goto	l2755
  2052  00172E                     l2751:
  2053  00172E  2A61               	incf	printf@c,f,c
  2054  001730  D7E0               	goto	l2743
  2055  001732                     l2755:
  2056                           
  2057                           ;doprnt.c: 1422: {
  2058                           ;doprnt.c: 1438: if(flag & 0x03)
  2059  001732  0E03               	movlw	3
  2060  001734  1450               	andwf	printf@flag,w,c
  2061  001736  6E45               	movwf	??_printf& (0+255),c
  2062  001738  0E00               	movlw	0
  2063  00173A  1451               	andwf	printf@flag+1,w,c
  2064  00173C  6E46               	movwf	(??_printf+1)& (0+255),c
  2065  00173E  5045               	movf	??_printf,w,c
  2066  001740  1046               	iorwf	??_printf+1,w,c
  2067  001742  B4D8               	btfsc	status,2,c
  2068  001744  D004               	goto	l2759
  2069                           
  2070                           ;doprnt.c: 1439: (putch('-') );
  2071  001746  0E2D               	movlw	45
  2072  001748  EC0E  F017         	call	_putch
  2073  00174C  D000               	goto	l2759
  2074  00174E                     l2759:
  2075                           
  2076                           ;doprnt.c: 1469: }
  2077                           ;doprnt.c: 1472: prec = c;
  2078  00174E  5061               	movf	printf@c,w,c
  2079  001750  6E52               	movwf	printf@prec,c
  2080  001752  6A53               	clrf	printf@prec+1,c
  2081  001754  BE52               	btfsc	printf@prec,7,c
  2082  001756  0653               	decf	printf@prec+1,f,c
  2083                           
  2084                           ;doprnt.c: 1474: while(prec--) {
  2085  001758  D03F               	goto	l2765
  2086  00175A                     l2761:
  2087                           
  2088                           ;doprnt.c: 1478: {
  2089                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2090  00175A  C052  F045         	movff	printf@prec,??_printf
  2091  00175E  C053  F046         	movff	printf@prec+1,??_printf+1
  2092  001762  90D8               	bcf	status,0,c
  2093  001764  3645               	rlcf	??_printf,f,c
  2094  001766  3646               	rlcf	??_printf+1,f,c
  2095  001768  90D8               	bcf	status,0,c
  2096  00176A  3645               	rlcf	??_printf,f,c
  2097  00176C  3646               	rlcf	??_printf+1,f,c
  2098  00176E  0E01               	movlw	low _dpowers
  2099  001770  2445               	addwf	??_printf,w,c
  2100  001772  6EF6               	movwf	tblptrl,c
  2101  001774  0E10               	movlw	high _dpowers
  2102  001776  2046               	addwfc	??_printf+1,w,c
  2103  001778  6EF7               	movwf	tblptrh,c
  2104  00177A                     	if	0	;There are less than 3 active tblptr bytes
  2105  00177A                     	endif
  2106  00177A  0009               	tblrd		*+
  2107  00177C  CFF5 F005          	movff	tablat,___lldiv@divisor
  2108  001780  0009               	tblrd		*+
  2109  001782  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2110  001786  0009               	tblrd		*+
  2111  001788  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2112  00178C  000A               	tblrd		*-
  2113  00178E  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2114  001792  C054  F001         	movff	printf@val,___lldiv@dividend
  2115  001796  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  2116  00179A  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  2117  00179E  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  2118  0017A2  ECC1  F014         	call	___lldiv	;wreg free
  2119  0017A6  C001  F00E         	movff	?___lldiv,___llmod@dividend
  2120  0017AA  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  2121  0017AE  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  2122  0017B2  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  2123  0017B6  0E0A               	movlw	10
  2124  0017B8  6E12               	movwf	___llmod@divisor,c
  2125  0017BA  0E00               	movlw	0
  2126  0017BC  6E13               	movwf	___llmod@divisor+1,c
  2127  0017BE  0E00               	movlw	0
  2128  0017C0  6E14               	movwf	___llmod@divisor+2,c
  2129  0017C2  0E00               	movlw	0
  2130  0017C4  6E15               	movwf	___llmod@divisor+3,c
  2131  0017C6  EC48  F015         	call	___llmod	;wreg free
  2132  0017CA  500E               	movf	?___llmod,w,c
  2133  0017CC  0F30               	addlw	48
  2134  0017CE  6E61               	movwf	printf@c,c
  2135                           
  2136                           ;doprnt.c: 1523: }
  2137                           ;doprnt.c: 1524: (putch(c) );
  2138  0017D0  5061               	movf	printf@c,w,c
  2139  0017D2  EC0E  F017         	call	_putch
  2140  0017D6  D000               	goto	l2765
  2141  0017D8                     l2765:
  2142  0017D8  0652               	decf	printf@prec,f,c
  2143  0017DA  A0D8               	btfss	status,0,c
  2144  0017DC  0653               	decf	printf@prec+1,f,c
  2145  0017DE  2852               	incf	printf@prec,w,c
  2146  0017E0  E1BC               	bnz	l2761
  2147  0017E2  2853               	incf	printf@prec+1,w,c
  2148  0017E4  B4D8               	btfsc	status,2,c
  2149  0017E6  D002               	goto	l2767
  2150  0017E8  D7B8               	goto	l2761
  2151  0017EA  D000               	goto	l2767
  2152  0017EC                     l2767:
  2153  0017EC  C040  FFF6         	movff	printf@f,tblptrl
  2154  0017F0  C041  FFF7         	movff	printf@f+1,tblptrh
  2155  0017F4  4A40               	infsnz	printf@f,f,c
  2156  0017F6  2A41               	incf	printf@f+1,f,c
  2157  0017F8                     	if	0	;tblptru may be non-zero
  2158  0017F8                     	endif
  2159  0017F8                     	if	0	;tblptru may be non-zero
  2160  0017F8                     	endif
  2161  0017F8  0008               	tblrd		*
  2162  0017FA  CFF5 F061          	movff	tablat,printf@c
  2163  0017FE  5061               	movf	printf@c,w,c
  2164  001800  B4D8               	btfsc	status,2,c
  2165  001802  D002               	goto	l264
  2166  001804  D460               	goto	l2587
  2167  001806  D000               	goto	l264
  2168  001808                     l264:
  2169  001808  0012               	return		;funcret
  2170  00180A                     __end_of_printf:
  2171                           	opt stack 0
  2172                           tblptru	equ	0xFF8
  2173                           tblptrh	equ	0xFF7
  2174                           tblptrl	equ	0xFF6
  2175                           tablat	equ	0xFF5
  2176                           prodh	equ	0xFF4
  2177                           prodl	equ	0xFF3
  2178                           postinc0	equ	0xFEE
  2179                           wreg	equ	0xFE8
  2180                           postdec1	equ	0xFE5
  2181                           fsr1l	equ	0xFE1
  2182                           postinc2	equ	0xFDE
  2183                           postdec2	equ	0xFDD
  2184                           fsr2h	equ	0xFDA
  2185                           fsr2l	equ	0xFD9
  2186                           status	equ	0xFD8
  2187                           
  2188 ;; *************** function _scale *****************
  2189 ;; Defined at:
  2190 ;;		line 425 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;  scl             1    wreg     char 
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;  scl             1   41[COMRAM] char 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  3   35[COMRAM] char 
  2197 ;; Registers used:
  2198 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2204 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;Total ram usage:        7 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    2
  2211 ;; This function calls:
  2212 ;;		___awdiv
  2213 ;;		___awmod
  2214 ;;		___ftmul
  2215 ;;		___wmul
  2216 ;; This function is called by:
  2217 ;;		_printf
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text2
  2222  00180A                     __ptext2:
  2223                           	opt stack 0
  2224  00180A                     _scale:
  2225                           	opt stack 27
  2226                           
  2227                           ;incstack = 0
  2228                           ;scale@scl stored from wreg
  2229  00180A  6E2A               	movwf	scale@scl,c
  2230                           
  2231                           ;doprnt.c: 428: if(scl < 0) {
  2232  00180C  AE2A               	btfss	scale@scl,7,c
  2233  00180E  D0EF               	goto	l2265
  2234                           
  2235                           ;doprnt.c: 429: scl = -scl;
  2236  001810  6C2A               	negf	scale@scl,c
  2237                           
  2238                           ;doprnt.c: 430: if(scl>=110)
  2239  001812  502A               	movf	scale@scl,w,c
  2240  001814  0A80               	xorlw	128
  2241  001816  0F12               	addlw	-238
  2242  001818  A0D8               	btfss	status,0,c
  2243  00181A  D08D               	goto	l2255
  2244                           
  2245                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2246  00181C  0E00               	movlw	0
  2247  00181E  6E12               	movwf	___wmul@multiplicand+1,c
  2248  001820  0E03               	movlw	3
  2249  001822  6E11               	movwf	___wmul@multiplicand,c
  2250  001824  0E00               	movlw	0
  2251  001826  6E0A               	movwf	___awdiv@divisor+1,c
  2252  001828  0E0A               	movlw	10
  2253  00182A  6E09               	movwf	___awdiv@divisor,c
  2254  00182C  0E00               	movlw	0
  2255  00182E  6E04               	movwf	___awmod@divisor+1,c
  2256  001830  0E64               	movlw	100
  2257  001832  6E03               	movwf	___awmod@divisor,c
  2258  001834  502A               	movf	scale@scl,w,c
  2259  001836  6E01               	movwf	___awmod@dividend,c
  2260  001838  6A02               	clrf	___awmod@dividend+1,c
  2261  00183A  BE01               	btfsc	___awmod@dividend,7,c
  2262  00183C  0602               	decf	___awmod@dividend+1,f,c
  2263  00183E  EC07  F015         	call	___awmod	;wreg free
  2264  001842  C001  F007         	movff	?___awmod,___awdiv@dividend
  2265  001846  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2266  00184A  EC76  F014         	call	___awdiv	;wreg free
  2267  00184E  0E09               	movlw	9
  2268  001850  2407               	addwf	?___awdiv,w,c
  2269  001852  6E0F               	movwf	___wmul@multiplier,c
  2270  001854  0E00               	movlw	0
  2271  001856  2008               	addwfc	?___awdiv+1,w,c
  2272  001858  6E10               	movwf	___wmul@multiplier+1,c
  2273  00185A  ECA2  F016         	call	___wmul	;wreg free
  2274  00185E  0E29               	movlw	low __npowers_
  2275  001860  240F               	addwf	?___wmul,w,c
  2276  001862  6EF6               	movwf	tblptrl,c
  2277  001864  0E10               	movlw	high __npowers_
  2278  001866  2010               	addwfc	?___wmul+1,w,c
  2279  001868  6EF7               	movwf	tblptrh,c
  2280  00186A                     	if	0	;There are less than 3 active tblptr bytes
  2281  00186A                     	endif
  2282  00186A  0009               	tblrd		*+
  2283  00186C  CFF5 F018          	movff	tablat,___ftmul@f2
  2284  001870  0009               	tblrd		*+
  2285  001872  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2286  001876  000A               	tblrd		*-
  2287  001878  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2288  00187C  0E00               	movlw	0
  2289  00187E  6E0A               	movwf	___awdiv@divisor+1,c
  2290  001880  0E64               	movlw	100
  2291  001882  6E09               	movwf	___awdiv@divisor,c
  2292  001884  502A               	movf	scale@scl,w,c
  2293  001886  6E07               	movwf	___awdiv@dividend,c
  2294  001888  6A08               	clrf	___awdiv@dividend+1,c
  2295  00188A  BE07               	btfsc	___awdiv@dividend,7,c
  2296  00188C  0608               	decf	___awdiv@dividend+1,f,c
  2297  00188E  EC76  F014         	call	___awdiv	;wreg free
  2298  001892  0E12               	movlw	18
  2299  001894  2407               	addwf	?___awdiv,w,c
  2300  001896  6E0F               	movwf	___wmul@multiplier,c
  2301  001898  0E00               	movlw	0
  2302  00189A  2008               	addwfc	?___awdiv+1,w,c
  2303  00189C  6E10               	movwf	___wmul@multiplier+1,c
  2304  00189E  0E00               	movlw	0
  2305  0018A0  6E12               	movwf	___wmul@multiplicand+1,c
  2306  0018A2  0E03               	movlw	3
  2307  0018A4  6E11               	movwf	___wmul@multiplicand,c
  2308  0018A6  ECA2  F016         	call	___wmul	;wreg free
  2309  0018AA  0E29               	movlw	low __npowers_
  2310  0018AC  240F               	addwf	?___wmul,w,c
  2311  0018AE  6EF6               	movwf	tblptrl,c
  2312  0018B0  0E10               	movlw	high __npowers_
  2313  0018B2  2010               	addwfc	?___wmul+1,w,c
  2314  0018B4  6EF7               	movwf	tblptrh,c
  2315  0018B6                     	if	0	;There are less than 3 active tblptr bytes
  2316  0018B6                     	endif
  2317  0018B6  0009               	tblrd		*+
  2318  0018B8  CFF5 F015          	movff	tablat,___ftmul@f1
  2319  0018BC  0009               	tblrd		*+
  2320  0018BE  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2321  0018C2  000A               	tblrd		*-
  2322  0018C4  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2323  0018C8  EC18  F012         	call	___ftmul	;wreg free
  2324  0018CC  C015  F027         	movff	?___ftmul,_scale$1185
  2325  0018D0  C016  F028         	movff	?___ftmul+1,_scale$1185+1
  2326  0018D4  C017  F029         	movff	?___ftmul+2,_scale$1185+2
  2327                           
  2328                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2329  0018D8  C027  F015         	movff	_scale$1185,___ftmul@f1
  2330  0018DC  C028  F016         	movff	_scale$1185+1,___ftmul@f1+1
  2331  0018E0  C029  F017         	movff	_scale$1185+2,___ftmul@f1+2
  2332  0018E4  0E00               	movlw	0
  2333  0018E6  6E12               	movwf	___wmul@multiplicand+1,c
  2334  0018E8  0E03               	movlw	3
  2335  0018EA  6E11               	movwf	___wmul@multiplicand,c
  2336  0018EC  0E00               	movlw	0
  2337  0018EE  6E04               	movwf	___awmod@divisor+1,c
  2338  0018F0  0E0A               	movlw	10
  2339  0018F2  6E03               	movwf	___awmod@divisor,c
  2340  0018F4  502A               	movf	scale@scl,w,c
  2341  0018F6  6E01               	movwf	___awmod@dividend,c
  2342  0018F8  6A02               	clrf	___awmod@dividend+1,c
  2343  0018FA  BE01               	btfsc	___awmod@dividend,7,c
  2344  0018FC  0602               	decf	___awmod@dividend+1,f,c
  2345  0018FE  EC07  F015         	call	___awmod	;wreg free
  2346  001902  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2347  001906  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2348  00190A  ECA2  F016         	call	___wmul	;wreg free
  2349  00190E  0E29               	movlw	low __npowers_
  2350  001910  240F               	addwf	?___wmul,w,c
  2351  001912  6EF6               	movwf	tblptrl,c
  2352  001914  0E10               	movlw	high __npowers_
  2353  001916  2010               	addwfc	?___wmul+1,w,c
  2354  001918  6EF7               	movwf	tblptrh,c
  2355  00191A                     	if	0	;There are less than 3 active tblptr bytes
  2356  00191A                     	endif
  2357  00191A  0009               	tblrd		*+
  2358  00191C  CFF5 F018          	movff	tablat,___ftmul@f2
  2359  001920  0009               	tblrd		*+
  2360  001922  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2361  001926  000A               	tblrd		*-
  2362  001928  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2363  00192C  EC18  F012         	call	___ftmul	;wreg free
  2364  001930  D141               	goto	L5
  2365  001932  D15A               	goto	l199
  2366  001934  D054               	goto	l2261
  2367  001936                     l2255:
  2368                           
  2369                           ;doprnt.c: 432: else if(scl > 10)
  2370  001936  502A               	movf	scale@scl,w,c
  2371  001938  0A80               	xorlw	128
  2372  00193A  0F75               	addlw	-139
  2373  00193C  A0D8               	btfss	status,0,c
  2374  00193E  D04F               	goto	l2261
  2375                           
  2376                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2377  001940  0E00               	movlw	0
  2378  001942  6E0A               	movwf	___awdiv@divisor+1,c
  2379  001944  0E0A               	movlw	10
  2380  001946  6E09               	movwf	___awdiv@divisor,c
  2381  001948  502A               	movf	scale@scl,w,c
  2382  00194A  6E07               	movwf	___awdiv@dividend,c
  2383  00194C  6A08               	clrf	___awdiv@dividend+1,c
  2384  00194E  BE07               	btfsc	___awdiv@dividend,7,c
  2385  001950  0608               	decf	___awdiv@dividend+1,f,c
  2386  001952  EC76  F014         	call	___awdiv	;wreg free
  2387  001956  0E09               	movlw	9
  2388  001958  2407               	addwf	?___awdiv,w,c
  2389  00195A  6E0F               	movwf	___wmul@multiplier,c
  2390  00195C  0E00               	movlw	0
  2391  00195E  2008               	addwfc	?___awdiv+1,w,c
  2392  001960  6E10               	movwf	___wmul@multiplier+1,c
  2393  001962  0E00               	movlw	0
  2394  001964  6E12               	movwf	___wmul@multiplicand+1,c
  2395  001966  0E03               	movlw	3
  2396  001968  6E11               	movwf	___wmul@multiplicand,c
  2397  00196A  ECA2  F016         	call	___wmul	;wreg free
  2398  00196E  0E29               	movlw	low __npowers_
  2399  001970  240F               	addwf	?___wmul,w,c
  2400  001972  6EF6               	movwf	tblptrl,c
  2401  001974  0E10               	movlw	high __npowers_
  2402  001976  2010               	addwfc	?___wmul+1,w,c
  2403  001978  6EF7               	movwf	tblptrh,c
  2404  00197A                     	if	0	;There are less than 3 active tblptr bytes
  2405  00197A                     	endif
  2406  00197A  0009               	tblrd		*+
  2407  00197C  CFF5 F015          	movff	tablat,___ftmul@f1
  2408  001980  0009               	tblrd		*+
  2409  001982  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2410  001986  000A               	tblrd		*-
  2411  001988  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2412  00198C  0E00               	movlw	0
  2413  00198E  6E12               	movwf	___wmul@multiplicand+1,c
  2414  001990  0E03               	movlw	3
  2415  001992  6E11               	movwf	___wmul@multiplicand,c
  2416  001994  0E00               	movlw	0
  2417  001996  6E04               	movwf	___awmod@divisor+1,c
  2418  001998  0E0A               	movlw	10
  2419  00199A  6E03               	movwf	___awmod@divisor,c
  2420  00199C  502A               	movf	scale@scl,w,c
  2421  00199E  6E01               	movwf	___awmod@dividend,c
  2422  0019A0  6A02               	clrf	___awmod@dividend+1,c
  2423  0019A2  BE01               	btfsc	___awmod@dividend,7,c
  2424  0019A4  0602               	decf	___awmod@dividend+1,f,c
  2425  0019A6  EC07  F015         	call	___awmod	;wreg free
  2426  0019AA  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2427  0019AE  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2428  0019B2  ECA2  F016         	call	___wmul	;wreg free
  2429  0019B6  0E29               	movlw	low __npowers_
  2430  0019B8  240F               	addwf	?___wmul,w,c
  2431  0019BA  6EF6               	movwf	tblptrl,c
  2432  0019BC  0E10               	movlw	high __npowers_
  2433  0019BE  2010               	addwfc	?___wmul+1,w,c
  2434  0019C0  6EF7               	movwf	tblptrh,c
  2435  0019C2                     	if	0	;There are less than 3 active tblptr bytes
  2436  0019C2                     	endif
  2437  0019C2  0009               	tblrd		*+
  2438  0019C4  CFF5 F018          	movff	tablat,___ftmul@f2
  2439  0019C8  0009               	tblrd		*+
  2440  0019CA  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2441  0019CE  000A               	tblrd		*-
  2442  0019D0  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2443  0019D4  EC18  F012         	call	___ftmul	;wreg free
  2444  0019D8  D0ED               	goto	L5
  2445  0019DA  D106               	goto	l199
  2446  0019DC  D000               	goto	l2261
  2447  0019DE                     l2261:
  2448                           
  2449                           ;doprnt.c: 434: return _npowers_[scl];
  2450  0019DE  502A               	movf	scale@scl,w,c
  2451  0019E0  0D03               	mullw	3
  2452  0019E2  0E29               	movlw	low __npowers_
  2453  0019E4  24F3               	addwf	prodl,w,c
  2454  0019E6  6EF6               	movwf	tblptrl,c
  2455  0019E8  0E10               	movlw	high __npowers_
  2456  0019EA  D0F2               	goto	L4
  2457  0019EC  D0FD               	goto	l199
  2458  0019EE                     l2265:
  2459                           
  2460                           ;doprnt.c: 435: }
  2461                           ;doprnt.c: 436: if(scl>=110)
  2462  0019EE  502A               	movf	scale@scl,w,c
  2463  0019F0  0A80               	xorlw	128
  2464  0019F2  0F12               	addlw	-238
  2465  0019F4  A0D8               	btfss	status,0,c
  2466  0019F6  D08D               	goto	l2273
  2467                           
  2468                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2469  0019F8  0E00               	movlw	0
  2470  0019FA  6E12               	movwf	___wmul@multiplicand+1,c
  2471  0019FC  0E03               	movlw	3
  2472  0019FE  6E11               	movwf	___wmul@multiplicand,c
  2473  001A00  0E00               	movlw	0
  2474  001A02  6E0A               	movwf	___awdiv@divisor+1,c
  2475  001A04  0E0A               	movlw	10
  2476  001A06  6E09               	movwf	___awdiv@divisor,c
  2477  001A08  0E00               	movlw	0
  2478  001A0A  6E04               	movwf	___awmod@divisor+1,c
  2479  001A0C  0E64               	movlw	100
  2480  001A0E  6E03               	movwf	___awmod@divisor,c
  2481  001A10  502A               	movf	scale@scl,w,c
  2482  001A12  6E01               	movwf	___awmod@dividend,c
  2483  001A14  6A02               	clrf	___awmod@dividend+1,c
  2484  001A16  BE01               	btfsc	___awmod@dividend,7,c
  2485  001A18  0602               	decf	___awmod@dividend+1,f,c
  2486  001A1A  EC07  F015         	call	___awmod	;wreg free
  2487  001A1E  C001  F007         	movff	?___awmod,___awdiv@dividend
  2488  001A22  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2489  001A26  EC76  F014         	call	___awdiv	;wreg free
  2490  001A2A  0E09               	movlw	9
  2491  001A2C  2407               	addwf	?___awdiv,w,c
  2492  001A2E  6E0F               	movwf	___wmul@multiplier,c
  2493  001A30  0E00               	movlw	0
  2494  001A32  2008               	addwfc	?___awdiv+1,w,c
  2495  001A34  6E10               	movwf	___wmul@multiplier+1,c
  2496  001A36  ECA2  F016         	call	___wmul	;wreg free
  2497  001A3A  0E50               	movlw	low __powers_
  2498  001A3C  240F               	addwf	?___wmul,w,c
  2499  001A3E  6EF6               	movwf	tblptrl,c
  2500  001A40  0E10               	movlw	high __powers_
  2501  001A42  2010               	addwfc	?___wmul+1,w,c
  2502  001A44  6EF7               	movwf	tblptrh,c
  2503  001A46                     	if	0	;There are less than 3 active tblptr bytes
  2504  001A46                     	endif
  2505  001A46  0009               	tblrd		*+
  2506  001A48  CFF5 F018          	movff	tablat,___ftmul@f2
  2507  001A4C  0009               	tblrd		*+
  2508  001A4E  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2509  001A52  000A               	tblrd		*-
  2510  001A54  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2511  001A58  0E00               	movlw	0
  2512  001A5A  6E0A               	movwf	___awdiv@divisor+1,c
  2513  001A5C  0E64               	movlw	100
  2514  001A5E  6E09               	movwf	___awdiv@divisor,c
  2515  001A60  502A               	movf	scale@scl,w,c
  2516  001A62  6E07               	movwf	___awdiv@dividend,c
  2517  001A64  6A08               	clrf	___awdiv@dividend+1,c
  2518  001A66  BE07               	btfsc	___awdiv@dividend,7,c
  2519  001A68  0608               	decf	___awdiv@dividend+1,f,c
  2520  001A6A  EC76  F014         	call	___awdiv	;wreg free
  2521  001A6E  0E12               	movlw	18
  2522  001A70  2407               	addwf	?___awdiv,w,c
  2523  001A72  6E0F               	movwf	___wmul@multiplier,c
  2524  001A74  0E00               	movlw	0
  2525  001A76  2008               	addwfc	?___awdiv+1,w,c
  2526  001A78  6E10               	movwf	___wmul@multiplier+1,c
  2527  001A7A  0E00               	movlw	0
  2528  001A7C  6E12               	movwf	___wmul@multiplicand+1,c
  2529  001A7E  0E03               	movlw	3
  2530  001A80  6E11               	movwf	___wmul@multiplicand,c
  2531  001A82  ECA2  F016         	call	___wmul	;wreg free
  2532  001A86  0E50               	movlw	low __powers_
  2533  001A88  240F               	addwf	?___wmul,w,c
  2534  001A8A  6EF6               	movwf	tblptrl,c
  2535  001A8C  0E10               	movlw	high __powers_
  2536  001A8E  2010               	addwfc	?___wmul+1,w,c
  2537  001A90  6EF7               	movwf	tblptrh,c
  2538  001A92                     	if	0	;There are less than 3 active tblptr bytes
  2539  001A92                     	endif
  2540  001A92  0009               	tblrd		*+
  2541  001A94  CFF5 F015          	movff	tablat,___ftmul@f1
  2542  001A98  0009               	tblrd		*+
  2543  001A9A  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2544  001A9E  000A               	tblrd		*-
  2545  001AA0  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2546  001AA4  EC18  F012         	call	___ftmul	;wreg free
  2547  001AA8  C015  F027         	movff	?___ftmul,_scale$1185
  2548  001AAC  C016  F028         	movff	?___ftmul+1,_scale$1185+1
  2549  001AB0  C017  F029         	movff	?___ftmul+2,_scale$1185+2
  2550                           
  2551                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2552  001AB4  C027  F015         	movff	_scale$1185,___ftmul@f1
  2553  001AB8  C028  F016         	movff	_scale$1185+1,___ftmul@f1+1
  2554  001ABC  C029  F017         	movff	_scale$1185+2,___ftmul@f1+2
  2555  001AC0  0E00               	movlw	0
  2556  001AC2  6E12               	movwf	___wmul@multiplicand+1,c
  2557  001AC4  0E03               	movlw	3
  2558  001AC6  6E11               	movwf	___wmul@multiplicand,c
  2559  001AC8  0E00               	movlw	0
  2560  001ACA  6E04               	movwf	___awmod@divisor+1,c
  2561  001ACC  0E0A               	movlw	10
  2562  001ACE  6E03               	movwf	___awmod@divisor,c
  2563  001AD0  502A               	movf	scale@scl,w,c
  2564  001AD2  6E01               	movwf	___awmod@dividend,c
  2565  001AD4  6A02               	clrf	___awmod@dividend+1,c
  2566  001AD6  BE01               	btfsc	___awmod@dividend,7,c
  2567  001AD8  0602               	decf	___awmod@dividend+1,f,c
  2568  001ADA  EC07  F015         	call	___awmod	;wreg free
  2569  001ADE  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2570  001AE2  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2571  001AE6  ECA2  F016         	call	___wmul	;wreg free
  2572  001AEA  0E50               	movlw	low __powers_
  2573  001AEC  240F               	addwf	?___wmul,w,c
  2574  001AEE  6EF6               	movwf	tblptrl,c
  2575  001AF0  0E10               	movlw	high __powers_
  2576  001AF2  2010               	addwfc	?___wmul+1,w,c
  2577  001AF4  6EF7               	movwf	tblptrh,c
  2578  001AF6                     	if	0	;There are less than 3 active tblptr bytes
  2579  001AF6                     	endif
  2580  001AF6  0009               	tblrd		*+
  2581  001AF8  CFF5 F018          	movff	tablat,___ftmul@f2
  2582  001AFC  0009               	tblrd		*+
  2583  001AFE  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2584  001B02  000A               	tblrd		*-
  2585  001B04  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2586  001B08  EC18  F012         	call	___ftmul	;wreg free
  2587  001B0C  D053               	goto	L5
  2588  001B0E  D06C               	goto	l199
  2589  001B10  D059               	goto	l2279
  2590  001B12                     l2273:
  2591                           
  2592                           ;doprnt.c: 438: else if(scl > 10)
  2593  001B12  502A               	movf	scale@scl,w,c
  2594  001B14  0A80               	xorlw	128
  2595  001B16  0F75               	addlw	-139
  2596  001B18  A0D8               	btfss	status,0,c
  2597  001B1A  D054               	goto	l2279
  2598                           
  2599                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2600  001B1C  0E00               	movlw	0
  2601  001B1E  6E0A               	movwf	___awdiv@divisor+1,c
  2602  001B20  0E0A               	movlw	10
  2603  001B22  6E09               	movwf	___awdiv@divisor,c
  2604  001B24  502A               	movf	scale@scl,w,c
  2605  001B26  6E07               	movwf	___awdiv@dividend,c
  2606  001B28  6A08               	clrf	___awdiv@dividend+1,c
  2607  001B2A  BE07               	btfsc	___awdiv@dividend,7,c
  2608  001B2C  0608               	decf	___awdiv@dividend+1,f,c
  2609  001B2E  EC76  F014         	call	___awdiv	;wreg free
  2610  001B32  0E09               	movlw	9
  2611  001B34  2407               	addwf	?___awdiv,w,c
  2612  001B36  6E0F               	movwf	___wmul@multiplier,c
  2613  001B38  0E00               	movlw	0
  2614  001B3A  2008               	addwfc	?___awdiv+1,w,c
  2615  001B3C  6E10               	movwf	___wmul@multiplier+1,c
  2616  001B3E  0E00               	movlw	0
  2617  001B40  6E12               	movwf	___wmul@multiplicand+1,c
  2618  001B42  0E03               	movlw	3
  2619  001B44  6E11               	movwf	___wmul@multiplicand,c
  2620  001B46  ECA2  F016         	call	___wmul	;wreg free
  2621  001B4A  0E50               	movlw	low __powers_
  2622  001B4C  240F               	addwf	?___wmul,w,c
  2623  001B4E  6EF6               	movwf	tblptrl,c
  2624  001B50  0E10               	movlw	high __powers_
  2625  001B52  2010               	addwfc	?___wmul+1,w,c
  2626  001B54  6EF7               	movwf	tblptrh,c
  2627  001B56                     	if	0	;There are less than 3 active tblptr bytes
  2628  001B56                     	endif
  2629  001B56  0009               	tblrd		*+
  2630  001B58  CFF5 F015          	movff	tablat,___ftmul@f1
  2631  001B5C  0009               	tblrd		*+
  2632  001B5E  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2633  001B62  000A               	tblrd		*-
  2634  001B64  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2635  001B68  0E00               	movlw	0
  2636  001B6A  6E12               	movwf	___wmul@multiplicand+1,c
  2637  001B6C  0E03               	movlw	3
  2638  001B6E  6E11               	movwf	___wmul@multiplicand,c
  2639  001B70  0E00               	movlw	0
  2640  001B72  6E04               	movwf	___awmod@divisor+1,c
  2641  001B74  0E0A               	movlw	10
  2642  001B76  6E03               	movwf	___awmod@divisor,c
  2643  001B78  502A               	movf	scale@scl,w,c
  2644  001B7A  6E01               	movwf	___awmod@dividend,c
  2645  001B7C  6A02               	clrf	___awmod@dividend+1,c
  2646  001B7E  BE01               	btfsc	___awmod@dividend,7,c
  2647  001B80  0602               	decf	___awmod@dividend+1,f,c
  2648  001B82  EC07  F015         	call	___awmod	;wreg free
  2649  001B86  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2650  001B8A  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2651  001B8E  ECA2  F016         	call	___wmul	;wreg free
  2652  001B92  0E50               	movlw	low __powers_
  2653  001B94  240F               	addwf	?___wmul,w,c
  2654  001B96  6EF6               	movwf	tblptrl,c
  2655  001B98  0E10               	movlw	high __powers_
  2656  001B9A  2010               	addwfc	?___wmul+1,w,c
  2657  001B9C  6EF7               	movwf	tblptrh,c
  2658  001B9E                     	if	0	;There are less than 3 active tblptr bytes
  2659  001B9E                     	endif
  2660  001B9E  0009               	tblrd		*+
  2661  001BA0  CFF5 F018          	movff	tablat,___ftmul@f2
  2662  001BA4  0009               	tblrd		*+
  2663  001BA6  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2664  001BAA  000A               	tblrd		*-
  2665  001BAC  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2666  001BB0  EC18  F012         	call	___ftmul	;wreg free
  2667  001BB4                     L5:
  2668  001BB4  C015  F024         	movff	?___ftmul,?_scale
  2669  001BB8  C016  F025         	movff	?___ftmul+1,?_scale+1
  2670  001BBC  C017  F026         	movff	?___ftmul+2,?_scale+2
  2671  001BC0  D013               	goto	l199
  2672  001BC2  D000               	goto	l2279
  2673  001BC4                     l2279:
  2674                           
  2675                           ;doprnt.c: 440: return _powers_[scl];
  2676  001BC4  502A               	movf	scale@scl,w,c
  2677  001BC6  0D03               	mullw	3
  2678  001BC8  0E50               	movlw	low __powers_
  2679  001BCA  24F3               	addwf	prodl,w,c
  2680  001BCC  6EF6               	movwf	tblptrl,c
  2681  001BCE  0E10               	movlw	high __powers_
  2682  001BD0                     L4:
  2683  001BD0  20F4               	addwfc	prodh,w,c
  2684  001BD2  6EF7               	movwf	tblptrh,c
  2685  001BD4                     	if	0	;There are less than 3 active tblptr bytes
  2686  001BD4                     	endif
  2687  001BD4  0009               	tblrd		*+
  2688  001BD6  CFF5 F024          	movff	tablat,?_scale
  2689  001BDA  0009               	tblrd		*+
  2690  001BDC  CFF5 F025          	movff	tablat,?_scale+1
  2691  001BE0  000A               	tblrd		*-
  2692  001BE2  CFF5 F026          	movff	tablat,?_scale+2
  2693  001BE6  D000               	goto	l199
  2694  001BE8                     l199:
  2695  001BE8  0012               	return		;funcret
  2696  001BEA                     __end_of_scale:
  2697                           	opt stack 0
  2698                           tblptru	equ	0xFF8
  2699                           tblptrh	equ	0xFF7
  2700                           tblptrl	equ	0xFF6
  2701                           tablat	equ	0xFF5
  2702                           prodh	equ	0xFF4
  2703                           prodl	equ	0xFF3
  2704                           postinc0	equ	0xFEE
  2705                           wreg	equ	0xFE8
  2706                           postdec1	equ	0xFE5
  2707                           fsr1l	equ	0xFE1
  2708                           postinc2	equ	0xFDE
  2709                           postdec2	equ	0xFDD
  2710                           fsr2h	equ	0xFDA
  2711                           fsr2l	equ	0xFD9
  2712                           status	equ	0xFD8
  2713                           
  2714 ;; *************** function _putch *****************
  2715 ;; Defined at:
  2716 ;;		line 132 in file "Lab5p2.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  c               1    wreg     unsigned char 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  c               1    0[COMRAM] unsigned char 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;		None               void
  2723 ;; Registers used:
  2724 ;;		wreg
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2731 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2733 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2734 ;;Total ram usage:        1 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		_printf
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           	psect	text3
  2744  002E1C                     __ptext3:
  2745                           	opt stack 0
  2746  002E1C                     _putch:
  2747                           	opt stack 29
  2748                           
  2749                           ;incstack = 0
  2750                           ;putch@c stored from wreg
  2751  002E1C  6E01               	movwf	putch@c,c
  2752                           
  2753                           ;Lab5p2.c: 133: while (!TRMT);
  2754  002E1E  D000               	goto	l109
  2755  002E20                     l109:
  2756  002E20  A2AC               	btfss	4012,1,c	;volatile
  2757  002E22  D7FE               	goto	l109
  2758                           
  2759                           ;Lab5p2.c: 134: TXREG = c;
  2760  002E24  C001  FFAD         	movff	putch@c,4013	;volatile
  2761  002E28  0012               	return		;funcret
  2762  002E2A                     __end_of_putch:
  2763                           	opt stack 0
  2764                           tblptru	equ	0xFF8
  2765                           tblptrh	equ	0xFF7
  2766                           tblptrl	equ	0xFF6
  2767                           tablat	equ	0xFF5
  2768                           prodh	equ	0xFF4
  2769                           prodl	equ	0xFF3
  2770                           postinc0	equ	0xFEE
  2771                           wreg	equ	0xFE8
  2772                           postdec1	equ	0xFE5
  2773                           fsr1l	equ	0xFE1
  2774                           postinc2	equ	0xFDE
  2775                           postdec2	equ	0xFDD
  2776                           fsr2h	equ	0xFDA
  2777                           fsr2l	equ	0xFD9
  2778                           status	equ	0xFD8
  2779                           
  2780 ;; *************** function _fround *****************
  2781 ;; Defined at:
  2782 ;;		line 409 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;  prec            1    wreg     unsigned char 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  prec            1   44[COMRAM] unsigned char 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  3   35[COMRAM] unsigned char 
  2789 ;; Registers used:
  2790 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2796 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2797 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2799 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2800 ;;Total ram usage:       10 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    2
  2803 ;; This function calls:
  2804 ;;		___awdiv
  2805 ;;		___awmod
  2806 ;;		___ftmul
  2807 ;;		___wmul
  2808 ;; This function is called by:
  2809 ;;		_printf
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           	psect	text4
  2814  001BEA                     __ptext4:
  2815                           	opt stack 0
  2816  001BEA                     _fround:
  2817                           	opt stack 27
  2818                           
  2819                           ;incstack = 0
  2820                           ;fround@prec stored from wreg
  2821  001BEA  6E2D               	movwf	fround@prec,c
  2822                           
  2823                           ;doprnt.c: 413: if(prec>=110)
  2824  001BEC  0E6D               	movlw	109
  2825  001BEE  642D               	cpfsgt	fround@prec,c
  2826  001BF0  D09B               	goto	l2233
  2827                           
  2828                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2829  001BF2  0E00               	movlw	0
  2830  001BF4  6E12               	movwf	___wmul@multiplicand+1,c
  2831  001BF6  0E03               	movlw	3
  2832  001BF8  6E11               	movwf	___wmul@multiplicand,c
  2833  001BFA  0E00               	movlw	0
  2834  001BFC  6E0A               	movwf	___awdiv@divisor+1,c
  2835  001BFE  0E0A               	movlw	10
  2836  001C00  6E09               	movwf	___awdiv@divisor,c
  2837  001C02  0E00               	movlw	0
  2838  001C04  6E04               	movwf	___awmod@divisor+1,c
  2839  001C06  0E64               	movlw	100
  2840  001C08  6E03               	movwf	___awmod@divisor,c
  2841  001C0A  C02D  F001         	movff	fround@prec,___awmod@dividend
  2842  001C0E  6A02               	clrf	___awmod@dividend+1,c
  2843  001C10  EC07  F015         	call	___awmod	;wreg free
  2844  001C14  C001  F007         	movff	?___awmod,___awdiv@dividend
  2845  001C18  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2846  001C1C  EC76  F014         	call	___awdiv	;wreg free
  2847  001C20  0E09               	movlw	9
  2848  001C22  2407               	addwf	?___awdiv,w,c
  2849  001C24  6E0F               	movwf	___wmul@multiplier,c
  2850  001C26  0E00               	movlw	0
  2851  001C28  2008               	addwfc	?___awdiv+1,w,c
  2852  001C2A  6E10               	movwf	___wmul@multiplier+1,c
  2853  001C2C  ECA2  F016         	call	___wmul	;wreg free
  2854  001C30  0E29               	movlw	low __npowers_
  2855  001C32  240F               	addwf	?___wmul,w,c
  2856  001C34  6EF6               	movwf	tblptrl,c
  2857  001C36  0E10               	movlw	high __npowers_
  2858  001C38  2010               	addwfc	?___wmul+1,w,c
  2859  001C3A  6EF7               	movwf	tblptrh,c
  2860  001C3C                     	if	0	;There are less than 3 active tblptr bytes
  2861  001C3C                     	endif
  2862  001C3C  0009               	tblrd		*+
  2863  001C3E  CFF5 F018          	movff	tablat,___ftmul@f2
  2864  001C42  0009               	tblrd		*+
  2865  001C44  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2866  001C48  000A               	tblrd		*-
  2867  001C4A  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2868  001C4E  0E00               	movlw	0
  2869  001C50  6E0A               	movwf	___awdiv@divisor+1,c
  2870  001C52  0E64               	movlw	100
  2871  001C54  6E09               	movwf	___awdiv@divisor,c
  2872  001C56  C02D  F007         	movff	fround@prec,___awdiv@dividend
  2873  001C5A  6A08               	clrf	___awdiv@dividend+1,c
  2874  001C5C  EC76  F014         	call	___awdiv	;wreg free
  2875  001C60  0E12               	movlw	18
  2876  001C62  2407               	addwf	?___awdiv,w,c
  2877  001C64  6E0F               	movwf	___wmul@multiplier,c
  2878  001C66  0E00               	movlw	0
  2879  001C68  2008               	addwfc	?___awdiv+1,w,c
  2880  001C6A  6E10               	movwf	___wmul@multiplier+1,c
  2881  001C6C  0E00               	movlw	0
  2882  001C6E  6E12               	movwf	___wmul@multiplicand+1,c
  2883  001C70  0E03               	movlw	3
  2884  001C72  6E11               	movwf	___wmul@multiplicand,c
  2885  001C74  ECA2  F016         	call	___wmul	;wreg free
  2886  001C78  0E29               	movlw	low __npowers_
  2887  001C7A  240F               	addwf	?___wmul,w,c
  2888  001C7C  6EF6               	movwf	tblptrl,c
  2889  001C7E  0E10               	movlw	high __npowers_
  2890  001C80  2010               	addwfc	?___wmul+1,w,c
  2891  001C82  6EF7               	movwf	tblptrh,c
  2892  001C84                     	if	0	;There are less than 3 active tblptr bytes
  2893  001C84                     	endif
  2894  001C84  0009               	tblrd		*+
  2895  001C86  CFF5 F015          	movff	tablat,___ftmul@f1
  2896  001C8A  0009               	tblrd		*+
  2897  001C8C  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2898  001C90  000A               	tblrd		*-
  2899  001C92  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2900  001C96  EC18  F012         	call	___ftmul	;wreg free
  2901  001C9A  C015  F02A         	movff	?___ftmul,_fround$1183
  2902  001C9E  C016  F02B         	movff	?___ftmul+1,_fround$1183+1
  2903  001CA2  C017  F02C         	movff	?___ftmul+2,_fround$1183+2
  2904                           
  2905                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2906  001CA6  0E00               	movlw	0
  2907  001CA8  6E12               	movwf	___wmul@multiplicand+1,c
  2908  001CAA  0E03               	movlw	3
  2909  001CAC  6E11               	movwf	___wmul@multiplicand,c
  2910  001CAE  0E00               	movlw	0
  2911  001CB0  6E04               	movwf	___awmod@divisor+1,c
  2912  001CB2  0E0A               	movlw	10
  2913  001CB4  6E03               	movwf	___awmod@divisor,c
  2914  001CB6  C02D  F001         	movff	fround@prec,___awmod@dividend
  2915  001CBA  6A02               	clrf	___awmod@dividend+1,c
  2916  001CBC  EC07  F015         	call	___awmod	;wreg free
  2917  001CC0  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2918  001CC4  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2919  001CC8  ECA2  F016         	call	___wmul	;wreg free
  2920  001CCC  0E29               	movlw	low __npowers_
  2921  001CCE  240F               	addwf	?___wmul,w,c
  2922  001CD0  6EF6               	movwf	tblptrl,c
  2923  001CD2  0E10               	movlw	high __npowers_
  2924  001CD4  2010               	addwfc	?___wmul+1,w,c
  2925  001CD6  6EF7               	movwf	tblptrh,c
  2926  001CD8                     	if	0	;There are less than 3 active tblptr bytes
  2927  001CD8                     	endif
  2928  001CD8  0009               	tblrd		*+
  2929  001CDA  CFF5 F018          	movff	tablat,___ftmul@f2
  2930  001CDE  0009               	tblrd		*+
  2931  001CE0  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2932  001CE4  000A               	tblrd		*-
  2933  001CE6  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2934  001CEA  C02A  F015         	movff	_fround$1183,___ftmul@f1
  2935  001CEE  C02B  F016         	movff	_fround$1183+1,___ftmul@f1+1
  2936  001CF2  C02C  F017         	movff	_fround$1183+2,___ftmul@f1+2
  2937  001CF6  EC18  F012         	call	___ftmul	;wreg free
  2938  001CFA  C015  F027         	movff	?___ftmul,_fround$1184
  2939  001CFE  C016  F028         	movff	?___ftmul+1,_fround$1184+1
  2940  001D02  C017  F029         	movff	?___ftmul+2,_fround$1184+2
  2941                           
  2942                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2943  001D06  C027  F015         	movff	_fround$1184,___ftmul@f1
  2944  001D0A  C028  F016         	movff	_fround$1184+1,___ftmul@f1+1
  2945  001D0E  C029  F017         	movff	_fround$1184+2,___ftmul@f1+2
  2946  001D12  0E00               	movlw	0
  2947  001D14  6E18               	movwf	___ftmul@f2,c
  2948  001D16  0E00               	movlw	0
  2949  001D18  6E19               	movwf	___ftmul@f2+1,c
  2950  001D1A  0E3F               	movlw	63
  2951  001D1C  6E1A               	movwf	___ftmul@f2+2,c
  2952  001D1E  EC18  F012         	call	___ftmul	;wreg free
  2953  001D22  D07D               	goto	L7
  2954  001D24  D083               	goto	l192
  2955  001D26  D062               	goto	l2241
  2956  001D28                     l2233:
  2957                           
  2958                           ;doprnt.c: 415: else if(prec > 10)
  2959  001D28  0E0A               	movlw	10
  2960  001D2A  642D               	cpfsgt	fround@prec,c
  2961  001D2C  D05F               	goto	l2241
  2962                           
  2963                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2964  001D2E  0E00               	movlw	0
  2965  001D30  6E12               	movwf	___wmul@multiplicand+1,c
  2966  001D32  0E03               	movlw	3
  2967  001D34  6E11               	movwf	___wmul@multiplicand,c
  2968  001D36  0E00               	movlw	0
  2969  001D38  6E04               	movwf	___awmod@divisor+1,c
  2970  001D3A  0E0A               	movlw	10
  2971  001D3C  6E03               	movwf	___awmod@divisor,c
  2972  001D3E  C02D  F001         	movff	fround@prec,___awmod@dividend
  2973  001D42  6A02               	clrf	___awmod@dividend+1,c
  2974  001D44  EC07  F015         	call	___awmod	;wreg free
  2975  001D48  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2976  001D4C  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2977  001D50  ECA2  F016         	call	___wmul	;wreg free
  2978  001D54  0E29               	movlw	low __npowers_
  2979  001D56  240F               	addwf	?___wmul,w,c
  2980  001D58  6EF6               	movwf	tblptrl,c
  2981  001D5A  0E10               	movlw	high __npowers_
  2982  001D5C  2010               	addwfc	?___wmul+1,w,c
  2983  001D5E  6EF7               	movwf	tblptrh,c
  2984  001D60                     	if	0	;There are less than 3 active tblptr bytes
  2985  001D60                     	endif
  2986  001D60  0009               	tblrd		*+
  2987  001D62  CFF5 F018          	movff	tablat,___ftmul@f2
  2988  001D66  0009               	tblrd		*+
  2989  001D68  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2990  001D6C  000A               	tblrd		*-
  2991  001D6E  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2992  001D72  0E00               	movlw	0
  2993  001D74  6E0A               	movwf	___awdiv@divisor+1,c
  2994  001D76  0E0A               	movlw	10
  2995  001D78  6E09               	movwf	___awdiv@divisor,c
  2996  001D7A  C02D  F007         	movff	fround@prec,___awdiv@dividend
  2997  001D7E  6A08               	clrf	___awdiv@dividend+1,c
  2998  001D80  EC76  F014         	call	___awdiv	;wreg free
  2999  001D84  0E09               	movlw	9
  3000  001D86  2407               	addwf	?___awdiv,w,c
  3001  001D88  6E0F               	movwf	___wmul@multiplier,c
  3002  001D8A  0E00               	movlw	0
  3003  001D8C  2008               	addwfc	?___awdiv+1,w,c
  3004  001D8E  6E10               	movwf	___wmul@multiplier+1,c
  3005  001D90  0E00               	movlw	0
  3006  001D92  6E12               	movwf	___wmul@multiplicand+1,c
  3007  001D94  0E03               	movlw	3
  3008  001D96  6E11               	movwf	___wmul@multiplicand,c
  3009  001D98  ECA2  F016         	call	___wmul	;wreg free
  3010  001D9C  0E29               	movlw	low __npowers_
  3011  001D9E  240F               	addwf	?___wmul,w,c
  3012  001DA0  6EF6               	movwf	tblptrl,c
  3013  001DA2  0E10               	movlw	high __npowers_
  3014  001DA4  2010               	addwfc	?___wmul+1,w,c
  3015  001DA6  6EF7               	movwf	tblptrh,c
  3016  001DA8                     	if	0	;There are less than 3 active tblptr bytes
  3017  001DA8                     	endif
  3018  001DA8  0009               	tblrd		*+
  3019  001DAA  CFF5 F015          	movff	tablat,___ftmul@f1
  3020  001DAE  0009               	tblrd		*+
  3021  001DB0  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3022  001DB4  000A               	tblrd		*-
  3023  001DB6  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3024  001DBA  EC18  F012         	call	___ftmul	;wreg free
  3025  001DBE  C015  F02A         	movff	?___ftmul,_fround$1183
  3026  001DC2  C016  F02B         	movff	?___ftmul+1,_fround$1183+1
  3027  001DC6  C017  F02C         	movff	?___ftmul+2,_fround$1183+2
  3028                           
  3029                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3030  001DCA  C02A  F015         	movff	_fround$1183,___ftmul@f1
  3031  001DCE  C02B  F016         	movff	_fround$1183+1,___ftmul@f1+1
  3032  001DD2  C02C  F017         	movff	_fround$1183+2,___ftmul@f1+2
  3033  001DD6  0E00               	movlw	0
  3034  001DD8  6E18               	movwf	___ftmul@f2,c
  3035  001DDA  0E00               	movlw	0
  3036  001DDC  6E19               	movwf	___ftmul@f2+1,c
  3037  001DDE  0E3F               	movlw	63
  3038  001DE0  6E1A               	movwf	___ftmul@f2+2,c
  3039  001DE2  EC18  F012         	call	___ftmul	;wreg free
  3040  001DE6  D01B               	goto	L7
  3041  001DE8  D021               	goto	l192
  3042  001DEA  D000               	goto	l2241
  3043  001DEC                     l2241:
  3044                           
  3045                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3046  001DEC  502D               	movf	fround@prec,w,c
  3047  001DEE  0D03               	mullw	3
  3048  001DF0  0E29               	movlw	low __npowers_
  3049  001DF2  24F3               	addwf	prodl,w,c
  3050  001DF4  6EF6               	movwf	tblptrl,c
  3051  001DF6  0E10               	movlw	high __npowers_
  3052  001DF8  20F4               	addwfc	prodh,w,c
  3053  001DFA  6EF7               	movwf	tblptrh,c
  3054  001DFC                     	if	0	;There are less than 3 active tblptr bytes
  3055  001DFC                     	endif
  3056  001DFC  0009               	tblrd		*+
  3057  001DFE  CFF5 F015          	movff	tablat,___ftmul@f1
  3058  001E02  0009               	tblrd		*+
  3059  001E04  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3060  001E08  000A               	tblrd		*-
  3061  001E0A  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3062  001E0E  0E00               	movlw	0
  3063  001E10  6E18               	movwf	___ftmul@f2,c
  3064  001E12  0E00               	movlw	0
  3065  001E14  6E19               	movwf	___ftmul@f2+1,c
  3066  001E16  0E3F               	movlw	63
  3067  001E18  6E1A               	movwf	___ftmul@f2+2,c
  3068  001E1A  EC18  F012         	call	___ftmul	;wreg free
  3069  001E1E                     L7:
  3070  001E1E  C015  F024         	movff	?___ftmul,?_fround
  3071  001E22  C016  F025         	movff	?___ftmul+1,?_fround+1
  3072  001E26  C017  F026         	movff	?___ftmul+2,?_fround+2
  3073  001E2A  D000               	goto	l192
  3074  001E2C                     l192:
  3075  001E2C  0012               	return		;funcret
  3076  001E2E                     __end_of_fround:
  3077                           	opt stack 0
  3078                           tblptru	equ	0xFF8
  3079                           tblptrh	equ	0xFF7
  3080                           tblptrl	equ	0xFF6
  3081                           tablat	equ	0xFF5
  3082                           prodh	equ	0xFF4
  3083                           prodl	equ	0xFF3
  3084                           postinc0	equ	0xFEE
  3085                           wreg	equ	0xFE8
  3086                           postdec1	equ	0xFE5
  3087                           fsr1l	equ	0xFE1
  3088                           postinc2	equ	0xFDE
  3089                           postdec2	equ	0xFDD
  3090                           fsr2h	equ	0xFDA
  3091                           fsr2l	equ	0xFD9
  3092                           status	equ	0xFD8
  3093                           
  3094 ;; *************** function ___wmul *****************
  3095 ;; Defined at:
  3096 ;;		line 15 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\Umul16.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  multiplier      2   14[COMRAM] unsigned int 
  3099 ;;  multiplicand    2   16[COMRAM] unsigned int 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;  product         2   18[COMRAM] unsigned int 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  2   14[COMRAM] unsigned int 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, status,0, prodl, prodh
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3111 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3114 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3115 ;;Total ram usage:        6 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_fround
  3121 ;;		_scale
  3122 ;;		_printf
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           	psect	text5
  3127  002D44                     __ptext5:
  3128                           	opt stack 0
  3129  002D44                     ___wmul:
  3130                           	opt stack 28
  3131                           
  3132                           ;incstack = 0
  3133  002D44  500F               	movf	___wmul@multiplier,w,c
  3134  002D46  0211               	mulwf	___wmul@multiplicand,c
  3135  002D48  CFF3 F013          	movff	prodl,___wmul@product
  3136  002D4C  CFF4 F014          	movff	prodh,___wmul@product+1
  3137  002D50  500F               	movf	___wmul@multiplier,w,c
  3138  002D52  0212               	mulwf	___wmul@multiplicand+1,c
  3139  002D54  50F3               	movf	prodl,w,c
  3140  002D56  2614               	addwf	___wmul@product+1,f,c
  3141  002D58  5010               	movf	___wmul@multiplier+1,w,c
  3142  002D5A  0211               	mulwf	___wmul@multiplicand,c
  3143  002D5C  50F3               	movf	prodl,w,c
  3144  002D5E  2614               	addwf	___wmul@product+1,f,c
  3145  002D60  C013  F00F         	movff	___wmul@product,?___wmul
  3146  002D64  C014  F010         	movff	___wmul@product+1,?___wmul+1
  3147  002D68  D000               	goto	l300
  3148  002D6A                     l300:
  3149  002D6A  0012               	return		;funcret
  3150  002D6C                     __end_of___wmul:
  3151                           	opt stack 0
  3152                           tblptru	equ	0xFF8
  3153                           tblptrh	equ	0xFF7
  3154                           tblptrl	equ	0xFF6
  3155                           tablat	equ	0xFF5
  3156                           prodh	equ	0xFF4
  3157                           prodl	equ	0xFF3
  3158                           postinc0	equ	0xFEE
  3159                           wreg	equ	0xFE8
  3160                           postdec1	equ	0xFE5
  3161                           fsr1l	equ	0xFE1
  3162                           postinc2	equ	0xFDE
  3163                           postdec2	equ	0xFDD
  3164                           fsr2h	equ	0xFDA
  3165                           fsr2l	equ	0xFD9
  3166                           status	equ	0xFD8
  3167                           
  3168 ;; *************** function ___ftmul *****************
  3169 ;; Defined at:
  3170 ;;		line 62 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftmul.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  f1              3   20[COMRAM] float 
  3173 ;;  f2              3   23[COMRAM] float 
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;  f3_as_produc    3   30[COMRAM] unsigned um
  3176 ;;  sign            1   34[COMRAM] unsigned char 
  3177 ;;  cntr            1   33[COMRAM] unsigned char 
  3178 ;;  exp             1   29[COMRAM] unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  3   20[COMRAM] float 
  3181 ;; Registers used:
  3182 ;;		wreg, status,2, status,0, cstack
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3188 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;Total ram usage:       15 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:    1
  3195 ;; This function calls:
  3196 ;;		___ftpack
  3197 ;; This function is called by:
  3198 ;;		_main
  3199 ;;		_fround
  3200 ;;		_scale
  3201 ;;		_printf
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text6
  3206  002430                     __ptext6:
  3207                           	opt stack 0
  3208  002430                     ___ftmul:
  3209                           	opt stack 27
  3210                           
  3211                           ;incstack = 0
  3212  002430  C017  F01B         	movff	___ftmul@f1+2,??___ftmul
  3213  002434  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  3214  002436  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  3215  002438  3416               	rlcf	___ftmul@f1+1,w,c
  3216  00243A  361B               	rlcf	??___ftmul& (0+255),f,c
  3217  00243C  E301               	bnc	u1851
  3218  00243E  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  3219  002440                     u1851:
  3220  002440  501B               	movf	??___ftmul,w,c
  3221  002442  6E1E               	movwf	___ftmul@exp,c
  3222  002444  501E               	movf	___ftmul@exp,w,c
  3223  002446  A4D8               	btfss	status,2,c
  3224  002448  D002               	goto	l2047
  3225  00244A  D00E               	goto	l2049
  3226  00244C  D06C               	goto	l729
  3227  00244E                     l2047:
  3228  00244E  C01A  F01B         	movff	___ftmul@f2+2,??___ftmul
  3229  002452  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  3230  002454  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  3231  002456  3419               	rlcf	___ftmul@f2+1,w,c
  3232  002458  361B               	rlcf	??___ftmul& (0+255),f,c
  3233  00245A  E301               	bnc	u1871
  3234  00245C  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  3235  00245E                     u1871:
  3236  00245E  501B               	movf	??___ftmul,w,c
  3237  002460  6E23               	movwf	___ftmul@sign,c
  3238  002462  5023               	movf	___ftmul@sign,w,c
  3239  002464  A4D8               	btfss	status,2,c
  3240  002466  D007               	goto	l2053
  3241  002468                     l2049:
  3242  002468  0E00               	movlw	0
  3243  00246A  6E15               	movwf	?___ftmul,c
  3244  00246C  0E00               	movlw	0
  3245  00246E  6E16               	movwf	?___ftmul+1,c
  3246  002470  0E00               	movlw	0
  3247  002472  6E17               	movwf	?___ftmul+2,c
  3248  002474  D058               	goto	l729
  3249  002476                     l2053:
  3250  002476  5023               	movf	___ftmul@sign,w,c
  3251  002478  0F7B               	addlw	123
  3252  00247A  261E               	addwf	___ftmul@exp,f,c
  3253  00247C  C017  F023         	movff	___ftmul@f1+2,___ftmul@sign
  3254  002480  501A               	movf	___ftmul@f2+2,w,c
  3255  002482  1A23               	xorwf	___ftmul@sign,f,c
  3256  002484  0E80               	movlw	128
  3257  002486  1623               	andwf	___ftmul@sign,f,c
  3258  002488  8E16               	bsf	___ftmul@f1+1,7,c
  3259  00248A  8E19               	bsf	___ftmul@f2+1,7,c
  3260  00248C  0EFF               	movlw	255
  3261  00248E  1618               	andwf	___ftmul@f2,f,c
  3262  002490  0EFF               	movlw	255
  3263  002492  1619               	andwf	___ftmul@f2+1,f,c
  3264  002494  0E00               	movlw	0
  3265  002496  161A               	andwf	___ftmul@f2+2,f,c
  3266  002498  0E00               	movlw	0
  3267  00249A  6E1F               	movwf	___ftmul@f3_as_product,c
  3268  00249C  0E00               	movlw	0
  3269  00249E  6E20               	movwf	___ftmul@f3_as_product+1,c
  3270  0024A0  0E00               	movlw	0
  3271  0024A2  6E21               	movwf	___ftmul@f3_as_product+2,c
  3272  0024A4  0E07               	movlw	7
  3273  0024A6  6E22               	movwf	___ftmul@cntr,c
  3274  0024A8  D000               	goto	l2067
  3275  0024AA                     l2067:
  3276  0024AA  A015               	btfss	___ftmul@f1,0,c
  3277  0024AC  D007               	goto	l2071
  3278  0024AE  5018               	movf	___ftmul@f2,w,c
  3279  0024B0  261F               	addwf	___ftmul@f3_as_product,f,c
  3280  0024B2  5019               	movf	___ftmul@f2+1,w,c
  3281  0024B4  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  3282  0024B6  501A               	movf	___ftmul@f2+2,w,c
  3283  0024B8  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  3284  0024BA  D000               	goto	l2071
  3285  0024BC                     l2071:
  3286  0024BC  90D8               	bcf	status,0,c
  3287  0024BE  3217               	rrcf	___ftmul@f1+2,f,c
  3288  0024C0  3216               	rrcf	___ftmul@f1+1,f,c
  3289  0024C2  3215               	rrcf	___ftmul@f1,f,c
  3290  0024C4  90D8               	bcf	status,0,c
  3291  0024C6  3618               	rlcf	___ftmul@f2,f,c
  3292  0024C8  3619               	rlcf	___ftmul@f2+1,f,c
  3293  0024CA  361A               	rlcf	___ftmul@f2+2,f,c
  3294  0024CC  2E22               	decfsz	___ftmul@cntr,f,c
  3295  0024CE  D7ED               	goto	l2067
  3296  0024D0  D000               	goto	l2075
  3297  0024D2                     l2075:
  3298  0024D2  0E09               	movlw	9
  3299  0024D4  6E22               	movwf	___ftmul@cntr,c
  3300  0024D6  D000               	goto	l2077
  3301  0024D8                     l2077:
  3302  0024D8  A015               	btfss	___ftmul@f1,0,c
  3303  0024DA  D007               	goto	l2081
  3304  0024DC  5018               	movf	___ftmul@f2,w,c
  3305  0024DE  261F               	addwf	___ftmul@f3_as_product,f,c
  3306  0024E0  5019               	movf	___ftmul@f2+1,w,c
  3307  0024E2  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  3308  0024E4  501A               	movf	___ftmul@f2+2,w,c
  3309  0024E6  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  3310  0024E8  D000               	goto	l2081
  3311  0024EA                     l2081:
  3312  0024EA  90D8               	bcf	status,0,c
  3313  0024EC  3217               	rrcf	___ftmul@f1+2,f,c
  3314  0024EE  3216               	rrcf	___ftmul@f1+1,f,c
  3315  0024F0  3215               	rrcf	___ftmul@f1,f,c
  3316  0024F2  90D8               	bcf	status,0,c
  3317  0024F4  3221               	rrcf	___ftmul@f3_as_product+2,f,c
  3318  0024F6  3220               	rrcf	___ftmul@f3_as_product+1,f,c
  3319  0024F8  321F               	rrcf	___ftmul@f3_as_product,f,c
  3320  0024FA  2E22               	decfsz	___ftmul@cntr,f,c
  3321  0024FC  D7ED               	goto	l2077
  3322  0024FE  D000               	goto	l2085
  3323  002500                     l2085:
  3324  002500  C01F  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3325  002504  C020  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3326  002508  C021  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3327  00250C  C01E  F004         	movff	___ftmul@exp,___ftpack@exp
  3328  002510  C023  F005         	movff	___ftmul@sign,___ftpack@sign
  3329  002514  EC78  F013         	call	___ftpack	;wreg free
  3330  002518  C001  F015         	movff	?___ftpack,?___ftmul
  3331  00251C  C002  F016         	movff	?___ftpack+1,?___ftmul+1
  3332  002520  C003  F017         	movff	?___ftpack+2,?___ftmul+2
  3333  002524  D000               	goto	l729
  3334  002526                     l729:
  3335  002526  0012               	return		;funcret
  3336  002528                     __end_of___ftmul:
  3337                           	opt stack 0
  3338                           tblptru	equ	0xFF8
  3339                           tblptrh	equ	0xFF7
  3340                           tblptrl	equ	0xFF6
  3341                           tablat	equ	0xFF5
  3342                           prodh	equ	0xFF4
  3343                           prodl	equ	0xFF3
  3344                           postinc0	equ	0xFEE
  3345                           wreg	equ	0xFE8
  3346                           postdec1	equ	0xFE5
  3347                           fsr1l	equ	0xFE1
  3348                           postinc2	equ	0xFDE
  3349                           postdec2	equ	0xFDD
  3350                           fsr2h	equ	0xFDA
  3351                           fsr2l	equ	0xFD9
  3352                           status	equ	0xFD8
  3353                           
  3354 ;; *************** function ___awmod *****************
  3355 ;; Defined at:
  3356 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\awmod.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;  dividend        2    0[COMRAM] int 
  3359 ;;  divisor         2    2[COMRAM] int 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  sign            1    5[COMRAM] unsigned char 
  3362 ;;  counter         1    4[COMRAM] unsigned char 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  2    0[COMRAM] int 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3372 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;Total ram usage:        6 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_main
  3382 ;;		_fround
  3383 ;;		_scale
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           	psect	text7
  3388  002A0E                     __ptext7:
  3389                           	opt stack 0
  3390  002A0E                     ___awmod:
  3391                           	opt stack 28
  3392                           
  3393                           ;incstack = 0
  3394  002A0E  0E00               	movlw	0
  3395  002A10  6E06               	movwf	___awmod@sign,c
  3396  002A12  AE02               	btfss	___awmod@dividend+1,7,c
  3397  002A14  D007               	goto	l2141
  3398  002A16  6C01               	negf	___awmod@dividend,c
  3399  002A18  1E02               	comf	___awmod@dividend+1,f,c
  3400  002A1A  B0D8               	btfsc	status,0,c
  3401  002A1C  2A02               	incf	___awmod@dividend+1,f,c
  3402  002A1E  0E01               	movlw	1
  3403  002A20  6E06               	movwf	___awmod@sign,c
  3404  002A22  D000               	goto	l2141
  3405  002A24                     l2141:
  3406  002A24  AE04               	btfss	___awmod@divisor+1,7,c
  3407  002A26  D005               	goto	l2145
  3408  002A28  6C03               	negf	___awmod@divisor,c
  3409  002A2A  1E04               	comf	___awmod@divisor+1,f,c
  3410  002A2C  B0D8               	btfsc	status,0,c
  3411  002A2E  2A04               	incf	___awmod@divisor+1,f,c
  3412  002A30  D000               	goto	l2145
  3413  002A32                     l2145:
  3414  002A32  5003               	movf	___awmod@divisor,w,c
  3415  002A34  1004               	iorwf	___awmod@divisor+1,w,c
  3416  002A36  B4D8               	btfsc	status,2,c
  3417  002A38  D01D               	goto	l2161
  3418  002A3A  0E01               	movlw	1
  3419  002A3C  6E05               	movwf	___awmod@counter,c
  3420  002A3E  D005               	goto	l2151
  3421  002A40                     l2149:
  3422  002A40  90D8               	bcf	status,0,c
  3423  002A42  3603               	rlcf	___awmod@divisor,f,c
  3424  002A44  3604               	rlcf	___awmod@divisor+1,f,c
  3425  002A46  2A05               	incf	___awmod@counter,f,c
  3426  002A48  D000               	goto	l2151
  3427  002A4A                     l2151:
  3428  002A4A  BE04               	btfsc	___awmod@divisor+1,7,c
  3429  002A4C  D002               	goto	l2153
  3430  002A4E  D7F8               	goto	l2149
  3431  002A50  D000               	goto	l2153
  3432  002A52                     l2153:
  3433  002A52  5003               	movf	___awmod@divisor,w,c
  3434  002A54  5C01               	subwf	___awmod@dividend,w,c
  3435  002A56  5004               	movf	___awmod@divisor+1,w,c
  3436  002A58  5802               	subwfb	___awmod@dividend+1,w,c
  3437  002A5A  A0D8               	btfss	status,0,c
  3438  002A5C  D005               	goto	l2157
  3439  002A5E  5003               	movf	___awmod@divisor,w,c
  3440  002A60  5E01               	subwf	___awmod@dividend,f,c
  3441  002A62  5004               	movf	___awmod@divisor+1,w,c
  3442  002A64  5A02               	subwfb	___awmod@dividend+1,f,c
  3443  002A66  D000               	goto	l2157
  3444  002A68                     l2157:
  3445  002A68  90D8               	bcf	status,0,c
  3446  002A6A  3204               	rrcf	___awmod@divisor+1,f,c
  3447  002A6C  3203               	rrcf	___awmod@divisor,f,c
  3448  002A6E  2E05               	decfsz	___awmod@counter,f,c
  3449  002A70  D7F0               	goto	l2153
  3450  002A72  D000               	goto	l2161
  3451  002A74                     l2161:
  3452  002A74  5006               	movf	___awmod@sign,w,c
  3453  002A76  B4D8               	btfsc	status,2,c
  3454  002A78  D005               	goto	l2165
  3455  002A7A  6C01               	negf	___awmod@dividend,c
  3456  002A7C  1E02               	comf	___awmod@dividend+1,f,c
  3457  002A7E  B0D8               	btfsc	status,0,c
  3458  002A80  2A02               	incf	___awmod@dividend+1,f,c
  3459  002A82  D000               	goto	l2165
  3460  002A84                     l2165:
  3461  002A84  C001  F001         	movff	___awmod@dividend,?___awmod
  3462  002A88  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3463  002A8C  D000               	goto	l506
  3464  002A8E                     l506:
  3465  002A8E  0012               	return		;funcret
  3466  002A90                     __end_of___awmod:
  3467                           	opt stack 0
  3468                           tblptru	equ	0xFF8
  3469                           tblptrh	equ	0xFF7
  3470                           tblptrl	equ	0xFF6
  3471                           tablat	equ	0xFF5
  3472                           prodh	equ	0xFF4
  3473                           prodl	equ	0xFF3
  3474                           postinc0	equ	0xFEE
  3475                           wreg	equ	0xFE8
  3476                           postdec1	equ	0xFE5
  3477                           fsr1l	equ	0xFE1
  3478                           postinc2	equ	0xFDE
  3479                           postdec2	equ	0xFDD
  3480                           fsr2h	equ	0xFDA
  3481                           fsr2l	equ	0xFD9
  3482                           status	equ	0xFD8
  3483                           
  3484 ;; *************** function __tdiv_to_l_ *****************
  3485 ;; Defined at:
  3486 ;;		line 60 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftdivl.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  f1              3    0[COMRAM] float 
  3489 ;;  f2              3    3[COMRAM] float 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  quot            4    9[COMRAM] unsigned long 
  3492 ;;  exp1            1   14[COMRAM] unsigned char 
  3493 ;;  cntr            1   13[COMRAM] unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  4    0[COMRAM] unsigned long 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, status,0
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3503 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3504 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3505 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3506 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;Total ram usage:       15 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; This function calls:
  3510 ;;		Nothing
  3511 ;; This function is called by:
  3512 ;;		_printf
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text8
  3517  002216                     __ptext8:
  3518                           	opt stack 0
  3519  002216                     __tdiv_to_l_:
  3520                           	opt stack 29
  3521                           
  3522                           ;incstack = 0
  3523  002216  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3524  00221A  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3525  00221C  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3526  00221E  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3527  002220  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3528  002222  E301               	bnc	u2211
  3529  002224  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3530  002226                     u2211:
  3531  002226  5007               	movf	??__tdiv_to_l_,w,c
  3532  002228  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3533  00222A  500F               	movf	__tdiv_to_l_@exp1,w,c
  3534  00222C  A4D8               	btfss	status,2,c
  3535  00222E  D002               	goto	l2289
  3536  002230  D05D               	goto	l2331
  3537  002232  D078               	goto	l705
  3538  002234                     l2289:
  3539  002234  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3540  002238  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3541  00223A  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3542  00223C  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3543  00223E  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3544  002240  E301               	bnc	u2231
  3545  002242  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3546  002244                     u2231:
  3547  002244  5007               	movf	??__tdiv_to_l_,w,c
  3548  002246  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3549  002248  500E               	movf	__tdiv_to_l_@cntr,w,c
  3550  00224A  A4D8               	btfss	status,2,c
  3551  00224C  D002               	goto	l2295
  3552  00224E  D04E               	goto	l2331
  3553  002250  D069               	goto	l705
  3554  002252                     l2295:
  3555  002252  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3556  002254  0EFF               	movlw	255
  3557  002256  1601               	andwf	__tdiv_to_l_@f1,f,c
  3558  002258  0EFF               	movlw	255
  3559  00225A  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3560  00225C  0E00               	movlw	0
  3561  00225E  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3562  002260  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3563  002262  0EFF               	movlw	255
  3564  002264  1604               	andwf	__tdiv_to_l_@f2,f,c
  3565  002266  0EFF               	movlw	255
  3566  002268  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3567  00226A  0E00               	movlw	0
  3568  00226C  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3569  00226E  0E00               	movlw	0
  3570  002270  6E0A               	movwf	__tdiv_to_l_@quot,c
  3571  002272  0E00               	movlw	0
  3572  002274  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  3573  002276  0E00               	movlw	0
  3574  002278  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  3575  00227A  0E00               	movlw	0
  3576  00227C  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  3577  00227E  0E7F               	movlw	127
  3578  002280  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3579  002282  500E               	movf	__tdiv_to_l_@cntr,w,c
  3580  002284  0F98               	addlw	152
  3581  002286  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3582  002288  0E18               	movlw	24
  3583  00228A  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3584  00228C                     l707:
  3585  00228C  90D8               	bcf	status,0,c
  3586  00228E  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3587  002290  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3588  002292  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3589  002294  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3590  002296  5004               	movf	__tdiv_to_l_@f2,w,c
  3591  002298  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3592  00229A  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3593  00229C  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3594  00229E  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3595  0022A0  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3596  0022A2  A0D8               	btfss	status,0,c
  3597  0022A4  D007               	goto	l708
  3598  0022A6  5004               	movf	__tdiv_to_l_@f2,w,c
  3599  0022A8  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3600  0022AA  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3601  0022AC  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3602  0022AE  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3603  0022B0  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3604  0022B2  800A               	bsf	__tdiv_to_l_@quot,0,c
  3605  0022B4                     l708:
  3606  0022B4  90D8               	bcf	status,0,c
  3607  0022B6  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3608  0022B8  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3609  0022BA  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3610  0022BC  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  3611  0022BE  D7E6               	goto	l707
  3612  0022C0  D000               	goto	l2317
  3613  0022C2                     l2317:
  3614  0022C2  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  3615  0022C4  D010               	goto	l2329
  3616  0022C6  500F               	movf	__tdiv_to_l_@exp1,w,c
  3617  0022C8  0A80               	xorlw	128
  3618  0022CA  0F97               	addlw	151
  3619  0022CC  B0D8               	btfsc	status,0,c
  3620  0022CE  D003               	goto	l2325
  3621  0022D0  D00D               	goto	l2331
  3622  0022D2  D028               	goto	l705
  3623  0022D4  D000               	goto	l2325
  3624  0022D6                     l2325:
  3625  0022D6  90D8               	bcf	status,0,c
  3626  0022D8  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  3627  0022DA  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  3628  0022DC  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  3629  0022DE  320A               	rrcf	__tdiv_to_l_@quot,f,c
  3630  0022E0  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  3631  0022E2  D7F9               	goto	l2325
  3632  0022E4  D017               	goto	l714
  3633  0022E6                     l2329:
  3634  0022E6  0E17               	movlw	23
  3635  0022E8  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  3636  0022EA  D011               	goto	l2337
  3637  0022EC                     l2331:
  3638  0022EC  0E00               	movlw	0
  3639  0022EE  6E01               	movwf	?__tdiv_to_l_,c
  3640  0022F0  0E00               	movlw	0
  3641  0022F2  6E02               	movwf	?__tdiv_to_l_+1,c
  3642  0022F4  0E00               	movlw	0
  3643  0022F6  6E03               	movwf	?__tdiv_to_l_+2,c
  3644  0022F8  0E00               	movlw	0
  3645  0022FA  6E04               	movwf	?__tdiv_to_l_+3,c
  3646  0022FC  D013               	goto	l705
  3647  0022FE  D007               	goto	l2337
  3648  002300                     l2335:
  3649  002300  90D8               	bcf	status,0,c
  3650  002302  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3651  002304  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3652  002306  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3653  002308  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3654  00230A  060F               	decf	__tdiv_to_l_@exp1,f,c
  3655  00230C  D000               	goto	l2337
  3656  00230E                     l2337:
  3657  00230E  500F               	movf	__tdiv_to_l_@exp1,w,c
  3658  002310  A4D8               	btfss	status,2,c
  3659  002312  D7F6               	goto	l2335
  3660  002314                     l714:
  3661  002314  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3662  002318  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3663  00231C  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3664  002320  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3665  002324                     l705:
  3666  002324  0012               	return		;funcret
  3667  002326                     __end_of__tdiv_to_l_:
  3668                           	opt stack 0
  3669                           tblptru	equ	0xFF8
  3670                           tblptrh	equ	0xFF7
  3671                           tblptrl	equ	0xFF6
  3672                           tablat	equ	0xFF5
  3673                           prodh	equ	0xFF4
  3674                           prodl	equ	0xFF3
  3675                           postinc0	equ	0xFEE
  3676                           wreg	equ	0xFE8
  3677                           postdec1	equ	0xFE5
  3678                           fsr1l	equ	0xFE1
  3679                           postinc2	equ	0xFDE
  3680                           postdec2	equ	0xFDD
  3681                           fsr2h	equ	0xFDA
  3682                           fsr2l	equ	0xFD9
  3683                           status	equ	0xFD8
  3684                           
  3685 ;; *************** function __div_to_l_ *****************
  3686 ;; Defined at:
  3687 ;;		line 60 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\fldivl.c"
  3688 ;; Parameters:    Size  Location     Type
  3689 ;;  f1              3    0[COMRAM] unsigned long 
  3690 ;;  f2              3    3[COMRAM] unsigned long 
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;  quot            4    6[COMRAM] unsigned long 
  3693 ;;  exp1            1   11[COMRAM] unsigned char 
  3694 ;;  cntr            1   10[COMRAM] unsigned char 
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  4    0[COMRAM] unsigned long 
  3697 ;; Registers used:
  3698 ;;		wreg, status,2, status,0
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3704 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3705 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3707 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3708 ;;Total ram usage:       12 bytes
  3709 ;; Hardware stack levels used:    1
  3710 ;; This function calls:
  3711 ;;		Nothing
  3712 ;; This function is called by:
  3713 ;;		_printf
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           	psect	text9
  3718  002326                     __ptext9:
  3719                           	opt stack 0
  3720  002326                     __div_to_l_:
  3721                           	opt stack 29
  3722                           
  3723                           ;incstack = 0
  3724  002326  3403               	rlcf	__div_to_l_@f1+2,w,c
  3725  002328  3404               	rlcf	__div_to_l_@f1+3,w,c
  3726  00232A  6E0C               	movwf	__div_to_l_@exp1,c
  3727  00232C  500C               	movf	__div_to_l_@exp1,w,c
  3728  00232E  A4D8               	btfss	status,2,c
  3729  002330  D002               	goto	l2345
  3730  002332  D061               	goto	l2391
  3731  002334  D07C               	goto	l584
  3732  002336                     l2345:
  3733  002336  3406               	rlcf	__div_to_l_@f2+2,w,c
  3734  002338  3407               	rlcf	__div_to_l_@f2+3,w,c
  3735  00233A  6E0B               	movwf	__div_to_l_@cntr,c
  3736  00233C  500B               	movf	__div_to_l_@cntr,w,c
  3737  00233E  A4D8               	btfss	status,2,c
  3738  002340  D002               	goto	l2351
  3739  002342  D059               	goto	l2391
  3740  002344  D074               	goto	l584
  3741  002346                     l2351:
  3742  002346  8E03               	bsf	__div_to_l_@f1+2,7,c
  3743  002348  0EFF               	movlw	255
  3744  00234A  1601               	andwf	__div_to_l_@f1,f,c
  3745  00234C  0EFF               	movlw	255
  3746  00234E  1602               	andwf	__div_to_l_@f1+1,f,c
  3747  002350  0EFF               	movlw	255
  3748  002352  1603               	andwf	__div_to_l_@f1+2,f,c
  3749  002354  0E00               	movlw	0
  3750  002356  1604               	andwf	__div_to_l_@f1+3,f,c
  3751  002358  8E06               	bsf	__div_to_l_@f2+2,7,c
  3752  00235A  0EFF               	movlw	255
  3753  00235C  1604               	andwf	__div_to_l_@f2,f,c
  3754  00235E  0EFF               	movlw	255
  3755  002360  1605               	andwf	__div_to_l_@f2+1,f,c
  3756  002362  0EFF               	movlw	255
  3757  002364  1606               	andwf	__div_to_l_@f2+2,f,c
  3758  002366  0E00               	movlw	0
  3759  002368  1607               	andwf	__div_to_l_@f2+3,f,c
  3760  00236A  0E00               	movlw	0
  3761  00236C  6E07               	movwf	__div_to_l_@quot,c
  3762  00236E  0E00               	movlw	0
  3763  002370  6E08               	movwf	__div_to_l_@quot+1,c
  3764  002372  0E00               	movlw	0
  3765  002374  6E09               	movwf	__div_to_l_@quot+2,c
  3766  002376  0E00               	movlw	0
  3767  002378  6E0A               	movwf	__div_to_l_@quot+3,c
  3768  00237A  0E7F               	movlw	127
  3769  00237C  5E0C               	subwf	__div_to_l_@exp1,f,c
  3770  00237E  500B               	movf	__div_to_l_@cntr,w,c
  3771  002380  0FA0               	addlw	160
  3772  002382  5E0C               	subwf	__div_to_l_@exp1,f,c
  3773  002384  0E20               	movlw	32
  3774  002386  6E0B               	movwf	__div_to_l_@cntr,c
  3775  002388  D000               	goto	l2365
  3776  00238A                     l2365:
  3777  00238A  90D8               	bcf	status,0,c
  3778  00238C  3607               	rlcf	__div_to_l_@quot,f,c
  3779  00238E  3608               	rlcf	__div_to_l_@quot+1,f,c
  3780  002390  3609               	rlcf	__div_to_l_@quot+2,f,c
  3781  002392  360A               	rlcf	__div_to_l_@quot+3,f,c
  3782  002394  5004               	movf	__div_to_l_@f2,w,c
  3783  002396  5C01               	subwf	__div_to_l_@f1,w,c
  3784  002398  5005               	movf	__div_to_l_@f2+1,w,c
  3785  00239A  5802               	subwfb	__div_to_l_@f1+1,w,c
  3786  00239C  5006               	movf	__div_to_l_@f2+2,w,c
  3787  00239E  5803               	subwfb	__div_to_l_@f1+2,w,c
  3788  0023A0  5007               	movf	__div_to_l_@f2+3,w,c
  3789  0023A2  5804               	subwfb	__div_to_l_@f1+3,w,c
  3790  0023A4  A0D8               	btfss	status,0,c
  3791  0023A6  D00A               	goto	l2373
  3792  0023A8  5004               	movf	__div_to_l_@f2,w,c
  3793  0023AA  5E01               	subwf	__div_to_l_@f1,f,c
  3794  0023AC  5005               	movf	__div_to_l_@f2+1,w,c
  3795  0023AE  5A02               	subwfb	__div_to_l_@f1+1,f,c
  3796  0023B0  5006               	movf	__div_to_l_@f2+2,w,c
  3797  0023B2  5A03               	subwfb	__div_to_l_@f1+2,f,c
  3798  0023B4  5007               	movf	__div_to_l_@f2+3,w,c
  3799  0023B6  5A04               	subwfb	__div_to_l_@f1+3,f,c
  3800  0023B8  8007               	bsf	__div_to_l_@quot,0,c
  3801  0023BA  D000               	goto	l2373
  3802  0023BC                     l2373:
  3803  0023BC  90D8               	bcf	status,0,c
  3804  0023BE  3601               	rlcf	__div_to_l_@f1,f,c
  3805  0023C0  3602               	rlcf	__div_to_l_@f1+1,f,c
  3806  0023C2  3603               	rlcf	__div_to_l_@f1+2,f,c
  3807  0023C4  3604               	rlcf	__div_to_l_@f1+3,f,c
  3808  0023C6  2E0B               	decfsz	__div_to_l_@cntr,f,c
  3809  0023C8  D7E0               	goto	l2365
  3810  0023CA  D000               	goto	l2377
  3811  0023CC                     l2377:
  3812  0023CC  AE0C               	btfss	__div_to_l_@exp1,7,c
  3813  0023CE  D010               	goto	l2389
  3814  0023D0  500C               	movf	__div_to_l_@exp1,w,c
  3815  0023D2  0A80               	xorlw	128
  3816  0023D4  0F9F               	addlw	159
  3817  0023D6  B0D8               	btfsc	status,0,c
  3818  0023D8  D003               	goto	l2385
  3819  0023DA  D00D               	goto	l2391
  3820  0023DC  D028               	goto	l584
  3821  0023DE  D000               	goto	l2385
  3822  0023E0                     l2385:
  3823  0023E0  90D8               	bcf	status,0,c
  3824  0023E2  320A               	rrcf	__div_to_l_@quot+3,f,c
  3825  0023E4  3209               	rrcf	__div_to_l_@quot+2,f,c
  3826  0023E6  3208               	rrcf	__div_to_l_@quot+1,f,c
  3827  0023E8  3207               	rrcf	__div_to_l_@quot,f,c
  3828  0023EA  3E0C               	incfsz	__div_to_l_@exp1,f,c
  3829  0023EC  D7F9               	goto	l2385
  3830  0023EE  D017               	goto	l593
  3831  0023F0                     l2389:
  3832  0023F0  0E1F               	movlw	31
  3833  0023F2  640C               	cpfsgt	__div_to_l_@exp1,c
  3834  0023F4  D011               	goto	l2397
  3835  0023F6                     l2391:
  3836  0023F6  0E00               	movlw	0
  3837  0023F8  6E01               	movwf	?__div_to_l_,c
  3838  0023FA  0E00               	movlw	0
  3839  0023FC  6E02               	movwf	?__div_to_l_+1,c
  3840  0023FE  0E00               	movlw	0
  3841  002400  6E03               	movwf	?__div_to_l_+2,c
  3842  002402  0E00               	movlw	0
  3843  002404  6E04               	movwf	?__div_to_l_+3,c
  3844  002406  D013               	goto	l584
  3845  002408  D007               	goto	l2397
  3846  00240A                     l2395:
  3847  00240A  90D8               	bcf	status,0,c
  3848  00240C  3607               	rlcf	__div_to_l_@quot,f,c
  3849  00240E  3608               	rlcf	__div_to_l_@quot+1,f,c
  3850  002410  3609               	rlcf	__div_to_l_@quot+2,f,c
  3851  002412  360A               	rlcf	__div_to_l_@quot+3,f,c
  3852  002414  060C               	decf	__div_to_l_@exp1,f,c
  3853  002416  D000               	goto	l2397
  3854  002418                     l2397:
  3855  002418  500C               	movf	__div_to_l_@exp1,w,c
  3856  00241A  A4D8               	btfss	status,2,c
  3857  00241C  D7F6               	goto	l2395
  3858  00241E                     l593:
  3859  00241E  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  3860  002422  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  3861  002426  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  3862  00242A  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  3863  00242E                     l584:
  3864  00242E  0012               	return		;funcret
  3865  002430                     __end_of__div_to_l_:
  3866                           	opt stack 0
  3867                           tblptru	equ	0xFF8
  3868                           tblptrh	equ	0xFF7
  3869                           tblptrl	equ	0xFF6
  3870                           tablat	equ	0xFF5
  3871                           prodh	equ	0xFF4
  3872                           prodl	equ	0xFF3
  3873                           postinc0	equ	0xFEE
  3874                           wreg	equ	0xFE8
  3875                           postdec1	equ	0xFE5
  3876                           fsr1l	equ	0xFE1
  3877                           postinc2	equ	0xFDE
  3878                           postdec2	equ	0xFDD
  3879                           fsr2h	equ	0xFDA
  3880                           fsr2l	equ	0xFD9
  3881                           status	equ	0xFD8
  3882                           
  3883 ;; *************** function ___lltoft *****************
  3884 ;; Defined at:
  3885 ;;		line 35 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\lltoft.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;  c               4    8[COMRAM] unsigned long 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  exp             1   16[COMRAM] unsigned char 
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  3    8[COMRAM] float 
  3892 ;; Registers used:
  3893 ;;		wreg, status,2, status,0, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3899 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3901 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;Total ram usage:        9 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:    1
  3906 ;; This function calls:
  3907 ;;		___ftpack
  3908 ;; This function is called by:
  3909 ;;		_printf
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           	psect	text10
  3914  002B70                     __ptext10:
  3915                           	opt stack 0
  3916  002B70                     ___lltoft:
  3917                           	opt stack 28
  3918                           
  3919                           ;incstack = 0
  3920  002B70  0E8E               	movlw	142
  3921  002B72  6E11               	movwf	___lltoft@exp,c
  3922  002B74  D007               	goto	l2517
  3923  002B76                     l2515:
  3924  002B76  90D8               	bcf	status,0,c
  3925  002B78  320C               	rrcf	___lltoft@c+3,f,c
  3926  002B7A  320B               	rrcf	___lltoft@c+2,f,c
  3927  002B7C  320A               	rrcf	___lltoft@c+1,f,c
  3928  002B7E  3209               	rrcf	___lltoft@c,f,c
  3929  002B80  2A11               	incf	___lltoft@exp,f,c
  3930  002B82  D000               	goto	l2517
  3931  002B84                     l2517:
  3932  002B84  0E00               	movlw	0
  3933  002B86  1409               	andwf	___lltoft@c,w,c
  3934  002B88  6E0D               	movwf	??___lltoft& (0+255),c
  3935  002B8A  0E00               	movlw	0
  3936  002B8C  140A               	andwf	___lltoft@c+1,w,c
  3937  002B8E  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  3938  002B90  0E00               	movlw	0
  3939  002B92  140B               	andwf	___lltoft@c+2,w,c
  3940  002B94  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  3941  002B96  0EFF               	movlw	255
  3942  002B98  140C               	andwf	___lltoft@c+3,w,c
  3943  002B9A  6E10               	movwf	(??___lltoft+3)& (0+255),c
  3944  002B9C  500D               	movf	??___lltoft,w,c
  3945  002B9E  100E               	iorwf	??___lltoft+1,w,c
  3946  002BA0  100F               	iorwf	??___lltoft+2,w,c
  3947  002BA2  1010               	iorwf	??___lltoft+3,w,c
  3948  002BA4  A4D8               	btfss	status,2,c
  3949  002BA6  D7E7               	goto	l2515
  3950  002BA8  C009  F001         	movff	___lltoft@c,___ftpack@arg
  3951  002BAC  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  3952  002BB0  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  3953  002BB4  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  3954  002BB8  0E00               	movlw	0
  3955  002BBA  6E05               	movwf	___ftpack@sign,c
  3956  002BBC  EC78  F013         	call	___ftpack	;wreg free
  3957  002BC0  C001  F009         	movff	?___ftpack,?___lltoft
  3958  002BC4  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  3959  002BC8  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  3960  002BCC  D000               	goto	l819
  3961  002BCE                     l819:
  3962  002BCE  0012               	return		;funcret
  3963  002BD0                     __end_of___lltoft:
  3964                           	opt stack 0
  3965                           tblptru	equ	0xFF8
  3966                           tblptrh	equ	0xFF7
  3967                           tblptrl	equ	0xFF6
  3968                           tablat	equ	0xFF5
  3969                           prodh	equ	0xFF4
  3970                           prodl	equ	0xFF3
  3971                           postinc0	equ	0xFEE
  3972                           wreg	equ	0xFE8
  3973                           postdec1	equ	0xFE5
  3974                           fsr1l	equ	0xFE1
  3975                           postinc2	equ	0xFDE
  3976                           postdec2	equ	0xFDD
  3977                           fsr2h	equ	0xFDA
  3978                           fsr2l	equ	0xFD9
  3979                           status	equ	0xFD8
  3980                           
  3981 ;; *************** function ___llmod *****************
  3982 ;; Defined at:
  3983 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\llmod.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  dividend        4   13[COMRAM] unsigned long 
  3986 ;;  divisor         4   17[COMRAM] unsigned long 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;  counter         1   21[COMRAM] unsigned char 
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  4   13[COMRAM] unsigned long 
  3991 ;; Registers used:
  3992 ;;		wreg, status,2, status,0
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3998 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;Total ram usage:        9 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_printf
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text11
  4012  002A90                     __ptext11:
  4013                           	opt stack 0
  4014  002A90                     ___llmod:
  4015                           	opt stack 29
  4016                           
  4017                           ;incstack = 0
  4018  002A90  5012               	movf	___llmod@divisor,w,c
  4019  002A92  1013               	iorwf	___llmod@divisor+1,w,c
  4020  002A94  1014               	iorwf	___llmod@divisor+2,w,c
  4021  002A96  1015               	iorwf	___llmod@divisor+3,w,c
  4022  002A98  B4D8               	btfsc	status,2,c
  4023  002A9A  D029               	goto	l799
  4024  002A9C  0E01               	movlw	1
  4025  002A9E  6E16               	movwf	___llmod@counter,c
  4026  002AA0  D007               	goto	l2503
  4027  002AA2                     l2501:
  4028  002AA2  90D8               	bcf	status,0,c
  4029  002AA4  3612               	rlcf	___llmod@divisor,f,c
  4030  002AA6  3613               	rlcf	___llmod@divisor+1,f,c
  4031  002AA8  3614               	rlcf	___llmod@divisor+2,f,c
  4032  002AAA  3615               	rlcf	___llmod@divisor+3,f,c
  4033  002AAC  2A16               	incf	___llmod@counter,f,c
  4034  002AAE  D000               	goto	l2503
  4035  002AB0                     l2503:
  4036  002AB0  BE15               	btfsc	___llmod@divisor+3,7,c
  4037  002AB2  D002               	goto	l2505
  4038  002AB4  D7F6               	goto	l2501
  4039  002AB6  D000               	goto	l2505
  4040  002AB8                     l2505:
  4041  002AB8  5012               	movf	___llmod@divisor,w,c
  4042  002ABA  5C0E               	subwf	___llmod@dividend,w,c
  4043  002ABC  5013               	movf	___llmod@divisor+1,w,c
  4044  002ABE  580F               	subwfb	___llmod@dividend+1,w,c
  4045  002AC0  5014               	movf	___llmod@divisor+2,w,c
  4046  002AC2  5810               	subwfb	___llmod@dividend+2,w,c
  4047  002AC4  5015               	movf	___llmod@divisor+3,w,c
  4048  002AC6  5811               	subwfb	___llmod@dividend+3,w,c
  4049  002AC8  A0D8               	btfss	status,0,c
  4050  002ACA  D009               	goto	l2509
  4051  002ACC  5012               	movf	___llmod@divisor,w,c
  4052  002ACE  5E0E               	subwf	___llmod@dividend,f,c
  4053  002AD0  5013               	movf	___llmod@divisor+1,w,c
  4054  002AD2  5A0F               	subwfb	___llmod@dividend+1,f,c
  4055  002AD4  5014               	movf	___llmod@divisor+2,w,c
  4056  002AD6  5A10               	subwfb	___llmod@dividend+2,f,c
  4057  002AD8  5015               	movf	___llmod@divisor+3,w,c
  4058  002ADA  5A11               	subwfb	___llmod@dividend+3,f,c
  4059  002ADC  D000               	goto	l2509
  4060  002ADE                     l2509:
  4061  002ADE  90D8               	bcf	status,0,c
  4062  002AE0  3215               	rrcf	___llmod@divisor+3,f,c
  4063  002AE2  3214               	rrcf	___llmod@divisor+2,f,c
  4064  002AE4  3213               	rrcf	___llmod@divisor+1,f,c
  4065  002AE6  3212               	rrcf	___llmod@divisor,f,c
  4066  002AE8  2E16               	decfsz	___llmod@counter,f,c
  4067  002AEA  D7E6               	goto	l2505
  4068  002AEC  D000               	goto	l799
  4069  002AEE                     l799:
  4070  002AEE  C00E  F00E         	movff	___llmod@dividend,?___llmod
  4071  002AF2  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  4072  002AF6  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  4073  002AFA  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  4074  002AFE  0012               	return		;funcret
  4075  002B00                     __end_of___llmod:
  4076                           	opt stack 0
  4077                           tblptru	equ	0xFF8
  4078                           tblptrh	equ	0xFF7
  4079                           tblptrl	equ	0xFF6
  4080                           tablat	equ	0xFF5
  4081                           prodh	equ	0xFF4
  4082                           prodl	equ	0xFF3
  4083                           postinc0	equ	0xFEE
  4084                           wreg	equ	0xFE8
  4085                           postdec1	equ	0xFE5
  4086                           fsr1l	equ	0xFE1
  4087                           postinc2	equ	0xFDE
  4088                           postdec2	equ	0xFDD
  4089                           fsr2h	equ	0xFDA
  4090                           fsr2l	equ	0xFD9
  4091                           status	equ	0xFD8
  4092                           
  4093 ;; *************** function ___lldiv *****************
  4094 ;; Defined at:
  4095 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  dividend        4    0[COMRAM] unsigned long 
  4098 ;;  divisor         4    4[COMRAM] unsigned long 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  quotient        4    8[COMRAM] unsigned long 
  4101 ;;  counter         1   12[COMRAM] unsigned char 
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  4    0[COMRAM] unsigned long 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2, status,0
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4111 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4112 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;Total ram usage:       13 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; This function calls:
  4118 ;;		Nothing
  4119 ;; This function is called by:
  4120 ;;		_printf
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           	psect	text12
  4125  002982                     __ptext12:
  4126                           	opt stack 0
  4127  002982                     ___lldiv:
  4128                           	opt stack 29
  4129                           
  4130                           ;incstack = 0
  4131  002982  0E00               	movlw	0
  4132  002984  6E09               	movwf	___lldiv@quotient,c
  4133  002986  0E00               	movlw	0
  4134  002988  6E0A               	movwf	___lldiv@quotient+1,c
  4135  00298A  0E00               	movlw	0
  4136  00298C  6E0B               	movwf	___lldiv@quotient+2,c
  4137  00298E  0E00               	movlw	0
  4138  002990  6E0C               	movwf	___lldiv@quotient+3,c
  4139  002992  5005               	movf	___lldiv@divisor,w,c
  4140  002994  1006               	iorwf	___lldiv@divisor+1,w,c
  4141  002996  1007               	iorwf	___lldiv@divisor+2,w,c
  4142  002998  1008               	iorwf	___lldiv@divisor+3,w,c
  4143  00299A  B4D8               	btfsc	status,2,c
  4144  00299C  D02F               	goto	l789
  4145  00299E  0E01               	movlw	1
  4146  0029A0  6E0D               	movwf	___lldiv@counter,c
  4147  0029A2  D007               	goto	l2483
  4148  0029A4                     l2481:
  4149  0029A4  90D8               	bcf	status,0,c
  4150  0029A6  3605               	rlcf	___lldiv@divisor,f,c
  4151  0029A8  3606               	rlcf	___lldiv@divisor+1,f,c
  4152  0029AA  3607               	rlcf	___lldiv@divisor+2,f,c
  4153  0029AC  3608               	rlcf	___lldiv@divisor+3,f,c
  4154  0029AE  2A0D               	incf	___lldiv@counter,f,c
  4155  0029B0  D000               	goto	l2483
  4156  0029B2                     l2483:
  4157  0029B2  BE08               	btfsc	___lldiv@divisor+3,7,c
  4158  0029B4  D002               	goto	l2485
  4159  0029B6  D7F6               	goto	l2481
  4160  0029B8  D000               	goto	l2485
  4161  0029BA                     l2485:
  4162  0029BA  90D8               	bcf	status,0,c
  4163  0029BC  3609               	rlcf	___lldiv@quotient,f,c
  4164  0029BE  360A               	rlcf	___lldiv@quotient+1,f,c
  4165  0029C0  360B               	rlcf	___lldiv@quotient+2,f,c
  4166  0029C2  360C               	rlcf	___lldiv@quotient+3,f,c
  4167  0029C4  5005               	movf	___lldiv@divisor,w,c
  4168  0029C6  5C01               	subwf	___lldiv@dividend,w,c
  4169  0029C8  5006               	movf	___lldiv@divisor+1,w,c
  4170  0029CA  5802               	subwfb	___lldiv@dividend+1,w,c
  4171  0029CC  5007               	movf	___lldiv@divisor+2,w,c
  4172  0029CE  5803               	subwfb	___lldiv@dividend+2,w,c
  4173  0029D0  5008               	movf	___lldiv@divisor+3,w,c
  4174  0029D2  5804               	subwfb	___lldiv@dividend+3,w,c
  4175  0029D4  A0D8               	btfss	status,0,c
  4176  0029D6  D00A               	goto	l2493
  4177  0029D8  5005               	movf	___lldiv@divisor,w,c
  4178  0029DA  5E01               	subwf	___lldiv@dividend,f,c
  4179  0029DC  5006               	movf	___lldiv@divisor+1,w,c
  4180  0029DE  5A02               	subwfb	___lldiv@dividend+1,f,c
  4181  0029E0  5007               	movf	___lldiv@divisor+2,w,c
  4182  0029E2  5A03               	subwfb	___lldiv@dividend+2,f,c
  4183  0029E4  5008               	movf	___lldiv@divisor+3,w,c
  4184  0029E6  5A04               	subwfb	___lldiv@dividend+3,f,c
  4185  0029E8  8009               	bsf	___lldiv@quotient,0,c
  4186  0029EA  D000               	goto	l2493
  4187  0029EC                     l2493:
  4188  0029EC  90D8               	bcf	status,0,c
  4189  0029EE  3208               	rrcf	___lldiv@divisor+3,f,c
  4190  0029F0  3207               	rrcf	___lldiv@divisor+2,f,c
  4191  0029F2  3206               	rrcf	___lldiv@divisor+1,f,c
  4192  0029F4  3205               	rrcf	___lldiv@divisor,f,c
  4193  0029F6  2E0D               	decfsz	___lldiv@counter,f,c
  4194  0029F8  D7E0               	goto	l2485
  4195  0029FA  D000               	goto	l789
  4196  0029FC                     l789:
  4197  0029FC  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4198  002A00  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4199  002A04  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4200  002A08  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4201  002A0C  0012               	return		;funcret
  4202  002A0E                     __end_of___lldiv:
  4203                           	opt stack 0
  4204                           tblptru	equ	0xFF8
  4205                           tblptrh	equ	0xFF7
  4206                           tblptrl	equ	0xFF6
  4207                           tablat	equ	0xFF5
  4208                           prodh	equ	0xFF4
  4209                           prodl	equ	0xFF3
  4210                           postinc0	equ	0xFEE
  4211                           wreg	equ	0xFE8
  4212                           postdec1	equ	0xFE5
  4213                           fsr1l	equ	0xFE1
  4214                           postinc2	equ	0xFDE
  4215                           postdec2	equ	0xFDD
  4216                           fsr2h	equ	0xFDA
  4217                           fsr2l	equ	0xFD9
  4218                           status	equ	0xFD8
  4219                           
  4220 ;; *************** function ___fttol *****************
  4221 ;; Defined at:
  4222 ;;		line 44 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\fttol.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;  f1              3   42[COMRAM] float 
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;  lval            4   52[COMRAM] unsigned long 
  4227 ;;  exp1            1   56[COMRAM] unsigned char 
  4228 ;;  sign1           1   51[COMRAM] unsigned char 
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  4   42[COMRAM] long 
  4231 ;; Registers used:
  4232 ;;		wreg, status,2, status,0
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4238 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4239 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4240 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4241 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4242 ;;Total ram usage:       15 bytes
  4243 ;; Hardware stack levels used:    1
  4244 ;; This function calls:
  4245 ;;		Nothing
  4246 ;; This function is called by:
  4247 ;;		_main
  4248 ;;		_printf
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text13
  4253  002528                     __ptext13:
  4254                           	opt stack 0
  4255  002528                     ___fttol:
  4256                           	opt stack 29
  4257                           
  4258                           ;incstack = 0
  4259  002528  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  4260  00252C  6A30               	clrf	(??___fttol+1)& (0+255),c
  4261  00252E  6A31               	clrf	(??___fttol+2)& (0+255),c
  4262  002530  342C               	rlcf	___fttol@f1+1,w,c
  4263  002532  362F               	rlcf	??___fttol& (0+255),f,c
  4264  002534  E301               	bnc	u2421
  4265  002536  8030               	bsf	(??___fttol+1)& (0+255),0,c
  4266  002538                     u2421:
  4267  002538  502F               	movf	??___fttol,w,c
  4268  00253A  6E39               	movwf	___fttol@exp1,c
  4269  00253C  5039               	movf	___fttol@exp1,w,c
  4270  00253E  A4D8               	btfss	status,2,c
  4271  002540  D002               	goto	l2435
  4272  002542  D039               	goto	l2459
  4273  002544  D063               	goto	l750
  4274  002546                     l2435:
  4275  002546  0E17               	movlw	23
  4276  002548  6E2F               	movwf	??___fttol& (0+255),c
  4277  00254A  C02B  F030         	movff	___fttol@f1,??___fttol+1
  4278  00254E  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  4279  002552  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  4280  002556  282F               	incf	??___fttol,w,c
  4281  002558  6E33               	movwf	(??___fttol+4)& (0+255),c
  4282  00255A  D004               	goto	u2440
  4283  00255C                     u2445:
  4284  00255C  90D8               	bcf	status,0,c
  4285  00255E  3232               	rrcf	??___fttol+3,f,c
  4286  002560  3231               	rrcf	??___fttol+2,f,c
  4287  002562  3230               	rrcf	??___fttol+1,f,c
  4288  002564                     u2440:
  4289  002564  2E33               	decfsz	(??___fttol+4)& (0+255),f,c
  4290  002566  D7FA               	goto	u2445
  4291  002568  5030               	movf	??___fttol+1,w,c
  4292  00256A  6E34               	movwf	___fttol@sign1,c
  4293  00256C  8E2C               	bsf	___fttol@f1+1,7,c
  4294  00256E  0EFF               	movlw	255
  4295  002570  162B               	andwf	___fttol@f1,f,c
  4296  002572  0EFF               	movlw	255
  4297  002574  162C               	andwf	___fttol@f1+1,f,c
  4298  002576  0E00               	movlw	0
  4299  002578  162D               	andwf	___fttol@f1+2,f,c
  4300  00257A  502B               	movf	___fttol@f1,w,c
  4301  00257C  6E35               	movwf	___fttol@lval,c
  4302  00257E  502C               	movf	___fttol@f1+1,w,c
  4303  002580  6E36               	movwf	___fttol@lval+1,c
  4304  002582  502D               	movf	___fttol@f1+2,w,c
  4305  002584  6E37               	movwf	___fttol@lval+2,c
  4306  002586  6A38               	clrf	___fttol@lval+3,c
  4307  002588  0E8E               	movlw	142
  4308  00258A  5E39               	subwf	___fttol@exp1,f,c
  4309  00258C  AE39               	btfss	___fttol@exp1,7,c
  4310  00258E  D010               	goto	l2457
  4311  002590  5039               	movf	___fttol@exp1,w,c
  4312  002592  0A80               	xorlw	128
  4313  002594  0F8F               	addlw	143
  4314  002596  B0D8               	btfsc	status,0,c
  4315  002598  D003               	goto	l2453
  4316  00259A  D00D               	goto	l2459
  4317  00259C  D037               	goto	l750
  4318  00259E  D000               	goto	l2453
  4319  0025A0                     l2453:
  4320  0025A0  90D8               	bcf	status,0,c
  4321  0025A2  3238               	rrcf	___fttol@lval+3,f,c
  4322  0025A4  3237               	rrcf	___fttol@lval+2,f,c
  4323  0025A6  3236               	rrcf	___fttol@lval+1,f,c
  4324  0025A8  3235               	rrcf	___fttol@lval,f,c
  4325  0025AA  3E39               	incfsz	___fttol@exp1,f,c
  4326  0025AC  D7F9               	goto	l2453
  4327  0025AE  D019               	goto	l2467
  4328  0025B0                     l2457:
  4329  0025B0  0E17               	movlw	23
  4330  0025B2  6439               	cpfsgt	___fttol@exp1,c
  4331  0025B4  D011               	goto	l2465
  4332  0025B6                     l2459:
  4333  0025B6  0E00               	movlw	0
  4334  0025B8  6E2B               	movwf	?___fttol,c
  4335  0025BA  0E00               	movlw	0
  4336  0025BC  6E2C               	movwf	?___fttol+1,c
  4337  0025BE  0E00               	movlw	0
  4338  0025C0  6E2D               	movwf	?___fttol+2,c
  4339  0025C2  0E00               	movlw	0
  4340  0025C4  6E2E               	movwf	?___fttol+3,c
  4341  0025C6  D022               	goto	l750
  4342  0025C8  D007               	goto	l2465
  4343  0025CA                     l2463:
  4344  0025CA  90D8               	bcf	status,0,c
  4345  0025CC  3635               	rlcf	___fttol@lval,f,c
  4346  0025CE  3636               	rlcf	___fttol@lval+1,f,c
  4347  0025D0  3637               	rlcf	___fttol@lval+2,f,c
  4348  0025D2  3638               	rlcf	___fttol@lval+3,f,c
  4349  0025D4  0639               	decf	___fttol@exp1,f,c
  4350  0025D6  D000               	goto	l2465
  4351  0025D8                     l2465:
  4352  0025D8  5039               	movf	___fttol@exp1,w,c
  4353  0025DA  B4D8               	btfsc	status,2,c
  4354  0025DC  D002               	goto	l2467
  4355  0025DE  D7F5               	goto	l2463
  4356  0025E0  D000               	goto	l2467
  4357  0025E2                     l2467:
  4358  0025E2  5034               	movf	___fttol@sign1,w,c
  4359  0025E4  B4D8               	btfsc	status,2,c
  4360  0025E6  D009               	goto	l2471
  4361  0025E8  1E38               	comf	___fttol@lval+3,f,c
  4362  0025EA  1E37               	comf	___fttol@lval+2,f,c
  4363  0025EC  1E36               	comf	___fttol@lval+1,f,c
  4364  0025EE  6C35               	negf	___fttol@lval,c
  4365  0025F0  0E00               	movlw	0
  4366  0025F2  2236               	addwfc	___fttol@lval+1,f,c
  4367  0025F4  2237               	addwfc	___fttol@lval+2,f,c
  4368  0025F6  2238               	addwfc	___fttol@lval+3,f,c
  4369  0025F8  D000               	goto	l2471
  4370  0025FA                     l2471:
  4371  0025FA  C035  F02B         	movff	___fttol@lval,?___fttol
  4372  0025FE  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  4373  002602  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  4374  002606  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  4375  00260A  D000               	goto	l750
  4376  00260C                     l750:
  4377  00260C  0012               	return		;funcret
  4378  00260E                     __end_of___fttol:
  4379                           	opt stack 0
  4380                           tblptru	equ	0xFF8
  4381                           tblptrh	equ	0xFF7
  4382                           tblptrl	equ	0xFF6
  4383                           tablat	equ	0xFF5
  4384                           prodh	equ	0xFF4
  4385                           prodl	equ	0xFF3
  4386                           postinc0	equ	0xFEE
  4387                           wreg	equ	0xFE8
  4388                           postdec1	equ	0xFE5
  4389                           fsr1l	equ	0xFE1
  4390                           postinc2	equ	0xFDE
  4391                           postdec2	equ	0xFDD
  4392                           fsr2h	equ	0xFDA
  4393                           fsr2l	equ	0xFD9
  4394                           status	equ	0xFD8
  4395                           
  4396 ;; *************** function ___ftsub *****************
  4397 ;; Defined at:
  4398 ;;		line 20 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftsub.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;  f1              3   57[COMRAM] float 
  4401 ;;  f2              3   60[COMRAM] float 
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  3   57[COMRAM] float 
  4406 ;; Registers used:
  4407 ;;		wreg, status,2, status,0, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4413 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4416 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;Total ram usage:        6 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; Hardware stack levels required when called:    2
  4420 ;; This function calls:
  4421 ;;		___ftadd
  4422 ;; This function is called by:
  4423 ;;		_printf
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           	psect	text14
  4428  002C16                     __ptext14:
  4429                           	opt stack 0
  4430  002C16                     ___ftsub:
  4431                           	opt stack 27
  4432                           
  4433                           ;incstack = 0
  4434  002C16  503D               	movf	___ftsub@f2,w,c
  4435  002C18  103E               	iorwf	___ftsub@f2+1,w,c
  4436  002C1A  103F               	iorwf	___ftsub@f2+2,w,c
  4437  002C1C  B4D8               	btfsc	status,2,c
  4438  002C1E  D007               	goto	l2403
  4439  002C20  0E00               	movlw	0
  4440  002C22  1A3D               	xorwf	___ftsub@f2,f,c
  4441  002C24  0E00               	movlw	0
  4442  002C26  1A3E               	xorwf	___ftsub@f2+1,f,c
  4443  002C28  0E80               	movlw	128
  4444  002C2A  1A3F               	xorwf	___ftsub@f2+2,f,c
  4445  002C2C  D000               	goto	l2403
  4446  002C2E                     l2403:
  4447  002C2E  C03A  F02E         	movff	___ftsub@f1,___ftadd@f1
  4448  002C32  C03B  F02F         	movff	___ftsub@f1+1,___ftadd@f1+1
  4449  002C36  C03C  F030         	movff	___ftsub@f1+2,___ftadd@f1+2
  4450  002C3A  C03D  F031         	movff	___ftsub@f2,___ftadd@f2
  4451  002C3E  C03E  F032         	movff	___ftsub@f2+1,___ftadd@f2+1
  4452  002C42  C03F  F033         	movff	___ftsub@f2+2,___ftadd@f2+2
  4453  002C46  EC29  F010         	call	___ftadd	;wreg free
  4454  002C4A  C02E  F03A         	movff	?___ftadd,?___ftsub
  4455  002C4E  C02F  F03B         	movff	?___ftadd+1,?___ftsub+1
  4456  002C52  C030  F03C         	movff	?___ftadd+2,?___ftsub+2
  4457  002C56  D000               	goto	l746
  4458  002C58                     l746:
  4459  002C58  0012               	return		;funcret
  4460  002C5A                     __end_of___ftsub:
  4461                           	opt stack 0
  4462                           tblptru	equ	0xFF8
  4463                           tblptrh	equ	0xFF7
  4464                           tblptrl	equ	0xFF6
  4465                           tablat	equ	0xFF5
  4466                           prodh	equ	0xFF4
  4467                           prodl	equ	0xFF3
  4468                           postinc0	equ	0xFEE
  4469                           wreg	equ	0xFE8
  4470                           postdec1	equ	0xFE5
  4471                           fsr1l	equ	0xFE1
  4472                           postinc2	equ	0xFDE
  4473                           postdec2	equ	0xFDD
  4474                           fsr2h	equ	0xFDA
  4475                           fsr2l	equ	0xFD9
  4476                           status	equ	0xFD8
  4477                           
  4478 ;; *************** function ___ftadd *****************
  4479 ;; Defined at:
  4480 ;;		line 86 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftadd.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  f1              3   45[COMRAM] float 
  4483 ;;  f2              3   48[COMRAM] float 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;  exp1            1   56[COMRAM] unsigned char 
  4486 ;;  exp2            1   55[COMRAM] unsigned char 
  4487 ;;  sign            1   54[COMRAM] unsigned char 
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  3   45[COMRAM] float 
  4490 ;; Registers used:
  4491 ;;		wreg, status,2, status,0, cstack
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4497 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4498 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;Total ram usage:       12 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; Hardware stack levels required when called:    1
  4504 ;; This function calls:
  4505 ;;		___ftpack
  4506 ;; This function is called by:
  4507 ;;		_main
  4508 ;;		_printf
  4509 ;;		___ftsub
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           	psect	text15
  4514  002052                     __ptext15:
  4515                           	opt stack 0
  4516  002052                     ___ftadd:
  4517                           	opt stack 27
  4518                           
  4519                           ;incstack = 0
  4520  002052  C030  F034         	movff	___ftadd@f1+2,??___ftadd
  4521  002056  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4522  002058  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4523  00205A  342F               	rlcf	___ftadd@f1+1,w,c
  4524  00205C  3634               	rlcf	??___ftadd& (0+255),f,c
  4525  00205E  E301               	bnc	u1641
  4526  002060  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4527  002062                     u1641:
  4528  002062  5034               	movf	??___ftadd,w,c
  4529  002064  6E39               	movwf	___ftadd@exp1,c
  4530  002066  C033  F034         	movff	___ftadd@f2+2,??___ftadd
  4531  00206A  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4532  00206C  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4533  00206E  3432               	rlcf	___ftadd@f2+1,w,c
  4534  002070  3634               	rlcf	??___ftadd& (0+255),f,c
  4535  002072  E301               	bnc	u1651
  4536  002074  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4537  002076                     u1651:
  4538  002076  5034               	movf	??___ftadd,w,c
  4539  002078  6E38               	movwf	___ftadd@exp2,c
  4540  00207A  5039               	movf	___ftadd@exp1,w,c
  4541  00207C  B4D8               	btfsc	status,2,c
  4542  00207E  D00B               	goto	l665
  4543  002080  5038               	movf	___ftadd@exp2,w,c
  4544  002082  5C39               	subwf	___ftadd@exp1,w,c
  4545  002084  B0D8               	btfsc	status,0,c
  4546  002086  D00E               	goto	l1979
  4547  002088  5039               	movf	___ftadd@exp1,w,c
  4548  00208A  0800               	sublw	0
  4549  00208C  2438               	addwf	___ftadd@exp2,w,c
  4550  00208E  6E34               	movwf	??___ftadd& (0+255),c
  4551  002090  0E18               	movlw	24
  4552  002092  6434               	cpfsgt	??___ftadd,c
  4553  002094  D007               	goto	l1979
  4554  002096                     l665:
  4555  002096  C031  F02E         	movff	___ftadd@f2,?___ftadd
  4556  00209A  C032  F02F         	movff	___ftadd@f2+1,?___ftadd+1
  4557  00209E  C033  F030         	movff	___ftadd@f2+2,?___ftadd+2
  4558  0020A2  D0B8               	goto	l666
  4559  0020A4                     l1979:
  4560  0020A4  5038               	movf	___ftadd@exp2,w,c
  4561  0020A6  B4D8               	btfsc	status,2,c
  4562  0020A8  D00B               	goto	l669
  4563  0020AA  5039               	movf	___ftadd@exp1,w,c
  4564  0020AC  5C38               	subwf	___ftadd@exp2,w,c
  4565  0020AE  B0D8               	btfsc	status,0,c
  4566  0020B0  D00E               	goto	l1985
  4567  0020B2  5038               	movf	___ftadd@exp2,w,c
  4568  0020B4  0800               	sublw	0
  4569  0020B6  2439               	addwf	___ftadd@exp1,w,c
  4570  0020B8  6E34               	movwf	??___ftadd& (0+255),c
  4571  0020BA  0E18               	movlw	24
  4572  0020BC  6434               	cpfsgt	??___ftadd,c
  4573  0020BE  D007               	goto	l1985
  4574  0020C0                     l669:
  4575  0020C0  C02E  F02E         	movff	___ftadd@f1,?___ftadd
  4576  0020C4  C02F  F02F         	movff	___ftadd@f1+1,?___ftadd+1
  4577  0020C8  C030  F030         	movff	___ftadd@f1+2,?___ftadd+2
  4578  0020CC  D0A3               	goto	l666
  4579  0020CE                     l1985:
  4580  0020CE  0E06               	movlw	6
  4581  0020D0  6E37               	movwf	___ftadd@sign,c
  4582  0020D2  AE30               	btfss	___ftadd@f1+2,7,c
  4583  0020D4  D002               	goto	l1991
  4584  0020D6  8E37               	bsf	___ftadd@sign,7,c
  4585  0020D8  D000               	goto	l1991
  4586  0020DA                     l1991:
  4587  0020DA  BE33               	btfsc	___ftadd@f2+2,7,c
  4588  0020DC  8C37               	bsf	___ftadd@sign,6,c
  4589  0020DE  8E2F               	bsf	___ftadd@f1+1,7,c
  4590  0020E0  0EFF               	movlw	255
  4591  0020E2  162E               	andwf	___ftadd@f1,f,c
  4592  0020E4  0EFF               	movlw	255
  4593  0020E6  162F               	andwf	___ftadd@f1+1,f,c
  4594  0020E8  0E00               	movlw	0
  4595  0020EA  1630               	andwf	___ftadd@f1+2,f,c
  4596  0020EC  8E32               	bsf	___ftadd@f2+1,7,c
  4597  0020EE  0EFF               	movlw	255
  4598  0020F0  1631               	andwf	___ftadd@f2,f,c
  4599  0020F2  0EFF               	movlw	255
  4600  0020F4  1632               	andwf	___ftadd@f2+1,f,c
  4601  0020F6  0E00               	movlw	0
  4602  0020F8  1633               	andwf	___ftadd@f2+2,f,c
  4603  0020FA  5038               	movf	___ftadd@exp2,w,c
  4604  0020FC  5C39               	subwf	___ftadd@exp1,w,c
  4605  0020FE  B0D8               	btfsc	status,0,c
  4606  002100  D01E               	goto	l2011
  4607  002102                     l2001:
  4608  002102  90D8               	bcf	status,0,c
  4609  002104  3631               	rlcf	___ftadd@f2,f,c
  4610  002106  3632               	rlcf	___ftadd@f2+1,f,c
  4611  002108  3633               	rlcf	___ftadd@f2+2,f,c
  4612  00210A  0638               	decf	___ftadd@exp2,f,c
  4613  00210C  5039               	movf	___ftadd@exp1,w,c
  4614  00210E  1838               	xorwf	___ftadd@exp2,w,c
  4615  002110  B4D8               	btfsc	status,2,c
  4616  002112  D00F               	goto	l2009
  4617  002114  0637               	decf	___ftadd@sign,f,c
  4618  002116  C037  F034         	movff	___ftadd@sign,??___ftadd
  4619  00211A  0E07               	movlw	7
  4620  00211C  1634               	andwf	??___ftadd,f,c
  4621  00211E  B4D8               	btfsc	status,2,c
  4622  002120  D008               	goto	l2009
  4623  002122  D7EF               	goto	l2001
  4624  002124  D006               	goto	l2009
  4625  002126                     l2007:
  4626  002126  90D8               	bcf	status,0,c
  4627  002128  3230               	rrcf	___ftadd@f1+2,f,c
  4628  00212A  322F               	rrcf	___ftadd@f1+1,f,c
  4629  00212C  322E               	rrcf	___ftadd@f1,f,c
  4630  00212E  2A39               	incf	___ftadd@exp1,f,c
  4631  002130  D000               	goto	l2009
  4632  002132                     l2009:
  4633  002132  5038               	movf	___ftadd@exp2,w,c
  4634  002134  1839               	xorwf	___ftadd@exp1,w,c
  4635  002136  B4D8               	btfsc	status,2,c
  4636  002138  D024               	goto	l680
  4637  00213A  D7F5               	goto	l2007
  4638  00213C  D022               	goto	l680
  4639  00213E                     l2011:
  4640  00213E  5039               	movf	___ftadd@exp1,w,c
  4641  002140  5C38               	subwf	___ftadd@exp2,w,c
  4642  002142  B0D8               	btfsc	status,0,c
  4643  002144  D01E               	goto	l680
  4644  002146                     l2013:
  4645  002146  90D8               	bcf	status,0,c
  4646  002148  362E               	rlcf	___ftadd@f1,f,c
  4647  00214A  362F               	rlcf	___ftadd@f1+1,f,c
  4648  00214C  3630               	rlcf	___ftadd@f1+2,f,c
  4649  00214E  0639               	decf	___ftadd@exp1,f,c
  4650  002150  5039               	movf	___ftadd@exp1,w,c
  4651  002152  1838               	xorwf	___ftadd@exp2,w,c
  4652  002154  B4D8               	btfsc	status,2,c
  4653  002156  D00F               	goto	l2021
  4654  002158  0637               	decf	___ftadd@sign,f,c
  4655  00215A  C037  F034         	movff	___ftadd@sign,??___ftadd
  4656  00215E  0E07               	movlw	7
  4657  002160  1634               	andwf	??___ftadd,f,c
  4658  002162  B4D8               	btfsc	status,2,c
  4659  002164  D008               	goto	l2021
  4660  002166  D7EF               	goto	l2013
  4661  002168  D006               	goto	l2021
  4662  00216A                     l2019:
  4663  00216A  90D8               	bcf	status,0,c
  4664  00216C  3233               	rrcf	___ftadd@f2+2,f,c
  4665  00216E  3232               	rrcf	___ftadd@f2+1,f,c
  4666  002170  3231               	rrcf	___ftadd@f2,f,c
  4667  002172  2A38               	incf	___ftadd@exp2,f,c
  4668  002174  D000               	goto	l2021
  4669  002176                     l2021:
  4670  002176  5038               	movf	___ftadd@exp2,w,c
  4671  002178  1839               	xorwf	___ftadd@exp1,w,c
  4672  00217A  B4D8               	btfsc	status,2,c
  4673  00217C  D002               	goto	l680
  4674  00217E  D7F5               	goto	l2019
  4675  002180  D000               	goto	l680
  4676  002182                     l680:
  4677  002182  AE37               	btfss	___ftadd@sign,7,c
  4678  002184  D00C               	goto	l689
  4679  002186  0EFF               	movlw	255
  4680  002188  1A2E               	xorwf	___ftadd@f1,f,c
  4681  00218A  0EFF               	movlw	255
  4682  00218C  1A2F               	xorwf	___ftadd@f1+1,f,c
  4683  00218E  0EFF               	movlw	255
  4684  002190  1A30               	xorwf	___ftadd@f1+2,f,c
  4685  002192  0E01               	movlw	1
  4686  002194  262E               	addwf	___ftadd@f1,f,c
  4687  002196  0E00               	movlw	0
  4688  002198  222F               	addwfc	___ftadd@f1+1,f,c
  4689  00219A  0E00               	movlw	0
  4690  00219C  2230               	addwfc	___ftadd@f1+2,f,c
  4691  00219E                     l689:
  4692  00219E  AC37               	btfss	___ftadd@sign,6,c
  4693  0021A0  D00D               	goto	l2027
  4694  0021A2  0EFF               	movlw	255
  4695  0021A4  1A31               	xorwf	___ftadd@f2,f,c
  4696  0021A6  0EFF               	movlw	255
  4697  0021A8  1A32               	xorwf	___ftadd@f2+1,f,c
  4698  0021AA  0EFF               	movlw	255
  4699  0021AC  1A33               	xorwf	___ftadd@f2+2,f,c
  4700  0021AE  0E01               	movlw	1
  4701  0021B0  2631               	addwf	___ftadd@f2,f,c
  4702  0021B2  0E00               	movlw	0
  4703  0021B4  2232               	addwfc	___ftadd@f2+1,f,c
  4704  0021B6  0E00               	movlw	0
  4705  0021B8  2233               	addwfc	___ftadd@f2+2,f,c
  4706  0021BA  D000               	goto	l2027
  4707  0021BC                     l2027:
  4708  0021BC  0E00               	movlw	0
  4709  0021BE  6E37               	movwf	___ftadd@sign,c
  4710  0021C0  502E               	movf	___ftadd@f1,w,c
  4711  0021C2  2631               	addwf	___ftadd@f2,f,c
  4712  0021C4  502F               	movf	___ftadd@f1+1,w,c
  4713  0021C6  2232               	addwfc	___ftadd@f2+1,f,c
  4714  0021C8  5030               	movf	___ftadd@f1+2,w,c
  4715  0021CA  2233               	addwfc	___ftadd@f2+2,f,c
  4716  0021CC  AE33               	btfss	___ftadd@f2+2,7,c
  4717  0021CE  D00F               	goto	l2037
  4718  0021D0  0EFF               	movlw	255
  4719  0021D2  1A31               	xorwf	___ftadd@f2,f,c
  4720  0021D4  0EFF               	movlw	255
  4721  0021D6  1A32               	xorwf	___ftadd@f2+1,f,c
  4722  0021D8  0EFF               	movlw	255
  4723  0021DA  1A33               	xorwf	___ftadd@f2+2,f,c
  4724  0021DC  0E01               	movlw	1
  4725  0021DE  2631               	addwf	___ftadd@f2,f,c
  4726  0021E0  0E00               	movlw	0
  4727  0021E2  2232               	addwfc	___ftadd@f2+1,f,c
  4728  0021E4  0E00               	movlw	0
  4729  0021E6  2233               	addwfc	___ftadd@f2+2,f,c
  4730  0021E8  0E01               	movlw	1
  4731  0021EA  6E37               	movwf	___ftadd@sign,c
  4732  0021EC  D000               	goto	l2037
  4733  0021EE                     l2037:
  4734  0021EE  C031  F001         	movff	___ftadd@f2,___ftpack@arg
  4735  0021F2  C032  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4736  0021F6  C033  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4737  0021FA  C039  F004         	movff	___ftadd@exp1,___ftpack@exp
  4738  0021FE  C037  F005         	movff	___ftadd@sign,___ftpack@sign
  4739  002202  EC78  F013         	call	___ftpack	;wreg free
  4740  002206  C001  F02E         	movff	?___ftpack,?___ftadd
  4741  00220A  C002  F02F         	movff	?___ftpack+1,?___ftadd+1
  4742  00220E  C003  F030         	movff	?___ftpack+2,?___ftadd+2
  4743  002212  D000               	goto	l666
  4744  002214                     l666:
  4745  002214  0012               	return		;funcret
  4746  002216                     __end_of___ftadd:
  4747                           	opt stack 0
  4748                           tblptru	equ	0xFF8
  4749                           tblptrh	equ	0xFF7
  4750                           tblptrl	equ	0xFF6
  4751                           tablat	equ	0xFF5
  4752                           prodh	equ	0xFF4
  4753                           prodl	equ	0xFF3
  4754                           postinc0	equ	0xFEE
  4755                           wreg	equ	0xFE8
  4756                           postdec1	equ	0xFE5
  4757                           fsr1l	equ	0xFE1
  4758                           postinc2	equ	0xFDE
  4759                           postdec2	equ	0xFDD
  4760                           fsr2h	equ	0xFDA
  4761                           fsr2l	equ	0xFD9
  4762                           status	equ	0xFD8
  4763                           
  4764 ;; *************** function ___ftneg *****************
  4765 ;; Defined at:
  4766 ;;		line 15 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftneg.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;  f1              3    0[COMRAM] float 
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;		None
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  3    0[COMRAM] float 
  4773 ;; Registers used:
  4774 ;;		wreg, status,2, status,0
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4780 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4783 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4784 ;;Total ram usage:        3 bytes
  4785 ;; Hardware stack levels used:    1
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		_main
  4790 ;;		_printf
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           	psect	text16
  4795  002D92                     __ptext16:
  4796                           	opt stack 0
  4797  002D92                     ___ftneg:
  4798                           	opt stack 29
  4799                           
  4800                           ;incstack = 0
  4801  002D92  5001               	movf	___ftneg@f1,w,c
  4802  002D94  1002               	iorwf	___ftneg@f1+1,w,c
  4803  002D96  1003               	iorwf	___ftneg@f1+2,w,c
  4804  002D98  B4D8               	btfsc	status,2,c
  4805  002D9A  D006               	goto	l739
  4806  002D9C  0E00               	movlw	0
  4807  002D9E  1A01               	xorwf	___ftneg@f1,f,c
  4808  002DA0  0E00               	movlw	0
  4809  002DA2  1A02               	xorwf	___ftneg@f1+1,f,c
  4810  002DA4  0E80               	movlw	128
  4811  002DA6  1A03               	xorwf	___ftneg@f1+2,f,c
  4812  002DA8                     l739:
  4813  002DA8  C001  F001         	movff	___ftneg@f1,?___ftneg
  4814  002DAC  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  4815  002DB0  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  4816  002DB4  0012               	return		;funcret
  4817  002DB6                     __end_of___ftneg:
  4818                           	opt stack 0
  4819                           tblptru	equ	0xFF8
  4820                           tblptrh	equ	0xFF7
  4821                           tblptrl	equ	0xFF6
  4822                           tablat	equ	0xFF5
  4823                           prodh	equ	0xFF4
  4824                           prodl	equ	0xFF3
  4825                           postinc0	equ	0xFEE
  4826                           wreg	equ	0xFE8
  4827                           postdec1	equ	0xFE5
  4828                           fsr1l	equ	0xFE1
  4829                           postinc2	equ	0xFDE
  4830                           postdec2	equ	0xFDD
  4831                           fsr2h	equ	0xFDA
  4832                           fsr2l	equ	0xFD9
  4833                           status	equ	0xFD8
  4834                           
  4835 ;; *************** function ___ftge *****************
  4836 ;; Defined at:
  4837 ;;		line 4 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftge.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  ff1             3    0[COMRAM] float 
  4840 ;;  ff2             3    3[COMRAM] float 
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;		None
  4843 ;; Return value:  Size  Location     Type
  4844 ;;		None               void
  4845 ;; Registers used:
  4846 ;;		wreg, status,2, status,0
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4852 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4854 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4855 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4856 ;;Total ram usage:        9 bytes
  4857 ;; Hardware stack levels used:    1
  4858 ;; This function calls:
  4859 ;;		Nothing
  4860 ;; This function is called by:
  4861 ;;		_printf
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           	psect	text17
  4866  002856                     __ptext17:
  4867                           	opt stack 0
  4868  002856                     ___ftge:
  4869                           	opt stack 29
  4870                           
  4871                           ;incstack = 0
  4872  002856  AE03               	btfss	___ftge@ff1+2,7,c
  4873  002858  D017               	goto	l2411
  4874  00285A  C001  F007         	movff	___ftge@ff1,??___ftge
  4875  00285E  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  4876  002862  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  4877  002866  1E07               	comf	??___ftge,f,c
  4878  002868  1E08               	comf	??___ftge+1,f,c
  4879  00286A  1E09               	comf	??___ftge+2,f,c
  4880  00286C  2A07               	incf	??___ftge,f,c
  4881  00286E  0E00               	movlw	0
  4882  002870  2208               	addwfc	??___ftge+1,f,c
  4883  002872  2209               	addwfc	??___ftge+2,f,c
  4884  002874  0E00               	movlw	0
  4885  002876  2407               	addwf	??___ftge,w,c
  4886  002878  6E01               	movwf	___ftge@ff1,c
  4887  00287A  0E00               	movlw	0
  4888  00287C  2008               	addwfc	??___ftge+1,w,c
  4889  00287E  6E02               	movwf	___ftge@ff1+1,c
  4890  002880  0E80               	movlw	128
  4891  002882  2009               	addwfc	??___ftge+2,w,c
  4892  002884  6E03               	movwf	___ftge@ff1+2,c
  4893  002886  D000               	goto	l2411
  4894  002888                     l2411:
  4895  002888  AE06               	btfss	___ftge@ff2+2,7,c
  4896  00288A  D017               	goto	l2415
  4897  00288C  C004  F007         	movff	___ftge@ff2,??___ftge
  4898  002890  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  4899  002894  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  4900  002898  1E07               	comf	??___ftge,f,c
  4901  00289A  1E08               	comf	??___ftge+1,f,c
  4902  00289C  1E09               	comf	??___ftge+2,f,c
  4903  00289E  2A07               	incf	??___ftge,f,c
  4904  0028A0  0E00               	movlw	0
  4905  0028A2  2208               	addwfc	??___ftge+1,f,c
  4906  0028A4  2209               	addwfc	??___ftge+2,f,c
  4907  0028A6  0E00               	movlw	0
  4908  0028A8  2407               	addwf	??___ftge,w,c
  4909  0028AA  6E04               	movwf	___ftge@ff2,c
  4910  0028AC  0E00               	movlw	0
  4911  0028AE  2008               	addwfc	??___ftge+1,w,c
  4912  0028B0  6E05               	movwf	___ftge@ff2+1,c
  4913  0028B2  0E80               	movlw	128
  4914  0028B4  2009               	addwfc	??___ftge+2,w,c
  4915  0028B6  6E06               	movwf	___ftge@ff2+2,c
  4916  0028B8  D000               	goto	l2415
  4917  0028BA                     l2415:
  4918  0028BA  0E00               	movlw	0
  4919  0028BC  1A01               	xorwf	___ftge@ff1,f,c
  4920  0028BE  0E00               	movlw	0
  4921  0028C0  1A02               	xorwf	___ftge@ff1+1,f,c
  4922  0028C2  0E80               	movlw	128
  4923  0028C4  1A03               	xorwf	___ftge@ff1+2,f,c
  4924  0028C6  0E00               	movlw	0
  4925  0028C8  1A04               	xorwf	___ftge@ff2,f,c
  4926  0028CA  0E00               	movlw	0
  4927  0028CC  1A05               	xorwf	___ftge@ff2+1,f,c
  4928  0028CE  0E80               	movlw	128
  4929  0028D0  1A06               	xorwf	___ftge@ff2+2,f,c
  4930  0028D2  5004               	movf	___ftge@ff2,w,c
  4931  0028D4  5C01               	subwf	___ftge@ff1,w,c
  4932  0028D6  5005               	movf	___ftge@ff2+1,w,c
  4933  0028D8  5802               	subwfb	___ftge@ff1+1,w,c
  4934  0028DA  5006               	movf	___ftge@ff2+2,w,c
  4935  0028DC  5803               	subwfb	___ftge@ff1+2,w,c
  4936  0028DE  B0D8               	btfsc	status,0,c
  4937  0028E0  D002               	goto	l2421
  4938  0028E2  90D8               	bcf	status,0,c
  4939  0028E4  D002               	goto	l723
  4940  0028E6                     l2421:
  4941  0028E6  80D8               	bsf	status,0,c
  4942  0028E8  D000               	goto	l723
  4943  0028EA                     l723:
  4944  0028EA  0012               	return		;funcret
  4945  0028EC                     __end_of___ftge:
  4946                           	opt stack 0
  4947                           tblptru	equ	0xFF8
  4948                           tblptrh	equ	0xFF7
  4949                           tblptrl	equ	0xFF6
  4950                           tablat	equ	0xFF5
  4951                           prodh	equ	0xFF4
  4952                           prodl	equ	0xFF3
  4953                           postinc0	equ	0xFEE
  4954                           wreg	equ	0xFE8
  4955                           postdec1	equ	0xFE5
  4956                           fsr1l	equ	0xFE1
  4957                           postinc2	equ	0xFDE
  4958                           postdec2	equ	0xFDD
  4959                           fsr2h	equ	0xFDA
  4960                           fsr2l	equ	0xFD9
  4961                           status	equ	0xFD8
  4962                           
  4963 ;; *************** function _init_UART *****************
  4964 ;; Defined at:
  4965 ;;		line 96 in file "Lab5p2.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;		None
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;		None               void
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;Total ram usage:        0 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:    1
  4986 ;; This function calls:
  4987 ;;		_OpenUSART
  4988 ;; This function is called by:
  4989 ;;		_main
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text18
  4994  002E08                     __ptext18:
  4995                           	opt stack 0
  4996  002E08                     _init_UART:
  4997                           	opt stack 29
  4998                           
  4999                           ;Lab5p2.c: 97: OpenUSART(0b01111111 & 0b10111111 & 0b11111110 & 0b11111101
  5000                           ;Lab5p2.c: 98: & 0b11111111 & 0b11111111, 25);
  5001                           
  5002                           ;incstack = 0
  5003  002E08  0E00               	movlw	0
  5004  002E0A  6E02               	movwf	OpenUSART@spbrg+1,c
  5005  002E0C  0E19               	movlw	25
  5006  002E0E  6E01               	movwf	OpenUSART@spbrg,c
  5007  002E10  0E3C               	movlw	60
  5008  002E12  EC80  F015         	call	_OpenUSART
  5009                           
  5010                           ;Lab5p2.c: 99: OSCCON = 0x60;
  5011  002E16  0E60               	movlw	96
  5012  002E18  6ED3               	movwf	4051,c	;volatile
  5013  002E1A  0012               	return		;funcret
  5014  002E1C                     __end_of_init_UART:
  5015                           	opt stack 0
  5016                           tblptru	equ	0xFF8
  5017                           tblptrh	equ	0xFF7
  5018                           tblptrl	equ	0xFF6
  5019                           tablat	equ	0xFF5
  5020                           prodh	equ	0xFF4
  5021                           prodl	equ	0xFF3
  5022                           postinc0	equ	0xFEE
  5023                           wreg	equ	0xFE8
  5024                           postdec1	equ	0xFE5
  5025                           fsr1l	equ	0xFE1
  5026                           postinc2	equ	0xFDE
  5027                           postdec2	equ	0xFDD
  5028                           fsr2h	equ	0xFDA
  5029                           fsr2l	equ	0xFD9
  5030                           status	equ	0xFD8
  5031                           
  5032 ;; *************** function _OpenUSART *****************
  5033 ;; Defined at:
  5034 ;;		line 73 in file "C:\My Programs\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;  config          1    wreg     unsigned char 
  5037 ;;  spbrg           2    0[COMRAM] unsigned int 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;  config          1    2[COMRAM] unsigned char 
  5040 ;; Return value:  Size  Location     Type
  5041 ;;		None               void
  5042 ;; Registers used:
  5043 ;;		wreg, status,2
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5050 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5052 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5053 ;;Total ram usage:        3 bytes
  5054 ;; Hardware stack levels used:    1
  5055 ;; This function calls:
  5056 ;;		Nothing
  5057 ;; This function is called by:
  5058 ;;		_init_UART
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062                           	psect	text19
  5063  002B00                     __ptext19:
  5064                           	opt stack 0
  5065  002B00                     _OpenUSART:
  5066                           	opt stack 29
  5067                           
  5068                           ;incstack = 0
  5069                           ;OpenUSART@config stored from wreg
  5070  002B00  6E03               	movwf	OpenUSART@config,c
  5071  002B02  0E00               	movlw	0
  5072  002B04  6EAC               	movwf	4012,c	;volatile
  5073  002B06  0E00               	movlw	0
  5074  002B08  6EAB               	movwf	4011,c	;volatile
  5075  002B0A  A003               	btfss	OpenUSART@config,0,c
  5076  002B0C  D002               	goto	l2175
  5077  002B0E  88AC               	bsf	4012,4,c	;volatile
  5078  002B10  D000               	goto	l2175
  5079  002B12                     l2175:
  5080  002B12  A203               	btfss	OpenUSART@config,1,c
  5081  002B14  D003               	goto	l2179
  5082  002B16  8CAC               	bsf	4012,6,c	;volatile
  5083  002B18  8CAB               	bsf	4011,6,c	;volatile
  5084  002B1A  D000               	goto	l2179
  5085  002B1C                     l2179:
  5086  002B1C  A403               	btfss	OpenUSART@config,2,c
  5087  002B1E  D002               	goto	l2183
  5088  002B20  8EAC               	bsf	4012,7,c	;volatile
  5089  002B22  D000               	goto	l2183
  5090  002B24                     l2183:
  5091  002B24  A603               	btfss	OpenUSART@config,3,c
  5092  002B26  D002               	goto	l288
  5093  002B28  88AB               	bsf	4011,4,c	;volatile
  5094  002B2A  D002               	goto	l2187
  5095  002B2C                     l288:
  5096  002B2C  8AAB               	bsf	4011,5,c	;volatile
  5097  002B2E  D000               	goto	l2187
  5098  002B30                     l2187:
  5099  002B30  B803               	btfsc	OpenUSART@config,4,c
  5100  002B32  84AC               	bsf	4012,2,c	;volatile
  5101  002B34  989E               	bcf	3998,4,c	;volatile
  5102  002B36  AA03               	btfss	OpenUSART@config,5,c
  5103  002B38  D002               	goto	l2195
  5104  002B3A  86AB               	bsf	4011,3,c	;volatile
  5105  002B3C  D000               	goto	l2195
  5106  002B3E                     l2195:
  5107  002B3E  AC03               	btfss	OpenUSART@config,6,c
  5108  002B40  D002               	goto	l292
  5109  002B42  8A9D               	bsf	3997,5,c	;volatile
  5110  002B44  D001               	goto	l293
  5111  002B46                     l292:
  5112  002B46  9A9D               	bcf	3997,5,c	;volatile
  5113  002B48                     l293:
  5114  002B48  9A9E               	bcf	3998,5,c	;volatile
  5115  002B4A  AE03               	btfss	OpenUSART@config,7,c
  5116  002B4C  D002               	goto	l294
  5117  002B4E  889D               	bsf	3997,4,c	;volatile
  5118  002B50  D001               	goto	l295
  5119  002B52                     l294:
  5120  002B52  989D               	bcf	3997,4,c	;volatile
  5121  002B54                     l295:
  5122  002B54  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5123  002B58  5002               	movf	OpenUSART@spbrg+1,w,c
  5124  002B5A  6EB0               	movwf	4016,c	;volatile
  5125  002B5C  8AAC               	bsf	4012,5,c	;volatile
  5126  002B5E  8EAB               	bsf	4011,7,c	;volatile
  5127  002B60  9C94               	bcf	3988,6,c	;volatile
  5128  002B62  8E94               	bsf	3988,7,c	;volatile
  5129  002B64  B8AC               	btfsc	4012,4,c	;volatile
  5130  002B66  BEAC               	btfsc	4012,7,c	;volatile
  5131  002B68  D002               	goto	l297
  5132  002B6A  8C94               	bsf	3988,6,c	;volatile
  5133  002B6C  D000               	goto	l297
  5134  002B6E                     l297:
  5135  002B6E  0012               	return		;funcret
  5136  002B70                     __end_of_OpenUSART:
  5137                           	opt stack 0
  5138                           tblptru	equ	0xFF8
  5139                           tblptrh	equ	0xFF7
  5140                           tblptrl	equ	0xFF6
  5141                           tablat	equ	0xFF5
  5142                           prodh	equ	0xFF4
  5143                           prodl	equ	0xFF3
  5144                           postinc0	equ	0xFEE
  5145                           wreg	equ	0xFE8
  5146                           postdec1	equ	0xFE5
  5147                           fsr1l	equ	0xFE1
  5148                           postinc2	equ	0xFDE
  5149                           postdec2	equ	0xFDD
  5150                           fsr2h	equ	0xFDA
  5151                           fsr2l	equ	0xFD9
  5152                           status	equ	0xFD8
  5153                           
  5154 ;; *************** function _get_full_ADC *****************
  5155 ;; Defined at:
  5156 ;;		line 120 in file "Lab5p2.c"
  5157 ;; Parameters:    Size  Location     Type
  5158 ;;		None
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;  result          2    4[COMRAM] int 
  5161 ;; Return value:  Size  Location     Type
  5162 ;;                  2    0[COMRAM] unsigned int 
  5163 ;; Registers used:
  5164 ;;		wreg, status,2, status,0
  5165 ;; Tracked objects:
  5166 ;;		On entry : 0/0
  5167 ;;		On exit  : 0/0
  5168 ;;		Unchanged: 0/0
  5169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5170 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5171 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5173 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5174 ;;Total ram usage:        6 bytes
  5175 ;; Hardware stack levels used:    1
  5176 ;; This function calls:
  5177 ;;		Nothing
  5178 ;; This function is called by:
  5179 ;;		_main
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           	psect	text20
  5184  002D6C                     __ptext20:
  5185                           	opt stack 0
  5186  002D6C                     _get_full_ADC:
  5187                           	opt stack 30
  5188                           
  5189                           ;Lab5p2.c: 121: int result;
  5190                           ;Lab5p2.c: 122: ADCON0bits.GO=1;
  5191                           
  5192                           ;incstack = 0
  5193  002D6C  82C2               	bsf	4034,1,c	;volatile
  5194                           
  5195                           ;Lab5p2.c: 124: while(ADCON0bits.DONE==1);
  5196  002D6E  D000               	goto	l103
  5197  002D70                     l103:
  5198  002D70  B2C2               	btfsc	4034,1,c	;volatile
  5199  002D72  D7FE               	goto	l103
  5200                           
  5201                           ;Lab5p2.c: 126: result = (ADRESH * 0x100) + ADRESL;
  5202  002D74  50C4               	movf	4036,w,c	;volatile
  5203  002D76  6E04               	movwf	(??_get_full_ADC+1)& (0+255),c
  5204  002D78  6A03               	clrf	??_get_full_ADC& (0+255),c
  5205  002D7A  50C3               	movf	4035,w,c	;volatile
  5206  002D7C  2403               	addwf	??_get_full_ADC,w,c
  5207  002D7E  6E05               	movwf	get_full_ADC@result,c
  5208  002D80  0E00               	movlw	0
  5209  002D82  2004               	addwfc	??_get_full_ADC+1,w,c
  5210  002D84  6E06               	movwf	get_full_ADC@result+1,c
  5211                           
  5212                           ;Lab5p2.c: 129: return result;
  5213  002D86  C005  F001         	movff	get_full_ADC@result,?_get_full_ADC
  5214  002D8A  C006  F002         	movff	get_full_ADC@result+1,?_get_full_ADC+1
  5215  002D8E  D000               	goto	l106
  5216  002D90                     l106:
  5217  002D90  0012               	return		;funcret
  5218  002D92                     __end_of_get_full_ADC:
  5219                           	opt stack 0
  5220                           tblptru	equ	0xFF8
  5221                           tblptrh	equ	0xFF7
  5222                           tblptrl	equ	0xFF6
  5223                           tablat	equ	0xFF5
  5224                           prodh	equ	0xFF4
  5225                           prodl	equ	0xFF3
  5226                           postinc0	equ	0xFEE
  5227                           wreg	equ	0xFE8
  5228                           postdec1	equ	0xFE5
  5229                           fsr1l	equ	0xFE1
  5230                           postinc2	equ	0xFDE
  5231                           postdec2	equ	0xFDD
  5232                           fsr2h	equ	0xFDA
  5233                           fsr2l	equ	0xFD9
  5234                           status	equ	0xFD8
  5235                           
  5236 ;; *************** function ___ftdiv *****************
  5237 ;; Defined at:
  5238 ;;		line 54 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;  f1              3   57[COMRAM] float 
  5241 ;;  f2              3   60[COMRAM] float 
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;  f3              3   67[COMRAM] float 
  5244 ;;  sign            1   71[COMRAM] unsigned char 
  5245 ;;  exp             1   70[COMRAM] unsigned char 
  5246 ;;  cntr            1   66[COMRAM] unsigned char 
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  3   57[COMRAM] float 
  5249 ;; Registers used:
  5250 ;;		wreg, status,2, status,0, cstack
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5256 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5257 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5258 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5259 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5260 ;;Total ram usage:       15 bytes
  5261 ;; Hardware stack levels used:    1
  5262 ;; Hardware stack levels required when called:    1
  5263 ;; This function calls:
  5264 ;;		___ftpack
  5265 ;; This function is called by:
  5266 ;;		_main
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           	psect	text21
  5271  00260E                     __ptext21:
  5272                           	opt stack 0
  5273  00260E                     ___ftdiv:
  5274                           	opt stack 29
  5275                           
  5276                           ;incstack = 0
  5277  00260E  C03C  F040         	movff	___ftdiv@f1+2,??___ftdiv
  5278  002612  6A41               	clrf	(??___ftdiv+1)& (0+255),c
  5279  002614  6A42               	clrf	(??___ftdiv+2)& (0+255),c
  5280  002616  343B               	rlcf	___ftdiv@f1+1,w,c
  5281  002618  3640               	rlcf	??___ftdiv& (0+255),f,c
  5282  00261A  E301               	bnc	u3021
  5283  00261C  8041               	bsf	(??___ftdiv+1)& (0+255),0,c
  5284  00261E                     u3021:
  5285  00261E  5040               	movf	??___ftdiv,w,c
  5286  002620  6E47               	movwf	___ftdiv@exp,c
  5287  002622  5047               	movf	___ftdiv@exp,w,c
  5288  002624  A4D8               	btfss	status,2,c
  5289  002626  D002               	goto	l2775
  5290  002628  D00E               	goto	l2777
  5291  00262A  D061               	goto	l697
  5292  00262C                     l2775:
  5293  00262C  C03F  F040         	movff	___ftdiv@f2+2,??___ftdiv
  5294  002630  6A41               	clrf	(??___ftdiv+1)& (0+255),c
  5295  002632  6A42               	clrf	(??___ftdiv+2)& (0+255),c
  5296  002634  343E               	rlcf	___ftdiv@f2+1,w,c
  5297  002636  3640               	rlcf	??___ftdiv& (0+255),f,c
  5298  002638  E301               	bnc	u3041
  5299  00263A  8041               	bsf	(??___ftdiv+1)& (0+255),0,c
  5300  00263C                     u3041:
  5301  00263C  5040               	movf	??___ftdiv,w,c
  5302  00263E  6E48               	movwf	___ftdiv@sign,c
  5303  002640  5048               	movf	___ftdiv@sign,w,c
  5304  002642  A4D8               	btfss	status,2,c
  5305  002644  D007               	goto	l2781
  5306  002646                     l2777:
  5307  002646  0E00               	movlw	0
  5308  002648  6E3A               	movwf	?___ftdiv,c
  5309  00264A  0E00               	movlw	0
  5310  00264C  6E3B               	movwf	?___ftdiv+1,c
  5311  00264E  0E00               	movlw	0
  5312  002650  6E3C               	movwf	?___ftdiv+2,c
  5313  002652  D04D               	goto	l697
  5314  002654                     l2781:
  5315  002654  0E00               	movlw	0
  5316  002656  6E44               	movwf	___ftdiv@f3,c
  5317  002658  0E00               	movlw	0
  5318  00265A  6E45               	movwf	___ftdiv@f3+1,c
  5319  00265C  0E00               	movlw	0
  5320  00265E  6E46               	movwf	___ftdiv@f3+2,c
  5321  002660  5048               	movf	___ftdiv@sign,w,c
  5322  002662  0F89               	addlw	137
  5323  002664  5E47               	subwf	___ftdiv@exp,f,c
  5324  002666  C03C  F048         	movff	___ftdiv@f1+2,___ftdiv@sign
  5325  00266A  503F               	movf	___ftdiv@f2+2,w,c
  5326  00266C  1A48               	xorwf	___ftdiv@sign,f,c
  5327  00266E  0E80               	movlw	128
  5328  002670  1648               	andwf	___ftdiv@sign,f,c
  5329  002672  8E3B               	bsf	___ftdiv@f1+1,7,c
  5330  002674  0EFF               	movlw	255
  5331  002676  163A               	andwf	___ftdiv@f1,f,c
  5332  002678  0EFF               	movlw	255
  5333  00267A  163B               	andwf	___ftdiv@f1+1,f,c
  5334  00267C  0E00               	movlw	0
  5335  00267E  163C               	andwf	___ftdiv@f1+2,f,c
  5336  002680  8E3E               	bsf	___ftdiv@f2+1,7,c
  5337  002682  0EFF               	movlw	255
  5338  002684  163D               	andwf	___ftdiv@f2,f,c
  5339  002686  0EFF               	movlw	255
  5340  002688  163E               	andwf	___ftdiv@f2+1,f,c
  5341  00268A  0E00               	movlw	0
  5342  00268C  163F               	andwf	___ftdiv@f2+2,f,c
  5343  00268E  0E18               	movlw	24
  5344  002690  6E43               	movwf	___ftdiv@cntr,c
  5345  002692  D000               	goto	l2801
  5346  002694                     l2801:
  5347  002694  90D8               	bcf	status,0,c
  5348  002696  3644               	rlcf	___ftdiv@f3,f,c
  5349  002698  3645               	rlcf	___ftdiv@f3+1,f,c
  5350  00269A  3646               	rlcf	___ftdiv@f3+2,f,c
  5351  00269C  503D               	movf	___ftdiv@f2,w,c
  5352  00269E  5C3A               	subwf	___ftdiv@f1,w,c
  5353  0026A0  503E               	movf	___ftdiv@f2+1,w,c
  5354  0026A2  583B               	subwfb	___ftdiv@f1+1,w,c
  5355  0026A4  503F               	movf	___ftdiv@f2+2,w,c
  5356  0026A6  583C               	subwfb	___ftdiv@f1+2,w,c
  5357  0026A8  A0D8               	btfss	status,0,c
  5358  0026AA  D007               	goto	l700
  5359  0026AC  503D               	movf	___ftdiv@f2,w,c
  5360  0026AE  5E3A               	subwf	___ftdiv@f1,f,c
  5361  0026B0  503E               	movf	___ftdiv@f2+1,w,c
  5362  0026B2  5A3B               	subwfb	___ftdiv@f1+1,f,c
  5363  0026B4  503F               	movf	___ftdiv@f2+2,w,c
  5364  0026B6  5A3C               	subwfb	___ftdiv@f1+2,f,c
  5365  0026B8  8044               	bsf	___ftdiv@f3,0,c
  5366  0026BA                     l700:
  5367  0026BA  90D8               	bcf	status,0,c
  5368  0026BC  363A               	rlcf	___ftdiv@f1,f,c
  5369  0026BE  363B               	rlcf	___ftdiv@f1+1,f,c
  5370  0026C0  363C               	rlcf	___ftdiv@f1+2,f,c
  5371  0026C2  2E43               	decfsz	___ftdiv@cntr,f,c
  5372  0026C4  D7E7               	goto	l2801
  5373  0026C6  D000               	goto	l2811
  5374  0026C8                     l2811:
  5375  0026C8  C044  F001         	movff	___ftdiv@f3,___ftpack@arg
  5376  0026CC  C045  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5377  0026D0  C046  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5378  0026D4  C047  F004         	movff	___ftdiv@exp,___ftpack@exp
  5379  0026D8  C048  F005         	movff	___ftdiv@sign,___ftpack@sign
  5380  0026DC  EC78  F013         	call	___ftpack	;wreg free
  5381  0026E0  C001  F03A         	movff	?___ftpack,?___ftdiv
  5382  0026E4  C002  F03B         	movff	?___ftpack+1,?___ftdiv+1
  5383  0026E8  C003  F03C         	movff	?___ftpack+2,?___ftdiv+2
  5384  0026EC  D000               	goto	l697
  5385  0026EE                     l697:
  5386  0026EE  0012               	return		;funcret
  5387  0026F0                     __end_of___ftdiv:
  5388                           	opt stack 0
  5389                           tblptru	equ	0xFF8
  5390                           tblptrh	equ	0xFF7
  5391                           tblptrl	equ	0xFF6
  5392                           tablat	equ	0xFF5
  5393                           prodh	equ	0xFF4
  5394                           prodl	equ	0xFF3
  5395                           postinc0	equ	0xFEE
  5396                           wreg	equ	0xFE8
  5397                           postdec1	equ	0xFE5
  5398                           fsr1l	equ	0xFE1
  5399                           postinc2	equ	0xFDE
  5400                           postdec2	equ	0xFDD
  5401                           fsr2h	equ	0xFDA
  5402                           fsr2l	equ	0xFD9
  5403                           status	equ	0xFD8
  5404                           
  5405 ;; *************** function ___awtoft *****************
  5406 ;; Defined at:
  5407 ;;		line 32 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\awtoft.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;  c               2    8[COMRAM] int 
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;  sign            1   11[COMRAM] unsigned char 
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  3    8[COMRAM] float 
  5414 ;; Registers used:
  5415 ;;		wreg, status,2, status,0, cstack
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5421 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5425 ;;Total ram usage:        4 bytes
  5426 ;; Hardware stack levels used:    1
  5427 ;; Hardware stack levels required when called:    1
  5428 ;; This function calls:
  5429 ;;		___ftpack
  5430 ;; This function is called by:
  5431 ;;		_main
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           	psect	text22
  5436  002CDE                     __ptext22:
  5437                           	opt stack 0
  5438  002CDE                     ___awtoft:
  5439                           	opt stack 29
  5440                           
  5441                           ;incstack = 0
  5442  002CDE  0E00               	movlw	0
  5443  002CE0  6E0C               	movwf	___awtoft@sign,c
  5444  002CE2  AE0A               	btfss	___awtoft@c+1,7,c
  5445  002CE4  D007               	goto	l2823
  5446  002CE6  6C09               	negf	___awtoft@c,c
  5447  002CE8  1E0A               	comf	___awtoft@c+1,f,c
  5448  002CEA  B0D8               	btfsc	status,0,c
  5449  002CEC  2A0A               	incf	___awtoft@c+1,f,c
  5450  002CEE  0E01               	movlw	1
  5451  002CF0  6E0C               	movwf	___awtoft@sign,c
  5452  002CF2  D000               	goto	l2823
  5453  002CF4                     l2823:
  5454  002CF4  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5455  002CF8  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5456  002CFC  6A03               	clrf	___ftpack@arg+2,c
  5457  002CFE  0E8E               	movlw	142
  5458  002D00  6E04               	movwf	___ftpack@exp,c
  5459  002D02  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5460  002D06  EC78  F013         	call	___ftpack	;wreg free
  5461  002D0A  C001  F009         	movff	?___ftpack,?___awtoft
  5462  002D0E  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5463  002D12  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5464  002D16  D000               	goto	l518
  5465  002D18                     l518:
  5466  002D18  0012               	return		;funcret
  5467  002D1A                     __end_of___awtoft:
  5468                           	opt stack 0
  5469                           tblptru	equ	0xFF8
  5470                           tblptrh	equ	0xFF7
  5471                           tblptrl	equ	0xFF6
  5472                           tablat	equ	0xFF5
  5473                           prodh	equ	0xFF4
  5474                           prodl	equ	0xFF3
  5475                           postinc0	equ	0xFEE
  5476                           wreg	equ	0xFE8
  5477                           postdec1	equ	0xFE5
  5478                           fsr1l	equ	0xFE1
  5479                           postinc2	equ	0xFDE
  5480                           postdec2	equ	0xFDD
  5481                           fsr2h	equ	0xFDA
  5482                           fsr2l	equ	0xFD9
  5483                           status	equ	0xFD8
  5484                           
  5485 ;; *************** function ___ftpack *****************
  5486 ;; Defined at:
  5487 ;;		line 62 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\float.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;  arg             3    0[COMRAM] unsigned um
  5490 ;;  exp             1    3[COMRAM] unsigned char 
  5491 ;;  sign            1    4[COMRAM] unsigned char 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;		None
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  3    0[COMRAM] float 
  5496 ;; Registers used:
  5497 ;;		wreg, status,2, status,0
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5503 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5505 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5506 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5507 ;;Total ram usage:        8 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; This function calls:
  5510 ;;		Nothing
  5511 ;; This function is called by:
  5512 ;;		___awtoft
  5513 ;;		___ftadd
  5514 ;;		___ftdiv
  5515 ;;		___ftmul
  5516 ;;		___lltoft
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           	psect	text23
  5521  0026F0                     __ptext23:
  5522                           	opt stack 0
  5523  0026F0                     ___ftpack:
  5524                           	opt stack 27
  5525                           
  5526                           ;incstack = 0
  5527  0026F0  5004               	movf	___ftpack@exp,w,c
  5528  0026F2  B4D8               	btfsc	status,2,c
  5529  0026F4  D005               	goto	l1933
  5530  0026F6  5001               	movf	___ftpack@arg,w,c
  5531  0026F8  1002               	iorwf	___ftpack@arg+1,w,c
  5532  0026FA  1003               	iorwf	___ftpack@arg+2,w,c
  5533  0026FC  A4D8               	btfss	status,2,c
  5534  0026FE  D00E               	goto	l1939
  5535  002700                     l1933:
  5536  002700  0E00               	movlw	0
  5537  002702  6E01               	movwf	?___ftpack,c
  5538  002704  0E00               	movlw	0
  5539  002706  6E02               	movwf	?___ftpack+1,c
  5540  002708  0E00               	movlw	0
  5541  00270A  6E03               	movwf	?___ftpack+2,c
  5542  00270C  D053               	goto	l625
  5543  00270E  D006               	goto	l1939
  5544  002710                     l1937:
  5545  002710  2A04               	incf	___ftpack@exp,f,c
  5546  002712  90D8               	bcf	status,0,c
  5547  002714  3203               	rrcf	___ftpack@arg+2,f,c
  5548  002716  3202               	rrcf	___ftpack@arg+1,f,c
  5549  002718  3201               	rrcf	___ftpack@arg,f,c
  5550  00271A  D000               	goto	l1939
  5551  00271C                     l1939:
  5552  00271C  0E00               	movlw	0
  5553  00271E  1401               	andwf	___ftpack@arg,w,c
  5554  002720  6E06               	movwf	??___ftpack& (0+255),c
  5555  002722  0E00               	movlw	0
  5556  002724  1402               	andwf	___ftpack@arg+1,w,c
  5557  002726  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5558  002728  0EFE               	movlw	254
  5559  00272A  1403               	andwf	___ftpack@arg+2,w,c
  5560  00272C  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5561  00272E  5006               	movf	??___ftpack,w,c
  5562  002730  1007               	iorwf	??___ftpack+1,w,c
  5563  002732  1008               	iorwf	??___ftpack+2,w,c
  5564  002734  B4D8               	btfsc	status,2,c
  5565  002736  D00E               	goto	l1945
  5566  002738  D7EB               	goto	l1937
  5567  00273A  D00C               	goto	l1945
  5568  00273C                     l1941:
  5569  00273C  2A04               	incf	___ftpack@exp,f,c
  5570  00273E  0E01               	movlw	1
  5571  002740  2601               	addwf	___ftpack@arg,f,c
  5572  002742  0E00               	movlw	0
  5573  002744  2202               	addwfc	___ftpack@arg+1,f,c
  5574  002746  0E00               	movlw	0
  5575  002748  2203               	addwfc	___ftpack@arg+2,f,c
  5576  00274A  90D8               	bcf	status,0,c
  5577  00274C  3203               	rrcf	___ftpack@arg+2,f,c
  5578  00274E  3202               	rrcf	___ftpack@arg+1,f,c
  5579  002750  3201               	rrcf	___ftpack@arg,f,c
  5580  002752  D000               	goto	l1945
  5581  002754                     l1945:
  5582  002754  0E00               	movlw	0
  5583  002756  1401               	andwf	___ftpack@arg,w,c
  5584  002758  6E06               	movwf	??___ftpack& (0+255),c
  5585  00275A  0E00               	movlw	0
  5586  00275C  1402               	andwf	___ftpack@arg+1,w,c
  5587  00275E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5588  002760  0EFF               	movlw	255
  5589  002762  1403               	andwf	___ftpack@arg+2,w,c
  5590  002764  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5591  002766  5006               	movf	??___ftpack,w,c
  5592  002768  1007               	iorwf	??___ftpack+1,w,c
  5593  00276A  1008               	iorwf	??___ftpack+2,w,c
  5594  00276C  B4D8               	btfsc	status,2,c
  5595  00276E  D008               	goto	l1949
  5596  002770  D7E5               	goto	l1941
  5597  002772  D006               	goto	l1949
  5598  002774                     l1947:
  5599  002774  0604               	decf	___ftpack@exp,f,c
  5600  002776  90D8               	bcf	status,0,c
  5601  002778  3601               	rlcf	___ftpack@arg,f,c
  5602  00277A  3602               	rlcf	___ftpack@arg+1,f,c
  5603  00277C  3603               	rlcf	___ftpack@arg+2,f,c
  5604  00277E  D000               	goto	l1949
  5605  002780                     l1949:
  5606  002780  BE02               	btfsc	___ftpack@arg+1,7,c
  5607  002782  D004               	goto	l636
  5608  002784  0E02               	movlw	2
  5609  002786  6004               	cpfslt	___ftpack@exp,c
  5610  002788  D7F5               	goto	l1947
  5611  00278A  D000               	goto	l636
  5612  00278C                     l636:
  5613  00278C  B004               	btfsc	___ftpack@exp,0,c
  5614  00278E  D002               	goto	l1955
  5615  002790  9E02               	bcf	___ftpack@arg+1,7,c
  5616  002792  D000               	goto	l1955
  5617  002794                     l1955:
  5618  002794  90D8               	bcf	status,0,c
  5619  002796  3204               	rrcf	___ftpack@exp,f,c
  5620  002798  5004               	movf	___ftpack@exp,w,c
  5621  00279A  1203               	iorwf	___ftpack@arg+2,f,c
  5622  00279C  5005               	movf	___ftpack@sign,w,c
  5623  00279E  B4D8               	btfsc	status,2,c
  5624  0027A0  D002               	goto	l1961
  5625  0027A2  8E03               	bsf	___ftpack@arg+2,7,c
  5626  0027A4  D000               	goto	l1961
  5627  0027A6                     l1961:
  5628  0027A6  C001  F001         	movff	___ftpack@arg,?___ftpack
  5629  0027AA  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5630  0027AE  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5631  0027B2  D000               	goto	l625
  5632  0027B4                     l625:
  5633  0027B4  0012               	return		;funcret
  5634  0027B6                     __end_of___ftpack:
  5635                           	opt stack 0
  5636                           tblptru	equ	0xFF8
  5637                           tblptrh	equ	0xFF7
  5638                           tblptrl	equ	0xFF6
  5639                           tablat	equ	0xFF5
  5640                           prodh	equ	0xFF4
  5641                           prodl	equ	0xFF3
  5642                           postinc0	equ	0xFEE
  5643                           wreg	equ	0xFE8
  5644                           postdec1	equ	0xFE5
  5645                           fsr1l	equ	0xFE1
  5646                           postinc2	equ	0xFDE
  5647                           postdec2	equ	0xFDD
  5648                           fsr2h	equ	0xFDA
  5649                           fsr2l	equ	0xFD9
  5650                           status	equ	0xFD8
  5651                           
  5652 ;; *************** function _Select_ADC_Channel *****************
  5653 ;; Defined at:
  5654 ;;		line 101 in file "Lab5p2.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;  channel         1    wreg     unsigned char 
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;  channel         1    0[COMRAM] unsigned char 
  5659 ;; Return value:  Size  Location     Type
  5660 ;;		None               void
  5661 ;; Registers used:
  5662 ;;		wreg, status,2, status,0, prodl, prodh
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5669 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5671 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5672 ;;Total ram usage:        1 bytes
  5673 ;; Hardware stack levels used:    1
  5674 ;; This function calls:
  5675 ;;		Nothing
  5676 ;; This function is called by:
  5677 ;;		_main
  5678 ;; This function uses a non-reentrant model
  5679 ;;
  5680                           
  5681                           	psect	text24
  5682  002E2A                     __ptext24:
  5683                           	opt stack 0
  5684  002E2A                     _Select_ADC_Channel:
  5685                           	opt stack 30
  5686                           
  5687                           ;incstack = 0
  5688                           ;Select_ADC_Channel@channel stored from wreg
  5689  002E2A  6E01               	movwf	Select_ADC_Channel@channel,c
  5690                           
  5691                           ;Lab5p2.c: 103: ADCON0 = channel * 4 + 1;
  5692  002E2C  5001               	movf	Select_ADC_Channel@channel,w,c
  5693  002E2E  0D04               	mullw	4
  5694  002E30  28F3               	incf	prodl,w,c
  5695  002E32  6EC2               	movwf	4034,c	;volatile
  5696  002E34  0012               	return		;funcret
  5697  002E36                     __end_of_Select_ADC_Channel:
  5698                           	opt stack 0
  5699                           tblptru	equ	0xFF8
  5700                           tblptrh	equ	0xFF7
  5701                           tblptrl	equ	0xFF6
  5702                           tablat	equ	0xFF5
  5703                           prodh	equ	0xFF4
  5704                           prodl	equ	0xFF3
  5705                           postinc0	equ	0xFEE
  5706                           wreg	equ	0xFE8
  5707                           postdec1	equ	0xFE5
  5708                           fsr1l	equ	0xFE1
  5709                           postinc2	equ	0xFDE
  5710                           postdec2	equ	0xFDD
  5711                           fsr2h	equ	0xFDA
  5712                           fsr2l	equ	0xFD9
  5713                           status	equ	0xFD8
  5714                           
  5715 ;; *************** function _Init_Tris *****************
  5716 ;; Defined at:
  5717 ;;		line 106 in file "Lab5p2.c"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;		None
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;		None
  5722 ;; Return value:  Size  Location     Type
  5723 ;;		None               void
  5724 ;; Registers used:
  5725 ;;		wreg, status,2
  5726 ;; Tracked objects:
  5727 ;;		On entry : 0/0
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5735 ;;Total ram usage:        0 bytes
  5736 ;; Hardware stack levels used:    1
  5737 ;; This function calls:
  5738 ;;		Nothing
  5739 ;; This function is called by:
  5740 ;;		_main
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text25
  5745  002DF2                     __ptext25:
  5746                           	opt stack 0
  5747  002DF2                     _Init_Tris:
  5748                           	opt stack 30
  5749                           
  5750                           ;Lab5p2.c: 107: TRISA = 0x0F;
  5751                           
  5752                           ;incstack = 0
  5753  002DF2  0E0F               	movlw	15
  5754  002DF4  6E92               	movwf	3986,c	;volatile
  5755                           
  5756                           ;Lab5p2.c: 108: TRISB = 0x00;
  5757  002DF6  0E00               	movlw	0
  5758  002DF8  6E93               	movwf	3987,c	;volatile
  5759                           
  5760                           ;Lab5p2.c: 109: TRISC = 0x00;
  5761  002DFA  0E00               	movlw	0
  5762  002DFC  6E94               	movwf	3988,c	;volatile
  5763                           
  5764                           ;Lab5p2.c: 110: TRISD = 0x00;
  5765  002DFE  0E00               	movlw	0
  5766  002E00  6E95               	movwf	3989,c	;volatile
  5767                           
  5768                           ;Lab5p2.c: 111: TRISE = 0x00;
  5769  002E02  0E00               	movlw	0
  5770  002E04  6E96               	movwf	3990,c	;volatile
  5771  002E06  0012               	return		;funcret
  5772  002E08                     __end_of_Init_Tris:
  5773                           	opt stack 0
  5774                           tblptru	equ	0xFF8
  5775                           tblptrh	equ	0xFF7
  5776                           tblptrl	equ	0xFF6
  5777                           tablat	equ	0xFF5
  5778                           prodh	equ	0xFF4
  5779                           prodl	equ	0xFF3
  5780                           postinc0	equ	0xFEE
  5781                           wreg	equ	0xFE8
  5782                           postdec1	equ	0xFE5
  5783                           fsr1l	equ	0xFE1
  5784                           postinc2	equ	0xFDE
  5785                           postdec2	equ	0xFDD
  5786                           fsr2h	equ	0xFDA
  5787                           fsr2l	equ	0xFD9
  5788                           status	equ	0xFD8
  5789                           
  5790 ;; *************** function _Init_ADC *****************
  5791 ;; Defined at:
  5792 ;;		line 113 in file "Lab5p2.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;		None
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;		None
  5797 ;; Return value:  Size  Location     Type
  5798 ;;		None               void
  5799 ;; Registers used:
  5800 ;;		wreg, status,2
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5810 ;;Total ram usage:        0 bytes
  5811 ;; Hardware stack levels used:    1
  5812 ;; This function calls:
  5813 ;;		Nothing
  5814 ;; This function is called by:
  5815 ;;		_main
  5816 ;; This function uses a non-reentrant model
  5817 ;;
  5818                           
  5819                           	psect	text26
  5820  002E40                     __ptext26:
  5821                           	opt stack 0
  5822  002E40                     _Init_ADC:
  5823                           	opt stack 30
  5824                           
  5825                           ;Lab5p2.c: 115: ADCON1=0x1B;
  5826                           
  5827                           ;incstack = 0
  5828  002E40  0E1B               	movlw	27
  5829  002E42  6EC1               	movwf	4033,c	;volatile
  5830                           
  5831                           ;Lab5p2.c: 118: ADCON2=0xA9;
  5832  002E44  0EA9               	movlw	169
  5833  002E46  6EC0               	movwf	4032,c	;volatile
  5834  002E48  0012               	return		;funcret
  5835  002E4A                     __end_of_Init_ADC:
  5836                           	opt stack 0
  5837                           tblptru	equ	0xFF8
  5838                           tblptrh	equ	0xFF7
  5839                           tblptrl	equ	0xFF6
  5840                           tablat	equ	0xFF5
  5841                           prodh	equ	0xFF4
  5842                           prodl	equ	0xFF3
  5843                           postinc0	equ	0xFEE
  5844                           wreg	equ	0xFE8
  5845                           postdec1	equ	0xFE5
  5846                           fsr1l	equ	0xFE1
  5847                           postinc2	equ	0xFDE
  5848                           postdec2	equ	0xFDD
  5849                           fsr2h	equ	0xFDA
  5850                           fsr2l	equ	0xFD9
  5851                           status	equ	0xFD8
  5852                           
  5853 ;; *************** function _Display_Upper_Digit *****************
  5854 ;; Defined at:
  5855 ;;		line 140 in file "Lab5p2.c"
  5856 ;; Parameters:    Size  Location     Type
  5857 ;;  digit           1    wreg     unsigned char 
  5858 ;; Auto vars:     Size  Location     Type
  5859 ;;  digit           1    1[COMRAM] unsigned char 
  5860 ;;  PE              1    0[COMRAM] unsigned char 
  5861 ;; Return value:  Size  Location     Type
  5862 ;;		None               void
  5863 ;; Registers used:
  5864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5865 ;; Tracked objects:
  5866 ;;		On entry : 0/0
  5867 ;;		On exit  : 0/0
  5868 ;;		Unchanged: 0/0
  5869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5871 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5873 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5874 ;;Total ram usage:        2 bytes
  5875 ;; Hardware stack levels used:    1
  5876 ;; This function calls:
  5877 ;;		Nothing
  5878 ;; This function is called by:
  5879 ;;		_main
  5880 ;; This function uses a non-reentrant model
  5881 ;;
  5882                           
  5883                           	psect	text27
  5884  002C9E                     __ptext27:
  5885                           	opt stack 0
  5886  002C9E                     _Display_Upper_Digit:
  5887                           	opt stack 30
  5888                           
  5889                           ;incstack = 0
  5890                           ;Display_Upper_Digit@digit stored from wreg
  5891  002C9E  6E02               	movwf	Display_Upper_Digit@digit,c
  5892                           
  5893                           ;Lab5p2.c: 143: PORTC = array[digit] & 0x3F;
  5894  002CA0  5002               	movf	Display_Upper_Digit@digit,w,c
  5895  002CA2  0D01               	mullw	1
  5896  002CA4  0E76               	movlw	low _array
  5897  002CA6  24F3               	addwf	prodl,w,c
  5898  002CA8  6ED9               	movwf	fsr2l,c
  5899  002CAA  0E00               	movlw	high _array
  5900  002CAC  20F4               	addwfc	prodh,w,c
  5901  002CAE  6EDA               	movwf	fsr2h,c
  5902  002CB0  50DF               	movf	indf2,w,c
  5903  002CB2  0B3F               	andlw	63
  5904  002CB4  6E82               	movwf	3970,c	;volatile
  5905                           
  5906                           ;Lab5p2.c: 144: char PE = array[digit] & 0x40;
  5907  002CB6  5002               	movf	Display_Upper_Digit@digit,w,c
  5908  002CB8  0D01               	mullw	1
  5909  002CBA  0E76               	movlw	low _array
  5910  002CBC  24F3               	addwf	prodl,w,c
  5911  002CBE  6ED9               	movwf	fsr2l,c
  5912  002CC0  0E00               	movlw	high _array
  5913  002CC2  20F4               	addwfc	prodh,w,c
  5914  002CC4  6EDA               	movwf	fsr2h,c
  5915  002CC6  50DF               	movf	indf2,w,c
  5916  002CC8  0B40               	andlw	64
  5917  002CCA  6E01               	movwf	Display_Upper_Digit@PE,c
  5918                           
  5919                           ;Lab5p2.c: 145: if (PE == 0) PORTE = 0x00;
  5920  002CCC  5001               	movf	Display_Upper_Digit@PE,w,c
  5921  002CCE  A4D8               	btfss	status,2,c
  5922  002CD0  D002               	goto	l1579
  5923  002CD2  0E00               	movlw	0
  5924  002CD4  D001               	goto	L8
  5925  002CD6                     l1579:
  5926                           
  5927                           ;Lab5p2.c: 146: else PORTE = 0x01;
  5928  002CD6  0E01               	movlw	1
  5929  002CD8                     L8:
  5930  002CD8  6E84               	movwf	3972,c	;volatile
  5931  002CDA  D000               	goto	l122
  5932  002CDC                     l122:
  5933  002CDC  0012               	return		;funcret
  5934  002CDE                     __end_of_Display_Upper_Digit:
  5935                           	opt stack 0
  5936                           tblptru	equ	0xFF8
  5937                           tblptrh	equ	0xFF7
  5938                           tblptrl	equ	0xFF6
  5939                           tablat	equ	0xFF5
  5940                           prodh	equ	0xFF4
  5941                           prodl	equ	0xFF3
  5942                           postinc0	equ	0xFEE
  5943                           wreg	equ	0xFE8
  5944                           postdec1	equ	0xFE5
  5945                           fsr1l	equ	0xFE1
  5946                           indf2	equ	0xFDF
  5947                           postinc2	equ	0xFDE
  5948                           postdec2	equ	0xFDD
  5949                           fsr2h	equ	0xFDA
  5950                           fsr2l	equ	0xFD9
  5951                           status	equ	0xFD8
  5952                           
  5953 ;; *************** function _Display_Lower_Digit *****************
  5954 ;; Defined at:
  5955 ;;		line 149 in file "Lab5p2.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;  digit           1    wreg     unsigned char 
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;  digit           1    0[COMRAM] unsigned char 
  5960 ;; Return value:  Size  Location     Type
  5961 ;;		None               void
  5962 ;; Registers used:
  5963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5972 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5973 ;;Total ram usage:        1 bytes
  5974 ;; Hardware stack levels used:    1
  5975 ;; This function calls:
  5976 ;;		Nothing
  5977 ;; This function is called by:
  5978 ;;		_main
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           	psect	text28
  5983  002DDA                     __ptext28:
  5984                           	opt stack 0
  5985  002DDA                     _Display_Lower_Digit:
  5986                           	opt stack 30
  5987                           
  5988                           ;incstack = 0
  5989                           ;Display_Lower_Digit@digit stored from wreg
  5990  002DDA  6E01               	movwf	Display_Lower_Digit@digit,c
  5991                           
  5992                           ;Lab5p2.c: 150: PORTD = array[digit];
  5993  002DDC  5001               	movf	Display_Lower_Digit@digit,w,c
  5994  002DDE  0D01               	mullw	1
  5995  002DE0  0E76               	movlw	low _array
  5996  002DE2  24F3               	addwf	prodl,w,c
  5997  002DE4  6ED9               	movwf	fsr2l,c
  5998  002DE6  0E00               	movlw	high _array
  5999  002DE8  20F4               	addwfc	prodh,w,c
  6000  002DEA  6EDA               	movwf	fsr2h,c
  6001  002DEC  50DF               	movf	indf2,w,c
  6002  002DEE  6E83               	movwf	3971,c	;volatile
  6003  002DF0  0012               	return		;funcret
  6004  002DF2                     __end_of_Display_Lower_Digit:
  6005                           	opt stack 0
  6006                           tblptru	equ	0xFF8
  6007                           tblptrh	equ	0xFF7
  6008                           tblptrl	equ	0xFF6
  6009                           tablat	equ	0xFF5
  6010                           prodh	equ	0xFF4
  6011                           prodl	equ	0xFF3
  6012                           postinc0	equ	0xFEE
  6013                           wreg	equ	0xFE8
  6014                           postdec1	equ	0xFE5
  6015                           fsr1l	equ	0xFE1
  6016                           indf2	equ	0xFDF
  6017                           postinc2	equ	0xFDE
  6018                           postdec2	equ	0xFDD
  6019                           fsr2h	equ	0xFDA
  6020                           fsr2l	equ	0xFD9
  6021                           status	equ	0xFD8
  6022                           
  6023 ;; *************** function _Display_D3 *****************
  6024 ;; Defined at:
  6025 ;;		line 170 in file "Lab5p2.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;  voltage         2   57[COMRAM] int 
  6028 ;; Auto vars:     Size  Location     Type
  6029 ;;		None
  6030 ;; Return value:  Size  Location     Type
  6031 ;;		None               void
  6032 ;; Registers used:
  6033 ;;		wreg, status,2, status,0, cstack
  6034 ;; Tracked objects:
  6035 ;;		On entry : 0/0
  6036 ;;		On exit  : 0/0
  6037 ;;		Unchanged: 0/0
  6038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6039 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6042 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6043 ;;Total ram usage:        2 bytes
  6044 ;; Hardware stack levels used:    1
  6045 ;; Hardware stack levels required when called:    1
  6046 ;; This function calls:
  6047 ;;		_WAIT_1_SEC
  6048 ;; This function is called by:
  6049 ;;		_main
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           	psect	text29
  6054  002C5A                     __ptext29:
  6055                           	opt stack 0
  6056  002C5A                     _Display_D3:
  6057                           	opt stack 29
  6058                           
  6059                           ;Lab5p2.c: 171: if(voltage < 2500)
  6060                           
  6061                           ;incstack = 0
  6062  002C5A  BE3B               	btfsc	Display_D3@voltage+1,7,c
  6063  002C5C  D006               	goto	l2573
  6064  002C5E  0EC4               	movlw	196
  6065  002C60  5C3A               	subwf	Display_D3@voltage,w,c
  6066  002C62  0E09               	movlw	9
  6067  002C64  583B               	subwfb	Display_D3@voltage+1,w,c
  6068  002C66  B0D8               	btfsc	status,0,c
  6069  002C68  D002               	goto	l2575
  6070  002C6A                     l2573:
  6071                           
  6072                           ;Lab5p2.c: 172: PORTA = 0x01<<4;
  6073  002C6A  0E10               	movlw	16
  6074  002C6C  D013               	goto	L10
  6075  002C6E                     l2575:
  6076                           
  6077                           ;Lab5p2.c: 173: else if(voltage >= 2500 && voltage < 3400)
  6078  002C6E  BE3B               	btfsc	Display_D3@voltage+1,7,c
  6079  002C70  D010               	goto	l2581
  6080  002C72  0EC4               	movlw	196
  6081  002C74  5C3A               	subwf	Display_D3@voltage,w,c
  6082  002C76  0E09               	movlw	9
  6083  002C78  583B               	subwfb	Display_D3@voltage+1,w,c
  6084  002C7A  A0D8               	btfss	status,0,c
  6085  002C7C  D00A               	goto	l2581
  6086  002C7E  BE3B               	btfsc	Display_D3@voltage+1,7,c
  6087  002C80  D006               	goto	l2579
  6088  002C82  0E48               	movlw	72
  6089  002C84  5C3A               	subwf	Display_D3@voltage,w,c
  6090  002C86  0E0D               	movlw	13
  6091  002C88  583B               	subwfb	Display_D3@voltage+1,w,c
  6092  002C8A  B0D8               	btfsc	status,0,c
  6093  002C8C  D002               	goto	l2581
  6094  002C8E                     l2579:
  6095                           
  6096                           ;Lab5p2.c: 174: PORTA = 0x02<<4;
  6097  002C8E  0E20               	movlw	32
  6098  002C90  D001               	goto	L10
  6099  002C92                     l2581:
  6100                           
  6101                           ;Lab5p2.c: 175: else
  6102                           ;Lab5p2.c: 176: PORTA = 0x03<<4;
  6103  002C92  0E30               	movlw	48
  6104  002C94                     L10:
  6105  002C94  6E80               	movwf	3968,c	;volatile
  6106  002C96  D000               	goto	l2583
  6107  002C98                     l2583:
  6108                           
  6109                           ;Lab5p2.c: 179: WAIT_1_SEC();
  6110  002C98  ECDB  F016         	call	_WAIT_1_SEC	;wreg free
  6111  002C9C  0012               	return		;funcret
  6112  002C9E                     __end_of_Display_D3:
  6113                           	opt stack 0
  6114                           tblptru	equ	0xFF8
  6115                           tblptrh	equ	0xFF7
  6116                           tblptrl	equ	0xFF6
  6117                           tablat	equ	0xFF5
  6118                           prodh	equ	0xFF4
  6119                           prodl	equ	0xFF3
  6120                           postinc0	equ	0xFEE
  6121                           wreg	equ	0xFE8
  6122                           postdec1	equ	0xFE5
  6123                           fsr1l	equ	0xFE1
  6124                           indf2	equ	0xFDF
  6125                           postinc2	equ	0xFDE
  6126                           postdec2	equ	0xFDD
  6127                           fsr2h	equ	0xFDA
  6128                           fsr2l	equ	0xFD9
  6129                           status	equ	0xFD8
  6130                           
  6131 ;; *************** function _WAIT_1_SEC *****************
  6132 ;; Defined at:
  6133 ;;		line 137 in file "Lab5p2.c"
  6134 ;; Parameters:    Size  Location     Type
  6135 ;;		None
  6136 ;; Auto vars:     Size  Location     Type
  6137 ;;  j               2    0[COMRAM] int 
  6138 ;; Return value:  Size  Location     Type
  6139 ;;		None               void
  6140 ;; Registers used:
  6141 ;;		wreg, status,2, status,0
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6148 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6150 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6151 ;;Total ram usage:        2 bytes
  6152 ;; Hardware stack levels used:    1
  6153 ;; This function calls:
  6154 ;;		Nothing
  6155 ;; This function is called by:
  6156 ;;		_main
  6157 ;;		_Display_D3
  6158 ;; This function uses a non-reentrant model
  6159 ;;
  6160                           
  6161                           	psect	text30
  6162  002DB6                     __ptext30:
  6163                           	opt stack 0
  6164  002DB6                     _WAIT_1_SEC:
  6165                           	opt stack 30
  6166                           
  6167                           ;Lab5p2.c: 138: for(int j = 0; j<17000; j++);
  6168                           
  6169                           ;incstack = 0
  6170  002DB6  0E00               	movlw	0
  6171  002DB8  6E02               	movwf	WAIT_1_SEC@j+1,c
  6172  002DBA  0E00               	movlw	0
  6173  002DBC  6E01               	movwf	WAIT_1_SEC@j,c
  6174  002DBE                     l1179:
  6175  002DBE  BE02               	btfsc	WAIT_1_SEC@j+1,7,c
  6176  002DC0  D008               	goto	l1183
  6177  002DC2  0E68               	movlw	104
  6178  002DC4  5C01               	subwf	WAIT_1_SEC@j,w,c
  6179  002DC6  0E42               	movlw	66
  6180  002DC8  5802               	subwfb	WAIT_1_SEC@j+1,w,c
  6181  002DCA  B0D8               	btfsc	status,0,c
  6182  002DCC  D005               	goto	l117
  6183  002DCE  D001               	goto	l1183
  6184  002DD0  D003               	goto	l117
  6185  002DD2                     l1183:
  6186  002DD2  4A01               	infsnz	WAIT_1_SEC@j,f,c
  6187  002DD4  2A02               	incf	WAIT_1_SEC@j+1,f,c
  6188  002DD6  D7F3               	goto	l1179
  6189  002DD8                     l117:
  6190  002DD8  0012               	return		;funcret
  6191  002DDA                     __end_of_WAIT_1_SEC:
  6192                           	opt stack 0
  6193                           tblptru	equ	0xFF8
  6194                           tblptrh	equ	0xFF7
  6195                           tblptrl	equ	0xFF6
  6196                           tablat	equ	0xFF5
  6197                           prodh	equ	0xFF4
  6198                           prodl	equ	0xFF3
  6199                           postinc0	equ	0xFEE
  6200                           wreg	equ	0xFE8
  6201                           postdec1	equ	0xFE5
  6202                           fsr1l	equ	0xFE1
  6203                           indf2	equ	0xFDF
  6204                           postinc2	equ	0xFDE
  6205                           postdec2	equ	0xFDD
  6206                           fsr2h	equ	0xFDA
  6207                           fsr2l	equ	0xFD9
  6208                           status	equ	0xFD8
  6209                           
  6210 ;; *************** function _Display_D2 *****************
  6211 ;; Defined at:
  6212 ;;		line 162 in file "Lab5p2.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;  temperature     2   14[COMRAM] int 
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;		None
  6217 ;; Return value:  Size  Location     Type
  6218 ;;		None               void
  6219 ;; Registers used:
  6220 ;;		wreg, status,2, status,0, cstack
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6226 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6229 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6230 ;;Total ram usage:        2 bytes
  6231 ;; Hardware stack levels used:    1
  6232 ;; Hardware stack levels required when called:    1
  6233 ;; This function calls:
  6234 ;;		_D2_None
  6235 ;;		_D2_White
  6236 ;;		___awdiv
  6237 ;; This function is called by:
  6238 ;;		_main
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           	psect	text31
  6243  002BD0                     __ptext31:
  6244                           	opt stack 0
  6245  002BD0                     _Display_D2:
  6246                           	opt stack 29
  6247                           
  6248                           ;Lab5p2.c: 164: if (temperature > 70) D2_White();
  6249                           
  6250                           ;incstack = 0
  6251  002BD0  BE10               	btfsc	Display_D2@temperature+1,7,c
  6252  002BD2  D009               	goto	l2539
  6253  002BD4  5010               	movf	Display_D2@temperature+1,w,c
  6254  002BD6  E104               	bnz	u2580
  6255  002BD8  0E47               	movlw	71
  6256  002BDA  5C0F               	subwf	Display_D2@temperature,w,c
  6257  002BDC  A0D8               	btfss	status,0,c
  6258  002BDE  D003               	goto	l2539
  6259  002BE0                     u2580:
  6260  002BE0  EC25  F017         	call	_D2_White	;wreg free
  6261  002BE4  D017               	goto	l144
  6262  002BE6                     l2539:
  6263                           
  6264                           ;Lab5p2.c: 166: else if (temperature <=0) D2_None();
  6265  002BE6  BE10               	btfsc	Display_D2@temperature+1,7,c
  6266  002BE8  D005               	goto	l2541
  6267  002BEA  5010               	movf	Display_D2@temperature+1,w,c
  6268  002BEC  E106               	bnz	l2543
  6269  002BEE  040F               	decf	Display_D2@temperature,w,c
  6270  002BF0  B0D8               	btfsc	status,0,c
  6271  002BF2  D003               	goto	l2543
  6272  002BF4                     l2541:
  6273  002BF4  EC29  F017         	call	_D2_None	;wreg free
  6274  002BF8  D00D               	goto	l144
  6275  002BFA                     l2543:
  6276                           
  6277                           ;Lab5p2.c: 167: else (PORTB = temperature/10);
  6278  002BFA  C00F  F007         	movff	Display_D2@temperature,___awdiv@dividend
  6279  002BFE  C010  F008         	movff	Display_D2@temperature+1,___awdiv@dividend+1
  6280  002C02  0E00               	movlw	0
  6281  002C04  6E0A               	movwf	___awdiv@divisor+1,c
  6282  002C06  0E0A               	movlw	10
  6283  002C08  6E09               	movwf	___awdiv@divisor,c
  6284  002C0A  EC76  F014         	call	___awdiv	;wreg free
  6285  002C0E  5007               	movf	?___awdiv,w,c
  6286  002C10  6E81               	movwf	3969,c	;volatile
  6287  002C12  D000               	goto	l144
  6288  002C14                     l144:
  6289  002C14  0012               	return		;funcret
  6290  002C16                     __end_of_Display_D2:
  6291                           	opt stack 0
  6292                           tblptru	equ	0xFF8
  6293                           tblptrh	equ	0xFF7
  6294                           tblptrl	equ	0xFF6
  6295                           tablat	equ	0xFF5
  6296                           prodh	equ	0xFF4
  6297                           prodl	equ	0xFF3
  6298                           postinc0	equ	0xFEE
  6299                           wreg	equ	0xFE8
  6300                           postdec1	equ	0xFE5
  6301                           fsr1l	equ	0xFE1
  6302                           indf2	equ	0xFDF
  6303                           postinc2	equ	0xFDE
  6304                           postdec2	equ	0xFDD
  6305                           fsr2h	equ	0xFDA
  6306                           fsr2l	equ	0xFD9
  6307                           status	equ	0xFD8
  6308                           
  6309 ;; *************** function ___awdiv *****************
  6310 ;; Defined at:
  6311 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\awdiv.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;  dividend        2    6[COMRAM] int 
  6314 ;;  divisor         2    8[COMRAM] int 
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;  quotient        2   12[COMRAM] int 
  6317 ;;  sign            1   11[COMRAM] unsigned char 
  6318 ;;  counter         1   10[COMRAM] unsigned char 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  2    6[COMRAM] int 
  6321 ;; Registers used:
  6322 ;;		wreg, status,2, status,0
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6329 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6331 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6332 ;;Total ram usage:        8 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; This function calls:
  6335 ;;		Nothing
  6336 ;; This function is called by:
  6337 ;;		_main
  6338 ;;		_Display_D2
  6339 ;;		_fround
  6340 ;;		_scale
  6341 ;;		_printf
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           	psect	text32
  6346  0028EC                     __ptext32:
  6347                           	opt stack 0
  6348  0028EC                     ___awdiv:
  6349                           	opt stack 28
  6350                           
  6351                           ;incstack = 0
  6352  0028EC  0E00               	movlw	0
  6353  0028EE  6E0C               	movwf	___awdiv@sign,c
  6354  0028F0  AE0A               	btfss	___awdiv@divisor+1,7,c
  6355  0028F2  D007               	goto	l2097
  6356  0028F4  6C09               	negf	___awdiv@divisor,c
  6357  0028F6  1E0A               	comf	___awdiv@divisor+1,f,c
  6358  0028F8  B0D8               	btfsc	status,0,c
  6359  0028FA  2A0A               	incf	___awdiv@divisor+1,f,c
  6360  0028FC  0E01               	movlw	1
  6361  0028FE  6E0C               	movwf	___awdiv@sign,c
  6362  002900  D000               	goto	l2097
  6363  002902                     l2097:
  6364  002902  AE08               	btfss	___awdiv@dividend+1,7,c
  6365  002904  D007               	goto	l2103
  6366  002906  6C07               	negf	___awdiv@dividend,c
  6367  002908  1E08               	comf	___awdiv@dividend+1,f,c
  6368  00290A  B0D8               	btfsc	status,0,c
  6369  00290C  2A08               	incf	___awdiv@dividend+1,f,c
  6370  00290E  0E01               	movlw	1
  6371  002910  1A0C               	xorwf	___awdiv@sign,f,c
  6372  002912  D000               	goto	l2103
  6373  002914                     l2103:
  6374  002914  0E00               	movlw	0
  6375  002916  6E0E               	movwf	___awdiv@quotient+1,c
  6376  002918  0E00               	movlw	0
  6377  00291A  6E0D               	movwf	___awdiv@quotient,c
  6378  00291C  5009               	movf	___awdiv@divisor,w,c
  6379  00291E  100A               	iorwf	___awdiv@divisor+1,w,c
  6380  002920  B4D8               	btfsc	status,2,c
  6381  002922  D021               	goto	l2125
  6382  002924  0E01               	movlw	1
  6383  002926  6E0B               	movwf	___awdiv@counter,c
  6384  002928  D005               	goto	l2111
  6385  00292A                     l2109:
  6386  00292A  90D8               	bcf	status,0,c
  6387  00292C  3609               	rlcf	___awdiv@divisor,f,c
  6388  00292E  360A               	rlcf	___awdiv@divisor+1,f,c
  6389  002930  2A0B               	incf	___awdiv@counter,f,c
  6390  002932  D000               	goto	l2111
  6391  002934                     l2111:
  6392  002934  BE0A               	btfsc	___awdiv@divisor+1,7,c
  6393  002936  D002               	goto	l2113
  6394  002938  D7F8               	goto	l2109
  6395  00293A  D000               	goto	l2113
  6396  00293C                     l2113:
  6397  00293C  90D8               	bcf	status,0,c
  6398  00293E  360D               	rlcf	___awdiv@quotient,f,c
  6399  002940  360E               	rlcf	___awdiv@quotient+1,f,c
  6400  002942  5009               	movf	___awdiv@divisor,w,c
  6401  002944  5C07               	subwf	___awdiv@dividend,w,c
  6402  002946  500A               	movf	___awdiv@divisor+1,w,c
  6403  002948  5808               	subwfb	___awdiv@dividend+1,w,c
  6404  00294A  A0D8               	btfss	status,0,c
  6405  00294C  D006               	goto	l2121
  6406  00294E  5009               	movf	___awdiv@divisor,w,c
  6407  002950  5E07               	subwf	___awdiv@dividend,f,c
  6408  002952  500A               	movf	___awdiv@divisor+1,w,c
  6409  002954  5A08               	subwfb	___awdiv@dividend+1,f,c
  6410  002956  800D               	bsf	___awdiv@quotient,0,c
  6411  002958  D000               	goto	l2121
  6412  00295A                     l2121:
  6413  00295A  90D8               	bcf	status,0,c
  6414  00295C  320A               	rrcf	___awdiv@divisor+1,f,c
  6415  00295E  3209               	rrcf	___awdiv@divisor,f,c
  6416  002960  2E0B               	decfsz	___awdiv@counter,f,c
  6417  002962  D7EC               	goto	l2113
  6418  002964  D000               	goto	l2125
  6419  002966                     l2125:
  6420  002966  500C               	movf	___awdiv@sign,w,c
  6421  002968  B4D8               	btfsc	status,2,c
  6422  00296A  D005               	goto	l2129
  6423  00296C  6C0D               	negf	___awdiv@quotient,c
  6424  00296E  1E0E               	comf	___awdiv@quotient+1,f,c
  6425  002970  B0D8               	btfsc	status,0,c
  6426  002972  2A0E               	incf	___awdiv@quotient+1,f,c
  6427  002974  D000               	goto	l2129
  6428  002976                     l2129:
  6429  002976  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  6430  00297A  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  6431  00297E  D000               	goto	l493
  6432  002980                     l493:
  6433  002980  0012               	return		;funcret
  6434  002982                     __end_of___awdiv:
  6435                           	opt stack 0
  6436                           tblptru	equ	0xFF8
  6437                           tblptrh	equ	0xFF7
  6438                           tblptrl	equ	0xFF6
  6439                           tablat	equ	0xFF5
  6440                           prodh	equ	0xFF4
  6441                           prodl	equ	0xFF3
  6442                           postinc0	equ	0xFEE
  6443                           wreg	equ	0xFE8
  6444                           postdec1	equ	0xFE5
  6445                           fsr1l	equ	0xFE1
  6446                           indf2	equ	0xFDF
  6447                           postinc2	equ	0xFDE
  6448                           postdec2	equ	0xFDD
  6449                           fsr2h	equ	0xFDA
  6450                           fsr2l	equ	0xFD9
  6451                           status	equ	0xFD8
  6452                           
  6453 ;; *************** function _D2_White *****************
  6454 ;; Defined at:
  6455 ;;		line 224 in file "Lab5p2.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;		None
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;		None
  6460 ;; Return value:  Size  Location     Type
  6461 ;;		None               void
  6462 ;; Registers used:
  6463 ;;		None
  6464 ;; Tracked objects:
  6465 ;;		On entry : 0/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6473 ;;Total ram usage:        0 bytes
  6474 ;; Hardware stack levels used:    1
  6475 ;; This function calls:
  6476 ;;		Nothing
  6477 ;; This function is called by:
  6478 ;;		_Display_D2
  6479 ;; This function uses a non-reentrant model
  6480 ;;
  6481                           
  6482                           	psect	text33
  6483  002E4A                     __ptext33:
  6484                           	opt stack 0
  6485  002E4A                     _D2_White:
  6486                           	opt stack 29
  6487                           
  6488                           ;Lab5p2.c: 226: PORTBbits.RB0 = 1;
  6489                           
  6490                           ;incstack = 0
  6491  002E4A  8081               	bsf	3969,0,c	;volatile
  6492                           
  6493                           ;Lab5p2.c: 227: PORTBbits.RB1 = 1;
  6494  002E4C  8281               	bsf	3969,1,c	;volatile
  6495                           
  6496                           ;Lab5p2.c: 228: PORTBbits.RB2 = 1;
  6497  002E4E  8481               	bsf	3969,2,c	;volatile
  6498  002E50  0012               	return		;funcret
  6499  002E52                     __end_of_D2_White:
  6500                           	opt stack 0
  6501                           tblptru	equ	0xFF8
  6502                           tblptrh	equ	0xFF7
  6503                           tblptrl	equ	0xFF6
  6504                           tablat	equ	0xFF5
  6505                           prodh	equ	0xFF4
  6506                           prodl	equ	0xFF3
  6507                           postinc0	equ	0xFEE
  6508                           wreg	equ	0xFE8
  6509                           postdec1	equ	0xFE5
  6510                           fsr1l	equ	0xFE1
  6511                           indf2	equ	0xFDF
  6512                           postinc2	equ	0xFDE
  6513                           postdec2	equ	0xFDD
  6514                           fsr2h	equ	0xFDA
  6515                           fsr2l	equ	0xFD9
  6516                           status	equ	0xFD8
  6517                           
  6518 ;; *************** function _D2_None *****************
  6519 ;; Defined at:
  6520 ;;		line 217 in file "Lab5p2.c"
  6521 ;; Parameters:    Size  Location     Type
  6522 ;;		None
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;		None
  6525 ;; Return value:  Size  Location     Type
  6526 ;;		None               void
  6527 ;; Registers used:
  6528 ;;		None
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6538 ;;Total ram usage:        0 bytes
  6539 ;; Hardware stack levels used:    1
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_Display_D2
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           	psect	text34
  6548  002E52                     __ptext34:
  6549                           	opt stack 0
  6550  002E52                     _D2_None:
  6551                           	opt stack 29
  6552                           
  6553                           ;Lab5p2.c: 219: PORTBbits.RB0 = 0;
  6554                           
  6555                           ;incstack = 0
  6556  002E52  9081               	bcf	3969,0,c	;volatile
  6557                           
  6558                           ;Lab5p2.c: 220: PORTBbits.RB1 = 0;
  6559  002E54  9281               	bcf	3969,1,c	;volatile
  6560                           
  6561                           ;Lab5p2.c: 221: PORTBbits.RB2 = 0;
  6562  002E56  9481               	bcf	3969,2,c	;volatile
  6563  002E58  0012               	return		;funcret
  6564  002E5A                     __end_of_D2_None:
  6565                           	opt stack 0
  6566                           tblptru	equ	0xFF8
  6567                           tblptrh	equ	0xFF7
  6568                           tblptrl	equ	0xFF6
  6569                           tablat	equ	0xFF5
  6570                           prodh	equ	0xFF4
  6571                           prodl	equ	0xFF3
  6572                           postinc0	equ	0xFEE
  6573                           wreg	equ	0xFE8
  6574                           postdec1	equ	0xFE5
  6575                           fsr1l	equ	0xFE1
  6576                           indf2	equ	0xFDF
  6577                           postinc2	equ	0xFDE
  6578                           postdec2	equ	0xFDD
  6579                           fsr2h	equ	0xFDA
  6580                           fsr2l	equ	0xFD9
  6581                           status	equ	0xFD8
  6582                           
  6583 ;; *************** function _Display_D1 *****************
  6584 ;; Defined at:
  6585 ;;		line 154 in file "Lab5p2.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;  temperature     2    0[COMRAM] int 
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;		None
  6590 ;; Return value:  Size  Location     Type
  6591 ;;		None               void
  6592 ;; Registers used:
  6593 ;;		wreg, status,2, status,0, cstack
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6599 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6602 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6603 ;;Total ram usage:        2 bytes
  6604 ;; Hardware stack levels used:    1
  6605 ;; Hardware stack levels required when called:    1
  6606 ;; This function calls:
  6607 ;;		_D1_Blue
  6608 ;;		_D1_Green
  6609 ;;		_D1_None
  6610 ;;		_D1_Red
  6611 ;;		_D1_White
  6612 ;; This function is called by:
  6613 ;;		_main
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617                           	psect	text35
  6618  0027B6                     __ptext35:
  6619                           	opt stack 0
  6620  0027B6                     _Display_D1:
  6621                           	opt stack 29
  6622                           
  6623                           ;Lab5p2.c: 155: if(temperature <= 45) D1_None();
  6624                           
  6625                           ;incstack = 0
  6626  0027B6  BE02               	btfsc	Display_D1@temperature+1,7,c
  6627  0027B8  D006               	goto	l2547
  6628  0027BA  5002               	movf	Display_D1@temperature+1,w,c
  6629  0027BC  E107               	bnz	l2549
  6630  0027BE  0E2E               	movlw	46
  6631  0027C0  5C01               	subwf	Display_D1@temperature,w,c
  6632  0027C2  B0D8               	btfsc	status,0,c
  6633  0027C4  D003               	goto	l2549
  6634  0027C6                     l2547:
  6635  0027C6  EC35  F017         	call	_D1_None	;wreg free
  6636  0027CA  D044               	goto	l137
  6637  0027CC                     l2549:
  6638                           
  6639                           ;Lab5p2.c: 156: else if(temperature >= 46 && temperature<= 55) D1_Red();
  6640  0027CC  BE02               	btfsc	Display_D1@temperature+1,7,c
  6641  0027CE  D011               	goto	l2555
  6642  0027D0  5002               	movf	Display_D1@temperature+1,w,c
  6643  0027D2  E104               	bnz	u2610
  6644  0027D4  0E2E               	movlw	46
  6645  0027D6  5C01               	subwf	Display_D1@temperature,w,c
  6646  0027D8  A0D8               	btfss	status,0,c
  6647  0027DA  D00B               	goto	l2555
  6648  0027DC                     u2610:
  6649  0027DC  BE02               	btfsc	Display_D1@temperature+1,7,c
  6650  0027DE  D006               	goto	l2553
  6651  0027E0  5002               	movf	Display_D1@temperature+1,w,c
  6652  0027E2  E107               	bnz	l2555
  6653  0027E4  0E38               	movlw	56
  6654  0027E6  5C01               	subwf	Display_D1@temperature,w,c
  6655  0027E8  B0D8               	btfsc	status,0,c
  6656  0027EA  D003               	goto	l2555
  6657  0027EC                     l2553:
  6658  0027EC  EC31  F017         	call	_D1_Red	;wreg free
  6659  0027F0  D031               	goto	l137
  6660  0027F2                     l2555:
  6661                           
  6662                           ;Lab5p2.c: 157: else if(temperature >= 56 && temperature<= 65) D1_Green();
  6663  0027F2  BE02               	btfsc	Display_D1@temperature+1,7,c
  6664  0027F4  D011               	goto	l2561
  6665  0027F6  5002               	movf	Display_D1@temperature+1,w,c
  6666  0027F8  E104               	bnz	u2630
  6667  0027FA  0E38               	movlw	56
  6668  0027FC  5C01               	subwf	Display_D1@temperature,w,c
  6669  0027FE  A0D8               	btfss	status,0,c
  6670  002800  D00B               	goto	l2561
  6671  002802                     u2630:
  6672  002802  BE02               	btfsc	Display_D1@temperature+1,7,c
  6673  002804  D006               	goto	l2559
  6674  002806  5002               	movf	Display_D1@temperature+1,w,c
  6675  002808  E107               	bnz	l2561
  6676  00280A  0E42               	movlw	66
  6677  00280C  5C01               	subwf	Display_D1@temperature,w,c
  6678  00280E  B0D8               	btfsc	status,0,c
  6679  002810  D003               	goto	l2561
  6680  002812                     l2559:
  6681  002812  EC39  F017         	call	_D1_Green	;wreg free
  6682  002816  D01E               	goto	l137
  6683  002818                     l2561:
  6684                           
  6685                           ;Lab5p2.c: 158: else if(temperature >= 66 && temperature <= 75) D1_Blue();
  6686  002818  BE02               	btfsc	Display_D1@temperature+1,7,c
  6687  00281A  D011               	goto	l2567
  6688  00281C  5002               	movf	Display_D1@temperature+1,w,c
  6689  00281E  E104               	bnz	u2650
  6690  002820  0E42               	movlw	66
  6691  002822  5C01               	subwf	Display_D1@temperature,w,c
  6692  002824  A0D8               	btfss	status,0,c
  6693  002826  D00B               	goto	l2567
  6694  002828                     u2650:
  6695  002828  BE02               	btfsc	Display_D1@temperature+1,7,c
  6696  00282A  D006               	goto	l2565
  6697  00282C  5002               	movf	Display_D1@temperature+1,w,c
  6698  00282E  E107               	bnz	l2567
  6699  002830  0E4C               	movlw	76
  6700  002832  5C01               	subwf	Display_D1@temperature,w,c
  6701  002834  B0D8               	btfsc	status,0,c
  6702  002836  D003               	goto	l2567
  6703  002838                     l2565:
  6704  002838  EC3D  F017         	call	_D1_Blue	;wreg free
  6705  00283C  D00B               	goto	l137
  6706  00283E                     l2567:
  6707                           
  6708                           ;Lab5p2.c: 159: else if(temperature >= 76) D1_White();
  6709  00283E  BE02               	btfsc	Display_D1@temperature+1,7,c
  6710  002840  D009               	goto	l137
  6711  002842  5002               	movf	Display_D1@temperature+1,w,c
  6712  002844  E104               	bnz	u2670
  6713  002846  0E4C               	movlw	76
  6714  002848  5C01               	subwf	Display_D1@temperature,w,c
  6715  00284A  A0D8               	btfss	status,0,c
  6716  00284C  D003               	goto	l137
  6717  00284E                     u2670:
  6718  00284E  EC2D  F017         	call	_D1_White	;wreg free
  6719  002852  D000               	goto	l137
  6720  002854                     l137:
  6721  002854  0012               	return		;funcret
  6722  002856                     __end_of_Display_D1:
  6723                           	opt stack 0
  6724                           tblptru	equ	0xFF8
  6725                           tblptrh	equ	0xFF7
  6726                           tblptrl	equ	0xFF6
  6727                           tablat	equ	0xFF5
  6728                           prodh	equ	0xFF4
  6729                           prodl	equ	0xFF3
  6730                           postinc0	equ	0xFEE
  6731                           wreg	equ	0xFE8
  6732                           postdec1	equ	0xFE5
  6733                           fsr1l	equ	0xFE1
  6734                           indf2	equ	0xFDF
  6735                           postinc2	equ	0xFDE
  6736                           postdec2	equ	0xFDD
  6737                           fsr2h	equ	0xFDA
  6738                           fsr2l	equ	0xFD9
  6739                           status	equ	0xFD8
  6740                           
  6741 ;; *************** function _D1_White *****************
  6742 ;; Defined at:
  6743 ;;		line 210 in file "Lab5p2.c"
  6744 ;; Parameters:    Size  Location     Type
  6745 ;;		None
  6746 ;; Auto vars:     Size  Location     Type
  6747 ;;		None
  6748 ;; Return value:  Size  Location     Type
  6749 ;;		None               void
  6750 ;; Registers used:
  6751 ;;		None
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6761 ;;Total ram usage:        0 bytes
  6762 ;; Hardware stack levels used:    1
  6763 ;; This function calls:
  6764 ;;		Nothing
  6765 ;; This function is called by:
  6766 ;;		_Display_D1
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770                           	psect	text36
  6771  002E5A                     __ptext36:
  6772                           	opt stack 0
  6773  002E5A                     _D1_White:
  6774                           	opt stack 29
  6775                           
  6776                           ;Lab5p2.c: 212: PORTBbits.RB5 = 1;
  6777                           
  6778                           ;incstack = 0
  6779  002E5A  8A81               	bsf	3969,5,c	;volatile
  6780                           
  6781                           ;Lab5p2.c: 213: PORTBbits.RB6 = 1;
  6782  002E5C  8C81               	bsf	3969,6,c	;volatile
  6783                           
  6784                           ;Lab5p2.c: 214: PORTBbits.RB7 = 1;
  6785  002E5E  8E81               	bsf	3969,7,c	;volatile
  6786  002E60  0012               	return		;funcret
  6787  002E62                     __end_of_D1_White:
  6788                           	opt stack 0
  6789                           tblptru	equ	0xFF8
  6790                           tblptrh	equ	0xFF7
  6791                           tblptrl	equ	0xFF6
  6792                           tablat	equ	0xFF5
  6793                           prodh	equ	0xFF4
  6794                           prodl	equ	0xFF3
  6795                           postinc0	equ	0xFEE
  6796                           wreg	equ	0xFE8
  6797                           postdec1	equ	0xFE5
  6798                           fsr1l	equ	0xFE1
  6799                           indf2	equ	0xFDF
  6800                           postinc2	equ	0xFDE
  6801                           postdec2	equ	0xFDD
  6802                           fsr2h	equ	0xFDA
  6803                           fsr2l	equ	0xFD9
  6804                           status	equ	0xFD8
  6805                           
  6806 ;; *************** function _D1_Red *****************
  6807 ;; Defined at:
  6808 ;;		line 189 in file "Lab5p2.c"
  6809 ;; Parameters:    Size  Location     Type
  6810 ;;		None
  6811 ;; Auto vars:     Size  Location     Type
  6812 ;;		None
  6813 ;; Return value:  Size  Location     Type
  6814 ;;		None               void
  6815 ;; Registers used:
  6816 ;;		None
  6817 ;; Tracked objects:
  6818 ;;		On entry : 0/0
  6819 ;;		On exit  : 0/0
  6820 ;;		Unchanged: 0/0
  6821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6826 ;;Total ram usage:        0 bytes
  6827 ;; Hardware stack levels used:    1
  6828 ;; This function calls:
  6829 ;;		Nothing
  6830 ;; This function is called by:
  6831 ;;		_Display_D1
  6832 ;; This function uses a non-reentrant model
  6833 ;;
  6834                           
  6835                           	psect	text37
  6836  002E62                     __ptext37:
  6837                           	opt stack 0
  6838  002E62                     _D1_Red:
  6839                           	opt stack 29
  6840                           
  6841                           ;Lab5p2.c: 191: PORTBbits.RB5 = 1;
  6842                           
  6843                           ;incstack = 0
  6844  002E62  8A81               	bsf	3969,5,c	;volatile
  6845                           
  6846                           ;Lab5p2.c: 192: PORTBbits.RB6 = 0;
  6847  002E64  9C81               	bcf	3969,6,c	;volatile
  6848                           
  6849                           ;Lab5p2.c: 193: PORTBbits.RB7 = 0;
  6850  002E66  9E81               	bcf	3969,7,c	;volatile
  6851  002E68  0012               	return		;funcret
  6852  002E6A                     __end_of_D1_Red:
  6853                           	opt stack 0
  6854                           tblptru	equ	0xFF8
  6855                           tblptrh	equ	0xFF7
  6856                           tblptrl	equ	0xFF6
  6857                           tablat	equ	0xFF5
  6858                           prodh	equ	0xFF4
  6859                           prodl	equ	0xFF3
  6860                           postinc0	equ	0xFEE
  6861                           wreg	equ	0xFE8
  6862                           postdec1	equ	0xFE5
  6863                           fsr1l	equ	0xFE1
  6864                           indf2	equ	0xFDF
  6865                           postinc2	equ	0xFDE
  6866                           postdec2	equ	0xFDD
  6867                           fsr2h	equ	0xFDA
  6868                           fsr2l	equ	0xFD9
  6869                           status	equ	0xFD8
  6870                           
  6871 ;; *************** function _D1_None *****************
  6872 ;; Defined at:
  6873 ;;		line 182 in file "Lab5p2.c"
  6874 ;; Parameters:    Size  Location     Type
  6875 ;;		None
  6876 ;; Auto vars:     Size  Location     Type
  6877 ;;		None
  6878 ;; Return value:  Size  Location     Type
  6879 ;;		None               void
  6880 ;; Registers used:
  6881 ;;		None
  6882 ;; Tracked objects:
  6883 ;;		On entry : 0/0
  6884 ;;		On exit  : 0/0
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6891 ;;Total ram usage:        0 bytes
  6892 ;; Hardware stack levels used:    1
  6893 ;; This function calls:
  6894 ;;		Nothing
  6895 ;; This function is called by:
  6896 ;;		_Display_D1
  6897 ;; This function uses a non-reentrant model
  6898 ;;
  6899                           
  6900                           	psect	text38
  6901  002E6A                     __ptext38:
  6902                           	opt stack 0
  6903  002E6A                     _D1_None:
  6904                           	opt stack 29
  6905                           
  6906                           ;Lab5p2.c: 184: PORTBbits.RB5 = 0;
  6907                           
  6908                           ;incstack = 0
  6909  002E6A  9A81               	bcf	3969,5,c	;volatile
  6910                           
  6911                           ;Lab5p2.c: 185: PORTBbits.RB6 = 0;
  6912  002E6C  9C81               	bcf	3969,6,c	;volatile
  6913                           
  6914                           ;Lab5p2.c: 186: PORTBbits.RB7 = 0;
  6915  002E6E  9E81               	bcf	3969,7,c	;volatile
  6916  002E70  0012               	return		;funcret
  6917  002E72                     __end_of_D1_None:
  6918                           	opt stack 0
  6919                           tblptru	equ	0xFF8
  6920                           tblptrh	equ	0xFF7
  6921                           tblptrl	equ	0xFF6
  6922                           tablat	equ	0xFF5
  6923                           prodh	equ	0xFF4
  6924                           prodl	equ	0xFF3
  6925                           postinc0	equ	0xFEE
  6926                           wreg	equ	0xFE8
  6927                           postdec1	equ	0xFE5
  6928                           fsr1l	equ	0xFE1
  6929                           indf2	equ	0xFDF
  6930                           postinc2	equ	0xFDE
  6931                           postdec2	equ	0xFDD
  6932                           fsr2h	equ	0xFDA
  6933                           fsr2l	equ	0xFD9
  6934                           status	equ	0xFD8
  6935                           
  6936 ;; *************** function _D1_Green *****************
  6937 ;; Defined at:
  6938 ;;		line 196 in file "Lab5p2.c"
  6939 ;; Parameters:    Size  Location     Type
  6940 ;;		None
  6941 ;; Auto vars:     Size  Location     Type
  6942 ;;		None
  6943 ;; Return value:  Size  Location     Type
  6944 ;;		None               void
  6945 ;; Registers used:
  6946 ;;		None
  6947 ;; Tracked objects:
  6948 ;;		On entry : 0/0
  6949 ;;		On exit  : 0/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6956 ;;Total ram usage:        0 bytes
  6957 ;; Hardware stack levels used:    1
  6958 ;; This function calls:
  6959 ;;		Nothing
  6960 ;; This function is called by:
  6961 ;;		_Display_D1
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           	psect	text39
  6966  002E72                     __ptext39:
  6967                           	opt stack 0
  6968  002E72                     _D1_Green:
  6969                           	opt stack 29
  6970                           
  6971                           ;Lab5p2.c: 198: PORTBbits.RB5 = 0;
  6972                           
  6973                           ;incstack = 0
  6974  002E72  9A81               	bcf	3969,5,c	;volatile
  6975                           
  6976                           ;Lab5p2.c: 199: PORTBbits.RB6 = 1;
  6977  002E74  8C81               	bsf	3969,6,c	;volatile
  6978                           
  6979                           ;Lab5p2.c: 200: PORTBbits.RB7 = 0;
  6980  002E76  9E81               	bcf	3969,7,c	;volatile
  6981  002E78  0012               	return		;funcret
  6982  002E7A                     __end_of_D1_Green:
  6983                           	opt stack 0
  6984                           tblptru	equ	0xFF8
  6985                           tblptrh	equ	0xFF7
  6986                           tblptrl	equ	0xFF6
  6987                           tablat	equ	0xFF5
  6988                           prodh	equ	0xFF4
  6989                           prodl	equ	0xFF3
  6990                           postinc0	equ	0xFEE
  6991                           wreg	equ	0xFE8
  6992                           postdec1	equ	0xFE5
  6993                           fsr1l	equ	0xFE1
  6994                           indf2	equ	0xFDF
  6995                           postinc2	equ	0xFDE
  6996                           postdec2	equ	0xFDD
  6997                           fsr2h	equ	0xFDA
  6998                           fsr2l	equ	0xFD9
  6999                           status	equ	0xFD8
  7000                           
  7001 ;; *************** function _D1_Blue *****************
  7002 ;; Defined at:
  7003 ;;		line 203 in file "Lab5p2.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;		None
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;		None
  7008 ;; Return value:  Size  Location     Type
  7009 ;;		None               void
  7010 ;; Registers used:
  7011 ;;		None
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7021 ;;Total ram usage:        0 bytes
  7022 ;; Hardware stack levels used:    1
  7023 ;; This function calls:
  7024 ;;		Nothing
  7025 ;; This function is called by:
  7026 ;;		_Display_D1
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           	psect	text40
  7031  002E7A                     __ptext40:
  7032                           	opt stack 0
  7033  002E7A                     _D1_Blue:
  7034                           	opt stack 29
  7035                           
  7036                           ;Lab5p2.c: 205: PORTBbits.RB5 = 0;
  7037                           
  7038                           ;incstack = 0
  7039  002E7A  9A81               	bcf	3969,5,c	;volatile
  7040                           
  7041                           ;Lab5p2.c: 206: PORTBbits.RB6 = 0;
  7042  002E7C  9C81               	bcf	3969,6,c	;volatile
  7043                           
  7044                           ;Lab5p2.c: 207: PORTBbits.RB7 = 1;
  7045  002E7E  8E81               	bsf	3969,7,c	;volatile
  7046  002E80  0012               	return		;funcret
  7047  002E82                     __end_of_D1_Blue:
  7048                           	opt stack 0
  7049                           tblptru	equ	0xFF8
  7050                           tblptrh	equ	0xFF7
  7051                           tblptrl	equ	0xFF6
  7052                           tablat	equ	0xFF5
  7053                           prodh	equ	0xFF4
  7054                           prodl	equ	0xFF3
  7055                           postinc0	equ	0xFEE
  7056                           wreg	equ	0xFE8
  7057                           postdec1	equ	0xFE5
  7058                           fsr1l	equ	0xFE1
  7059                           indf2	equ	0xFDF
  7060                           postinc2	equ	0xFDE
  7061                           postdec2	equ	0xFDD
  7062                           fsr2h	equ	0xFDA
  7063                           fsr2l	equ	0xFD9
  7064                           status	equ	0xFD8
  7065                           tblptru	equ	0xFF8
  7066                           tblptrh	equ	0xFF7
  7067                           tblptrl	equ	0xFF6
  7068                           tablat	equ	0xFF5
  7069                           prodh	equ	0xFF4
  7070                           prodl	equ	0xFF3
  7071                           postinc0	equ	0xFEE
  7072                           wreg	equ	0xFE8
  7073                           postdec1	equ	0xFE5
  7074                           fsr1l	equ	0xFE1
  7075                           indf2	equ	0xFDF
  7076                           postinc2	equ	0xFDE
  7077                           postdec2	equ	0xFDD
  7078                           fsr2h	equ	0xFDA
  7079                           fsr2l	equ	0xFD9
  7080                           status	equ	0xFD8
  7081                           
  7082                           	psect	rparam
  7083  0000                     tblptru	equ	0xFF8
  7084                           tblptrh	equ	0xFF7
  7085                           tblptrl	equ	0xFF6
  7086                           tablat	equ	0xFF5
  7087                           prodh	equ	0xFF4
  7088                           prodl	equ	0xFF3
  7089                           postinc0	equ	0xFEE
  7090                           wreg	equ	0xFE8
  7091                           postdec1	equ	0xFE5
  7092                           fsr1l	equ	0xFE1
  7093                           indf2	equ	0xFDF
  7094                           postinc2	equ	0xFDE
  7095                           postdec2	equ	0xFDD
  7096                           fsr2h	equ	0xFDA
  7097                           fsr2l	equ	0xFD9
  7098                           status	equ	0xFD8


Data Sizes:
    Strings     68
    Constant    118
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    117     127
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[23]), STR_3(CODE[16]), STR_2(CODE[15]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _init_UART->_OpenUSART
    ___ftdiv->___ftadd
    ___awtoft->___ftpack
    _Display_D3->___fttol
    _Display_D2->___awdiv
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   56601
                                             97 COMRAM    20    20      0
                         _Display_D1
                         _Display_D2
                         _Display_D3
                _Display_Lower_Digit
                _Display_Upper_Digit
                           _Init_ADC
                          _Init_Tris
                 _Select_ADC_Channel
                         _WAIT_1_SEC
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                       _get_full_ADC
                          _init_UART
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   38975
                                             63 COMRAM    34    29      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    9226
                                             35 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    9028
                                             35 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1855
                                             14 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3954
                                             20 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1356
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     552
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1868
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     583
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     480
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     517
                                             42 COMRAM    15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3343
                                             57 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3090
                                             45 COMRAM    12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     151
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     454
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _get_full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2212
                                             57 COMRAM    15     9      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1943
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Select_ADC_Channel                                   1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_Tris                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display_Upper_Digit                                  2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Display_Lower_Digit                                  1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Display_D3                                           2     0      2     149
                                             57 COMRAM     2     0      2
                         _WAIT_1_SEC
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _WAIT_1_SEC                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Display_D2                                           2     0      2    1691
                                             14 COMRAM     2     0      2
                            _D2_None
                           _D2_White
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1572
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _D2_White                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _D2_None                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display_D1                                           2     0      2     229
                                              0 COMRAM     2     0      2
                            _D1_Blue
                           _D1_Green
                            _D1_None
                             _D1_Red
                           _D1_White
 ---------------------------------------------------------------------------------
 (2) _D1_White                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _D1_Red                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _D1_None                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _D1_Green                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _D1_Blue                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Display_D1
     _D1_Blue
     _D1_Green
     _D1_None
     _D1_Red
     _D1_White
   _Display_D2
     _D2_None
     _D2_White
     ___awdiv
       ___awmod (ARG)
   _Display_D3
     _WAIT_1_SEC
     ___fttol (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _Display_Lower_Digit
   _Display_Upper_Digit
   _Init_ADC
   _Init_Tris
   _Select_ADC_Channel
   _WAIT_1_SEC
   ___awdiv
     ___awmod (ARG)
   ___awmod
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftdiv
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___ftneg
   ___fttol
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _get_full_ADC
   _init_UART
     _OpenUSART
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     75      7F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7F      34        0.0%
DATA                 0      0      7F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Oct 11 14:45:38 2022

                ___awdiv@sign 000C           ___wmul@multiplicand 0011                  ___ftadd@exp1 0039  
                ___ftadd@exp2 0038                  ___ftadd@sign 0037                           l103 2D70  
                         l122 2CDC                           l106 2D90                           l300 2D6A  
                         l117 2DD8                           l109 2E20                           l144 2C14  
                         l137 2854                           l246 1546                           l192 1E2C  
                         l264 1808                           l506 2A8E                           l700 26BA  
                         l292 2B46                           l293 2B48                           l518 2D18  
                         l294 2B52                           l295 2B54                           l199 1BE8  
                         l288 2B2C                           l625 27B4                           l297 2B6E  
                         l705 2324                           l714 2314                           l723 28EA  
                         l707 228C                           l636 278C                           l708 22B4  
                         l493 2980                           l750 260C                           l680 2182  
                         l584 242E                           l665 2096                           l593 241E  
                         l729 2526                           l666 2214                           l746 2C58  
                         l739 2DA8                           l819 2BCE                           l669 20C0  
                         l697 26EE                           l689 219E                           l789 29FC  
                         l799 2AEE               __end_of_D1_Blue 2E82                  ___awmod@sign 0006  
             __end_of_D1_None 2E72               __end_of_D2_None 2E5A                           prod 000FF3  
                         wreg 000FE8                  __CFG_LVP$OFF 000000                  ___ftdiv@cntr 0043  
                ___ftdiv@sign 0048                  __CFG_WDT$OFF 000000                          l2001 2102  
                        l2011 213E                          l2021 2176                          l2013 2146  
                        l2111 2934                          l2103 2914                          l2007 2126  
                        l2121 295A                          l2113 293C                          l2009 2132  
                        l2027 21BC                          l2019 216A                          l2109 292A  
                        l2125 2966                          l2037 21EE                          l2141 2A24  
                        l2053 2476                          l1183 2DD2                          l2151 2A4A  
                        l2071 24BC                          l2047 244E                          l2129 2976  
                        l2153 2A52                          l2161 2A74                          l2145 2A32  
                        l2081 24EA                          l2049 2468                          l2241 1DEC  
                        l2233 1D28                          l1179 2DBE                          l2411 2888  
                        l2403 2C2E                          l2331 22EC                          l2075 24D2  
                        l2067 24AA                          l2421 28E6                          l2501 2AA2  
                        l2325 22D6                          l2317 22C2                          l2165 2A84  
                        l2157 2A68                          l2149 2A40                          l2085 2500  
                        l2077 24D8                          l2261 19DE                          l2183 2B24  
                        l2175 2B12                          l2415 28BA                          l2503 2AB0  
                        l2351 2346                          l2335 2300                          l2255 1936  
                        l2097 2902                          l2505 2AB8                          l2345 2336  
                        l2337 230E                          l2329 22E6                          l2273 1B12  
                        l2265 19EE                          l2195 2B3E                          l2187 2B30  
                        l2179 2B1C                          l2435 2546                          l2515 2B76  
                        l2541 2BF4                          l2453 25A0                          l2509 2ADE  
                        l2517 2B84                          l2373 23BC                          l2365 238A  
                        l2701 1522                          l2613 1168                          l2543 2BFA  
                        l2471 25FA                          l2463 25CA                          l2391 23F6  
                        l2295 2252                          l2279 1BC4                          l2703 1530  
                        l2561 2818                          l2553 27EC                          l2801 2694  
                        l2465 25D8                          l2457 25B0                          l2481 29A4  
                        l2385 23E0                          l2377 23CC                          l2289 2234  
                        l2713 1566                          l2641 1284                          l2555 27F2  
                        l2547 27C6                          l2539 2BE6                          l1579 2CD6  
                        l2811 26C8                          l2459 25B6                          l2467 25E2  
                        l2483 29B2                          l2395 240A                          l2723 168C  
                        l2707 154C                          l2643 1294                          l2731 16B2  
                        l2565 2838                          l2549 27CC                          l2581 2C92  
                        l2573 2C6A                          l1941 273C                          l1933 2700  
                        l2493 29EC                          l2485 29BA                          l2397 2418  
                        l2389 23F0                          l2741 16EE                          l2725 1698  
                        l2717 15B6                          l2653 130C                          l2645 12C4  
                        l2637 125E                          l2629 11FA                          l2567 283E  
                        l2559 2812                          l2583 2C98                          l2575 2C6E  
                        l2823 2CF4                          l2751 172E                          l2743 16F2  
                        l2671 141E                          l2663 137C                          l2647 12D4  
                        l2591 10D6                          l1961 27A6                          l1945 2754  
                        l1937 2710                          l2761 175A                          l2729 16A6  
                        l2681 145E                          l2673 1422                          l2665 13AA  
                        l2657 1330                          l2593 10E2                          l2579 2C8E  
                        l1955 2794                          l1947 2774                          l1939 271C  
                        l2755 1732                          l2747 16FE                          l2659 133A  
                        l2667 13B8                          l2587 10C6                          l2835 1E44  
                        l1949 2780                          l2781 2654                          l2765 17D8  
                        l2685 1462                          l2677 142E                          l2597 10EA  
                        l2775 262C                          l1991 20DA                          l2759 174E  
                        l2695 1508                          l2599 1116                          l2767 17EC  
                        l2777 2646                          l1985 20CE                          l2697 1514  
                        l2689 147E                          l1979 20A4                          STR_1 10AD  
                        STR_2 109E                          STR_3 108E                          STR_4 1077  
                        u2211 2226                          u3021 261E                          u2231 2244  
                        u3041 263C                          u2421 2538                          u2440 2564  
                        u1641 2062                          u2610 27DC                          u1651 2076  
                        u2445 255C                          u2630 2802                          u2650 2828  
                        u1851 2440                  printf@tmpval 005A                          u2580 2BE0  
                        u2670 284E                          u2910 1540                          u2750 11A0  
                        u1871 245E                          u2755 1196                   main@intTmpF 0074  
                        _TRMT 007D61                          _main 1E2E                  ___ftpack@arg 0001  
                ___ftpack@exp 0004                ??_get_full_ADC 0003                          fsr2h 000FDA  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
            __end_of_D1_Green 2E7A                          prodh 000FF4                          prodl 000FF3  
            __end_of_D1_White 2E62                          start 0000              __end_of_D2_White 2E52  
                ___ftmul@cntr 0022                  ___param_bank 000010                  ___ftmul@sign 0023  
                ___fttol@exp1 0039                  ___fttol@lval 0035                   ?_WAIT_1_SEC 0001  
                       ?_main 0001               __end_of___awdiv 2982               __end_of___ftadd 2216  
             __end_of___awmod 2A90               __end_of___ftdiv 26F0               __end_of___ftneg 2DB6  
             __end_of___lldiv 2A0E               __end_of___ftmul 2528               ___awdiv@divisor 0009  
             __end_of___llmod 2B00               __end_of___ftsub 2C5A               __end_of___fttol 260E  
             ___awdiv@counter 000B                         _RCSTA 000FAB                         _SPBRG 000FAF  
                       _PORTA 000F80                         _PORTB 000F81                         _PORTC 000F82  
                       _PORTD 000F83                         _PORTE 000F84                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94                         _TRISD 000F95  
                       _TRISE 000F96                         _TXREG 000FAD                         _TXSTA 000FAC  
                ___lltoft@exp 0011                    _Display_D1 27B6                    _Display_D2 2BD0  
                  _Display_D3 2C5A                 ___awtoft@sign 000C               __end_of_dpowers 1029  
                       _array 0076                         _scale 180A                 ___ftpack@sign 0005  
                       _putch 2E1C                  main@num_step 0070                __CFG_BOREN$OFF 000000  
                       tablat 000FF5                         status 000FD8               __initialization 2D1A  
                __end_of_main 2052      Display_Lower_Digit@digit 0001              __end_of_Init_ADC 2E4A  
                   ??_D1_Blue 0001                     ??_D1_None 0001                     ??_D2_None 0001  
                      ??_main 0062                 ___fttol@sign1 0034                 __activetblptr 000002  
        __size_of__tdiv_to_l_ 0110   __end_of_Display_Lower_Digit 2DF2                        _ADCON0 000FC2  
                      _ADCON1 000FC1                        _ADCON2 000FC0              ___llmod@dividend 000E  
                      ?_scale 0024                        _ADRESH 000FC4                        _ADRESL 000FC3  
                      _D1_Red 2E62              ___awdiv@dividend 0007              __end_of___awtoft 2D1A  
                      ?_putch 0001              __end_of___ftpack 27B6              __end_of___lltoft 2BD0  
                      _OSCCON 000FD3                        _SPBRGH 000FB0           __size_of_WAIT_1_SEC 0024  
          __size_of_Init_Tris 0016         Display_Upper_Digit@PE 0001              __end_of__powers_ 1077  
          __size_of_OpenUSART 0070                        ___ftge 2856                        ___wmul 2D44  
                   ??___awdiv 000B                     ??___ftadd 0034                     ??___awmod 0005  
                   ??___ftdiv 0040                     ??___ftneg 0004                     ??___lldiv 0009  
                   ??___ftmul 001B                     ??___llmod 0016                     ??___ftsub 0040  
                   ??___fttol 002F                        _fround 1BEA              ___awdiv@quotient 000D  
             ___awmod@divisor 0003               ___awmod@counter 0005                        _printf 10BC  
       ___ftmul@f3_as_product 001F                 main@num_step2 0072          __end_of_get_full_ADC 2D92  
                __pdataCOMRAM 0076                     ?_D1_Green 0001                  __mediumconst 0000  
                   ?_D1_White 0001                   ?_Display_D1 0001                   ?_Display_D2 000F  
                 ?_Display_D3 003A                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                     ?_D2_White 0001                        putch@c 0001  
                  __accesstop 0080       __end_of__initialization 2D3A                    ___ftadd@f1 002E  
                  ___ftadd@f2 0031                    ___ftge@ff1 0001                    ___ftge@ff2 0004  
               ___rparam_used 000001                    ___ftdiv@f1 003A                    ___ftdiv@f2 003D  
                  ___ftdiv@f3 0044                    ___ftneg@f1 0001                    ___awtoft@c 0009  
                  ___ftmul@f1 0015                    ___ftmul@f2 0018                    ___ftsub@f1 003A  
                  ___ftsub@f2 003D                    ___fttol@f1 002B                __pcstackCOMRAM 0001  
                  ___lltoft@c 0009                 __end_of_scale 1BEA                 __end_of_putch 2E2A  
           __end_of_Init_Tris 2E08                    __div_to_l_ 2326                    ??_D1_Green 0001  
 __end_of_Display_Upper_Digit 2CDE         Display_D1@temperature 0001                    ??_D1_White 0001  
                  ??_D2_White 0001             __end_of_OpenUSART 2B70               __div_to_l_@exp1 000C  
             __div_to_l_@cntr 000B                       ??_scale 0027                       ?_D1_Red 0001  
             __div_to_l_@quot 0007                       ??_putch 0001                     ?_Init_ADC 0001  
          __size_of_init_UART 0014    __end_of_Select_ADC_Channel 2E36                 __div_to_l_@f1 0001  
               __div_to_l_@f2 0004                       ?___ftge 0001           __size_of_Display_D1 00A0  
         __size_of_Display_D2 0046           __size_of_Display_D3 0044                       ?___wmul 000F  
                     _D1_Blue 2E7A                       ?_fround 0024                  ??_WAIT_1_SEC 0001  
                     _D1_None 2E6A                       _D2_None 2E52                     ?___awtoft 0009  
                   ?___ftpack 0001                       ?_printf 0040     Select_ADC_Channel@channel 0001  
                   ?___lltoft 0009                   WAIT_1_SEC@j 0001         Display_D2@temperature 000F  
             __size_of_D1_Red 0008                    ??_Init_ADC 0001            __end_of_WAIT_1_SEC 2DDA  
           __end_of__npowers_ 1050                       __Hparam 0000                    _scale$1185 0027  
                     __Lparam 0000               __size_of___ftge 0096                       ___awdiv 28EC  
                     ___ftadd 2052                       ___awmod 2A0E                       ___ftdiv 260E  
                     ___ftneg 2D92                       ___lldiv 2982               __size_of___wmul 0028  
                     ___ftmul 2430                       ___llmod 2A90                       ___ftsub 2C16  
                     ___fttol 2528         __size_of_get_full_ADC 0026                  __psmallconst 1000  
                     __pcinit 2D1A                    ??___awtoft 000C                    ??___ftpack 0006  
             __size_of_fround 0244                       __ramtop 1000                    ??___lltoft 000D  
                     __ptext0 1E2E                       __ptext1 10BC                       __ptext2 180A  
                     __ptext3 2E1C                       __ptext4 1BEA                       __ptext5 2D44  
                     __ptext6 2430                       __ptext7 2A0E                       __ptext8 2216  
                     __ptext9 2326               __size_of_printf 074E             __end_of_init_UART 2E1C  
                 ?__div_to_l_ 0001                       _dpowers 1001              ___awmod@dividend 0001  
        end_of_initialization 2D3A                 __Lmediumconst 0000                  _get_full_ADC 2D6C  
             ___lldiv@divisor 0005               ___lldiv@counter 000D                     _RCSTAbits 000FAB  
                     printf@c 0061                       printf@f 0040                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc2 000FDE  
              __tdiv_to_l_@f1 0001                __tdiv_to_l_@f2 0004                 ??__tdiv_to_l_ 0007  
                   _PORTBbits 000F81                  ??_Display_D1 0003                  ??_Display_D2 0011  
                ??_Display_D3 003C                     _TRISCbits 000F94                main@voltage_mv 0062  
           __size_of_D1_Green 0008             __size_of_D1_White 0008             __size_of_D2_White 0008  
              __end_of_D1_Red 2E6A  __size_of_Display_Lower_Digit 0018                   ___ftdiv@exp 0047  
                   _TXSTAbits 000FAC                    main@temp_c 0065                    main@temp_f 006A  
          get_full_ADC@result 0005           __size_of__div_to_l_ 010A                   ___ftmul@exp 001E  
    Display_Upper_Digit@digit 0002            __end_of_Display_D1 2856            __end_of_Display_D2 2C16  
          __end_of_Display_D3 2C9E                __end_of___ftge 28EC                __end_of___wmul 2D6C  
               __pidataCOMRAM 2E36                __end_of_fround 1E2E                __end_of_printf 180A  
         start_initialization 2D1A           __end_of__tdiv_to_l_ 2326                     _Init_Tris 2DF2  
                    ??_D1_Red 0001                     _OpenUSART 2B00               ___llmod@divisor 0012  
            __CFG_OSC$INTIO67 000000             __size_of_Init_ADC 000A               ___llmod@counter 0016  
                    ??___ftge 0007                      ??___wmul 0013            _Select_ADC_Channel 2E2A  
                    ?_D1_Blue 0001                      ??_fround 0027                      ?_D1_None 0001  
                    ?_D2_None 0001                      ??_printf 0045                    fround@prec 002D  
           __size_of___awtoft 003C             __size_of___ftpack 00C6           ?_Select_ADC_Channel 0001  
           __size_of___lltoft 0060                    ?_Init_Tris 0001  __size_of_Display_Upper_Digit 0040  
                  ?_OpenUSART 0001          ??_Select_ADC_Channel 0001                      ?___awdiv 0007  
                    ?___ftadd 002E                      ?___awmod 0001                      ?___ftdiv 003A  
                    ?___ftneg 0001                      ?___lldiv 0001                      ?___ftmul 0015  
                    ?___llmod 000E                      ?___ftsub 003A                     __npowers_ 1029  
                    ?___fttol 002B                   __tdiv_to_l_ 2216                  ??__div_to_l_ 0007  
                 __smallconst 1000                      _D1_Green 2E72                      _D1_White 2E5A  
                    _D2_White 2E4A                     _init_UART 2E08                __size_of_scale 03E0  
              __size_of_putch 000E                ___wmul@product 0013                      _PIE1bits 000F9D  
                    _PIR1bits 000F9E            __end_of__div_to_l_ 2430           _Display_Lower_Digit 2DDA  
            __size_of_D1_Blue 0008                    _ADCON0bits 000FC2              __size_of_D1_None 0008  
            __size_of_D2_None 0008             ___wmul@multiplier 000F                    printf@flag 0050  
                  printf@fval 005E                    printf@prec 0052                     main@lower 0069  
                   main@upper 0068                    ?_init_UART 0001                   ??_Init_Tris 0001  
                   copy_data0 2D2E                      _Init_ADC 2E40          ?_Display_Lower_Digit 0001  
                 ??_OpenUSART 0003             Display_D3@voltage 003A               OpenUSART@config 0003  
                    __Hrparam 0000                      __Lrparam 0000              __size_of___awdiv 0096  
            __size_of___ftadd 01C4              __size_of___awmod 0082              __size_of___ftdiv 00E2  
            __size_of___ftneg 0024              __size_of___lldiv 008C              __size_of___ftmul 00F8  
            __size_of___llmod 0070              __size_of___ftsub 0044              __size_of___fttol 00E6  
                    ___awtoft 2CDE                      ___ftpack 26F0                   _fround$1183 002A  
                 _fround$1184 0027                      ___lltoft 2B70                      __ptext10 2B70  
                    __ptext11 2A90                      __ptext20 2D6C                      __ptext12 2982  
                    __ptext21 260E                      __ptext13 2528                      __ptext30 2DB6  
                    __ptext22 2CDE                      __ptext14 2C16                      __ptext31 2BD0  
                    __ptext23 26F0                      __ptext15 2052                      __ptext40 2E7A  
                    __ptext32 28EC                      __ptext24 2E2A                      __ptext16 2D92  
                    __ptext33 2E4A                      __ptext25 2DF2                      __ptext17 2856  
                    __ptext34 2E52                      __ptext26 2E40                      __ptext18 2E08  
                    __ptext35 27B6                      __ptext27 2C9E                      __ptext19 2B00  
                    __ptext36 2E5A                      __ptext28 2DDA                      __ptext37 2E62  
                    __ptext29 2C5A                      __ptext38 2E6A                      __ptext39 2E72  
                    __powers_ 1050         ??_Display_Lower_Digit 0001                 __size_of_main 0224  
                   printf@exp 0058                     printf@val 0054           _Display_Upper_Digit 2C9E  
              OpenUSART@spbrg 0001                   ??_init_UART 0004                      scale@scl 002A  
            __tdiv_to_l_@exp1 000F              __tdiv_to_l_@cntr 000E          ?_Display_Upper_Digit 0001  
            __tdiv_to_l_@quot 000A              ___lldiv@dividend 0001                      printf@ap 004E  
                  _WAIT_1_SEC 2DB6                  ?__tdiv_to_l_ 0001                   _printf$1186 004B  
            ___lldiv@quotient 0009               main@pvoltage_mv 006D         ??_Display_Upper_Digit 0001  
               ?_get_full_ADC 0001   __size_of_Select_ADC_Channel 000C  
