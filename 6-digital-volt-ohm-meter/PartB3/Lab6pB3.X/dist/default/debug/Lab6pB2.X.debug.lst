

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Oct 18 12:45:27 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           	psect	idataCOMRAM
    54  003062                     __pidataCOMRAM:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _D2_array
    58  003062  00                 	db	0
    59  003063  01                 	db	1
    60  003064  02                 	db	2
    61  003065  03                 	db	3
    62  003066  04                 	db	4
    63  003067  05                 	db	5
    64  003068  06                 	db	6
    65  003069  07                 	db	7
    66                           
    67                           	psect	idataBANK0
    68  00304E                     __pidataBANK0:
    69                           	opt stack 0
    70                           
    71                           ;initializer for _array
    72  00304E  40                 	db	64
    73  00304F  79                 	db	121
    74  003050  24                 	db	36
    75  003051  30                 	db	48
    76  003052  19                 	db	25
    77  003053  12                 	db	18
    78  003054  02                 	db	2
    79  003055  78                 	db	120
    80  003056  00                 	db	0
    81  003057  10                 	db	16
    82                           
    83                           	psect	smallconst
    84  001000                     __psmallconst:
    85                           	opt stack 0
    86  001000  00                 	db	0
    87  001001                     _dpowers:
    88                           	opt stack 0
    89  001001  0001               	dw	1
    90  001003  0000               	dw	0
    91  001005  000A               	dw	10
    92  001007  0000               	dw	0
    93  001009  0064               	dw	100
    94  00100B  0000               	dw	0
    95  00100D  03E8               	dw	1000
    96  00100F  0000               	dw	0
    97  001011  2710               	dw	10000
    98  001013  0000               	dw	0
    99  001015  86A0               	dw	34464
   100  001017  0001               	dw	1
   101  001019  4240               	dw	16960
   102  00101B  000F               	dw	15
   103  00101D  9680               	dw	38528
   104  00101F  0098               	dw	152
   105  001021  E100               	dw	57600
   106  001023  05F5               	dw	1525
   107  001025  CA00               	dw	51712
   108  001027  3B9A               	dw	15258
   109  001029                     __end_of_dpowers:
   110                           	opt stack 0
   111  001029                     __npowers_:
   112                           	opt stack 0
   113  001029  00                 	db	0
   114  00102A  80                 	db	128
   115  00102B  3F                 	db	63
   116  00102C  CD                 	db	205
   117  00102D  CC                 	db	204
   118  00102E  3D                 	db	61
   119  00102F  D7                 	db	215
   120  001030  23                 	db	35
   121  001031  3C                 	db	60
   122  001032  12                 	db	18
   123  001033  83                 	db	131
   124  001034  3A                 	db	58
   125  001035  B7                 	db	183
   126  001036  D1                 	db	209
   127  001037  38                 	db	56
   128  001038  C6                 	db	198
   129  001039  27                 	db	39
   130  00103A  37                 	db	55
   131  00103B  38                 	db	56
   132  00103C  86                 	db	134
   133  00103D  35                 	db	53
   134  00103E  C0                 	db	192
   135  00103F  D6                 	db	214
   136  001040  33                 	db	51
   137  001041  CC                 	db	204
   138  001042  2B                 	db	43
   139  001043  32                 	db	50
   140  001044  70                 	db	112
   141  001045  89                 	db	137
   142  001046  30                 	db	48
   143  001047  E7                 	db	231
   144  001048  DB                 	db	219
   145  001049  2E                 	db	46
   146  00104A  E5                 	db	229
   147  00104B  3C                 	db	60
   148  00104C  1E                 	db	30
   149  00104D  42                 	db	66
   150  00104E  A2                 	db	162
   151  00104F  0D                 	db	13
   152  001050                     __end_of__npowers_:
   153                           	opt stack 0
   154  001050                     __powers_:
   155                           	opt stack 0
   156  001050  00                 	db	0
   157  001051  80                 	db	128
   158  001052  3F                 	db	63
   159  001053  00                 	db	0
   160  001054  20                 	db	32
   161  001055  41                 	db	65
   162  001056  00                 	db	0
   163  001057  C8                 	db	200
   164  001058  42                 	db	66
   165  001059  00                 	db	0
   166  00105A  7A                 	db	122
   167  00105B  44                 	db	68
   168  00105C  40                 	db	64
   169  00105D  1C                 	db	28
   170  00105E  46                 	db	70
   171  00105F  50                 	db	80
   172  001060  C3                 	db	195
   173  001061  47                 	db	71
   174  001062  24                 	db	36
   175  001063  74                 	db	116
   176  001064  49                 	db	73
   177  001065  97                 	db	151
   178  001066  18                 	db	24
   179  001067  4B                 	db	75
   180  001068  BC                 	db	188
   181  001069  BE                 	db	190
   182  00106A  4C                 	db	76
   183  00106B  6B                 	db	107
   184  00106C  6E                 	db	110
   185  00106D  4E                 	db	78
   186  00106E  03                 	db	3
   187  00106F  15                 	db	21
   188  001070  50                 	db	80
   189  001071  79                 	db	121
   190  001072  AD                 	db	173
   191  001073  60                 	db	96
   192  001074  F3                 	db	243
   193  001075  49                 	db	73
   194  001076  71                 	db	113
   195  001077                     __end_of__powers_:
   196                           	opt stack 0
   197  0000                     _PORTB	set	3969
   198  0000                     _PORTBbits	set	3969
   199  0000                     _PORTC	set	3970
   200  0000                     _PORTD	set	3971
   201  0000                     _PORTDbits	set	3971
   202  0000                     _PORTE	set	3972
   203  0000                     _TRISA	set	3986
   204  0000                     _TRISB	set	3987
   205  0000                     _TRISC	set	3988
   206  0000                     _TRISCbits	set	3988
   207  0000                     _TRISD	set	3989
   208  0000                     _TRISE	set	3990
   209  0000                     _ADCON0	set	4034
   210  0000                     _ADCON0bits	set	4034
   211  0000                     _ADCON1	set	4033
   212  0000                     _ADCON2	set	4032
   213  0000                     _ADRESH	set	4036
   214  0000                     _ADRESL	set	4035
   215  0000                     _CCP2CON	set	4026
   216  0000                     _CCPR2L	set	4027
   217  0000                     _OSCCON	set	4051
   218  0000                     _PIE1bits	set	3997
   219  0000                     _PIR1bits	set	3998
   220  0000                     _PR2	set	4043
   221  0000                     _RCSTA	set	4011
   222  0000                     _RCSTAbits	set	4011
   223  0000                     _SPBRG	set	4015
   224  0000                     _SPBRGH	set	4016
   225  0000                     _T2CON	set	4042
   226  0000                     _TXREG	set	4013
   227  0000                     _TXSTA	set	4012
   228  0000                     _TXSTAbits	set	4012
   229  0000                     _TRMT	set	32097
   230  0000                     _T0CON	set	4053
   231  0000                     _T0CONbits	set	4053
   232  0000                     _TMR0H	set	4055
   233  0000                     _TMR0L	set	4054
   234  0000                     _INTCONbits	set	4082
   235  001077                     STR_1:
   236  001077  54                 	db	84	;'T'
   237  001078  68                 	db	104	;'h'
   238  001079  65                 	db	101	;'e'
   239  00107A  20                 	db	32
   240  00107B  52                 	db	82	;'R'
   241  00107C  65                 	db	101	;'e'
   242  00107D  66                 	db	102	;'f'
   243  00107E  20                 	db	32
   244  00107F  43                 	db	67	;'C'
   245  001080  55                 	db	85	;'U'
   246  001081  72                 	db	114	;'r'
   247  001082  72                 	db	114	;'r'
   248  001083  65                 	db	101	;'e'
   249  001084  6E                 	db	110	;'n'
   250  001085  74                 	db	116	;'t'
   251  001086  20                 	db	32
   252  001087  69                 	db	105	;'i'
   253  001088  73                 	db	115	;'s'
   254  001089  20                 	db	32
   255  00108A  69                 	db	105	;'i'
   256  00108B  73                 	db	115	;'s'
   257  00108C  20                 	db	32
   258  00108D  25                 	db	37
   259  00108E  66                 	db	102	;'f'
   260  00108F  0D                 	db	13
   261  001090  0A                 	db	10
   262  001091  0A                 	db	10
   263  001092  0A                 	db	10
   264  001093  00                 	db	0
   265  001094                     STR_3:
   266  001094  54                 	db	84	;'T'
   267  001095  68                 	db	104	;'h'
   268  001096  65                 	db	101	;'e'
   269  001097  20                 	db	32
   270  001098  52                 	db	82	;'R'
   271  001099  65                 	db	101	;'e'
   272  00109A  73                 	db	115	;'s'
   273  00109B  69                 	db	105	;'i'
   274  00109C  73                 	db	115	;'s'
   275  00109D  74                 	db	116	;'t'
   276  00109E  61                 	db	97	;'a'
   277  00109F  6E                 	db	110	;'n'
   278  0010A0  63                 	db	99	;'c'
   279  0010A1  65                 	db	101	;'e'
   280  0010A2  20                 	db	32
   281  0010A3  69                 	db	105	;'i'
   282  0010A4  73                 	db	115	;'s'
   283  0010A5  20                 	db	32
   284  0010A6  25                 	db	37
   285  0010A7  6C                 	db	108	;'l'
   286  0010A8  69                 	db	105	;'i'
   287  0010A9  0D                 	db	13
   288  0010AA  0A                 	db	10
   289  0010AB  0A                 	db	10
   290  0010AC  0A                 	db	10
   291  0010AD  00                 	db	0
   292  0010AE                     STR_2:
   293  0010AE  54                 	db	84	;'T'
   294  0010AF  68                 	db	104	;'h'
   295  0010B0  65                 	db	101	;'e'
   296  0010B1  20                 	db	32
   297  0010B2  66                 	db	102	;'f'
   298  0010B3  6C                 	db	108	;'l'
   299  0010B4  6F                 	db	111	;'o'
   300  0010B5  61                 	db	97	;'a'
   301  0010B6  74                 	db	116	;'t'
   302  0010B7  20                 	db	32
   303  0010B8  52                 	db	82	;'R'
   304  0010B9  20                 	db	32
   305  0010BA  69                 	db	105	;'i'
   306  0010BB  73                 	db	115	;'s'
   307  0010BC  20                 	db	32
   308  0010BD  25                 	db	37
   309  0010BE  66                 	db	102	;'f'
   310  0010BF  0D                 	db	13
   311  0010C0  0A                 	db	10
   312  0010C1  0A                 	db	10
   313  0010C2  0A                 	db	10
   314  0010C3  00                 	db	0
   315                           
   316                           ; #config settings
   317  0010C4  00                 	db	0	; dummy byte at the end
   318  0000                     
   319                           	psect	cinit
   320  002E24                     __pcinit:
   321                           	opt stack 0
   322  002E24                     start_initialization:
   323                           	opt stack 0
   324  002E24                     __initialization:
   325                           	opt stack 0
   326                           
   327                           ; Initialize objects allocated to BANK0 (10 bytes)
   328                           ; load TBLPTR registers with __pidataBANK0
   329  002E24  0E4E               	movlw	low __pidataBANK0
   330  002E26  6EF6               	movwf	tblptrl,c
   331  002E28  0E30               	movlw	high __pidataBANK0
   332  002E2A  6EF7               	movwf	tblptrh,c
   333  002E2C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   334  002E2E  6EF8               	movwf	tblptru,c
   335  002E30  EE00  F080         	lfsr	0,__pdataBANK0
   336  002E34  EE10 F00A          	lfsr	1,10
   337  002E38                     copy_data0:
   338  002E38  0009               	tblrd		*+
   339  002E3A  CFF5 FFEE          	movff	tablat,postinc0
   340  002E3E  50E5               	movf	postdec1,w,c
   341  002E40  50E1               	movf	fsr1l,w,c
   342  002E42  E1FA               	bnz	copy_data0
   343                           
   344                           ; Initialize objects allocated to COMRAM (8 bytes)
   345                           ; load TBLPTR registers with __pidataCOMRAM
   346  002E44  0E62               	movlw	low __pidataCOMRAM
   347  002E46  6EF6               	movwf	tblptrl,c
   348  002E48  0E30               	movlw	high __pidataCOMRAM
   349  002E4A  6EF7               	movwf	tblptrh,c
   350  002E4C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   351  002E4E  6EF8               	movwf	tblptru,c
   352  002E50  EE00  F077         	lfsr	0,__pdataCOMRAM
   353  002E54  EE10 F008          	lfsr	1,8
   354  002E58                     copy_data1:
   355  002E58  0009               	tblrd		*+
   356  002E5A  CFF5 FFEE          	movff	tablat,postinc0
   357  002E5E  50E5               	movf	postdec1,w,c
   358  002E60  50E1               	movf	fsr1l,w,c
   359  002E62  E1FA               	bnz	copy_data1
   360  002E64                     end_of_initialization:
   361                           	opt stack 0
   362  002E64                     __end_of__initialization:
   363                           	opt stack 0
   364  002E64  0E00               	movlw	low (__Lmediumconst shr (0+16))
   365  002E66  6EF8               	movwf	tblptru,c
   366  002E68  0100               	movlb	0
   367  002E6A  EF11  F00E         	goto	_main	;jump to C main() function
   368                           tblptru	equ	0xFF8
   369                           tblptrh	equ	0xFF7
   370                           tblptrl	equ	0xFF6
   371                           tablat	equ	0xFF5
   372                           postinc0	equ	0xFEE
   373                           postdec1	equ	0xFE5
   374                           fsr1l	equ	0xFE1
   375                           
   376                           	psect	dataCOMRAM
   377  000077                     __pdataCOMRAM:
   378                           	opt stack 0
   379  000077                     _D2_array:
   380                           	opt stack 0
   381  000077                     	ds	8
   382                           tblptru	equ	0xFF8
   383                           tblptrh	equ	0xFF7
   384                           tblptrl	equ	0xFF6
   385                           tablat	equ	0xFF5
   386                           postinc0	equ	0xFEE
   387                           postdec1	equ	0xFE5
   388                           fsr1l	equ	0xFE1
   389                           
   390                           	psect	dataBANK0
   391  000080                     __pdataBANK0:
   392                           	opt stack 0
   393  000080                     _array:
   394                           	opt stack 0
   395  000080                     	ds	10
   396                           tblptru	equ	0xFF8
   397                           tblptrh	equ	0xFF7
   398                           tblptrl	equ	0xFF6
   399                           tablat	equ	0xFF5
   400                           postinc0	equ	0xFEE
   401                           postdec1	equ	0xFE5
   402                           fsr1l	equ	0xFE1
   403                           
   404                           	psect	cstackCOMRAM
   405  000001                     __pcstackCOMRAM:
   406                           	opt stack 0
   407  000001                     ??_BCD_DP:
   408  000001                     ?_get_full_ADC:
   409                           	opt stack 0
   410  000001                     ?___awmod:
   411                           	opt stack 0
   412  000001                     ?___ftpack:
   413                           	opt stack 0
   414  000001                     ?___ftneg:
   415                           	opt stack 0
   416  000001                     ?__tdiv_to_l_:
   417                           	opt stack 0
   418  000001                     ?__div_to_l_:
   419                           	opt stack 0
   420  000001                     ?___aldiv:
   421                           	opt stack 0
   422  000001                     ?___lldiv:
   423                           	opt stack 0
   424  000001                     putch@c:
   425                           	opt stack 0
   426  000001                     Select_ADC_Channel@channel:
   427                           	opt stack 0
   428  000001                     BCD_Upper_Digit@Port_E:
   429                           	opt stack 0
   430  000001                     BCD_Lower_Digit@digit:
   431                           	opt stack 0
   432  000001                     OpenUSART@spbrg:
   433                           	opt stack 0
   434  000001                     ___awmod@dividend:
   435                           	opt stack 0
   436  000001                     __div_to_l_@f1:
   437                           	opt stack 0
   438  000001                     ___ftpack@arg:
   439                           	opt stack 0
   440  000001                     __tdiv_to_l_@f1:
   441                           	opt stack 0
   442  000001                     ___ftge@ff1:
   443                           	opt stack 0
   444  000001                     ___ftneg@f1:
   445                           	opt stack 0
   446  000001                     ___aldiv@dividend:
   447                           	opt stack 0
   448  000001                     ___lldiv@dividend:
   449                           	opt stack 0
   450                           
   451                           ; 4 bytes @ 0x0
   452  000001                     	ds	1
   453  000002                     BCD_Upper_Digit@digit:
   454                           	opt stack 0
   455  000002                     BCD_DP@dp:
   456                           	opt stack 0
   457                           
   458                           ; 1 bytes @ 0x1
   459  000002                     	ds	1
   460  000003                     ??_get_full_ADC:
   461  000003                     OpenUSART@config:
   462                           	opt stack 0
   463  000003                     ___awmod@divisor:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x2
   467  000003                     	ds	1
   468  000004                     ___ftpack@exp:
   469                           	opt stack 0
   470  000004                     __div_to_l_@f2:
   471                           	opt stack 0
   472  000004                     __tdiv_to_l_@f2:
   473                           	opt stack 0
   474  000004                     ___ftge@ff2:
   475                           	opt stack 0
   476                           
   477                           ; 3 bytes @ 0x3
   478  000004                     	ds	1
   479  000005                     ___awmod@counter:
   480                           	opt stack 0
   481  000005                     ___ftpack@sign:
   482                           	opt stack 0
   483  000005                     get_full_ADC@result:
   484                           	opt stack 0
   485  000005                     ___aldiv@divisor:
   486                           	opt stack 0
   487  000005                     ___lldiv@divisor:
   488                           	opt stack 0
   489                           
   490                           ; 4 bytes @ 0x4
   491  000005                     	ds	1
   492  000006                     ??___ftpack:
   493  000006                     ___awmod@sign:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x5
   497  000006                     	ds	1
   498  000007                     ??__tdiv_to_l_:
   499  000007                     ??___ftge:
   500  000007                     ?___awdiv:
   501                           	opt stack 0
   502  000007                     ___awdiv@dividend:
   503                           	opt stack 0
   504  000007                     __div_to_l_@quot:
   505                           	opt stack 0
   506                           
   507                           ; 4 bytes @ 0x6
   508  000007                     	ds	2
   509  000009                     ?___awtoft:
   510                           	opt stack 0
   511  000009                     ?___lltoft:
   512                           	opt stack 0
   513  000009                     ___aldiv@counter:
   514                           	opt stack 0
   515  000009                     ___awdiv@divisor:
   516                           	opt stack 0
   517  000009                     ___awtoft@c:
   518                           	opt stack 0
   519  000009                     ___lldiv@quotient:
   520                           	opt stack 0
   521  000009                     ___lltoft@c:
   522                           	opt stack 0
   523                           
   524                           ; 4 bytes @ 0x8
   525  000009                     	ds	1
   526  00000A                     ___aldiv@sign:
   527                           	opt stack 0
   528  00000A                     __tdiv_to_l_@quot:
   529                           	opt stack 0
   530                           
   531                           ; 4 bytes @ 0x9
   532  00000A                     	ds	1
   533  00000B                     ___awdiv@counter:
   534                           	opt stack 0
   535  00000B                     __div_to_l_@cntr:
   536                           	opt stack 0
   537  00000B                     ___aldiv@quotient:
   538                           	opt stack 0
   539                           
   540                           ; 4 bytes @ 0xA
   541  00000B                     	ds	1
   542  00000C                     ___awdiv@sign:
   543                           	opt stack 0
   544  00000C                     ___awtoft@sign:
   545                           	opt stack 0
   546  00000C                     __div_to_l_@exp1:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0xB
   550  00000C                     	ds	1
   551  00000D                     ??___lltoft:
   552  00000D                     ?___ftdiv:
   553                           	opt stack 0
   554  00000D                     ___lldiv@counter:
   555                           	opt stack 0
   556  00000D                     ___awdiv@quotient:
   557                           	opt stack 0
   558  00000D                     ___ftdiv@f1:
   559                           	opt stack 0
   560                           
   561                           ; 3 bytes @ 0xC
   562  00000D                     	ds	1
   563  00000E                     ?___llmod:
   564                           	opt stack 0
   565  00000E                     __tdiv_to_l_@cntr:
   566                           	opt stack 0
   567  00000E                     ___llmod@dividend:
   568                           	opt stack 0
   569                           
   570                           ; 4 bytes @ 0xD
   571  00000E                     	ds	1
   572  00000F                     ?___wmul:
   573                           	opt stack 0
   574  00000F                     ?___almod:
   575                           	opt stack 0
   576  00000F                     __tdiv_to_l_@exp1:
   577                           	opt stack 0
   578  00000F                     ___wmul@multiplier:
   579                           	opt stack 0
   580  00000F                     ___almod@dividend:
   581                           	opt stack 0
   582                           
   583                           ; 4 bytes @ 0xE
   584  00000F                     	ds	1
   585  000010                     ___ftdiv@f2:
   586                           	opt stack 0
   587                           
   588                           ; 3 bytes @ 0xF
   589  000010                     	ds	1
   590  000011                     ___lltoft@exp:
   591                           	opt stack 0
   592  000011                     ___wmul@multiplicand:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x10
   596  000011                     	ds	1
   597  000012                     ___llmod@divisor:
   598                           	opt stack 0
   599                           
   600                           ; 4 bytes @ 0x11
   601  000012                     	ds	1
   602  000013                     ??___ftdiv:
   603  000013                     ___wmul@product:
   604                           	opt stack 0
   605  000013                     ___almod@divisor:
   606                           	opt stack 0
   607                           
   608                           ; 4 bytes @ 0x12
   609  000013                     	ds	2
   610  000015                     ?___ftmul:
   611                           	opt stack 0
   612  000015                     ___ftmul@f1:
   613                           	opt stack 0
   614                           
   615                           ; 3 bytes @ 0x14
   616  000015                     	ds	1
   617  000016                     ___ftdiv@cntr:
   618                           	opt stack 0
   619  000016                     ___llmod@counter:
   620                           	opt stack 0
   621                           
   622                           ; 1 bytes @ 0x15
   623  000016                     	ds	1
   624  000017                     ___almod@counter:
   625                           	opt stack 0
   626  000017                     ___ftdiv@f3:
   627                           	opt stack 0
   628                           
   629                           ; 3 bytes @ 0x16
   630  000017                     	ds	1
   631  000018                     ___almod@sign:
   632                           	opt stack 0
   633  000018                     ___ftmul@f2:
   634                           	opt stack 0
   635                           
   636                           ; 3 bytes @ 0x17
   637  000018                     	ds	2
   638  00001A                     ___ftdiv@exp:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x19
   642  00001A                     	ds	1
   643  00001B                     ??___ftmul:
   644  00001B                     ___ftdiv@sign:
   645                           	opt stack 0
   646                           
   647                           ; 1 bytes @ 0x1A
   648  00001B                     	ds	3
   649  00001E                     ___ftmul@exp:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0x1D
   653  00001E                     	ds	1
   654  00001F                     ___ftmul@f3_as_product:
   655                           	opt stack 0
   656                           
   657                           ; 3 bytes @ 0x1E
   658  00001F                     	ds	3
   659  000022                     ___ftmul@cntr:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0x21
   663  000022                     	ds	1
   664  000023                     ___ftmul@sign:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0x22
   668  000023                     	ds	1
   669  000024                     ?_fround:
   670                           	opt stack 0
   671  000024                     ?_scale:
   672                           	opt stack 0
   673                           
   674                           ; 3 bytes @ 0x23
   675  000024                     	ds	3
   676  000027                     _fround$1414:
   677                           	opt stack 0
   678  000027                     _scale$1415:
   679                           	opt stack 0
   680                           
   681                           ; 3 bytes @ 0x26
   682  000027                     	ds	3
   683  00002A                     scale@scl:
   684                           	opt stack 0
   685  00002A                     _fround$1413:
   686                           	opt stack 0
   687                           
   688                           ; 3 bytes @ 0x29
   689  00002A                     	ds	1
   690  00002B                     ?___fttol:
   691                           	opt stack 0
   692  00002B                     ___fttol@f1:
   693                           	opt stack 0
   694                           
   695                           ; 3 bytes @ 0x2A
   696  00002B                     	ds	2
   697  00002D                     fround@prec:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0x2C
   701  00002D                     	ds	1
   702  00002E                     ?___ftadd:
   703                           	opt stack 0
   704  00002E                     ___ftadd@f1:
   705                           	opt stack 0
   706                           
   707                           ; 3 bytes @ 0x2D
   708  00002E                     	ds	1
   709  00002F                     ??___fttol:
   710                           
   711                           ; 0 bytes @ 0x2E
   712  00002F                     	ds	2
   713  000031                     ___ftadd@f2:
   714                           	opt stack 0
   715                           
   716                           ; 3 bytes @ 0x30
   717  000031                     	ds	3
   718  000034                     ??___ftadd:
   719  000034                     ___fttol@sign1:
   720                           	opt stack 0
   721                           
   722                           ; 1 bytes @ 0x33
   723  000034                     	ds	1
   724  000035                     ___fttol@lval:
   725                           	opt stack 0
   726                           
   727                           ; 4 bytes @ 0x34
   728  000035                     	ds	2
   729  000037                     ___ftadd@sign:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x36
   733  000037                     	ds	1
   734  000038                     ___ftadd@exp2:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0x37
   738  000038                     	ds	1
   739  000039                     ___ftadd@exp1:
   740                           	opt stack 0
   741  000039                     ___fttol@exp1:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x38
   745  000039                     	ds	1
   746  00003A                     ?___ftsub:
   747                           	opt stack 0
   748  00003A                     ___ftsub@f1:
   749                           	opt stack 0
   750                           
   751                           ; 3 bytes @ 0x39
   752  00003A                     	ds	3
   753  00003D                     ___ftsub@f2:
   754                           	opt stack 0
   755                           
   756                           ; 3 bytes @ 0x3C
   757  00003D                     	ds	3
   758  000040                     ?_printf:
   759                           	opt stack 0
   760  000040                     printf@f:
   761                           	opt stack 0
   762                           
   763                           ; 2 bytes @ 0x3F
   764  000040                     	ds	6
   765  000046                     ??_printf:
   766                           
   767                           ; 0 bytes @ 0x45
   768  000046                     	ds	6
   769  00004C                     _printf$1416:
   770                           	opt stack 0
   771                           
   772                           ; 3 bytes @ 0x4B
   773  00004C                     	ds	3
   774  00004F                     printf@ap:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x4E
   778  00004F                     	ds	2
   779  000051                     printf@flag:
   780                           	opt stack 0
   781                           
   782                           ; 2 bytes @ 0x50
   783  000051                     	ds	2
   784  000053                     printf@prec:
   785                           	opt stack 0
   786                           
   787                           ; 2 bytes @ 0x52
   788  000053                     	ds	2
   789  000055                     printf@val:
   790                           	opt stack 0
   791                           
   792                           ; 4 bytes @ 0x54
   793  000055                     	ds	4
   794  000059                     printf@exp:
   795                           	opt stack 0
   796                           
   797                           ; 2 bytes @ 0x58
   798  000059                     	ds	2
   799  00005B                     printf@tmpval:
   800                           	opt stack 0
   801                           
   802                           ; 4 bytes @ 0x5A
   803  00005B                     	ds	4
   804  00005F                     printf@fval:
   805                           	opt stack 0
   806                           
   807                           ; 3 bytes @ 0x5E
   808  00005F                     	ds	3
   809  000062                     printf@c:
   810                           	opt stack 0
   811                           
   812                           ; 1 bytes @ 0x61
   813  000062                     	ds	1
   814  000063                     ??_main:
   815                           
   816                           ; 0 bytes @ 0x62
   817  000063                     	ds	2
   818  000065                     main@R_ref_voltage:
   819                           	opt stack 0
   820                           
   821                           ; 3 bytes @ 0x64
   822  000065                     	ds	3
   823  000068                     main@num_step:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0x67
   827  000068                     	ds	2
   828  00006A                     main@voltage_v:
   829                           	opt stack 0
   830                           
   831                           ; 3 bytes @ 0x69
   832  00006A                     	ds	3
   833  00006D                     main@R_ref_current:
   834                           	opt stack 0
   835                           
   836                           ; 3 bytes @ 0x6C
   837  00006D                     	ds	3
   838  000070                     main@R_test_float:
   839                           	opt stack 0
   840                           
   841                           ; 3 bytes @ 0x6F
   842  000070                     	ds	3
   843  000073                     main@R_test:
   844                           	opt stack 0
   845                           
   846                           ; 4 bytes @ 0x72
   847  000073                     	ds	4
   848                           tblptru	equ	0xFF8
   849                           tblptrh	equ	0xFF7
   850                           tblptrl	equ	0xFF6
   851                           tablat	equ	0xFF5
   852                           postinc0	equ	0xFEE
   853                           postdec1	equ	0xFE5
   854                           fsr1l	equ	0xFE1
   855                           
   856 ;;
   857 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   858 ;;
   859 ;; *************** function _main *****************
   860 ;; Defined at:
   861 ;;		line 56 in file "Lab6pB2.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;		None
   864 ;; Auto vars:     Size  Location     Type
   865 ;;  R_test          4  114[COMRAM] long 
   866 ;;  R_test_float    3  111[COMRAM] float 
   867 ;;  R_ref_curren    3  108[COMRAM] float 
   868 ;;  voltage_v       3  105[COMRAM] float 
   869 ;;  R_ref_voltag    3  100[COMRAM] float 
   870 ;;  num_step        2  103[COMRAM] int 
   871 ;; Return value:  Size  Location     Type
   872 ;;		None               void
   873 ;; Registers used:
   874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   881 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   882 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   884 ;;Total ram usage:       20 bytes
   885 ;; Hardware stack levels required when called:    4
   886 ;; This function calls:
   887 ;;		_Activate_Buzzer
   888 ;;		_BCD_DP
   889 ;;		_BCD_Lower_Digit
   890 ;;		_BCD_Upper_Digit
   891 ;;		_D1_Yellow
   892 ;;		_Deactivate_Buzzer
   893 ;;		_Init_ADC
   894 ;;		_Init_TRIS
   895 ;;		_Select_ADC_Channel
   896 ;;		_WAIT_1_SEC
   897 ;;		___aldiv
   898 ;;		___almod
   899 ;;		___awtoft
   900 ;;		___ftadd
   901 ;;		___ftdiv
   902 ;;		___ftneg
   903 ;;		___fttol
   904 ;;		_get_full_ADC
   905 ;;		_init_UART
   906 ;;		_printf
   907 ;; This function is called by:
   908 ;;		Startup code after reset
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           	psect	text0
   913  001C22                     __ptext0:
   914                           	opt stack 0
   915  001C22                     _main:
   916                           	opt stack 27
   917                           
   918                           ;Lab6pB2.c: 58: OSCCON = 0x60;
   919                           
   920                           ;incstack = 0
   921  001C22  0E60               	movlw	96
   922  001C24  6ED3               	movwf	4051,c	;volatile
   923                           
   924                           ;Lab6pB2.c: 60: PORTB = 0x00;
   925  001C26  0E00               	movlw	0
   926  001C28  6E81               	movwf	3969,c	;volatile
   927                           
   928                           ;Lab6pB2.c: 61: PORTC = 0xFF;
   929  001C2A  6882               	setf	3970,c	;volatile
   930                           
   931                           ;Lab6pB2.c: 62: PORTD = 0xFF;
   932  001C2C  6883               	setf	3971,c	;volatile
   933                           
   934                           ;Lab6pB2.c: 63: PORTE = 0xFF;
   935  001C2E  6884               	setf	3972,c	;volatile
   936                           
   937                           ;Lab6pB2.c: 65: Init_ADC();
   938  001C30  EC1A  F018         	call	_Init_ADC	;wreg free
   939                           
   940                           ;Lab6pB2.c: 66: init_UART();
   941  001C34  EC00  F018         	call	_init_UART	;wreg free
   942                           
   943                           ;Lab6pB2.c: 67: Init_TRIS();
   944  001C38  ECF5  F017         	call	_Init_TRIS	;wreg free
   945                           
   946                           ;Lab6pB2.c: 69: Select_ADC_Channel(2);
   947  001C3C  0E02               	movlw	2
   948  001C3E  EC21  F018         	call	_Select_ADC_Channel
   949  001C42  D000               	goto	l3020
   950  001C44                     l3020:
   951                           
   952                           ;Lab6pB2.c: 72: {
   953                           ;Lab6pB2.c: 73: int num_step = get_full_ADC();
   954  001C44  ECAA  F017         	call	_get_full_ADC	;wreg free
   955  001C48  C001  F068         	movff	?_get_full_ADC,main@num_step
   956  001C4C  C002  F069         	movff	?_get_full_ADC+1,main@num_step+1
   957                           
   958                           ;Lab6pB2.c: 74: float voltage_v = (num_step * 4)/1000.0;
   959  001C50  C068  F063         	movff	main@num_step,??_main
   960  001C54  C069  F064         	movff	main@num_step+1,??_main+1
   961  001C58  90D8               	bcf	status,0,c
   962  001C5A  3663               	rlcf	??_main,f,c
   963  001C5C  3664               	rlcf	??_main+1,f,c
   964  001C5E  90D8               	bcf	status,0,c
   965  001C60  3663               	rlcf	??_main,f,c
   966  001C62  3664               	rlcf	??_main+1,f,c
   967  001C64  C063  F009         	movff	??_main,___awtoft@c
   968  001C68  C064  F00A         	movff	??_main+1,___awtoft@c+1
   969  001C6C  EC78  F017         	call	___awtoft	;wreg free
   970  001C70  C009  F00D         	movff	?___awtoft,___ftdiv@f1
   971  001C74  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
   972  001C78  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
   973  001C7C  0E00               	movlw	0
   974  001C7E  6E10               	movwf	___ftdiv@f2,c
   975  001C80  0E7A               	movlw	122
   976  001C82  6E11               	movwf	___ftdiv@f2+1,c
   977  001C84  0E44               	movlw	68
   978  001C86  6E12               	movwf	___ftdiv@f2+2,c
   979  001C88  ECB3  F013         	call	___ftdiv	;wreg free
   980  001C8C  C00D  F06A         	movff	?___ftdiv,main@voltage_v
   981  001C90  C00E  F06B         	movff	?___ftdiv+1,main@voltage_v+1
   982  001C94  C00F  F06C         	movff	?___ftdiv+2,main@voltage_v+2
   983                           
   984                           ;Lab6pB2.c: 77: float R_ref_voltage = (4.096 - voltage_v);
   985  001C98  C06A  F001         	movff	main@voltage_v,___ftneg@f1
   986  001C9C  C06B  F002         	movff	main@voltage_v+1,___ftneg@f1+1
   987  001CA0  C06C  F003         	movff	main@voltage_v+2,___ftneg@f1+2
   988  001CA4  ECBD  F017         	call	___ftneg	;wreg free
   989  001CA8  C001  F02E         	movff	?___ftneg,___ftadd@f1
   990  001CAC  C002  F02F         	movff	?___ftneg+1,___ftadd@f1+1
   991  001CB0  C003  F030         	movff	?___ftneg+2,___ftadd@f1+2
   992  001CB4  0E12               	movlw	18
   993  001CB6  6E31               	movwf	___ftadd@f2,c
   994  001CB8  0E83               	movlw	131
   995  001CBA  6E32               	movwf	___ftadd@f2+1,c
   996  001CBC  0E40               	movlw	64
   997  001CBE  6E33               	movwf	___ftadd@f2+2,c
   998  001CC0  ECD5  F010         	call	___ftadd	;wreg free
   999  001CC4  C02E  F065         	movff	?___ftadd,main@R_ref_voltage
  1000  001CC8  C02F  F066         	movff	?___ftadd+1,main@R_ref_voltage+1
  1001  001CCC  C030  F067         	movff	?___ftadd+2,main@R_ref_voltage+2
  1002                           
  1003                           ;Lab6pB2.c: 80: float R_ref_current = R_ref_voltage / 9830;
  1004  001CD0  C065  F00D         	movff	main@R_ref_voltage,___ftdiv@f1
  1005  001CD4  C066  F00E         	movff	main@R_ref_voltage+1,___ftdiv@f1+1
  1006  001CD8  C067  F00F         	movff	main@R_ref_voltage+2,___ftdiv@f1+2
  1007  001CDC  0E98               	movlw	152
  1008  001CDE  6E10               	movwf	___ftdiv@f2,c
  1009  001CE0  0E19               	movlw	25
  1010  001CE2  6E11               	movwf	___ftdiv@f2+1,c
  1011  001CE4  0E46               	movlw	70
  1012  001CE6  6E12               	movwf	___ftdiv@f2+2,c
  1013  001CE8  ECB3  F013         	call	___ftdiv	;wreg free
  1014  001CEC  C00D  F06D         	movff	?___ftdiv,main@R_ref_current
  1015  001CF0  C00E  F06E         	movff	?___ftdiv+1,main@R_ref_current+1
  1016  001CF4  C00F  F06F         	movff	?___ftdiv+2,main@R_ref_current+2
  1017                           
  1018                           ;Lab6pB2.c: 83: float R_test_float = (voltage_v / R_ref_current);
  1019  001CF8  C06A  F00D         	movff	main@voltage_v,___ftdiv@f1
  1020  001CFC  C06B  F00E         	movff	main@voltage_v+1,___ftdiv@f1+1
  1021  001D00  C06C  F00F         	movff	main@voltage_v+2,___ftdiv@f1+2
  1022  001D04  C06D  F010         	movff	main@R_ref_current,___ftdiv@f2
  1023  001D08  C06E  F011         	movff	main@R_ref_current+1,___ftdiv@f2+1
  1024  001D0C  C06F  F012         	movff	main@R_ref_current+2,___ftdiv@f2+2
  1025  001D10  ECB3  F013         	call	___ftdiv	;wreg free
  1026  001D14  C00D  F070         	movff	?___ftdiv,main@R_test_float
  1027  001D18  C00E  F071         	movff	?___ftdiv+1,main@R_test_float+1
  1028  001D1C  C00F  F072         	movff	?___ftdiv+2,main@R_test_float+2
  1029                           
  1030                           ;Lab6pB2.c: 84: long R_test = (long) R_test_float;
  1031  001D20  C070  F02B         	movff	main@R_test_float,___fttol@f1
  1032  001D24  C071  F02C         	movff	main@R_test_float+1,___fttol@f1+1
  1033  001D28  C072  F02D         	movff	main@R_test_float+2,___fttol@f1+2
  1034  001D2C  EC40  F013         	call	___fttol	;wreg free
  1035  001D30  C02B  F073         	movff	?___fttol,main@R_test
  1036  001D34  C02C  F074         	movff	?___fttol+1,main@R_test+1
  1037  001D38  C02D  F075         	movff	?___fttol+2,main@R_test+2
  1038  001D3C  C02E  F076         	movff	?___fttol+3,main@R_test+3
  1039                           
  1040                           ;Lab6pB2.c: 85: printf ("The Ref CUrrent is is %f\r\n\n\n", R_ref_current);
  1041  001D40  0E77               	movlw	low STR_1
  1042  001D42  6E40               	movwf	printf@f,c
  1043  001D44  0E10               	movlw	high STR_1
  1044  001D46  6E41               	movwf	printf@f+1,c
  1045  001D48  C06D  F042         	movff	main@R_ref_current,?_printf+2
  1046  001D4C  C06E  F043         	movff	main@R_ref_current+1,?_printf+3
  1047  001D50  C06F  F044         	movff	main@R_ref_current+2,?_printf+4
  1048  001D54  EC63  F008         	call	_printf	;wreg free
  1049                           
  1050                           ;Lab6pB2.c: 86: printf ("The float R is %f\r\n\n\n", R_test_float);
  1051  001D58  0EAE               	movlw	low STR_2
  1052  001D5A  6E40               	movwf	printf@f,c
  1053  001D5C  0E10               	movlw	high STR_2
  1054  001D5E  6E41               	movwf	printf@f+1,c
  1055  001D60  C070  F042         	movff	main@R_test_float,?_printf+2
  1056  001D64  C071  F043         	movff	main@R_test_float+1,?_printf+3
  1057  001D68  C072  F044         	movff	main@R_test_float+2,?_printf+4
  1058  001D6C  EC63  F008         	call	_printf	;wreg free
  1059                           
  1060                           ;Lab6pB2.c: 87: if (R_test < 10000)
  1061  001D70  BE76               	btfsc	main@R_test+3,7,c
  1062  001D72  D009               	goto	l3038
  1063  001D74  5076               	movf	main@R_test+3,w,c
  1064  001D76  1075               	iorwf	main@R_test+2,w,c
  1065  001D78  E147               	bnz	l3044
  1066  001D7A  0E10               	movlw	16
  1067  001D7C  5C73               	subwf	main@R_test,w,c
  1068  001D7E  0E27               	movlw	39
  1069  001D80  5874               	subwfb	main@R_test+1,w,c
  1070  001D82  B0D8               	btfsc	status,0,c
  1071  001D84  D041               	goto	l3044
  1072  001D86                     l3038:
  1073                           
  1074                           ;Lab6pB2.c: 88: {
  1075                           ;Lab6pB2.c: 89: BCD_Upper_Digit (R_test/1000);
  1076  001D86  C073  F001         	movff	main@R_test,___aldiv@dividend
  1077  001D8A  C074  F002         	movff	main@R_test+1,___aldiv@dividend+1
  1078  001D8E  C075  F003         	movff	main@R_test+2,___aldiv@dividend+2
  1079  001D92  C076  F004         	movff	main@R_test+3,___aldiv@dividend+3
  1080  001D96  0EE8               	movlw	232
  1081  001D98  6E05               	movwf	___aldiv@divisor,c
  1082  001D9A  0E03               	movlw	3
  1083  001D9C  6E06               	movwf	___aldiv@divisor+1,c
  1084  001D9E  0E00               	movlw	0
  1085  001DA0  6E07               	movwf	___aldiv@divisor+2,c
  1086  001DA2  0E00               	movlw	0
  1087  001DA4  6E08               	movwf	___aldiv@divisor+3,c
  1088  001DA6  EC24  F014         	call	___aldiv	;wreg free
  1089  001DAA  5001               	movf	?___aldiv,w,c
  1090  001DAC  EC59  F017         	call	_BCD_Upper_Digit
  1091                           
  1092                           ;Lab6pB2.c: 90: BCD_Lower_Digit (R_test/100%10);
  1093  001DB0  0E64               	movlw	100
  1094  001DB2  6E05               	movwf	___aldiv@divisor,c
  1095  001DB4  0E00               	movlw	0
  1096  001DB6  6E06               	movwf	___aldiv@divisor+1,c
  1097  001DB8  0E00               	movlw	0
  1098  001DBA  6E07               	movwf	___aldiv@divisor+2,c
  1099  001DBC  0E00               	movlw	0
  1100  001DBE  6E08               	movwf	___aldiv@divisor+3,c
  1101  001DC0  C073  F001         	movff	main@R_test,___aldiv@dividend
  1102  001DC4  C074  F002         	movff	main@R_test+1,___aldiv@dividend+1
  1103  001DC8  C075  F003         	movff	main@R_test+2,___aldiv@dividend+2
  1104  001DCC  C076  F004         	movff	main@R_test+3,___aldiv@dividend+3
  1105  001DD0  EC24  F014         	call	___aldiv	;wreg free
  1106  001DD4  C001  F00F         	movff	?___aldiv,___almod@dividend
  1107  001DD8  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
  1108  001DDC  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
  1109  001DE0  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
  1110  001DE4  0E0A               	movlw	10
  1111  001DE6  6E13               	movwf	___almod@divisor,c
  1112  001DE8  0E00               	movlw	0
  1113  001DEA  6E14               	movwf	___almod@divisor+1,c
  1114  001DEC  0E00               	movlw	0
  1115  001DEE  6E15               	movwf	___almod@divisor+2,c
  1116  001DF0  0E00               	movlw	0
  1117  001DF2  6E16               	movwf	___almod@divisor+3,c
  1118  001DF4  ECF6  F014         	call	___almod	;wreg free
  1119  001DF8  500F               	movf	?___almod,w,c
  1120  001DFA  ECDC  F017         	call	_BCD_Lower_Digit
  1121                           
  1122                           ;Lab6pB2.c: 91: BCD_DP (1);
  1123  001DFE  0E01               	movlw	1
  1124  001E00  ECE9  F017         	call	_BCD_DP
  1125                           
  1126                           ;Lab6pB2.c: 92: PORTB = 0x00;
  1127  001E04  0E00               	movlw	0
  1128  001E06  D064               	goto	L1
  1129  001E08                     l3044:
  1130                           
  1131                           ;Lab6pB2.c: 94: else if (R_test > 10000, R_test < 100000)
  1132  001E08  BE76               	btfsc	main@R_test+3,7,c
  1133  001E0A  D00A               	goto	l3046
  1134  001E0C  5076               	movf	main@R_test+3,w,c
  1135  001E0E  E162               	bnz	l3052
  1136  001E10  0EA0               	movlw	160
  1137  001E12  5C73               	subwf	main@R_test,w,c
  1138  001E14  0E86               	movlw	134
  1139  001E16  5874               	subwfb	main@R_test+1,w,c
  1140  001E18  0E01               	movlw	1
  1141  001E1A  5875               	subwfb	main@R_test+2,w,c
  1142  001E1C  B0D8               	btfsc	status,0,c
  1143  001E1E  D05A               	goto	l3052
  1144  001E20                     l3046:
  1145                           
  1146                           ;Lab6pB2.c: 95: {
  1147                           ;Lab6pB2.c: 96: BCD_Upper_Digit (R_test/10000);
  1148  001E20  C073  F001         	movff	main@R_test,___aldiv@dividend
  1149  001E24  C074  F002         	movff	main@R_test+1,___aldiv@dividend+1
  1150  001E28  C075  F003         	movff	main@R_test+2,___aldiv@dividend+2
  1151  001E2C  C076  F004         	movff	main@R_test+3,___aldiv@dividend+3
  1152  001E30  0E10               	movlw	16
  1153  001E32  6E05               	movwf	___aldiv@divisor,c
  1154  001E34  0E27               	movlw	39
  1155  001E36  6E06               	movwf	___aldiv@divisor+1,c
  1156  001E38  0E00               	movlw	0
  1157  001E3A  6E07               	movwf	___aldiv@divisor+2,c
  1158  001E3C  0E00               	movlw	0
  1159  001E3E  6E08               	movwf	___aldiv@divisor+3,c
  1160  001E40  EC24  F014         	call	___aldiv	;wreg free
  1161  001E44  5001               	movf	?___aldiv,w,c
  1162  001E46  EC59  F017         	call	_BCD_Upper_Digit
  1163                           
  1164                           ;Lab6pB2.c: 97: BCD_Lower_Digit ((R_test/1000)%10);
  1165  001E4A  0EE8               	movlw	232
  1166  001E4C  6E05               	movwf	___aldiv@divisor,c
  1167  001E4E  0E03               	movlw	3
  1168  001E50  6E06               	movwf	___aldiv@divisor+1,c
  1169  001E52  0E00               	movlw	0
  1170  001E54  6E07               	movwf	___aldiv@divisor+2,c
  1171  001E56  0E00               	movlw	0
  1172  001E58  6E08               	movwf	___aldiv@divisor+3,c
  1173  001E5A  C073  F001         	movff	main@R_test,___aldiv@dividend
  1174  001E5E  C074  F002         	movff	main@R_test+1,___aldiv@dividend+1
  1175  001E62  C075  F003         	movff	main@R_test+2,___aldiv@dividend+2
  1176  001E66  C076  F004         	movff	main@R_test+3,___aldiv@dividend+3
  1177  001E6A  EC24  F014         	call	___aldiv	;wreg free
  1178  001E6E  C001  F00F         	movff	?___aldiv,___almod@dividend
  1179  001E72  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
  1180  001E76  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
  1181  001E7A  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
  1182  001E7E  0E0A               	movlw	10
  1183  001E80  6E13               	movwf	___almod@divisor,c
  1184  001E82  0E00               	movlw	0
  1185  001E84  6E14               	movwf	___almod@divisor+1,c
  1186  001E86  0E00               	movlw	0
  1187  001E88  6E15               	movwf	___almod@divisor+2,c
  1188  001E8A  0E00               	movlw	0
  1189  001E8C  6E16               	movwf	___almod@divisor+3,c
  1190  001E8E  ECF6  F014         	call	___almod	;wreg free
  1191  001E92  500F               	movf	?___almod,w,c
  1192  001E94  ECDC  F017         	call	_BCD_Lower_Digit
  1193                           
  1194                           ;Lab6pB2.c: 98: BCD_DP (0);
  1195  001E98  0E00               	movlw	0
  1196  001E9A  ECE9  F017         	call	_BCD_DP
  1197                           
  1198                           ;Lab6pB2.c: 99: PORTB = D2_array[R_test/10000];
  1199  001E9E  C073  F001         	movff	main@R_test,___aldiv@dividend
  1200  001EA2  C074  F002         	movff	main@R_test+1,___aldiv@dividend+1
  1201  001EA6  C075  F003         	movff	main@R_test+2,___aldiv@dividend+2
  1202  001EAA  C076  F004         	movff	main@R_test+3,___aldiv@dividend+3
  1203  001EAE  0E10               	movlw	16
  1204  001EB0  6E05               	movwf	___aldiv@divisor,c
  1205  001EB2  0E27               	movlw	39
  1206  001EB4  6E06               	movwf	___aldiv@divisor+1,c
  1207  001EB6  0E00               	movlw	0
  1208  001EB8  6E07               	movwf	___aldiv@divisor+2,c
  1209  001EBA  0E00               	movlw	0
  1210  001EBC  6E08               	movwf	___aldiv@divisor+3,c
  1211  001EBE  EC24  F014         	call	___aldiv	;wreg free
  1212  001EC2  0E77               	movlw	low _D2_array
  1213  001EC4  2401               	addwf	?___aldiv,w,c
  1214  001EC6  6ED9               	movwf	fsr2l,c
  1215  001EC8  0E00               	movlw	high _D2_array
  1216  001ECA  2002               	addwfc	?___aldiv+1,w,c
  1217  001ECC  6EDA               	movwf	fsr2h,c
  1218  001ECE  50DF               	movf	indf2,w,c
  1219  001ED0                     L1:
  1220  001ED0  6E81               	movwf	3969,c	;volatile
  1221  001ED2  D000               	goto	l3052
  1222  001ED4                     l3052:
  1223                           
  1224                           ;Lab6pB2.c: 100: }
  1225                           ;Lab6pB2.c: 102: if (R_test > 70000)
  1226  001ED4  BE76               	btfsc	main@R_test+3,7,c
  1227  001ED6  D00D               	goto	l3056
  1228  001ED8  5076               	movf	main@R_test+3,w,c
  1229  001EDA  E108               	bnz	u3150
  1230  001EDC  0E71               	movlw	113
  1231  001EDE  5C73               	subwf	main@R_test,w,c
  1232  001EE0  0E11               	movlw	17
  1233  001EE2  5874               	subwfb	main@R_test+1,w,c
  1234  001EE4  0E01               	movlw	1
  1235  001EE6  5875               	subwfb	main@R_test+2,w,c
  1236  001EE8  A0D8               	btfss	status,0,c
  1237  001EEA  D003               	goto	l3056
  1238  001EEC                     u3150:
  1239                           
  1240                           ;Lab6pB2.c: 103: {
  1241                           ;Lab6pB2.c: 104: PORTB = D2_array[7];
  1242  001EEC  C07E  FF81         	movff	_D2_array+7,3969	;volatile
  1243  001EF0  D000               	goto	l3056
  1244  001EF2                     l3056:
  1245                           
  1246                           ;Lab6pB2.c: 105: }
  1247                           ;Lab6pB2.c: 107: if (R_test > 100000)
  1248  001EF2  BE76               	btfsc	main@R_test+3,7,c
  1249  001EF4  D013               	goto	l3066
  1250  001EF6  5076               	movf	main@R_test+3,w,c
  1251  001EF8  E108               	bnz	u3160
  1252  001EFA  0EA1               	movlw	161
  1253  001EFC  5C73               	subwf	main@R_test,w,c
  1254  001EFE  0E86               	movlw	134
  1255  001F00  5874               	subwfb	main@R_test+1,w,c
  1256  001F02  0E01               	movlw	1
  1257  001F04  5875               	subwfb	main@R_test+2,w,c
  1258  001F06  A0D8               	btfss	status,0,c
  1259  001F08  D009               	goto	l3066
  1260  001F0A                     u3160:
  1261                           
  1262                           ;Lab6pB2.c: 108: {
  1263                           ;Lab6pB2.c: 109: BCD_Upper_Digit (0);
  1264  001F0A  0E00               	movlw	0
  1265  001F0C  EC59  F017         	call	_BCD_Upper_Digit
  1266                           
  1267                           ;Lab6pB2.c: 110: PORTD = 0x47;
  1268  001F10  0E47               	movlw	71
  1269  001F12  6E83               	movwf	3971,c	;volatile
  1270                           
  1271                           ;Lab6pB2.c: 111: PORTDbits.RD7 = 1;
  1272  001F14  8E83               	bsf	3971,7,c	;volatile
  1273                           
  1274                           ;Lab6pB2.c: 112: PORTB = D2_array[7];
  1275  001F16  C07E  FF81         	movff	_D2_array+7,3969	;volatile
  1276  001F1A  D000               	goto	l3066
  1277  001F1C                     l3066:
  1278                           
  1279                           ;Lab6pB2.c: 113: }
  1280                           ;Lab6pB2.c: 115: if (R_test < 70)
  1281  001F1C  BE76               	btfsc	main@R_test+3,7,c
  1282  001F1E  D008               	goto	l3068
  1283  001F20  5076               	movf	main@R_test+3,w,c
  1284  001F22  1075               	iorwf	main@R_test+2,w,c
  1285  001F24  1074               	iorwf	main@R_test+1,w,c
  1286  001F26  E109               	bnz	l3072
  1287  001F28  0E46               	movlw	70
  1288  001F2A  5C73               	subwf	main@R_test,w,c
  1289  001F2C  B0D8               	btfsc	status,0,c
  1290  001F2E  D005               	goto	l3072
  1291  001F30                     l3068:
  1292                           
  1293                           ;Lab6pB2.c: 116: {
  1294                           ;Lab6pB2.c: 117: Activate_Buzzer();
  1295  001F30  EC0A  F018         	call	_Activate_Buzzer	;wreg free
  1296                           
  1297                           ;Lab6pB2.c: 118: D1_Yellow();
  1298  001F34  EC39  F018         	call	_D1_Yellow	;wreg free
  1299                           
  1300                           ;Lab6pB2.c: 119: }
  1301  001F38  D003               	goto	l3074
  1302  001F3A                     l3072:
  1303                           
  1304                           ;Lab6pB2.c: 120: else
  1305                           ;Lab6pB2.c: 121: {
  1306                           ;Lab6pB2.c: 122: Deactivate_Buzzer();
  1307  001F3A  EC35  F018         	call	_Deactivate_Buzzer	;wreg free
  1308  001F3E  D000               	goto	l3074
  1309  001F40                     l3074:
  1310                           
  1311                           ;Lab6pB2.c: 123: }
  1312                           ;Lab6pB2.c: 124: printf ("The Resistance is %li\r\n\n\n", R_test);
  1313  001F40  0E94               	movlw	low STR_3
  1314  001F42  6E40               	movwf	printf@f,c
  1315  001F44  0E10               	movlw	high STR_3
  1316  001F46  6E41               	movwf	printf@f+1,c
  1317  001F48  C073  F042         	movff	main@R_test,?_printf+2
  1318  001F4C  C074  F043         	movff	main@R_test+1,?_printf+3
  1319  001F50  C075  F044         	movff	main@R_test+2,?_printf+4
  1320  001F54  C076  F045         	movff	main@R_test+3,?_printf+5
  1321  001F58  EC63  F008         	call	_printf	;wreg free
  1322                           
  1323                           ;Lab6pB2.c: 125: WAIT_1_SEC();
  1324  001F5C  EC2C  F018         	call	_WAIT_1_SEC	;wreg free
  1325  001F60  D671               	goto	l3020
  1326  001F62  EF00  F000         	goto	start
  1327  001F66                     __end_of_main:
  1328                           	opt stack 0
  1329                           tblptru	equ	0xFF8
  1330                           tblptrh	equ	0xFF7
  1331                           tblptrl	equ	0xFF6
  1332                           tablat	equ	0xFF5
  1333                           postinc0	equ	0xFEE
  1334                           postdec1	equ	0xFE5
  1335                           fsr1l	equ	0xFE1
  1336                           indf2	equ	0xFDF
  1337                           fsr2h	equ	0xFDA
  1338                           fsr2l	equ	0xFD9
  1339                           status	equ	0xFD8
  1340                           
  1341 ;; *************** function _printf *****************
  1342 ;; Defined at:
  1343 ;;		line 464 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;  f               2   63[COMRAM] PTR const unsigned char 
  1346 ;;		 -> STR_3(26), STR_2(22), STR_1(29), 
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;  tmpval          4   90[COMRAM] struct .
  1349 ;;  val             4   84[COMRAM] unsigned long 
  1350 ;;  fval            3   94[COMRAM] unsigned long 
  1351 ;;  cp              3    0        PTR const unsigned char 
  1352 ;;  exp             2   88[COMRAM] int 
  1353 ;;  prec            2   82[COMRAM] int 
  1354 ;;  flag            2   80[COMRAM] unsigned short 
  1355 ;;  ap              2   78[COMRAM] PTR void [1]
  1356 ;;		 -> ?_printf(2), 
  1357 ;;  len             2    0        unsigned int 
  1358 ;;  width           2    0        int 
  1359 ;;  c               1   97[COMRAM] char 
  1360 ;;  d               1    0        unsigned char 
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  2   63[COMRAM] int 
  1363 ;; Registers used:
  1364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1370 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1371 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1372 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;Total ram usage:       35 bytes
  1375 ;; Hardware stack levels used:    1
  1376 ;; Hardware stack levels required when called:    3
  1377 ;; This function calls:
  1378 ;;		___awdiv
  1379 ;;		___ftadd
  1380 ;;		___ftge
  1381 ;;		___ftmul
  1382 ;;		___ftneg
  1383 ;;		___ftsub
  1384 ;;		___fttol
  1385 ;;		___lldiv
  1386 ;;		___llmod
  1387 ;;		___lltoft
  1388 ;;		___wmul
  1389 ;;		__div_to_l_
  1390 ;;		__tdiv_to_l_
  1391 ;;		_fround
  1392 ;;		_putch
  1393 ;;		_scale
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text1
  1400  0010C6                     __ptext1:
  1401                           	opt stack 0
  1402  0010C6                     _printf:
  1403                           	opt stack 27
  1404                           
  1405                           ;doprnt.c: 466: va_list ap;
  1406                           ;doprnt.c: 499: signed char c;
  1407                           ;doprnt.c: 501: int width;
  1408                           ;doprnt.c: 504: int prec;
  1409                           ;doprnt.c: 508: unsigned short flag;
  1410                           ;doprnt.c: 515: char d;
  1411                           ;doprnt.c: 516: double fval;
  1412                           ;doprnt.c: 517: int exp;
  1413                           ;doprnt.c: 523: union {
  1414                           ;doprnt.c: 524: unsigned long vd;
  1415                           ;doprnt.c: 525: double integ;
  1416                           ;doprnt.c: 526: } tmpval;
  1417                           ;doprnt.c: 528: unsigned long val;
  1418                           ;doprnt.c: 529: unsigned len;
  1419                           ;doprnt.c: 530: const char * cp;
  1420                           ;doprnt.c: 533: *ap = __va_start();
  1421                           
  1422                           ;incstack = 0
  1423  0010C6  0E42               	movlw	low (?_printf+2)
  1424  0010C8  6E4F               	movwf	printf@ap,c
  1425  0010CA  0E00               	movlw	high (?_printf+2)
  1426  0010CC  6E50               	movwf	printf@ap+1,c
  1427                           
  1428                           ;doprnt.c: 536: while(c = *f++) {
  1429  0010CE  D3AA               	goto	l2852
  1430  0010D0                     l2666:
  1431                           
  1432                           ;doprnt.c: 538: if(c != '%')
  1433  0010D0  0E25               	movlw	37
  1434  0010D2  1862               	xorwf	printf@c,w,c
  1435  0010D4  B4D8               	btfsc	status,2,c
  1436  0010D6  D004               	goto	l2670
  1437                           
  1438                           ;doprnt.c: 540: {
  1439                           ;doprnt.c: 541: (putch(c) );
  1440  0010D8  5062               	movf	printf@c,w,c
  1441  0010DA  EC13  F018         	call	_putch
  1442                           
  1443                           ;doprnt.c: 542: continue;
  1444  0010DE  D3A2               	goto	l2852
  1445  0010E0                     l2670:
  1446                           
  1447                           ;doprnt.c: 543: }
  1448                           ;doprnt.c: 548: flag = 0;
  1449  0010E0  0E00               	movlw	0
  1450  0010E2  6E52               	movwf	printf@flag+1,c
  1451  0010E4  0E00               	movlw	0
  1452  0010E6  6E51               	movwf	printf@flag,c
  1453                           
  1454                           ;doprnt.c: 635: switch(c = *f++) {
  1455                           
  1456                           ;doprnt.c: 633: loop:
  1457  0010E8  D007               	goto	l2678
  1458                           
  1459                           ;doprnt.c: 638: goto alldone;
  1460                           
  1461                           ;doprnt.c: 637: case 0:
  1462  0010EA  D3AA               	goto	l299
  1463  0010EC                     l2672:
  1464                           
  1465                           ;doprnt.c: 643: flag |= 0x10;
  1466  0010EC  8851               	bsf	printf@flag,4,c
  1467                           
  1468                           ;doprnt.c: 644: goto loop;
  1469  0010EE  D004               	goto	l2678
  1470  0010F0                     l2674:
  1471                           
  1472                           ;doprnt.c: 663: flag |= 0x400;
  1473  0010F0  8452               	bsf	printf@flag+1,2,c
  1474                           
  1475                           ;doprnt.c: 698: case 'i':
  1476                           ;doprnt.c: 699: break;
  1477                           
  1478                           ;doprnt.c: 697: case 'd':
  1479                           
  1480                           ;doprnt.c: 664: break;
  1481  0010F2  D01C               	goto	l2680
  1482                           
  1483                           ;doprnt.c: 813: continue;
  1484                           
  1485                           ;doprnt.c: 802: default:
  1486  0010F4  D397               	goto	l2852
  1487                           
  1488                           ;doprnt.c: 822: }
  1489  0010F6  D01A               	goto	l2680
  1490  0010F8                     l2678:
  1491  0010F8  C040  FFF6         	movff	printf@f,tblptrl
  1492  0010FC  C041  FFF7         	movff	printf@f+1,tblptrh
  1493  001100  4A40               	infsnz	printf@f,f,c
  1494  001102  2A41               	incf	printf@f+1,f,c
  1495  001104                     	if	0	;tblptru may be non-zero
  1496  001104                     	endif
  1497  001104                     	if	0	;tblptru may be non-zero
  1498  001104                     	endif
  1499  001104  0008               	tblrd		*
  1500  001106  CFF5 F062          	movff	tablat,printf@c
  1501  00110A  5062               	movf	printf@c,w,c
  1502                           
  1503                           ; Switch size 1, requested type "space"
  1504                           ; Number of cases is 5, Range of values is 0 to 108
  1505                           ; switch strategies available:
  1506                           ; Name         Instructions Cycles
  1507                           ; simple_byte           16     9 (average)
  1508                           ;	Chosen strategy is simple_byte
  1509  00110C  0A00               	xorlw	0	; case 0
  1510  00110E  B4D8               	btfsc	status,2,c
  1511  001110  D397               	goto	l299
  1512  001112  0A64               	xorlw	100	; case 100
  1513  001114  B4D8               	btfsc	status,2,c
  1514  001116  D00A               	goto	l2680
  1515  001118  0A02               	xorlw	2	; case 102
  1516  00111A  B4D8               	btfsc	status,2,c
  1517  00111C  D7E9               	goto	l2674
  1518  00111E  0A0F               	xorlw	15	; case 105
  1519  001120  B4D8               	btfsc	status,2,c
  1520  001122  D004               	goto	l2680
  1521  001124  0A05               	xorlw	5	; case 108
  1522  001126  B4D8               	btfsc	status,2,c
  1523  001128  D7E1               	goto	l2672
  1524  00112A  D37C               	goto	l2852
  1525  00112C                     l2680:
  1526                           
  1527                           ;doprnt.c: 825: if(flag & (0x700)) {
  1528  00112C  0E07               	movlw	7
  1529  00112E  1452               	andwf	printf@flag+1,w,c
  1530  001130  B4D8               	btfsc	status,2,c
  1531  001132  D2CA               	goto	l251
  1532                           
  1533                           ;doprnt.c: 829: prec = 6;
  1534  001134  0E00               	movlw	0
  1535  001136  6E54               	movwf	printf@prec+1,c
  1536  001138  0E06               	movlw	6
  1537  00113A  6E53               	movwf	printf@prec,c
  1538                           
  1539                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1540  00113C  C04F  FFD9         	movff	printf@ap,fsr2l
  1541  001140  C050  FFDA         	movff	printf@ap+1,fsr2h
  1542  001144  CFDE F05F          	movff	postinc2,printf@fval
  1543  001148  CFDE F060          	movff	postinc2,printf@fval+1
  1544  00114C  CFDD F061          	movff	postdec2,printf@fval+2
  1545  001150  0E03               	movlw	3
  1546  001152  264F               	addwf	printf@ap,f,c
  1547  001154  0E00               	movlw	0
  1548  001156  2250               	addwfc	printf@ap+1,f,c
  1549                           
  1550                           ;doprnt.c: 831: if(fval < 0.0) {
  1551  001158  AE61               	btfss	printf@fval+2,7,c
  1552  00115A  D011               	goto	l2694
  1553                           
  1554                           ;doprnt.c: 832: fval = -fval;
  1555  00115C  C05F  F001         	movff	printf@fval,___ftneg@f1
  1556  001160  C060  F002         	movff	printf@fval+1,___ftneg@f1+1
  1557  001164  C061  F003         	movff	printf@fval+2,___ftneg@f1+2
  1558  001168  ECBD  F017         	call	___ftneg	;wreg free
  1559  00116C  C001  F05F         	movff	?___ftneg,printf@fval
  1560  001170  C002  F060         	movff	?___ftneg+1,printf@fval+1
  1561  001174  C003  F061         	movff	?___ftneg+2,printf@fval+2
  1562                           
  1563                           ;doprnt.c: 833: flag |= 0x03;
  1564  001178  0E03               	movlw	3
  1565  00117A  1251               	iorwf	printf@flag,f,c
  1566  00117C  D000               	goto	l2694
  1567  00117E                     l2694:
  1568                           
  1569                           ;doprnt.c: 834: }
  1570                           ;doprnt.c: 835: exp = 0;
  1571  00117E  0E00               	movlw	0
  1572  001180  6E5A               	movwf	printf@exp+1,c
  1573  001182  0E00               	movlw	0
  1574  001184  6E59               	movwf	printf@exp,c
  1575                           
  1576                           ;doprnt.c: 836: if( fval!=0) {
  1577  001186  505F               	movf	printf@fval,w,c
  1578  001188  1060               	iorwf	printf@fval+1,w,c
  1579  00118A  1061               	iorwf	printf@fval+2,w,c
  1580  00118C  B4D8               	btfsc	status,2,c
  1581  00118E  D085               	goto	l2722
  1582                           
  1583                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1584  001190  0E82               	movlw	130
  1585  001192  6E46               	movwf	??_printf& (0+255),c
  1586  001194  0EFF               	movlw	255
  1587  001196  6E47               	movwf	(??_printf+1)& (0+255),c
  1588  001198  C05F  F048         	movff	printf@fval,??_printf+2
  1589  00119C  C060  F049         	movff	printf@fval+1,??_printf+3
  1590  0011A0  C061  F04A         	movff	printf@fval+2,??_printf+4
  1591  0011A4  C062  F04B         	movff	printf@fval+3,??_printf+5
  1592  0011A8  0E10               	movlw	16
  1593  0011AA  D005               	goto	u2660
  1594  0011AC                     u2665:
  1595  0011AC  90D8               	bcf	status,0,c
  1596  0011AE  324B               	rrcf	??_printf+5,f,c
  1597  0011B0  324A               	rrcf	??_printf+4,f,c
  1598  0011B2  3249               	rrcf	??_printf+3,f,c
  1599  0011B4  3248               	rrcf	??_printf+2,f,c
  1600  0011B6                     u2660:
  1601  0011B6  2EE8               	decfsz	wreg,f,c
  1602  0011B8  D7F9               	goto	u2665
  1603  0011BA  5048               	movf	??_printf+2,w,c
  1604  0011BC  2446               	addwf	??_printf,w,c
  1605  0011BE  6E59               	movwf	printf@exp,c
  1606  0011C0  0E00               	movlw	0
  1607  0011C2  2047               	addwfc	??_printf+1,w,c
  1608  0011C4  6E5A               	movwf	printf@exp+1,c
  1609                           
  1610                           ;doprnt.c: 838: exp--;
  1611  0011C6  0659               	decf	printf@exp,f,c
  1612  0011C8  A0D8               	btfss	status,0,c
  1613  0011CA  065A               	decf	printf@exp+1,f,c
  1614                           
  1615                           ;doprnt.c: 839: exp *= 3;
  1616  0011CC  C059  F00F         	movff	printf@exp,___wmul@multiplier
  1617  0011D0  C05A  F010         	movff	printf@exp+1,___wmul@multiplier+1
  1618  0011D4  0E00               	movlw	0
  1619  0011D6  6E12               	movwf	___wmul@multiplicand+1,c
  1620  0011D8  0E03               	movlw	3
  1621  0011DA  6E11               	movwf	___wmul@multiplicand,c
  1622  0011DC  EC96  F017         	call	___wmul	;wreg free
  1623  0011E0  C00F  F059         	movff	?___wmul,printf@exp
  1624  0011E4  C010  F05A         	movff	?___wmul+1,printf@exp+1
  1625                           
  1626                           ;doprnt.c: 840: exp /= 10;
  1627  0011E8  C059  F007         	movff	printf@exp,___awdiv@dividend
  1628  0011EC  C05A  F008         	movff	printf@exp+1,___awdiv@dividend+1
  1629  0011F0  0E00               	movlw	0
  1630  0011F2  6E0A               	movwf	___awdiv@divisor+1,c
  1631  0011F4  0E0A               	movlw	10
  1632  0011F6  6E09               	movwf	___awdiv@divisor,c
  1633  0011F8  EC55  F015         	call	___awdiv	;wreg free
  1634  0011FC  C007  F059         	movff	?___awdiv,printf@exp
  1635  001200  C008  F05A         	movff	?___awdiv+1,printf@exp+1
  1636                           
  1637                           ;doprnt.c: 841: if(exp < 0)
  1638  001204  AE5A               	btfss	printf@exp+1,7,c
  1639  001206  D004               	goto	l2710
  1640                           
  1641                           ;doprnt.c: 842: exp--;
  1642  001208  0659               	decf	printf@exp,f,c
  1643  00120A  A0D8               	btfss	status,0,c
  1644  00120C  065A               	decf	printf@exp+1,f,c
  1645  00120E  D000               	goto	l2710
  1646  001210                     l2710:
  1647                           
  1648                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1649  001210  5059               	movf	printf@exp,w,c
  1650  001212  0800               	sublw	0
  1651  001214  EC21  F00C         	call	_scale
  1652  001218  C024  F05B         	movff	?_scale,printf@tmpval
  1653  00121C  C025  F05C         	movff	?_scale+1,printf@tmpval+1
  1654  001220  C026  F05D         	movff	?_scale+2,printf@tmpval+2
  1655                           
  1656                           ;doprnt.c: 847: tmpval.integ *= fval;
  1657  001224  C05B  F015         	movff	printf@tmpval,___ftmul@f1
  1658  001228  C05C  F016         	movff	printf@tmpval+1,___ftmul@f1+1
  1659  00122C  C05D  F017         	movff	printf@tmpval+2,___ftmul@f1+2
  1660  001230  C05F  F018         	movff	printf@fval,___ftmul@f2
  1661  001234  C060  F019         	movff	printf@fval+1,___ftmul@f2+1
  1662  001238  C061  F01A         	movff	printf@fval+2,___ftmul@f2+2
  1663  00123C  ECC4  F012         	call	___ftmul	;wreg free
  1664  001240  C015  F05B         	movff	?___ftmul,printf@tmpval
  1665  001244  C016  F05C         	movff	?___ftmul+1,printf@tmpval+1
  1666  001248  C017  F05D         	movff	?___ftmul+2,printf@tmpval+2
  1667                           
  1668                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1669  00124C  C05B  F001         	movff	printf@tmpval,___ftge@ff1
  1670  001250  C05C  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1671  001254  C05D  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1672  001258  0E00               	movlw	0
  1673  00125A  6E04               	movwf	___ftge@ff2,c
  1674  00125C  0E80               	movlw	128
  1675  00125E  6E05               	movwf	___ftge@ff2+1,c
  1676  001260  0E3F               	movlw	63
  1677  001262  6E06               	movwf	___ftge@ff2+2,c
  1678  001264  ECA0  F015         	call	___ftge	;wreg free
  1679  001268  B0D8               	btfsc	status,0,c
  1680  00126A  D004               	goto	l2718
  1681                           
  1682                           ;doprnt.c: 849: exp--;
  1683  00126C  0659               	decf	printf@exp,f,c
  1684  00126E  A0D8               	btfss	status,0,c
  1685  001270  065A               	decf	printf@exp+1,f,c
  1686  001272  D013               	goto	l2722
  1687  001274                     l2718:
  1688                           
  1689                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1690  001274  C05B  F001         	movff	printf@tmpval,___ftge@ff1
  1691  001278  C05C  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1692  00127C  C05D  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1693  001280  0E00               	movlw	0
  1694  001282  6E04               	movwf	___ftge@ff2,c
  1695  001284  0E20               	movlw	32
  1696  001286  6E05               	movwf	___ftge@ff2+1,c
  1697  001288  0E41               	movlw	65
  1698  00128A  6E06               	movwf	___ftge@ff2+2,c
  1699  00128C  ECA0  F015         	call	___ftge	;wreg free
  1700  001290  A0D8               	btfss	status,0,c
  1701  001292  D003               	goto	l2722
  1702                           
  1703                           ;doprnt.c: 851: exp++;
  1704  001294  4A59               	infsnz	printf@exp,f,c
  1705  001296  2A5A               	incf	printf@exp+1,f,c
  1706  001298  D000               	goto	l2722
  1707  00129A                     l2722:
  1708                           
  1709                           ;doprnt.c: 852: }
  1710                           ;doprnt.c: 1112: if(prec <= 12)
  1711  00129A  BE54               	btfsc	printf@prec+1,7,c
  1712  00129C  D006               	goto	l2724
  1713  00129E  5054               	movf	printf@prec+1,w,c
  1714  0012A0  E11C               	bnz	l2726
  1715  0012A2  0E0D               	movlw	13
  1716  0012A4  5C53               	subwf	printf@prec,w,c
  1717  0012A6  B0D8               	btfsc	status,0,c
  1718  0012A8  D018               	goto	l2726
  1719  0012AA                     l2724:
  1720                           
  1721                           ;doprnt.c: 1113: fval += fround(prec);
  1722  0012AA  C05F  F02E         	movff	printf@fval,___ftadd@f1
  1723  0012AE  C060  F02F         	movff	printf@fval+1,___ftadd@f1+1
  1724  0012B2  C061  F030         	movff	printf@fval+2,___ftadd@f1+2
  1725  0012B6  5053               	movf	printf@prec,w,c
  1726  0012B8  ECB3  F00F         	call	_fround
  1727  0012BC  C024  F031         	movff	?_fround,___ftadd@f2
  1728  0012C0  C025  F032         	movff	?_fround+1,___ftadd@f2+1
  1729  0012C4  C026  F033         	movff	?_fround+2,___ftadd@f2+2
  1730  0012C8  ECD5  F010         	call	___ftadd	;wreg free
  1731  0012CC  C02E  F05F         	movff	?___ftadd,printf@fval
  1732  0012D0  C02F  F060         	movff	?___ftadd+1,printf@fval+1
  1733  0012D4  C030  F061         	movff	?___ftadd+2,printf@fval+2
  1734  0012D8  D000               	goto	l2726
  1735  0012DA                     l2726:
  1736                           
  1737                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1738  0012DA  BE5A               	btfsc	printf@exp+1,7,c
  1739  0012DC  D006               	goto	l2728
  1740  0012DE  505A               	movf	printf@exp+1,w,c
  1741  0012E0  E120               	bnz	l2734
  1742  0012E2  0E0A               	movlw	10
  1743  0012E4  5C59               	subwf	printf@exp,w,c
  1744  0012E6  B0D8               	btfsc	status,0,c
  1745  0012E8  D01C               	goto	l2734
  1746  0012EA                     l2728:
  1747  0012EA  505F               	movf	printf@fval,w,c
  1748  0012EC  1060               	iorwf	printf@fval+1,w,c
  1749  0012EE  1061               	iorwf	printf@fval+2,w,c
  1750  0012F0  B4D8               	btfsc	status,2,c
  1751  0012F2  D06D               	goto	l2748
  1752  0012F4  C05F  F02B         	movff	printf@fval,___fttol@f1
  1753  0012F8  C060  F02C         	movff	printf@fval+1,___fttol@f1+1
  1754  0012FC  C061  F02D         	movff	printf@fval+2,___fttol@f1+2
  1755  001300  EC40  F013         	call	___fttol	;wreg free
  1756  001304  502B               	movf	?___fttol,w,c
  1757  001306  102C               	iorwf	?___fttol+1,w,c
  1758  001308  102D               	iorwf	?___fttol+2,w,c
  1759  00130A  102E               	iorwf	?___fttol+3,w,c
  1760  00130C  B4D8               	btfsc	status,2,c
  1761  00130E  BE5A               	btfsc	printf@exp+1,7,c
  1762  001310  D05E               	goto	l2748
  1763  001312  505A               	movf	printf@exp+1,w,c
  1764  001314  E106               	bnz	l2734
  1765  001316  0E02               	movlw	2
  1766  001318  5C59               	subwf	printf@exp,w,c
  1767  00131A  B0D8               	btfsc	status,0,c
  1768  00131C  D002               	goto	l2734
  1769  00131E  D057               	goto	l2748
  1770  001320  D000               	goto	l2734
  1771  001322                     l2734:
  1772                           
  1773                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1774  001322  C05B  F001         	movff	printf@tmpval,___ftge@ff1
  1775  001326  C05C  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1776  00132A  C05D  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1777  00132E  0E70               	movlw	112
  1778  001330  6E04               	movwf	___ftge@ff2,c
  1779  001332  0E89               	movlw	137
  1780  001334  6E05               	movwf	___ftge@ff2+1,c
  1781  001336  0E40               	movlw	64
  1782  001338  6E06               	movwf	___ftge@ff2+2,c
  1783  00133A  ECA0  F015         	call	___ftge	;wreg free
  1784  00133E  B0D8               	btfsc	status,0,c
  1785  001340  D002               	goto	l2738
  1786                           
  1787                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1788  001342  0EF7               	movlw	247
  1789  001344  D001               	goto	L2
  1790  001346                     l2738:
  1791                           
  1792                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1793  001346  0EF8               	movlw	248
  1794  001348                     L2:
  1795  001348  2659               	addwf	printf@exp,f,c
  1796  00134A  0EFF               	movlw	255
  1797  00134C  225A               	addwfc	printf@exp+1,f,c
  1798  00134E  D000               	goto	l2740
  1799  001350                     l2740:
  1800                           
  1801                           ;doprnt.c: 1124: }
  1802                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1803  001350  5059               	movf	printf@exp,w,c
  1804  001352  EC21  F00C         	call	_scale
  1805  001356  C024  F05B         	movff	?_scale,printf@tmpval
  1806  00135A  C025  F05C         	movff	?_scale+1,printf@tmpval+1
  1807  00135E  C026  F05D         	movff	?_scale+2,printf@tmpval+2
  1808                           
  1809                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1810  001362  D017               	goto	l2744
  1811  001364  C05F  F001         	movff	printf@fval,__div_to_l_@f1
  1812  001368  C060  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  1813  00136C  C061  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  1814  001370  C05B  F004         	movff	printf@tmpval,__div_to_l_@f2
  1815  001374  C05C  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  1816  001378  C05D  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  1817  00137C  EC3F  F012         	call	__div_to_l_	;wreg free
  1818  001380  C001  F055         	movff	?__div_to_l_,printf@val
  1819  001384  C002  F056         	movff	?__div_to_l_+1,printf@val+1
  1820  001388  C003  F057         	movff	?__div_to_l_+2,printf@val+2
  1821  00138C  C004  F058         	movff	?__div_to_l_+3,printf@val+3
  1822  001390  D017               	goto	l2746
  1823  001392                     l2744:
  1824  001392  C05F  F001         	movff	printf@fval,__tdiv_to_l_@f1
  1825  001396  C060  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1826  00139A  C061  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1827  00139E  C05B  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  1828  0013A2  C05C  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1829  0013A6  C05D  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1830  0013AA  ECB7  F011         	call	__tdiv_to_l_	;wreg free
  1831  0013AE  C001  F055         	movff	?__tdiv_to_l_,printf@val
  1832  0013B2  C002  F056         	movff	?__tdiv_to_l_+1,printf@val+1
  1833  0013B6  C003  F057         	movff	?__tdiv_to_l_+2,printf@val+2
  1834  0013BA  C004  F058         	movff	?__tdiv_to_l_+3,printf@val+3
  1835  0013BE  D000               	goto	l2746
  1836  0013C0                     l2746:
  1837                           
  1838                           ;doprnt.c: 1129: fval = 0.0;
  1839  0013C0  0E00               	movlw	0
  1840  0013C2  6E5F               	movwf	printf@fval,c
  1841  0013C4  0E00               	movlw	0
  1842  0013C6  6E60               	movwf	printf@fval+1,c
  1843  0013C8  0E00               	movlw	0
  1844  0013CA  6E61               	movwf	printf@fval+2,c
  1845                           
  1846                           ;doprnt.c: 1130: } else {
  1847  0013CC  D033               	goto	l2752
  1848  0013CE                     l2748:
  1849                           
  1850                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1851  0013CE  C05F  F02B         	movff	printf@fval,___fttol@f1
  1852  0013D2  C060  F02C         	movff	printf@fval+1,___fttol@f1+1
  1853  0013D6  C061  F02D         	movff	printf@fval+2,___fttol@f1+2
  1854  0013DA  EC40  F013         	call	___fttol	;wreg free
  1855  0013DE  C02B  F055         	movff	?___fttol,printf@val
  1856  0013E2  C02C  F056         	movff	?___fttol+1,printf@val+1
  1857  0013E6  C02D  F057         	movff	?___fttol+2,printf@val+2
  1858  0013EA  C02E  F058         	movff	?___fttol+3,printf@val+3
  1859                           
  1860                           ;doprnt.c: 1132: fval -= (double)val;
  1861  0013EE  C05F  F03A         	movff	printf@fval,___ftsub@f1
  1862  0013F2  C060  F03B         	movff	printf@fval+1,___ftsub@f1+1
  1863  0013F6  C061  F03C         	movff	printf@fval+2,___ftsub@f1+2
  1864  0013FA  C055  F009         	movff	printf@val,___lltoft@c
  1865  0013FE  C056  F00A         	movff	printf@val+1,___lltoft@c+1
  1866  001402  C057  F00B         	movff	printf@val+2,___lltoft@c+2
  1867  001406  C058  F00C         	movff	printf@val+3,___lltoft@c+3
  1868  00140A  ECE2  F016         	call	___lltoft	;wreg free
  1869  00140E  C009  F03D         	movff	?___lltoft,___ftsub@f2
  1870  001412  C00A  F03E         	movff	?___lltoft+1,___ftsub@f2+1
  1871  001416  C00B  F03F         	movff	?___lltoft+2,___ftsub@f2+2
  1872  00141A  EC37  F017         	call	___ftsub	;wreg free
  1873  00141E  C03A  F05F         	movff	?___ftsub,printf@fval
  1874  001422  C03B  F060         	movff	?___ftsub+1,printf@fval+1
  1875  001426  C03C  F061         	movff	?___ftsub+2,printf@fval+2
  1876                           
  1877                           ;doprnt.c: 1133: exp = 0;
  1878  00142A  0E00               	movlw	0
  1879  00142C  6E5A               	movwf	printf@exp+1,c
  1880  00142E  0E00               	movlw	0
  1881  001430  6E59               	movwf	printf@exp,c
  1882  001432  D000               	goto	l2752
  1883  001434                     l2752:
  1884                           
  1885                           ;doprnt.c: 1134: }
  1886                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1887  001434  0E01               	movlw	1
  1888  001436  6E62               	movwf	printf@c,c
  1889  001438                     l2754:
  1890  001438  0E0A               	movlw	10
  1891  00143A  1862               	xorwf	printf@c,w,c
  1892  00143C  B4D8               	btfsc	status,2,c
  1893  00143E  D01C               	goto	l2766
  1894  001440  D001               	goto	l2758
  1895  001442  D01A               	goto	l2766
  1896  001444                     l2758:
  1897                           
  1898                           ;doprnt.c: 1137: if(val < dpowers[c])
  1899  001444  5062               	movf	printf@c,w,c
  1900  001446  0D04               	mullw	4
  1901  001448  0E01               	movlw	low _dpowers
  1902  00144A  24F3               	addwf	prodl,w,c
  1903  00144C  6EF6               	movwf	tblptrl,c
  1904  00144E  0E10               	movlw	high _dpowers
  1905  001450  20F4               	addwfc	prodh,w,c
  1906  001452  6EF7               	movwf	tblptrh,c
  1907  001454                     	if	0	;There are less than 3 active tblptr bytes
  1908  001454                     	endif
  1909  001454  0009               	tblrd		*+
  1910  001456  50F5               	movf	tablat,w,c
  1911  001458  5C55               	subwf	printf@val,w,c
  1912  00145A  0009               	tblrd		*+
  1913  00145C  50F5               	movf	tablat,w,c
  1914  00145E  5856               	subwfb	printf@val+1,w,c
  1915  001460  0009               	tblrd		*+
  1916  001462  50F5               	movf	tablat,w,c
  1917  001464  5857               	subwfb	printf@val+2,w,c
  1918  001466  0009               	tblrd		*+
  1919  001468  50F5               	movf	tablat,w,c
  1920  00146A  5858               	subwfb	printf@val+3,w,c
  1921  00146C  A0D8               	btfss	status,0,c
  1922  00146E  D004               	goto	l2766
  1923  001470  D001               	goto	l2762
  1924                           
  1925                           ;doprnt.c: 1138: break;
  1926  001472  D002               	goto	l2766
  1927  001474                     l2762:
  1928  001474  2A62               	incf	printf@c,f,c
  1929  001476  D7E0               	goto	l2754
  1930  001478                     l2766:
  1931                           
  1932                           ;doprnt.c: 1175: {
  1933                           ;doprnt.c: 1188: if(flag & 0x03)
  1934  001478  0E03               	movlw	3
  1935  00147A  1451               	andwf	printf@flag,w,c
  1936  00147C  6E46               	movwf	??_printf& (0+255),c
  1937  00147E  0E00               	movlw	0
  1938  001480  1452               	andwf	printf@flag+1,w,c
  1939  001482  6E47               	movwf	(??_printf+1)& (0+255),c
  1940  001484  5046               	movf	??_printf,w,c
  1941  001486  1047               	iorwf	??_printf+1,w,c
  1942  001488  B4D8               	btfsc	status,2,c
  1943  00148A  D049               	goto	l2776
  1944                           
  1945                           ;doprnt.c: 1190: (putch('-') );
  1946  00148C  0E2D               	movlw	45
  1947  00148E  EC13  F018         	call	_putch
  1948                           
  1949                           ;doprnt.c: 1195: }
  1950                           ;doprnt.c: 1196: while(c--) {
  1951  001492  D045               	goto	l2776
  1952  001494                     l2770:
  1953                           
  1954                           ;doprnt.c: 1200: {
  1955                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1956  001494  C055  F001         	movff	printf@val,___lldiv@dividend
  1957  001498  C056  F002         	movff	printf@val+1,___lldiv@dividend+1
  1958  00149C  C057  F003         	movff	printf@val+2,___lldiv@dividend+2
  1959  0014A0  C058  F004         	movff	printf@val+3,___lldiv@dividend+3
  1960  0014A4  5062               	movf	printf@c,w,c
  1961  0014A6  0D04               	mullw	4
  1962  0014A8  0E01               	movlw	low _dpowers
  1963  0014AA  24F3               	addwf	prodl,w,c
  1964  0014AC  6EF6               	movwf	tblptrl,c
  1965  0014AE  0E10               	movlw	high _dpowers
  1966  0014B0  20F4               	addwfc	prodh,w,c
  1967  0014B2  6EF7               	movwf	tblptrh,c
  1968  0014B4                     	if	0	;There are less than 3 active tblptr bytes
  1969  0014B4                     	endif
  1970  0014B4  0009               	tblrd		*+
  1971  0014B6  CFF5 F005          	movff	tablat,___lldiv@divisor
  1972  0014BA  0009               	tblrd		*+
  1973  0014BC  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1974  0014C0  0009               	tblrd		*+
  1975  0014C2  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1976  0014C6  000A               	tblrd		*-
  1977  0014C8  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1978  0014CC  ECEB  F015         	call	___lldiv	;wreg free
  1979  0014D0  C001  F05B         	movff	?___lldiv,printf@tmpval
  1980  0014D4  C002  F05C         	movff	?___lldiv+1,printf@tmpval+1
  1981  0014D8  C003  F05D         	movff	?___lldiv+2,printf@tmpval+2
  1982  0014DC  C004  F05E         	movff	?___lldiv+3,printf@tmpval+3
  1983                           
  1984                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1985  0014E0  C05B  F00E         	movff	printf@tmpval,___llmod@dividend
  1986  0014E4  C05C  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  1987  0014E8  C05D  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  1988  0014EC  C05E  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  1989  0014F0  0E0A               	movlw	10
  1990  0014F2  6E12               	movwf	___llmod@divisor,c
  1991  0014F4  0E00               	movlw	0
  1992  0014F6  6E13               	movwf	___llmod@divisor+1,c
  1993  0014F8  0E00               	movlw	0
  1994  0014FA  6E14               	movwf	___llmod@divisor+2,c
  1995  0014FC  0E00               	movlw	0
  1996  0014FE  6E15               	movwf	___llmod@divisor+3,c
  1997  001500  EC72  F016         	call	___llmod	;wreg free
  1998  001504  C00E  F05B         	movff	?___llmod,printf@tmpval
  1999  001508  C00F  F05C         	movff	?___llmod+1,printf@tmpval+1
  2000  00150C  C010  F05D         	movff	?___llmod+2,printf@tmpval+2
  2001  001510  C011  F05E         	movff	?___llmod+3,printf@tmpval+3
  2002                           
  2003                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  2004  001514  505B               	movf	printf@tmpval,w,c
  2005  001516  0F30               	addlw	48
  2006  001518  EC13  F018         	call	_putch
  2007  00151C  D000               	goto	l2776
  2008  00151E                     l2776:
  2009  00151E  0662               	decf	printf@c,f,c
  2010  001520  2862               	incf	printf@c,w,c
  2011  001522  B4D8               	btfsc	status,2,c
  2012  001524  D009               	goto	l2782
  2013  001526  D7B6               	goto	l2770
  2014                           
  2015                           ;doprnt.c: 1204: }
  2016                           ;doprnt.c: 1206: }
  2017                           ;doprnt.c: 1207: while(exp > 0) {
  2018  001528  D007               	goto	l2782
  2019  00152A                     l2778:
  2020                           
  2021                           ;doprnt.c: 1208: (putch('0') );
  2022  00152A  0E30               	movlw	48
  2023  00152C  EC13  F018         	call	_putch
  2024                           
  2025                           ;doprnt.c: 1209: exp--;
  2026  001530  0659               	decf	printf@exp,f,c
  2027  001532  A0D8               	btfss	status,0,c
  2028  001534  065A               	decf	printf@exp+1,f,c
  2029  001536  D000               	goto	l2782
  2030  001538                     l2782:
  2031  001538  BE5A               	btfsc	printf@exp+1,7,c
  2032  00153A  D005               	goto	l2784
  2033  00153C  505A               	movf	printf@exp+1,w,c
  2034  00153E  E1F5               	bnz	l2778
  2035  001540  0459               	decf	printf@exp,w,c
  2036  001542  B0D8               	btfsc	status,0,c
  2037  001544  D7F2               	goto	l2778
  2038  001546                     l2784:
  2039                           
  2040                           ;doprnt.c: 1210: }
  2041                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2042  001546  BE54               	btfsc	printf@prec+1,7,c
  2043  001548  D009               	goto	l279
  2044  00154A  5054               	movf	printf@prec+1,w,c
  2045  00154C  E104               	bnz	u2820
  2046  00154E  0E09               	movlw	9
  2047  001550  5C53               	subwf	printf@prec,w,c
  2048  001552  A0D8               	btfss	status,0,c
  2049  001554  D003               	goto	l279
  2050  001556                     u2820:
  2051                           
  2052                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2053  001556  0E08               	movlw	8
  2054  001558  6E62               	movwf	printf@c,c
  2055  00155A  D003               	goto	l2788
  2056  00155C                     l279:
  2057                           
  2058                           ;doprnt.c: 1213: else
  2059                           ;doprnt.c: 1214: c = prec;
  2060  00155C  C053  F062         	movff	printf@prec,printf@c
  2061  001560  D000               	goto	l2788
  2062  001562                     l2788:
  2063                           
  2064                           ;doprnt.c: 1215: prec -= c;
  2065  001562  5062               	movf	printf@c,w,c
  2066  001564  5E53               	subwf	printf@prec,f,c
  2067  001566  0E00               	movlw	0
  2068  001568  BE62               	btfsc	printf@c,7,c
  2069  00156A  0EFF               	movlw	255
  2070  00156C  5A54               	subwfb	printf@prec+1,f,c
  2071                           
  2072                           ;doprnt.c: 1219: if(c)
  2073  00156E  5062               	movf	printf@c,w,c
  2074  001570  B4D8               	btfsc	status,2,c
  2075  001572  D004               	goto	l2794
  2076                           
  2077                           ;doprnt.c: 1221: (putch('.') );
  2078  001574  0E2E               	movlw	46
  2079  001576  EC13  F018         	call	_putch
  2080  00157A  D000               	goto	l2794
  2081  00157C                     l2794:
  2082                           
  2083                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2084  00157C  5062               	movf	printf@c,w,c
  2085  00157E  EC21  F00C         	call	_scale
  2086  001582  C024  F04C         	movff	?_scale,_printf$1416
  2087  001586  C025  F04D         	movff	?_scale+1,_printf$1416+1
  2088  00158A  C026  F04E         	movff	?_scale+2,_printf$1416+2
  2089                           
  2090                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2091  00158E  C05F  F018         	movff	printf@fval,___ftmul@f2
  2092  001592  C060  F019         	movff	printf@fval+1,___ftmul@f2+1
  2093  001596  C061  F01A         	movff	printf@fval+2,___ftmul@f2+2
  2094  00159A  C04C  F015         	movff	_printf$1416,___ftmul@f1
  2095  00159E  C04D  F016         	movff	_printf$1416+1,___ftmul@f1+1
  2096  0015A2  C04E  F017         	movff	_printf$1416+2,___ftmul@f1+2
  2097  0015A6  ECC4  F012         	call	___ftmul	;wreg free
  2098  0015AA  C015  F02B         	movff	?___ftmul,___fttol@f1
  2099  0015AE  C016  F02C         	movff	?___ftmul+1,___fttol@f1+1
  2100  0015B2  C017  F02D         	movff	?___ftmul+2,___fttol@f1+2
  2101  0015B6  EC40  F013         	call	___fttol	;wreg free
  2102  0015BA  C02B  F055         	movff	?___fttol,printf@val
  2103  0015BE  C02C  F056         	movff	?___fttol+1,printf@val+1
  2104  0015C2  C02D  F057         	movff	?___fttol+2,printf@val+2
  2105  0015C6  C02E  F058         	movff	?___fttol+3,printf@val+3
  2106                           
  2107                           ;doprnt.c: 1228: while(c--) {
  2108  0015CA  D06B               	goto	l2804
  2109  0015CC                     l2798:
  2110                           
  2111                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2112  0015CC  C055  F001         	movff	printf@val,___lldiv@dividend
  2113  0015D0  C056  F002         	movff	printf@val+1,___lldiv@dividend+1
  2114  0015D4  C057  F003         	movff	printf@val+2,___lldiv@dividend+2
  2115  0015D8  C058  F004         	movff	printf@val+3,___lldiv@dividend+3
  2116  0015DC  5062               	movf	printf@c,w,c
  2117  0015DE  0D04               	mullw	4
  2118  0015E0  0E01               	movlw	low _dpowers
  2119  0015E2  24F3               	addwf	prodl,w,c
  2120  0015E4  6EF6               	movwf	tblptrl,c
  2121  0015E6  0E10               	movlw	high _dpowers
  2122  0015E8  20F4               	addwfc	prodh,w,c
  2123  0015EA  6EF7               	movwf	tblptrh,c
  2124  0015EC                     	if	0	;There are less than 3 active tblptr bytes
  2125  0015EC                     	endif
  2126  0015EC  0009               	tblrd		*+
  2127  0015EE  CFF5 F005          	movff	tablat,___lldiv@divisor
  2128  0015F2  0009               	tblrd		*+
  2129  0015F4  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2130  0015F8  0009               	tblrd		*+
  2131  0015FA  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2132  0015FE  000A               	tblrd		*-
  2133  001600  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2134  001604  ECEB  F015         	call	___lldiv	;wreg free
  2135  001608  C001  F05B         	movff	?___lldiv,printf@tmpval
  2136  00160C  C002  F05C         	movff	?___lldiv+1,printf@tmpval+1
  2137  001610  C003  F05D         	movff	?___lldiv+2,printf@tmpval+2
  2138  001614  C004  F05E         	movff	?___lldiv+3,printf@tmpval+3
  2139                           
  2140                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2141  001618  C05B  F00E         	movff	printf@tmpval,___llmod@dividend
  2142  00161C  C05C  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  2143  001620  C05D  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  2144  001624  C05E  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  2145  001628  0E0A               	movlw	10
  2146  00162A  6E12               	movwf	___llmod@divisor,c
  2147  00162C  0E00               	movlw	0
  2148  00162E  6E13               	movwf	___llmod@divisor+1,c
  2149  001630  0E00               	movlw	0
  2150  001632  6E14               	movwf	___llmod@divisor+2,c
  2151  001634  0E00               	movlw	0
  2152  001636  6E15               	movwf	___llmod@divisor+3,c
  2153  001638  EC72  F016         	call	___llmod	;wreg free
  2154  00163C  C00E  F05B         	movff	?___llmod,printf@tmpval
  2155  001640  C00F  F05C         	movff	?___llmod+1,printf@tmpval+1
  2156  001644  C010  F05D         	movff	?___llmod+2,printf@tmpval+2
  2157  001648  C011  F05E         	movff	?___llmod+3,printf@tmpval+3
  2158                           
  2159                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  2160  00164C  505B               	movf	printf@tmpval,w,c
  2161  00164E  0F30               	addlw	48
  2162  001650  EC13  F018         	call	_putch
  2163                           
  2164                           ;doprnt.c: 1232: val %= dpowers[c];
  2165  001654  C055  F00E         	movff	printf@val,___llmod@dividend
  2166  001658  C056  F00F         	movff	printf@val+1,___llmod@dividend+1
  2167  00165C  C057  F010         	movff	printf@val+2,___llmod@dividend+2
  2168  001660  C058  F011         	movff	printf@val+3,___llmod@dividend+3
  2169  001664  5062               	movf	printf@c,w,c
  2170  001666  0D04               	mullw	4
  2171  001668  0E01               	movlw	low _dpowers
  2172  00166A  24F3               	addwf	prodl,w,c
  2173  00166C  6EF6               	movwf	tblptrl,c
  2174  00166E  0E10               	movlw	high _dpowers
  2175  001670  20F4               	addwfc	prodh,w,c
  2176  001672  6EF7               	movwf	tblptrh,c
  2177  001674                     	if	0	;There are less than 3 active tblptr bytes
  2178  001674                     	endif
  2179  001674  0009               	tblrd		*+
  2180  001676  CFF5 F012          	movff	tablat,___llmod@divisor
  2181  00167A  0009               	tblrd		*+
  2182  00167C  CFF5 F013          	movff	tablat,___llmod@divisor+1
  2183  001680  0009               	tblrd		*+
  2184  001682  CFF5 F014          	movff	tablat,___llmod@divisor+2
  2185  001686  000A               	tblrd		*-
  2186  001688  CFF5 F015          	movff	tablat,___llmod@divisor+3
  2187  00168C  EC72  F016         	call	___llmod	;wreg free
  2188  001690  C00E  F055         	movff	?___llmod,printf@val
  2189  001694  C00F  F056         	movff	?___llmod+1,printf@val+1
  2190  001698  C010  F057         	movff	?___llmod+2,printf@val+2
  2191  00169C  C011  F058         	movff	?___llmod+3,printf@val+3
  2192  0016A0  D000               	goto	l2804
  2193  0016A2                     l2804:
  2194  0016A2  0662               	decf	printf@c,f,c
  2195  0016A4  2862               	incf	printf@c,w,c
  2196  0016A6  B4D8               	btfsc	status,2,c
  2197  0016A8  D009               	goto	l2810
  2198  0016AA  D790               	goto	l2798
  2199                           
  2200                           ;doprnt.c: 1233: }
  2201                           ;doprnt.c: 1235: while(prec) {
  2202  0016AC  D007               	goto	l2810
  2203  0016AE                     l2806:
  2204                           
  2205                           ;doprnt.c: 1236: (putch('0') );
  2206  0016AE  0E30               	movlw	48
  2207  0016B0  EC13  F018         	call	_putch
  2208                           
  2209                           ;doprnt.c: 1237: prec--;
  2210  0016B4  0653               	decf	printf@prec,f,c
  2211  0016B6  A0D8               	btfss	status,0,c
  2212  0016B8  0654               	decf	printf@prec+1,f,c
  2213  0016BA  D000               	goto	l2810
  2214  0016BC                     l2810:
  2215  0016BC  5053               	movf	printf@prec,w,c
  2216  0016BE  1054               	iorwf	printf@prec+1,w,c
  2217  0016C0  B4D8               	btfsc	status,2,c
  2218  0016C2  D0B0               	goto	l2852
  2219  0016C4  D7F4               	goto	l2806
  2220                           
  2221                           ;doprnt.c: 1238: }
  2222                           ;doprnt.c: 1245: continue;
  2223  0016C6  D0AE               	goto	l2852
  2224  0016C8                     l251:
  2225                           
  2226                           ;doprnt.c: 1246: }
  2227                           ;doprnt.c: 1253: {
  2228                           ;doprnt.c: 1255: if(flag & 0x10)
  2229  0016C8  A851               	btfss	printf@flag,4,c
  2230  0016CA  D00E               	goto	l2816
  2231                           
  2232                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  2233  0016CC  C04F  FFD9         	movff	printf@ap,fsr2l
  2234  0016D0  C050  FFDA         	movff	printf@ap+1,fsr2h
  2235  0016D4  CFDE F055          	movff	postinc2,printf@val
  2236  0016D8  CFDE F056          	movff	postinc2,printf@val+1
  2237  0016DC  CFDE F057          	movff	postinc2,printf@val+2
  2238  0016E0  CFDE F058          	movff	postinc2,printf@val+3
  2239  0016E4  0E04               	movlw	4
  2240  0016E6  D00E               	goto	L3
  2241  0016E8                     l2816:
  2242                           
  2243                           ;doprnt.c: 1257: else
  2244                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  2245  0016E8  C04F  FFD9         	movff	printf@ap,fsr2l
  2246  0016EC  C050  FFDA         	movff	printf@ap+1,fsr2h
  2247  0016F0  CFDE F055          	movff	postinc2,printf@val
  2248  0016F4  CFDD F056          	movff	postdec2,printf@val+1
  2249  0016F8  0E00               	movlw	0
  2250  0016FA  BE56               	btfsc	printf@val+1,7,c
  2251  0016FC  0EFF               	movlw	-1
  2252  0016FE  6E57               	movwf	printf@val+2,c
  2253  001700  6E58               	movwf	printf@val+3,c
  2254  001702  0E02               	movlw	2
  2255  001704                     L3:
  2256  001704  264F               	addwf	printf@ap,f,c
  2257  001706  0E00               	movlw	0
  2258  001708  2250               	addwfc	printf@ap+1,f,c
  2259  00170A  D000               	goto	l2820
  2260  00170C                     l2820:
  2261                           
  2262                           ;doprnt.c: 1261: if((long)val < 0) {
  2263  00170C  AE58               	btfss	printf@val+3,7,c
  2264  00170E  D00B               	goto	l2826
  2265                           
  2266                           ;doprnt.c: 1262: flag |= 0x03;
  2267  001710  0E03               	movlw	3
  2268  001712  1251               	iorwf	printf@flag,f,c
  2269                           
  2270                           ;doprnt.c: 1263: val = -val;
  2271  001714  1E58               	comf	printf@val+3,f,c
  2272  001716  1E57               	comf	printf@val+2,f,c
  2273  001718  1E56               	comf	printf@val+1,f,c
  2274  00171A  6C55               	negf	printf@val,c
  2275  00171C  0E00               	movlw	0
  2276  00171E  2256               	addwfc	printf@val+1,f,c
  2277  001720  2257               	addwfc	printf@val+2,f,c
  2278  001722  2258               	addwfc	printf@val+3,f,c
  2279  001724  D000               	goto	l2826
  2280  001726                     l2826:
  2281                           
  2282                           ;doprnt.c: 1264: }
  2283                           ;doprnt.c: 1266: }
  2284                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2285  001726  0E01               	movlw	1
  2286  001728  6E62               	movwf	printf@c,c
  2287  00172A                     l2828:
  2288  00172A  0E0A               	movlw	10
  2289  00172C  1862               	xorwf	printf@c,w,c
  2290  00172E  B4D8               	btfsc	status,2,c
  2291  001730  D01C               	goto	l2840
  2292  001732  D001               	goto	l2832
  2293  001734  D01A               	goto	l2840
  2294  001736                     l2832:
  2295                           
  2296                           ;doprnt.c: 1306: if(val < dpowers[c])
  2297  001736  5062               	movf	printf@c,w,c
  2298  001738  0D04               	mullw	4
  2299  00173A  0E01               	movlw	low _dpowers
  2300  00173C  24F3               	addwf	prodl,w,c
  2301  00173E  6EF6               	movwf	tblptrl,c
  2302  001740  0E10               	movlw	high _dpowers
  2303  001742  20F4               	addwfc	prodh,w,c
  2304  001744  6EF7               	movwf	tblptrh,c
  2305  001746                     	if	0	;There are less than 3 active tblptr bytes
  2306  001746                     	endif
  2307  001746  0009               	tblrd		*+
  2308  001748  50F5               	movf	tablat,w,c
  2309  00174A  5C55               	subwf	printf@val,w,c
  2310  00174C  0009               	tblrd		*+
  2311  00174E  50F5               	movf	tablat,w,c
  2312  001750  5856               	subwfb	printf@val+1,w,c
  2313  001752  0009               	tblrd		*+
  2314  001754  50F5               	movf	tablat,w,c
  2315  001756  5857               	subwfb	printf@val+2,w,c
  2316  001758  0009               	tblrd		*+
  2317  00175A  50F5               	movf	tablat,w,c
  2318  00175C  5858               	subwfb	printf@val+3,w,c
  2319  00175E  A0D8               	btfss	status,0,c
  2320  001760  D004               	goto	l2840
  2321  001762  D001               	goto	l2836
  2322                           
  2323                           ;doprnt.c: 1307: break;
  2324  001764  D002               	goto	l2840
  2325  001766                     l2836:
  2326  001766  2A62               	incf	printf@c,f,c
  2327  001768  D7E0               	goto	l2828
  2328  00176A                     l2840:
  2329                           
  2330                           ;doprnt.c: 1422: {
  2331                           ;doprnt.c: 1438: if(flag & 0x03)
  2332  00176A  0E03               	movlw	3
  2333  00176C  1451               	andwf	printf@flag,w,c
  2334  00176E  6E46               	movwf	??_printf& (0+255),c
  2335  001770  0E00               	movlw	0
  2336  001772  1452               	andwf	printf@flag+1,w,c
  2337  001774  6E47               	movwf	(??_printf+1)& (0+255),c
  2338  001776  5046               	movf	??_printf,w,c
  2339  001778  1047               	iorwf	??_printf+1,w,c
  2340  00177A  B4D8               	btfsc	status,2,c
  2341  00177C  D004               	goto	l2844
  2342                           
  2343                           ;doprnt.c: 1439: (putch('-') );
  2344  00177E  0E2D               	movlw	45
  2345  001780  EC13  F018         	call	_putch
  2346  001784  D000               	goto	l2844
  2347  001786                     l2844:
  2348                           
  2349                           ;doprnt.c: 1469: }
  2350                           ;doprnt.c: 1472: prec = c;
  2351  001786  5062               	movf	printf@c,w,c
  2352  001788  6E53               	movwf	printf@prec,c
  2353  00178A  6A54               	clrf	printf@prec+1,c
  2354  00178C  BE53               	btfsc	printf@prec,7,c
  2355  00178E  0654               	decf	printf@prec+1,f,c
  2356                           
  2357                           ;doprnt.c: 1474: while(prec--) {
  2358  001790  D03F               	goto	l2850
  2359  001792                     l2846:
  2360                           
  2361                           ;doprnt.c: 1478: {
  2362                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2363  001792  C053  F046         	movff	printf@prec,??_printf
  2364  001796  C054  F047         	movff	printf@prec+1,??_printf+1
  2365  00179A  90D8               	bcf	status,0,c
  2366  00179C  3646               	rlcf	??_printf,f,c
  2367  00179E  3647               	rlcf	??_printf+1,f,c
  2368  0017A0  90D8               	bcf	status,0,c
  2369  0017A2  3646               	rlcf	??_printf,f,c
  2370  0017A4  3647               	rlcf	??_printf+1,f,c
  2371  0017A6  0E01               	movlw	low _dpowers
  2372  0017A8  2446               	addwf	??_printf,w,c
  2373  0017AA  6EF6               	movwf	tblptrl,c
  2374  0017AC  0E10               	movlw	high _dpowers
  2375  0017AE  2047               	addwfc	??_printf+1,w,c
  2376  0017B0  6EF7               	movwf	tblptrh,c
  2377  0017B2                     	if	0	;There are less than 3 active tblptr bytes
  2378  0017B2                     	endif
  2379  0017B2  0009               	tblrd		*+
  2380  0017B4  CFF5 F005          	movff	tablat,___lldiv@divisor
  2381  0017B8  0009               	tblrd		*+
  2382  0017BA  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2383  0017BE  0009               	tblrd		*+
  2384  0017C0  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2385  0017C4  000A               	tblrd		*-
  2386  0017C6  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2387  0017CA  C055  F001         	movff	printf@val,___lldiv@dividend
  2388  0017CE  C056  F002         	movff	printf@val+1,___lldiv@dividend+1
  2389  0017D2  C057  F003         	movff	printf@val+2,___lldiv@dividend+2
  2390  0017D6  C058  F004         	movff	printf@val+3,___lldiv@dividend+3
  2391  0017DA  ECEB  F015         	call	___lldiv	;wreg free
  2392  0017DE  C001  F00E         	movff	?___lldiv,___llmod@dividend
  2393  0017E2  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  2394  0017E6  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  2395  0017EA  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  2396  0017EE  0E0A               	movlw	10
  2397  0017F0  6E12               	movwf	___llmod@divisor,c
  2398  0017F2  0E00               	movlw	0
  2399  0017F4  6E13               	movwf	___llmod@divisor+1,c
  2400  0017F6  0E00               	movlw	0
  2401  0017F8  6E14               	movwf	___llmod@divisor+2,c
  2402  0017FA  0E00               	movlw	0
  2403  0017FC  6E15               	movwf	___llmod@divisor+3,c
  2404  0017FE  EC72  F016         	call	___llmod	;wreg free
  2405  001802  500E               	movf	?___llmod,w,c
  2406  001804  0F30               	addlw	48
  2407  001806  6E62               	movwf	printf@c,c
  2408                           
  2409                           ;doprnt.c: 1523: }
  2410                           ;doprnt.c: 1524: (putch(c) );
  2411  001808  5062               	movf	printf@c,w,c
  2412  00180A  EC13  F018         	call	_putch
  2413  00180E  D000               	goto	l2850
  2414  001810                     l2850:
  2415  001810  0653               	decf	printf@prec,f,c
  2416  001812  A0D8               	btfss	status,0,c
  2417  001814  0654               	decf	printf@prec+1,f,c
  2418  001816  2853               	incf	printf@prec,w,c
  2419  001818  E1BC               	bnz	l2846
  2420  00181A  2854               	incf	printf@prec+1,w,c
  2421  00181C  B4D8               	btfsc	status,2,c
  2422  00181E  D002               	goto	l2852
  2423  001820  D7B8               	goto	l2846
  2424  001822  D000               	goto	l2852
  2425  001824                     l2852:
  2426  001824  C040  FFF6         	movff	printf@f,tblptrl
  2427  001828  C041  FFF7         	movff	printf@f+1,tblptrh
  2428  00182C  4A40               	infsnz	printf@f,f,c
  2429  00182E  2A41               	incf	printf@f+1,f,c
  2430  001830                     	if	0	;tblptru may be non-zero
  2431  001830                     	endif
  2432  001830                     	if	0	;tblptru may be non-zero
  2433  001830                     	endif
  2434  001830  0008               	tblrd		*
  2435  001832  CFF5 F062          	movff	tablat,printf@c
  2436  001836  5062               	movf	printf@c,w,c
  2437  001838  B4D8               	btfsc	status,2,c
  2438  00183A  D002               	goto	l299
  2439  00183C  D449               	goto	l2666
  2440  00183E  D000               	goto	l299
  2441  001840                     l299:
  2442  001840  0012               	return		;funcret
  2443  001842                     __end_of_printf:
  2444                           	opt stack 0
  2445                           tblptru	equ	0xFF8
  2446                           tblptrh	equ	0xFF7
  2447                           tblptrl	equ	0xFF6
  2448                           tablat	equ	0xFF5
  2449                           prodh	equ	0xFF4
  2450                           prodl	equ	0xFF3
  2451                           postinc0	equ	0xFEE
  2452                           wreg	equ	0xFE8
  2453                           postdec1	equ	0xFE5
  2454                           fsr1l	equ	0xFE1
  2455                           indf2	equ	0xFDF
  2456                           postinc2	equ	0xFDE
  2457                           postdec2	equ	0xFDD
  2458                           fsr2h	equ	0xFDA
  2459                           fsr2l	equ	0xFD9
  2460                           status	equ	0xFD8
  2461                           
  2462 ;; *************** function _scale *****************
  2463 ;; Defined at:
  2464 ;;		line 425 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  scl             1    wreg     char 
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;  scl             1   41[COMRAM] char 
  2469 ;; Return value:  Size  Location     Type
  2470 ;;                  3   35[COMRAM] char 
  2471 ;; Registers used:
  2472 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2478 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2481 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2482 ;;Total ram usage:        7 bytes
  2483 ;; Hardware stack levels used:    1
  2484 ;; Hardware stack levels required when called:    2
  2485 ;; This function calls:
  2486 ;;		___awdiv
  2487 ;;		___awmod
  2488 ;;		___ftmul
  2489 ;;		___wmul
  2490 ;; This function is called by:
  2491 ;;		_printf
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           	psect	text2
  2496  001842                     __ptext2:
  2497                           	opt stack 0
  2498  001842                     _scale:
  2499                           	opt stack 27
  2500                           
  2501                           ;incstack = 0
  2502                           ;scale@scl stored from wreg
  2503  001842  6E2A               	movwf	scale@scl,c
  2504                           
  2505                           ;doprnt.c: 428: if(scl < 0) {
  2506  001844  AE2A               	btfss	scale@scl,7,c
  2507  001846  D0EF               	goto	l2394
  2508                           
  2509                           ;doprnt.c: 429: scl = -scl;
  2510  001848  6C2A               	negf	scale@scl,c
  2511                           
  2512                           ;doprnt.c: 430: if(scl>=110)
  2513  00184A  502A               	movf	scale@scl,w,c
  2514  00184C  0A80               	xorlw	128
  2515  00184E  0F12               	addlw	-238
  2516  001850  A0D8               	btfss	status,0,c
  2517  001852  D08D               	goto	l2384
  2518                           
  2519                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2520  001854  0E00               	movlw	0
  2521  001856  6E12               	movwf	___wmul@multiplicand+1,c
  2522  001858  0E03               	movlw	3
  2523  00185A  6E11               	movwf	___wmul@multiplicand,c
  2524  00185C  0E00               	movlw	0
  2525  00185E  6E0A               	movwf	___awdiv@divisor+1,c
  2526  001860  0E0A               	movlw	10
  2527  001862  6E09               	movwf	___awdiv@divisor,c
  2528  001864  0E00               	movlw	0
  2529  001866  6E04               	movwf	___awmod@divisor+1,c
  2530  001868  0E64               	movlw	100
  2531  00186A  6E03               	movwf	___awmod@divisor,c
  2532  00186C  502A               	movf	scale@scl,w,c
  2533  00186E  6E01               	movwf	___awmod@dividend,c
  2534  001870  6A02               	clrf	___awmod@dividend+1,c
  2535  001872  BE01               	btfsc	___awmod@dividend,7,c
  2536  001874  0602               	decf	___awmod@dividend+1,f,c
  2537  001876  EC31  F016         	call	___awmod	;wreg free
  2538  00187A  C001  F007         	movff	?___awmod,___awdiv@dividend
  2539  00187E  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2540  001882  EC55  F015         	call	___awdiv	;wreg free
  2541  001886  0E09               	movlw	9
  2542  001888  2407               	addwf	?___awdiv,w,c
  2543  00188A  6E0F               	movwf	___wmul@multiplier,c
  2544  00188C  0E00               	movlw	0
  2545  00188E  2008               	addwfc	?___awdiv+1,w,c
  2546  001890  6E10               	movwf	___wmul@multiplier+1,c
  2547  001892  EC96  F017         	call	___wmul	;wreg free
  2548  001896  0E29               	movlw	low __npowers_
  2549  001898  240F               	addwf	?___wmul,w,c
  2550  00189A  6EF6               	movwf	tblptrl,c
  2551  00189C  0E10               	movlw	high __npowers_
  2552  00189E  2010               	addwfc	?___wmul+1,w,c
  2553  0018A0  6EF7               	movwf	tblptrh,c
  2554  0018A2                     	if	0	;There are less than 3 active tblptr bytes
  2555  0018A2                     	endif
  2556  0018A2  0009               	tblrd		*+
  2557  0018A4  CFF5 F018          	movff	tablat,___ftmul@f2
  2558  0018A8  0009               	tblrd		*+
  2559  0018AA  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2560  0018AE  000A               	tblrd		*-
  2561  0018B0  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2562  0018B4  0E00               	movlw	0
  2563  0018B6  6E0A               	movwf	___awdiv@divisor+1,c
  2564  0018B8  0E64               	movlw	100
  2565  0018BA  6E09               	movwf	___awdiv@divisor,c
  2566  0018BC  502A               	movf	scale@scl,w,c
  2567  0018BE  6E07               	movwf	___awdiv@dividend,c
  2568  0018C0  6A08               	clrf	___awdiv@dividend+1,c
  2569  0018C2  BE07               	btfsc	___awdiv@dividend,7,c
  2570  0018C4  0608               	decf	___awdiv@dividend+1,f,c
  2571  0018C6  EC55  F015         	call	___awdiv	;wreg free
  2572  0018CA  0E12               	movlw	18
  2573  0018CC  2407               	addwf	?___awdiv,w,c
  2574  0018CE  6E0F               	movwf	___wmul@multiplier,c
  2575  0018D0  0E00               	movlw	0
  2576  0018D2  2008               	addwfc	?___awdiv+1,w,c
  2577  0018D4  6E10               	movwf	___wmul@multiplier+1,c
  2578  0018D6  0E00               	movlw	0
  2579  0018D8  6E12               	movwf	___wmul@multiplicand+1,c
  2580  0018DA  0E03               	movlw	3
  2581  0018DC  6E11               	movwf	___wmul@multiplicand,c
  2582  0018DE  EC96  F017         	call	___wmul	;wreg free
  2583  0018E2  0E29               	movlw	low __npowers_
  2584  0018E4  240F               	addwf	?___wmul,w,c
  2585  0018E6  6EF6               	movwf	tblptrl,c
  2586  0018E8  0E10               	movlw	high __npowers_
  2587  0018EA  2010               	addwfc	?___wmul+1,w,c
  2588  0018EC  6EF7               	movwf	tblptrh,c
  2589  0018EE                     	if	0	;There are less than 3 active tblptr bytes
  2590  0018EE                     	endif
  2591  0018EE  0009               	tblrd		*+
  2592  0018F0  CFF5 F015          	movff	tablat,___ftmul@f1
  2593  0018F4  0009               	tblrd		*+
  2594  0018F6  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2595  0018FA  000A               	tblrd		*-
  2596  0018FC  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2597  001900  ECC4  F012         	call	___ftmul	;wreg free
  2598  001904  C015  F027         	movff	?___ftmul,_scale$1415
  2599  001908  C016  F028         	movff	?___ftmul+1,_scale$1415+1
  2600  00190C  C017  F029         	movff	?___ftmul+2,_scale$1415+2
  2601                           
  2602                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2603  001910  C027  F015         	movff	_scale$1415,___ftmul@f1
  2604  001914  C028  F016         	movff	_scale$1415+1,___ftmul@f1+1
  2605  001918  C029  F017         	movff	_scale$1415+2,___ftmul@f1+2
  2606  00191C  0E00               	movlw	0
  2607  00191E  6E12               	movwf	___wmul@multiplicand+1,c
  2608  001920  0E03               	movlw	3
  2609  001922  6E11               	movwf	___wmul@multiplicand,c
  2610  001924  0E00               	movlw	0
  2611  001926  6E04               	movwf	___awmod@divisor+1,c
  2612  001928  0E0A               	movlw	10
  2613  00192A  6E03               	movwf	___awmod@divisor,c
  2614  00192C  502A               	movf	scale@scl,w,c
  2615  00192E  6E01               	movwf	___awmod@dividend,c
  2616  001930  6A02               	clrf	___awmod@dividend+1,c
  2617  001932  BE01               	btfsc	___awmod@dividend,7,c
  2618  001934  0602               	decf	___awmod@dividend+1,f,c
  2619  001936  EC31  F016         	call	___awmod	;wreg free
  2620  00193A  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2621  00193E  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2622  001942  EC96  F017         	call	___wmul	;wreg free
  2623  001946  0E29               	movlw	low __npowers_
  2624  001948  240F               	addwf	?___wmul,w,c
  2625  00194A  6EF6               	movwf	tblptrl,c
  2626  00194C  0E10               	movlw	high __npowers_
  2627  00194E  2010               	addwfc	?___wmul+1,w,c
  2628  001950  6EF7               	movwf	tblptrh,c
  2629  001952                     	if	0	;There are less than 3 active tblptr bytes
  2630  001952                     	endif
  2631  001952  0009               	tblrd		*+
  2632  001954  CFF5 F018          	movff	tablat,___ftmul@f2
  2633  001958  0009               	tblrd		*+
  2634  00195A  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2635  00195E  000A               	tblrd		*-
  2636  001960  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2637  001964  ECC4  F012         	call	___ftmul	;wreg free
  2638  001968  D141               	goto	L7
  2639  00196A  D15A               	goto	l230
  2640  00196C  D054               	goto	l2390
  2641  00196E                     l2384:
  2642                           
  2643                           ;doprnt.c: 432: else if(scl > 10)
  2644  00196E  502A               	movf	scale@scl,w,c
  2645  001970  0A80               	xorlw	128
  2646  001972  0F75               	addlw	-139
  2647  001974  A0D8               	btfss	status,0,c
  2648  001976  D04F               	goto	l2390
  2649                           
  2650                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2651  001978  0E00               	movlw	0
  2652  00197A  6E0A               	movwf	___awdiv@divisor+1,c
  2653  00197C  0E0A               	movlw	10
  2654  00197E  6E09               	movwf	___awdiv@divisor,c
  2655  001980  502A               	movf	scale@scl,w,c
  2656  001982  6E07               	movwf	___awdiv@dividend,c
  2657  001984  6A08               	clrf	___awdiv@dividend+1,c
  2658  001986  BE07               	btfsc	___awdiv@dividend,7,c
  2659  001988  0608               	decf	___awdiv@dividend+1,f,c
  2660  00198A  EC55  F015         	call	___awdiv	;wreg free
  2661  00198E  0E09               	movlw	9
  2662  001990  2407               	addwf	?___awdiv,w,c
  2663  001992  6E0F               	movwf	___wmul@multiplier,c
  2664  001994  0E00               	movlw	0
  2665  001996  2008               	addwfc	?___awdiv+1,w,c
  2666  001998  6E10               	movwf	___wmul@multiplier+1,c
  2667  00199A  0E00               	movlw	0
  2668  00199C  6E12               	movwf	___wmul@multiplicand+1,c
  2669  00199E  0E03               	movlw	3
  2670  0019A0  6E11               	movwf	___wmul@multiplicand,c
  2671  0019A2  EC96  F017         	call	___wmul	;wreg free
  2672  0019A6  0E29               	movlw	low __npowers_
  2673  0019A8  240F               	addwf	?___wmul,w,c
  2674  0019AA  6EF6               	movwf	tblptrl,c
  2675  0019AC  0E10               	movlw	high __npowers_
  2676  0019AE  2010               	addwfc	?___wmul+1,w,c
  2677  0019B0  6EF7               	movwf	tblptrh,c
  2678  0019B2                     	if	0	;There are less than 3 active tblptr bytes
  2679  0019B2                     	endif
  2680  0019B2  0009               	tblrd		*+
  2681  0019B4  CFF5 F015          	movff	tablat,___ftmul@f1
  2682  0019B8  0009               	tblrd		*+
  2683  0019BA  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2684  0019BE  000A               	tblrd		*-
  2685  0019C0  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2686  0019C4  0E00               	movlw	0
  2687  0019C6  6E12               	movwf	___wmul@multiplicand+1,c
  2688  0019C8  0E03               	movlw	3
  2689  0019CA  6E11               	movwf	___wmul@multiplicand,c
  2690  0019CC  0E00               	movlw	0
  2691  0019CE  6E04               	movwf	___awmod@divisor+1,c
  2692  0019D0  0E0A               	movlw	10
  2693  0019D2  6E03               	movwf	___awmod@divisor,c
  2694  0019D4  502A               	movf	scale@scl,w,c
  2695  0019D6  6E01               	movwf	___awmod@dividend,c
  2696  0019D8  6A02               	clrf	___awmod@dividend+1,c
  2697  0019DA  BE01               	btfsc	___awmod@dividend,7,c
  2698  0019DC  0602               	decf	___awmod@dividend+1,f,c
  2699  0019DE  EC31  F016         	call	___awmod	;wreg free
  2700  0019E2  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2701  0019E6  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2702  0019EA  EC96  F017         	call	___wmul	;wreg free
  2703  0019EE  0E29               	movlw	low __npowers_
  2704  0019F0  240F               	addwf	?___wmul,w,c
  2705  0019F2  6EF6               	movwf	tblptrl,c
  2706  0019F4  0E10               	movlw	high __npowers_
  2707  0019F6  2010               	addwfc	?___wmul+1,w,c
  2708  0019F8  6EF7               	movwf	tblptrh,c
  2709  0019FA                     	if	0	;There are less than 3 active tblptr bytes
  2710  0019FA                     	endif
  2711  0019FA  0009               	tblrd		*+
  2712  0019FC  CFF5 F018          	movff	tablat,___ftmul@f2
  2713  001A00  0009               	tblrd		*+
  2714  001A02  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2715  001A06  000A               	tblrd		*-
  2716  001A08  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2717  001A0C  ECC4  F012         	call	___ftmul	;wreg free
  2718  001A10  D0ED               	goto	L7
  2719  001A12  D106               	goto	l230
  2720  001A14  D000               	goto	l2390
  2721  001A16                     l2390:
  2722                           
  2723                           ;doprnt.c: 434: return _npowers_[scl];
  2724  001A16  502A               	movf	scale@scl,w,c
  2725  001A18  0D03               	mullw	3
  2726  001A1A  0E29               	movlw	low __npowers_
  2727  001A1C  24F3               	addwf	prodl,w,c
  2728  001A1E  6EF6               	movwf	tblptrl,c
  2729  001A20  0E10               	movlw	high __npowers_
  2730  001A22  D0F2               	goto	L6
  2731  001A24  D0FD               	goto	l230
  2732  001A26                     l2394:
  2733                           
  2734                           ;doprnt.c: 435: }
  2735                           ;doprnt.c: 436: if(scl>=110)
  2736  001A26  502A               	movf	scale@scl,w,c
  2737  001A28  0A80               	xorlw	128
  2738  001A2A  0F12               	addlw	-238
  2739  001A2C  A0D8               	btfss	status,0,c
  2740  001A2E  D08D               	goto	l2402
  2741                           
  2742                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2743  001A30  0E00               	movlw	0
  2744  001A32  6E12               	movwf	___wmul@multiplicand+1,c
  2745  001A34  0E03               	movlw	3
  2746  001A36  6E11               	movwf	___wmul@multiplicand,c
  2747  001A38  0E00               	movlw	0
  2748  001A3A  6E0A               	movwf	___awdiv@divisor+1,c
  2749  001A3C  0E0A               	movlw	10
  2750  001A3E  6E09               	movwf	___awdiv@divisor,c
  2751  001A40  0E00               	movlw	0
  2752  001A42  6E04               	movwf	___awmod@divisor+1,c
  2753  001A44  0E64               	movlw	100
  2754  001A46  6E03               	movwf	___awmod@divisor,c
  2755  001A48  502A               	movf	scale@scl,w,c
  2756  001A4A  6E01               	movwf	___awmod@dividend,c
  2757  001A4C  6A02               	clrf	___awmod@dividend+1,c
  2758  001A4E  BE01               	btfsc	___awmod@dividend,7,c
  2759  001A50  0602               	decf	___awmod@dividend+1,f,c
  2760  001A52  EC31  F016         	call	___awmod	;wreg free
  2761  001A56  C001  F007         	movff	?___awmod,___awdiv@dividend
  2762  001A5A  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2763  001A5E  EC55  F015         	call	___awdiv	;wreg free
  2764  001A62  0E09               	movlw	9
  2765  001A64  2407               	addwf	?___awdiv,w,c
  2766  001A66  6E0F               	movwf	___wmul@multiplier,c
  2767  001A68  0E00               	movlw	0
  2768  001A6A  2008               	addwfc	?___awdiv+1,w,c
  2769  001A6C  6E10               	movwf	___wmul@multiplier+1,c
  2770  001A6E  EC96  F017         	call	___wmul	;wreg free
  2771  001A72  0E50               	movlw	low __powers_
  2772  001A74  240F               	addwf	?___wmul,w,c
  2773  001A76  6EF6               	movwf	tblptrl,c
  2774  001A78  0E10               	movlw	high __powers_
  2775  001A7A  2010               	addwfc	?___wmul+1,w,c
  2776  001A7C  6EF7               	movwf	tblptrh,c
  2777  001A7E                     	if	0	;There are less than 3 active tblptr bytes
  2778  001A7E                     	endif
  2779  001A7E  0009               	tblrd		*+
  2780  001A80  CFF5 F018          	movff	tablat,___ftmul@f2
  2781  001A84  0009               	tblrd		*+
  2782  001A86  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2783  001A8A  000A               	tblrd		*-
  2784  001A8C  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2785  001A90  0E00               	movlw	0
  2786  001A92  6E0A               	movwf	___awdiv@divisor+1,c
  2787  001A94  0E64               	movlw	100
  2788  001A96  6E09               	movwf	___awdiv@divisor,c
  2789  001A98  502A               	movf	scale@scl,w,c
  2790  001A9A  6E07               	movwf	___awdiv@dividend,c
  2791  001A9C  6A08               	clrf	___awdiv@dividend+1,c
  2792  001A9E  BE07               	btfsc	___awdiv@dividend,7,c
  2793  001AA0  0608               	decf	___awdiv@dividend+1,f,c
  2794  001AA2  EC55  F015         	call	___awdiv	;wreg free
  2795  001AA6  0E12               	movlw	18
  2796  001AA8  2407               	addwf	?___awdiv,w,c
  2797  001AAA  6E0F               	movwf	___wmul@multiplier,c
  2798  001AAC  0E00               	movlw	0
  2799  001AAE  2008               	addwfc	?___awdiv+1,w,c
  2800  001AB0  6E10               	movwf	___wmul@multiplier+1,c
  2801  001AB2  0E00               	movlw	0
  2802  001AB4  6E12               	movwf	___wmul@multiplicand+1,c
  2803  001AB6  0E03               	movlw	3
  2804  001AB8  6E11               	movwf	___wmul@multiplicand,c
  2805  001ABA  EC96  F017         	call	___wmul	;wreg free
  2806  001ABE  0E50               	movlw	low __powers_
  2807  001AC0  240F               	addwf	?___wmul,w,c
  2808  001AC2  6EF6               	movwf	tblptrl,c
  2809  001AC4  0E10               	movlw	high __powers_
  2810  001AC6  2010               	addwfc	?___wmul+1,w,c
  2811  001AC8  6EF7               	movwf	tblptrh,c
  2812  001ACA                     	if	0	;There are less than 3 active tblptr bytes
  2813  001ACA                     	endif
  2814  001ACA  0009               	tblrd		*+
  2815  001ACC  CFF5 F015          	movff	tablat,___ftmul@f1
  2816  001AD0  0009               	tblrd		*+
  2817  001AD2  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2818  001AD6  000A               	tblrd		*-
  2819  001AD8  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2820  001ADC  ECC4  F012         	call	___ftmul	;wreg free
  2821  001AE0  C015  F027         	movff	?___ftmul,_scale$1415
  2822  001AE4  C016  F028         	movff	?___ftmul+1,_scale$1415+1
  2823  001AE8  C017  F029         	movff	?___ftmul+2,_scale$1415+2
  2824                           
  2825                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2826  001AEC  C027  F015         	movff	_scale$1415,___ftmul@f1
  2827  001AF0  C028  F016         	movff	_scale$1415+1,___ftmul@f1+1
  2828  001AF4  C029  F017         	movff	_scale$1415+2,___ftmul@f1+2
  2829  001AF8  0E00               	movlw	0
  2830  001AFA  6E12               	movwf	___wmul@multiplicand+1,c
  2831  001AFC  0E03               	movlw	3
  2832  001AFE  6E11               	movwf	___wmul@multiplicand,c
  2833  001B00  0E00               	movlw	0
  2834  001B02  6E04               	movwf	___awmod@divisor+1,c
  2835  001B04  0E0A               	movlw	10
  2836  001B06  6E03               	movwf	___awmod@divisor,c
  2837  001B08  502A               	movf	scale@scl,w,c
  2838  001B0A  6E01               	movwf	___awmod@dividend,c
  2839  001B0C  6A02               	clrf	___awmod@dividend+1,c
  2840  001B0E  BE01               	btfsc	___awmod@dividend,7,c
  2841  001B10  0602               	decf	___awmod@dividend+1,f,c
  2842  001B12  EC31  F016         	call	___awmod	;wreg free
  2843  001B16  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2844  001B1A  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2845  001B1E  EC96  F017         	call	___wmul	;wreg free
  2846  001B22  0E50               	movlw	low __powers_
  2847  001B24  240F               	addwf	?___wmul,w,c
  2848  001B26  6EF6               	movwf	tblptrl,c
  2849  001B28  0E10               	movlw	high __powers_
  2850  001B2A  2010               	addwfc	?___wmul+1,w,c
  2851  001B2C  6EF7               	movwf	tblptrh,c
  2852  001B2E                     	if	0	;There are less than 3 active tblptr bytes
  2853  001B2E                     	endif
  2854  001B2E  0009               	tblrd		*+
  2855  001B30  CFF5 F018          	movff	tablat,___ftmul@f2
  2856  001B34  0009               	tblrd		*+
  2857  001B36  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2858  001B3A  000A               	tblrd		*-
  2859  001B3C  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2860  001B40  ECC4  F012         	call	___ftmul	;wreg free
  2861  001B44  D053               	goto	L7
  2862  001B46  D06C               	goto	l230
  2863  001B48  D059               	goto	l2408
  2864  001B4A                     l2402:
  2865                           
  2866                           ;doprnt.c: 438: else if(scl > 10)
  2867  001B4A  502A               	movf	scale@scl,w,c
  2868  001B4C  0A80               	xorlw	128
  2869  001B4E  0F75               	addlw	-139
  2870  001B50  A0D8               	btfss	status,0,c
  2871  001B52  D054               	goto	l2408
  2872                           
  2873                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2874  001B54  0E00               	movlw	0
  2875  001B56  6E0A               	movwf	___awdiv@divisor+1,c
  2876  001B58  0E0A               	movlw	10
  2877  001B5A  6E09               	movwf	___awdiv@divisor,c
  2878  001B5C  502A               	movf	scale@scl,w,c
  2879  001B5E  6E07               	movwf	___awdiv@dividend,c
  2880  001B60  6A08               	clrf	___awdiv@dividend+1,c
  2881  001B62  BE07               	btfsc	___awdiv@dividend,7,c
  2882  001B64  0608               	decf	___awdiv@dividend+1,f,c
  2883  001B66  EC55  F015         	call	___awdiv	;wreg free
  2884  001B6A  0E09               	movlw	9
  2885  001B6C  2407               	addwf	?___awdiv,w,c
  2886  001B6E  6E0F               	movwf	___wmul@multiplier,c
  2887  001B70  0E00               	movlw	0
  2888  001B72  2008               	addwfc	?___awdiv+1,w,c
  2889  001B74  6E10               	movwf	___wmul@multiplier+1,c
  2890  001B76  0E00               	movlw	0
  2891  001B78  6E12               	movwf	___wmul@multiplicand+1,c
  2892  001B7A  0E03               	movlw	3
  2893  001B7C  6E11               	movwf	___wmul@multiplicand,c
  2894  001B7E  EC96  F017         	call	___wmul	;wreg free
  2895  001B82  0E50               	movlw	low __powers_
  2896  001B84  240F               	addwf	?___wmul,w,c
  2897  001B86  6EF6               	movwf	tblptrl,c
  2898  001B88  0E10               	movlw	high __powers_
  2899  001B8A  2010               	addwfc	?___wmul+1,w,c
  2900  001B8C  6EF7               	movwf	tblptrh,c
  2901  001B8E                     	if	0	;There are less than 3 active tblptr bytes
  2902  001B8E                     	endif
  2903  001B8E  0009               	tblrd		*+
  2904  001B90  CFF5 F015          	movff	tablat,___ftmul@f1
  2905  001B94  0009               	tblrd		*+
  2906  001B96  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2907  001B9A  000A               	tblrd		*-
  2908  001B9C  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2909  001BA0  0E00               	movlw	0
  2910  001BA2  6E12               	movwf	___wmul@multiplicand+1,c
  2911  001BA4  0E03               	movlw	3
  2912  001BA6  6E11               	movwf	___wmul@multiplicand,c
  2913  001BA8  0E00               	movlw	0
  2914  001BAA  6E04               	movwf	___awmod@divisor+1,c
  2915  001BAC  0E0A               	movlw	10
  2916  001BAE  6E03               	movwf	___awmod@divisor,c
  2917  001BB0  502A               	movf	scale@scl,w,c
  2918  001BB2  6E01               	movwf	___awmod@dividend,c
  2919  001BB4  6A02               	clrf	___awmod@dividend+1,c
  2920  001BB6  BE01               	btfsc	___awmod@dividend,7,c
  2921  001BB8  0602               	decf	___awmod@dividend+1,f,c
  2922  001BBA  EC31  F016         	call	___awmod	;wreg free
  2923  001BBE  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2924  001BC2  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2925  001BC6  EC96  F017         	call	___wmul	;wreg free
  2926  001BCA  0E50               	movlw	low __powers_
  2927  001BCC  240F               	addwf	?___wmul,w,c
  2928  001BCE  6EF6               	movwf	tblptrl,c
  2929  001BD0  0E10               	movlw	high __powers_
  2930  001BD2  2010               	addwfc	?___wmul+1,w,c
  2931  001BD4  6EF7               	movwf	tblptrh,c
  2932  001BD6                     	if	0	;There are less than 3 active tblptr bytes
  2933  001BD6                     	endif
  2934  001BD6  0009               	tblrd		*+
  2935  001BD8  CFF5 F018          	movff	tablat,___ftmul@f2
  2936  001BDC  0009               	tblrd		*+
  2937  001BDE  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2938  001BE2  000A               	tblrd		*-
  2939  001BE4  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2940  001BE8  ECC4  F012         	call	___ftmul	;wreg free
  2941  001BEC                     L7:
  2942  001BEC  C015  F024         	movff	?___ftmul,?_scale
  2943  001BF0  C016  F025         	movff	?___ftmul+1,?_scale+1
  2944  001BF4  C017  F026         	movff	?___ftmul+2,?_scale+2
  2945  001BF8  D013               	goto	l230
  2946  001BFA  D000               	goto	l2408
  2947  001BFC                     l2408:
  2948                           
  2949                           ;doprnt.c: 440: return _powers_[scl];
  2950  001BFC  502A               	movf	scale@scl,w,c
  2951  001BFE  0D03               	mullw	3
  2952  001C00  0E50               	movlw	low __powers_
  2953  001C02  24F3               	addwf	prodl,w,c
  2954  001C04  6EF6               	movwf	tblptrl,c
  2955  001C06  0E10               	movlw	high __powers_
  2956  001C08                     L6:
  2957  001C08  20F4               	addwfc	prodh,w,c
  2958  001C0A  6EF7               	movwf	tblptrh,c
  2959  001C0C                     	if	0	;There are less than 3 active tblptr bytes
  2960  001C0C                     	endif
  2961  001C0C  0009               	tblrd		*+
  2962  001C0E  CFF5 F024          	movff	tablat,?_scale
  2963  001C12  0009               	tblrd		*+
  2964  001C14  CFF5 F025          	movff	tablat,?_scale+1
  2965  001C18  000A               	tblrd		*-
  2966  001C1A  CFF5 F026          	movff	tablat,?_scale+2
  2967  001C1E  D000               	goto	l230
  2968  001C20                     l230:
  2969  001C20  0012               	return		;funcret
  2970  001C22                     __end_of_scale:
  2971                           	opt stack 0
  2972                           tblptru	equ	0xFF8
  2973                           tblptrh	equ	0xFF7
  2974                           tblptrl	equ	0xFF6
  2975                           tablat	equ	0xFF5
  2976                           prodh	equ	0xFF4
  2977                           prodl	equ	0xFF3
  2978                           postinc0	equ	0xFEE
  2979                           wreg	equ	0xFE8
  2980                           postdec1	equ	0xFE5
  2981                           fsr1l	equ	0xFE1
  2982                           indf2	equ	0xFDF
  2983                           postinc2	equ	0xFDE
  2984                           postdec2	equ	0xFDD
  2985                           fsr2h	equ	0xFDA
  2986                           fsr2l	equ	0xFD9
  2987                           status	equ	0xFD8
  2988                           
  2989 ;; *************** function _putch *****************
  2990 ;; Defined at:
  2991 ;;		line 151 in file "Lab6pB2.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;  c               1    wreg     unsigned char 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  c               1    0[COMRAM] unsigned char 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;		None               void
  2998 ;; Registers used:
  2999 ;;		wreg
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3008 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3009 ;;Total ram usage:        1 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_printf
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text3
  3019  003026                     __ptext3:
  3020                           	opt stack 0
  3021  003026                     _putch:
  3022                           	opt stack 29
  3023                           
  3024                           ;incstack = 0
  3025                           ;putch@c stored from wreg
  3026  003026  6E01               	movwf	putch@c,c
  3027                           
  3028                           ;Lab6pB2.c: 153: while (!TRMT);
  3029  003028  D000               	goto	l117
  3030  00302A                     l117:
  3031  00302A  A2AC               	btfss	4012,1,c	;volatile
  3032  00302C  D7FE               	goto	l117
  3033                           
  3034                           ;Lab6pB2.c: 154: TXREG = c;
  3035  00302E  C001  FFAD         	movff	putch@c,4013	;volatile
  3036  003032  0012               	return		;funcret
  3037  003034                     __end_of_putch:
  3038                           	opt stack 0
  3039                           tblptru	equ	0xFF8
  3040                           tblptrh	equ	0xFF7
  3041                           tblptrl	equ	0xFF6
  3042                           tablat	equ	0xFF5
  3043                           prodh	equ	0xFF4
  3044                           prodl	equ	0xFF3
  3045                           postinc0	equ	0xFEE
  3046                           wreg	equ	0xFE8
  3047                           postdec1	equ	0xFE5
  3048                           fsr1l	equ	0xFE1
  3049                           indf2	equ	0xFDF
  3050                           postinc2	equ	0xFDE
  3051                           postdec2	equ	0xFDD
  3052                           fsr2h	equ	0xFDA
  3053                           fsr2l	equ	0xFD9
  3054                           status	equ	0xFD8
  3055                           
  3056 ;; *************** function _fround *****************
  3057 ;; Defined at:
  3058 ;;		line 409 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\doprnt.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;  prec            1    wreg     unsigned char 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;  prec            1   44[COMRAM] unsigned char 
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  3   35[COMRAM] unsigned char 
  3065 ;; Registers used:
  3066 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3072 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3073 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3075 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3076 ;;Total ram usage:       10 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; Hardware stack levels required when called:    2
  3079 ;; This function calls:
  3080 ;;		___awdiv
  3081 ;;		___awmod
  3082 ;;		___ftmul
  3083 ;;		___wmul
  3084 ;; This function is called by:
  3085 ;;		_printf
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           	psect	text4
  3090  001F66                     __ptext4:
  3091                           	opt stack 0
  3092  001F66                     _fround:
  3093                           	opt stack 27
  3094                           
  3095                           ;incstack = 0
  3096                           ;fround@prec stored from wreg
  3097  001F66  6E2D               	movwf	fround@prec,c
  3098                           
  3099                           ;doprnt.c: 413: if(prec>=110)
  3100  001F68  0E6D               	movlw	109
  3101  001F6A  642D               	cpfsgt	fround@prec,c
  3102  001F6C  D09B               	goto	l2362
  3103                           
  3104                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3105  001F6E  0E00               	movlw	0
  3106  001F70  6E12               	movwf	___wmul@multiplicand+1,c
  3107  001F72  0E03               	movlw	3
  3108  001F74  6E11               	movwf	___wmul@multiplicand,c
  3109  001F76  0E00               	movlw	0
  3110  001F78  6E0A               	movwf	___awdiv@divisor+1,c
  3111  001F7A  0E0A               	movlw	10
  3112  001F7C  6E09               	movwf	___awdiv@divisor,c
  3113  001F7E  0E00               	movlw	0
  3114  001F80  6E04               	movwf	___awmod@divisor+1,c
  3115  001F82  0E64               	movlw	100
  3116  001F84  6E03               	movwf	___awmod@divisor,c
  3117  001F86  C02D  F001         	movff	fround@prec,___awmod@dividend
  3118  001F8A  6A02               	clrf	___awmod@dividend+1,c
  3119  001F8C  EC31  F016         	call	___awmod	;wreg free
  3120  001F90  C001  F007         	movff	?___awmod,___awdiv@dividend
  3121  001F94  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3122  001F98  EC55  F015         	call	___awdiv	;wreg free
  3123  001F9C  0E09               	movlw	9
  3124  001F9E  2407               	addwf	?___awdiv,w,c
  3125  001FA0  6E0F               	movwf	___wmul@multiplier,c
  3126  001FA2  0E00               	movlw	0
  3127  001FA4  2008               	addwfc	?___awdiv+1,w,c
  3128  001FA6  6E10               	movwf	___wmul@multiplier+1,c
  3129  001FA8  EC96  F017         	call	___wmul	;wreg free
  3130  001FAC  0E29               	movlw	low __npowers_
  3131  001FAE  240F               	addwf	?___wmul,w,c
  3132  001FB0  6EF6               	movwf	tblptrl,c
  3133  001FB2  0E10               	movlw	high __npowers_
  3134  001FB4  2010               	addwfc	?___wmul+1,w,c
  3135  001FB6  6EF7               	movwf	tblptrh,c
  3136  001FB8                     	if	0	;There are less than 3 active tblptr bytes
  3137  001FB8                     	endif
  3138  001FB8  0009               	tblrd		*+
  3139  001FBA  CFF5 F018          	movff	tablat,___ftmul@f2
  3140  001FBE  0009               	tblrd		*+
  3141  001FC0  CFF5 F019          	movff	tablat,___ftmul@f2+1
  3142  001FC4  000A               	tblrd		*-
  3143  001FC6  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  3144  001FCA  0E00               	movlw	0
  3145  001FCC  6E0A               	movwf	___awdiv@divisor+1,c
  3146  001FCE  0E64               	movlw	100
  3147  001FD0  6E09               	movwf	___awdiv@divisor,c
  3148  001FD2  C02D  F007         	movff	fround@prec,___awdiv@dividend
  3149  001FD6  6A08               	clrf	___awdiv@dividend+1,c
  3150  001FD8  EC55  F015         	call	___awdiv	;wreg free
  3151  001FDC  0E12               	movlw	18
  3152  001FDE  2407               	addwf	?___awdiv,w,c
  3153  001FE0  6E0F               	movwf	___wmul@multiplier,c
  3154  001FE2  0E00               	movlw	0
  3155  001FE4  2008               	addwfc	?___awdiv+1,w,c
  3156  001FE6  6E10               	movwf	___wmul@multiplier+1,c
  3157  001FE8  0E00               	movlw	0
  3158  001FEA  6E12               	movwf	___wmul@multiplicand+1,c
  3159  001FEC  0E03               	movlw	3
  3160  001FEE  6E11               	movwf	___wmul@multiplicand,c
  3161  001FF0  EC96  F017         	call	___wmul	;wreg free
  3162  001FF4  0E29               	movlw	low __npowers_
  3163  001FF6  240F               	addwf	?___wmul,w,c
  3164  001FF8  6EF6               	movwf	tblptrl,c
  3165  001FFA  0E10               	movlw	high __npowers_
  3166  001FFC  2010               	addwfc	?___wmul+1,w,c
  3167  001FFE  6EF7               	movwf	tblptrh,c
  3168  002000                     	if	0	;There are less than 3 active tblptr bytes
  3169  002000                     	endif
  3170  002000  0009               	tblrd		*+
  3171  002002  CFF5 F015          	movff	tablat,___ftmul@f1
  3172  002006  0009               	tblrd		*+
  3173  002008  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3174  00200C  000A               	tblrd		*-
  3175  00200E  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3176  002012  ECC4  F012         	call	___ftmul	;wreg free
  3177  002016  C015  F02A         	movff	?___ftmul,_fround$1413
  3178  00201A  C016  F02B         	movff	?___ftmul+1,_fround$1413+1
  3179  00201E  C017  F02C         	movff	?___ftmul+2,_fround$1413+2
  3180                           
  3181                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3182  002022  0E00               	movlw	0
  3183  002024  6E12               	movwf	___wmul@multiplicand+1,c
  3184  002026  0E03               	movlw	3
  3185  002028  6E11               	movwf	___wmul@multiplicand,c
  3186  00202A  0E00               	movlw	0
  3187  00202C  6E04               	movwf	___awmod@divisor+1,c
  3188  00202E  0E0A               	movlw	10
  3189  002030  6E03               	movwf	___awmod@divisor,c
  3190  002032  C02D  F001         	movff	fround@prec,___awmod@dividend
  3191  002036  6A02               	clrf	___awmod@dividend+1,c
  3192  002038  EC31  F016         	call	___awmod	;wreg free
  3193  00203C  C001  F00F         	movff	?___awmod,___wmul@multiplier
  3194  002040  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  3195  002044  EC96  F017         	call	___wmul	;wreg free
  3196  002048  0E29               	movlw	low __npowers_
  3197  00204A  240F               	addwf	?___wmul,w,c
  3198  00204C  6EF6               	movwf	tblptrl,c
  3199  00204E  0E10               	movlw	high __npowers_
  3200  002050  2010               	addwfc	?___wmul+1,w,c
  3201  002052  6EF7               	movwf	tblptrh,c
  3202  002054                     	if	0	;There are less than 3 active tblptr bytes
  3203  002054                     	endif
  3204  002054  0009               	tblrd		*+
  3205  002056  CFF5 F018          	movff	tablat,___ftmul@f2
  3206  00205A  0009               	tblrd		*+
  3207  00205C  CFF5 F019          	movff	tablat,___ftmul@f2+1
  3208  002060  000A               	tblrd		*-
  3209  002062  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  3210  002066  C02A  F015         	movff	_fround$1413,___ftmul@f1
  3211  00206A  C02B  F016         	movff	_fround$1413+1,___ftmul@f1+1
  3212  00206E  C02C  F017         	movff	_fround$1413+2,___ftmul@f1+2
  3213  002072  ECC4  F012         	call	___ftmul	;wreg free
  3214  002076  C015  F027         	movff	?___ftmul,_fround$1414
  3215  00207A  C016  F028         	movff	?___ftmul+1,_fround$1414+1
  3216  00207E  C017  F029         	movff	?___ftmul+2,_fround$1414+2
  3217                           
  3218                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3219  002082  C027  F015         	movff	_fround$1414,___ftmul@f1
  3220  002086  C028  F016         	movff	_fround$1414+1,___ftmul@f1+1
  3221  00208A  C029  F017         	movff	_fround$1414+2,___ftmul@f1+2
  3222  00208E  0E00               	movlw	0
  3223  002090  6E18               	movwf	___ftmul@f2,c
  3224  002092  0E00               	movlw	0
  3225  002094  6E19               	movwf	___ftmul@f2+1,c
  3226  002096  0E3F               	movlw	63
  3227  002098  6E1A               	movwf	___ftmul@f2+2,c
  3228  00209A  ECC4  F012         	call	___ftmul	;wreg free
  3229  00209E  D07D               	goto	L9
  3230  0020A0  D083               	goto	l223
  3231  0020A2  D062               	goto	l2370
  3232  0020A4                     l2362:
  3233                           
  3234                           ;doprnt.c: 415: else if(prec > 10)
  3235  0020A4  0E0A               	movlw	10
  3236  0020A6  642D               	cpfsgt	fround@prec,c
  3237  0020A8  D05F               	goto	l2370
  3238                           
  3239                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3240  0020AA  0E00               	movlw	0
  3241  0020AC  6E12               	movwf	___wmul@multiplicand+1,c
  3242  0020AE  0E03               	movlw	3
  3243  0020B0  6E11               	movwf	___wmul@multiplicand,c
  3244  0020B2  0E00               	movlw	0
  3245  0020B4  6E04               	movwf	___awmod@divisor+1,c
  3246  0020B6  0E0A               	movlw	10
  3247  0020B8  6E03               	movwf	___awmod@divisor,c
  3248  0020BA  C02D  F001         	movff	fround@prec,___awmod@dividend
  3249  0020BE  6A02               	clrf	___awmod@dividend+1,c
  3250  0020C0  EC31  F016         	call	___awmod	;wreg free
  3251  0020C4  C001  F00F         	movff	?___awmod,___wmul@multiplier
  3252  0020C8  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  3253  0020CC  EC96  F017         	call	___wmul	;wreg free
  3254  0020D0  0E29               	movlw	low __npowers_
  3255  0020D2  240F               	addwf	?___wmul,w,c
  3256  0020D4  6EF6               	movwf	tblptrl,c
  3257  0020D6  0E10               	movlw	high __npowers_
  3258  0020D8  2010               	addwfc	?___wmul+1,w,c
  3259  0020DA  6EF7               	movwf	tblptrh,c
  3260  0020DC                     	if	0	;There are less than 3 active tblptr bytes
  3261  0020DC                     	endif
  3262  0020DC  0009               	tblrd		*+
  3263  0020DE  CFF5 F018          	movff	tablat,___ftmul@f2
  3264  0020E2  0009               	tblrd		*+
  3265  0020E4  CFF5 F019          	movff	tablat,___ftmul@f2+1
  3266  0020E8  000A               	tblrd		*-
  3267  0020EA  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  3268  0020EE  0E00               	movlw	0
  3269  0020F0  6E0A               	movwf	___awdiv@divisor+1,c
  3270  0020F2  0E0A               	movlw	10
  3271  0020F4  6E09               	movwf	___awdiv@divisor,c
  3272  0020F6  C02D  F007         	movff	fround@prec,___awdiv@dividend
  3273  0020FA  6A08               	clrf	___awdiv@dividend+1,c
  3274  0020FC  EC55  F015         	call	___awdiv	;wreg free
  3275  002100  0E09               	movlw	9
  3276  002102  2407               	addwf	?___awdiv,w,c
  3277  002104  6E0F               	movwf	___wmul@multiplier,c
  3278  002106  0E00               	movlw	0
  3279  002108  2008               	addwfc	?___awdiv+1,w,c
  3280  00210A  6E10               	movwf	___wmul@multiplier+1,c
  3281  00210C  0E00               	movlw	0
  3282  00210E  6E12               	movwf	___wmul@multiplicand+1,c
  3283  002110  0E03               	movlw	3
  3284  002112  6E11               	movwf	___wmul@multiplicand,c
  3285  002114  EC96  F017         	call	___wmul	;wreg free
  3286  002118  0E29               	movlw	low __npowers_
  3287  00211A  240F               	addwf	?___wmul,w,c
  3288  00211C  6EF6               	movwf	tblptrl,c
  3289  00211E  0E10               	movlw	high __npowers_
  3290  002120  2010               	addwfc	?___wmul+1,w,c
  3291  002122  6EF7               	movwf	tblptrh,c
  3292  002124                     	if	0	;There are less than 3 active tblptr bytes
  3293  002124                     	endif
  3294  002124  0009               	tblrd		*+
  3295  002126  CFF5 F015          	movff	tablat,___ftmul@f1
  3296  00212A  0009               	tblrd		*+
  3297  00212C  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3298  002130  000A               	tblrd		*-
  3299  002132  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3300  002136  ECC4  F012         	call	___ftmul	;wreg free
  3301  00213A  C015  F02A         	movff	?___ftmul,_fround$1413
  3302  00213E  C016  F02B         	movff	?___ftmul+1,_fround$1413+1
  3303  002142  C017  F02C         	movff	?___ftmul+2,_fround$1413+2
  3304                           
  3305                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3306  002146  C02A  F015         	movff	_fround$1413,___ftmul@f1
  3307  00214A  C02B  F016         	movff	_fround$1413+1,___ftmul@f1+1
  3308  00214E  C02C  F017         	movff	_fround$1413+2,___ftmul@f1+2
  3309  002152  0E00               	movlw	0
  3310  002154  6E18               	movwf	___ftmul@f2,c
  3311  002156  0E00               	movlw	0
  3312  002158  6E19               	movwf	___ftmul@f2+1,c
  3313  00215A  0E3F               	movlw	63
  3314  00215C  6E1A               	movwf	___ftmul@f2+2,c
  3315  00215E  ECC4  F012         	call	___ftmul	;wreg free
  3316  002162  D01B               	goto	L9
  3317  002164  D021               	goto	l223
  3318  002166  D000               	goto	l2370
  3319  002168                     l2370:
  3320                           
  3321                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3322  002168  502D               	movf	fround@prec,w,c
  3323  00216A  0D03               	mullw	3
  3324  00216C  0E29               	movlw	low __npowers_
  3325  00216E  24F3               	addwf	prodl,w,c
  3326  002170  6EF6               	movwf	tblptrl,c
  3327  002172  0E10               	movlw	high __npowers_
  3328  002174  20F4               	addwfc	prodh,w,c
  3329  002176  6EF7               	movwf	tblptrh,c
  3330  002178                     	if	0	;There are less than 3 active tblptr bytes
  3331  002178                     	endif
  3332  002178  0009               	tblrd		*+
  3333  00217A  CFF5 F015          	movff	tablat,___ftmul@f1
  3334  00217E  0009               	tblrd		*+
  3335  002180  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3336  002184  000A               	tblrd		*-
  3337  002186  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3338  00218A  0E00               	movlw	0
  3339  00218C  6E18               	movwf	___ftmul@f2,c
  3340  00218E  0E00               	movlw	0
  3341  002190  6E19               	movwf	___ftmul@f2+1,c
  3342  002192  0E3F               	movlw	63
  3343  002194  6E1A               	movwf	___ftmul@f2+2,c
  3344  002196  ECC4  F012         	call	___ftmul	;wreg free
  3345  00219A                     L9:
  3346  00219A  C015  F024         	movff	?___ftmul,?_fround
  3347  00219E  C016  F025         	movff	?___ftmul+1,?_fround+1
  3348  0021A2  C017  F026         	movff	?___ftmul+2,?_fround+2
  3349  0021A6  D000               	goto	l223
  3350  0021A8                     l223:
  3351  0021A8  0012               	return		;funcret
  3352  0021AA                     __end_of_fround:
  3353                           	opt stack 0
  3354                           tblptru	equ	0xFF8
  3355                           tblptrh	equ	0xFF7
  3356                           tblptrl	equ	0xFF6
  3357                           tablat	equ	0xFF5
  3358                           prodh	equ	0xFF4
  3359                           prodl	equ	0xFF3
  3360                           postinc0	equ	0xFEE
  3361                           wreg	equ	0xFE8
  3362                           postdec1	equ	0xFE5
  3363                           fsr1l	equ	0xFE1
  3364                           indf2	equ	0xFDF
  3365                           postinc2	equ	0xFDE
  3366                           postdec2	equ	0xFDD
  3367                           fsr2h	equ	0xFDA
  3368                           fsr2l	equ	0xFD9
  3369                           status	equ	0xFD8
  3370                           
  3371 ;; *************** function ___wmul *****************
  3372 ;; Defined at:
  3373 ;;		line 15 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\Umul16.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;  multiplier      2   14[COMRAM] unsigned int 
  3376 ;;  multiplicand    2   16[COMRAM] unsigned int 
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;  product         2   18[COMRAM] unsigned int 
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  2   14[COMRAM] unsigned int 
  3381 ;; Registers used:
  3382 ;;		wreg, status,2, status,0, prodl, prodh
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;Total ram usage:        6 bytes
  3393 ;; Hardware stack levels used:    1
  3394 ;; This function calls:
  3395 ;;		Nothing
  3396 ;; This function is called by:
  3397 ;;		_fround
  3398 ;;		_scale
  3399 ;;		_printf
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           	psect	text5
  3404  002F2C                     __ptext5:
  3405                           	opt stack 0
  3406  002F2C                     ___wmul:
  3407                           	opt stack 28
  3408                           
  3409                           ;incstack = 0
  3410  002F2C  500F               	movf	___wmul@multiplier,w,c
  3411  002F2E  0211               	mulwf	___wmul@multiplicand,c
  3412  002F30  CFF3 F013          	movff	prodl,___wmul@product
  3413  002F34  CFF4 F014          	movff	prodh,___wmul@product+1
  3414  002F38  500F               	movf	___wmul@multiplier,w,c
  3415  002F3A  0212               	mulwf	___wmul@multiplicand+1,c
  3416  002F3C  50F3               	movf	prodl,w,c
  3417  002F3E  2614               	addwf	___wmul@product+1,f,c
  3418  002F40  5010               	movf	___wmul@multiplier+1,w,c
  3419  002F42  0211               	mulwf	___wmul@multiplicand,c
  3420  002F44  50F3               	movf	prodl,w,c
  3421  002F46  2614               	addwf	___wmul@product+1,f,c
  3422  002F48  C013  F00F         	movff	___wmul@product,?___wmul
  3423  002F4C  C014  F010         	movff	___wmul@product+1,?___wmul+1
  3424  002F50  D000               	goto	l335
  3425  002F52                     l335:
  3426  002F52  0012               	return		;funcret
  3427  002F54                     __end_of___wmul:
  3428                           	opt stack 0
  3429                           tblptru	equ	0xFF8
  3430                           tblptrh	equ	0xFF7
  3431                           tblptrl	equ	0xFF6
  3432                           tablat	equ	0xFF5
  3433                           prodh	equ	0xFF4
  3434                           prodl	equ	0xFF3
  3435                           postinc0	equ	0xFEE
  3436                           wreg	equ	0xFE8
  3437                           postdec1	equ	0xFE5
  3438                           fsr1l	equ	0xFE1
  3439                           indf2	equ	0xFDF
  3440                           postinc2	equ	0xFDE
  3441                           postdec2	equ	0xFDD
  3442                           fsr2h	equ	0xFDA
  3443                           fsr2l	equ	0xFD9
  3444                           status	equ	0xFD8
  3445                           
  3446 ;; *************** function ___ftmul *****************
  3447 ;; Defined at:
  3448 ;;		line 62 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftmul.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;  f1              3   20[COMRAM] float 
  3451 ;;  f2              3   23[COMRAM] float 
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;  f3_as_produc    3   30[COMRAM] unsigned um
  3454 ;;  sign            1   34[COMRAM] unsigned char 
  3455 ;;  cntr            1   33[COMRAM] unsigned char 
  3456 ;;  exp             1   29[COMRAM] unsigned char 
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  3   20[COMRAM] float 
  3459 ;; Registers used:
  3460 ;;		wreg, status,2, status,0, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3466 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3467 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3468 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;Total ram usage:       15 bytes
  3471 ;; Hardware stack levels used:    1
  3472 ;; Hardware stack levels required when called:    1
  3473 ;; This function calls:
  3474 ;;		___ftpack
  3475 ;; This function is called by:
  3476 ;;		_fround
  3477 ;;		_scale
  3478 ;;		_printf
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482                           	psect	text6
  3483  002588                     __ptext6:
  3484                           	opt stack 0
  3485  002588                     ___ftmul:
  3486                           	opt stack 27
  3487                           
  3488                           ;incstack = 0
  3489  002588  C017  F01B         	movff	___ftmul@f1+2,??___ftmul
  3490  00258C  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  3491  00258E  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  3492  002590  3416               	rlcf	___ftmul@f1+1,w,c
  3493  002592  361B               	rlcf	??___ftmul& (0+255),f,c
  3494  002594  E301               	bnc	u1891
  3495  002596  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  3496  002598                     u1891:
  3497  002598  501B               	movf	??___ftmul,w,c
  3498  00259A  6E1E               	movwf	___ftmul@exp,c
  3499  00259C  501E               	movf	___ftmul@exp,w,c
  3500  00259E  A4D8               	btfss	status,2,c
  3501  0025A0  D002               	goto	l2176
  3502  0025A2  D00E               	goto	l2178
  3503  0025A4  D06C               	goto	l764
  3504  0025A6                     l2176:
  3505  0025A6  C01A  F01B         	movff	___ftmul@f2+2,??___ftmul
  3506  0025AA  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  3507  0025AC  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  3508  0025AE  3419               	rlcf	___ftmul@f2+1,w,c
  3509  0025B0  361B               	rlcf	??___ftmul& (0+255),f,c
  3510  0025B2  E301               	bnc	u1911
  3511  0025B4  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  3512  0025B6                     u1911:
  3513  0025B6  501B               	movf	??___ftmul,w,c
  3514  0025B8  6E23               	movwf	___ftmul@sign,c
  3515  0025BA  5023               	movf	___ftmul@sign,w,c
  3516  0025BC  A4D8               	btfss	status,2,c
  3517  0025BE  D007               	goto	l2182
  3518  0025C0                     l2178:
  3519  0025C0  0E00               	movlw	0
  3520  0025C2  6E15               	movwf	?___ftmul,c
  3521  0025C4  0E00               	movlw	0
  3522  0025C6  6E16               	movwf	?___ftmul+1,c
  3523  0025C8  0E00               	movlw	0
  3524  0025CA  6E17               	movwf	?___ftmul+2,c
  3525  0025CC  D058               	goto	l764
  3526  0025CE                     l2182:
  3527  0025CE  5023               	movf	___ftmul@sign,w,c
  3528  0025D0  0F7B               	addlw	123
  3529  0025D2  261E               	addwf	___ftmul@exp,f,c
  3530  0025D4  C017  F023         	movff	___ftmul@f1+2,___ftmul@sign
  3531  0025D8  501A               	movf	___ftmul@f2+2,w,c
  3532  0025DA  1A23               	xorwf	___ftmul@sign,f,c
  3533  0025DC  0E80               	movlw	128
  3534  0025DE  1623               	andwf	___ftmul@sign,f,c
  3535  0025E0  8E16               	bsf	___ftmul@f1+1,7,c
  3536  0025E2  8E19               	bsf	___ftmul@f2+1,7,c
  3537  0025E4  0EFF               	movlw	255
  3538  0025E6  1618               	andwf	___ftmul@f2,f,c
  3539  0025E8  0EFF               	movlw	255
  3540  0025EA  1619               	andwf	___ftmul@f2+1,f,c
  3541  0025EC  0E00               	movlw	0
  3542  0025EE  161A               	andwf	___ftmul@f2+2,f,c
  3543  0025F0  0E00               	movlw	0
  3544  0025F2  6E1F               	movwf	___ftmul@f3_as_product,c
  3545  0025F4  0E00               	movlw	0
  3546  0025F6  6E20               	movwf	___ftmul@f3_as_product+1,c
  3547  0025F8  0E00               	movlw	0
  3548  0025FA  6E21               	movwf	___ftmul@f3_as_product+2,c
  3549  0025FC  0E07               	movlw	7
  3550  0025FE  6E22               	movwf	___ftmul@cntr,c
  3551  002600  D000               	goto	l2196
  3552  002602                     l2196:
  3553  002602  A015               	btfss	___ftmul@f1,0,c
  3554  002604  D007               	goto	l2200
  3555  002606  5018               	movf	___ftmul@f2,w,c
  3556  002608  261F               	addwf	___ftmul@f3_as_product,f,c
  3557  00260A  5019               	movf	___ftmul@f2+1,w,c
  3558  00260C  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  3559  00260E  501A               	movf	___ftmul@f2+2,w,c
  3560  002610  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  3561  002612  D000               	goto	l2200
  3562  002614                     l2200:
  3563  002614  90D8               	bcf	status,0,c
  3564  002616  3217               	rrcf	___ftmul@f1+2,f,c
  3565  002618  3216               	rrcf	___ftmul@f1+1,f,c
  3566  00261A  3215               	rrcf	___ftmul@f1,f,c
  3567  00261C  90D8               	bcf	status,0,c
  3568  00261E  3618               	rlcf	___ftmul@f2,f,c
  3569  002620  3619               	rlcf	___ftmul@f2+1,f,c
  3570  002622  361A               	rlcf	___ftmul@f2+2,f,c
  3571  002624  2E22               	decfsz	___ftmul@cntr,f,c
  3572  002626  D7ED               	goto	l2196
  3573  002628  D000               	goto	l2204
  3574  00262A                     l2204:
  3575  00262A  0E09               	movlw	9
  3576  00262C  6E22               	movwf	___ftmul@cntr,c
  3577  00262E  D000               	goto	l2206
  3578  002630                     l2206:
  3579  002630  A015               	btfss	___ftmul@f1,0,c
  3580  002632  D007               	goto	l2210
  3581  002634  5018               	movf	___ftmul@f2,w,c
  3582  002636  261F               	addwf	___ftmul@f3_as_product,f,c
  3583  002638  5019               	movf	___ftmul@f2+1,w,c
  3584  00263A  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  3585  00263C  501A               	movf	___ftmul@f2+2,w,c
  3586  00263E  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  3587  002640  D000               	goto	l2210
  3588  002642                     l2210:
  3589  002642  90D8               	bcf	status,0,c
  3590  002644  3217               	rrcf	___ftmul@f1+2,f,c
  3591  002646  3216               	rrcf	___ftmul@f1+1,f,c
  3592  002648  3215               	rrcf	___ftmul@f1,f,c
  3593  00264A  90D8               	bcf	status,0,c
  3594  00264C  3221               	rrcf	___ftmul@f3_as_product+2,f,c
  3595  00264E  3220               	rrcf	___ftmul@f3_as_product+1,f,c
  3596  002650  321F               	rrcf	___ftmul@f3_as_product,f,c
  3597  002652  2E22               	decfsz	___ftmul@cntr,f,c
  3598  002654  D7ED               	goto	l2206
  3599  002656  D000               	goto	l2214
  3600  002658                     l2214:
  3601  002658  C01F  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3602  00265C  C020  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3603  002660  C021  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3604  002664  C01E  F004         	movff	___ftmul@exp,___ftpack@exp
  3605  002668  C023  F005         	movff	___ftmul@sign,___ftpack@sign
  3606  00266C  EC93  F014         	call	___ftpack	;wreg free
  3607  002670  C001  F015         	movff	?___ftpack,?___ftmul
  3608  002674  C002  F016         	movff	?___ftpack+1,?___ftmul+1
  3609  002678  C003  F017         	movff	?___ftpack+2,?___ftmul+2
  3610  00267C  D000               	goto	l764
  3611  00267E                     l764:
  3612  00267E  0012               	return		;funcret
  3613  002680                     __end_of___ftmul:
  3614                           	opt stack 0
  3615                           tblptru	equ	0xFF8
  3616                           tblptrh	equ	0xFF7
  3617                           tblptrl	equ	0xFF6
  3618                           tablat	equ	0xFF5
  3619                           prodh	equ	0xFF4
  3620                           prodl	equ	0xFF3
  3621                           postinc0	equ	0xFEE
  3622                           wreg	equ	0xFE8
  3623                           postdec1	equ	0xFE5
  3624                           fsr1l	equ	0xFE1
  3625                           indf2	equ	0xFDF
  3626                           postinc2	equ	0xFDE
  3627                           postdec2	equ	0xFDD
  3628                           fsr2h	equ	0xFDA
  3629                           fsr2l	equ	0xFD9
  3630                           status	equ	0xFD8
  3631                           
  3632 ;; *************** function ___awmod *****************
  3633 ;; Defined at:
  3634 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\awmod.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;  dividend        2    0[COMRAM] int 
  3637 ;;  divisor         2    2[COMRAM] int 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  sign            1    5[COMRAM] unsigned char 
  3640 ;;  counter         1    4[COMRAM] unsigned char 
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  2    0[COMRAM] int 
  3643 ;; Registers used:
  3644 ;;		wreg, status,2, status,0
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3650 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;Total ram usage:        6 bytes
  3655 ;; Hardware stack levels used:    1
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_fround
  3660 ;;		_scale
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           	psect	text7
  3665  002C62                     __ptext7:
  3666                           	opt stack 0
  3667  002C62                     ___awmod:
  3668                           	opt stack 28
  3669                           
  3670                           ;incstack = 0
  3671  002C62  0E00               	movlw	0
  3672  002C64  6E06               	movwf	___awmod@sign,c
  3673  002C66  AE02               	btfss	___awmod@dividend+1,7,c
  3674  002C68  D007               	goto	l2270
  3675  002C6A  6C01               	negf	___awmod@dividend,c
  3676  002C6C  1E02               	comf	___awmod@dividend+1,f,c
  3677  002C6E  B0D8               	btfsc	status,0,c
  3678  002C70  2A02               	incf	___awmod@dividend+1,f,c
  3679  002C72  0E01               	movlw	1
  3680  002C74  6E06               	movwf	___awmod@sign,c
  3681  002C76  D000               	goto	l2270
  3682  002C78                     l2270:
  3683  002C78  AE04               	btfss	___awmod@divisor+1,7,c
  3684  002C7A  D005               	goto	l2274
  3685  002C7C  6C03               	negf	___awmod@divisor,c
  3686  002C7E  1E04               	comf	___awmod@divisor+1,f,c
  3687  002C80  B0D8               	btfsc	status,0,c
  3688  002C82  2A04               	incf	___awmod@divisor+1,f,c
  3689  002C84  D000               	goto	l2274
  3690  002C86                     l2274:
  3691  002C86  5003               	movf	___awmod@divisor,w,c
  3692  002C88  1004               	iorwf	___awmod@divisor+1,w,c
  3693  002C8A  B4D8               	btfsc	status,2,c
  3694  002C8C  D01D               	goto	l2290
  3695  002C8E  0E01               	movlw	1
  3696  002C90  6E05               	movwf	___awmod@counter,c
  3697  002C92  D005               	goto	l2280
  3698  002C94                     l2278:
  3699  002C94  90D8               	bcf	status,0,c
  3700  002C96  3603               	rlcf	___awmod@divisor,f,c
  3701  002C98  3604               	rlcf	___awmod@divisor+1,f,c
  3702  002C9A  2A05               	incf	___awmod@counter,f,c
  3703  002C9C  D000               	goto	l2280
  3704  002C9E                     l2280:
  3705  002C9E  BE04               	btfsc	___awmod@divisor+1,7,c
  3706  002CA0  D002               	goto	l2282
  3707  002CA2  D7F8               	goto	l2278
  3708  002CA4  D000               	goto	l2282
  3709  002CA6                     l2282:
  3710  002CA6  5003               	movf	___awmod@divisor,w,c
  3711  002CA8  5C01               	subwf	___awmod@dividend,w,c
  3712  002CAA  5004               	movf	___awmod@divisor+1,w,c
  3713  002CAC  5802               	subwfb	___awmod@dividend+1,w,c
  3714  002CAE  A0D8               	btfss	status,0,c
  3715  002CB0  D005               	goto	l2286
  3716  002CB2  5003               	movf	___awmod@divisor,w,c
  3717  002CB4  5E01               	subwf	___awmod@dividend,f,c
  3718  002CB6  5004               	movf	___awmod@divisor+1,w,c
  3719  002CB8  5A02               	subwfb	___awmod@dividend+1,f,c
  3720  002CBA  D000               	goto	l2286
  3721  002CBC                     l2286:
  3722  002CBC  90D8               	bcf	status,0,c
  3723  002CBE  3204               	rrcf	___awmod@divisor+1,f,c
  3724  002CC0  3203               	rrcf	___awmod@divisor,f,c
  3725  002CC2  2E05               	decfsz	___awmod@counter,f,c
  3726  002CC4  D7F0               	goto	l2282
  3727  002CC6  D000               	goto	l2290
  3728  002CC8                     l2290:
  3729  002CC8  5006               	movf	___awmod@sign,w,c
  3730  002CCA  B4D8               	btfsc	status,2,c
  3731  002CCC  D005               	goto	l2294
  3732  002CCE  6C01               	negf	___awmod@dividend,c
  3733  002CD0  1E02               	comf	___awmod@dividend+1,f,c
  3734  002CD2  B0D8               	btfsc	status,0,c
  3735  002CD4  2A02               	incf	___awmod@dividend+1,f,c
  3736  002CD6  D000               	goto	l2294
  3737  002CD8                     l2294:
  3738  002CD8  C001  F001         	movff	___awmod@dividend,?___awmod
  3739  002CDC  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3740  002CE0  D000               	goto	l541
  3741  002CE2                     l541:
  3742  002CE2  0012               	return		;funcret
  3743  002CE4                     __end_of___awmod:
  3744                           	opt stack 0
  3745                           tblptru	equ	0xFF8
  3746                           tblptrh	equ	0xFF7
  3747                           tblptrl	equ	0xFF6
  3748                           tablat	equ	0xFF5
  3749                           prodh	equ	0xFF4
  3750                           prodl	equ	0xFF3
  3751                           postinc0	equ	0xFEE
  3752                           wreg	equ	0xFE8
  3753                           postdec1	equ	0xFE5
  3754                           fsr1l	equ	0xFE1
  3755                           indf2	equ	0xFDF
  3756                           postinc2	equ	0xFDE
  3757                           postdec2	equ	0xFDD
  3758                           fsr2h	equ	0xFDA
  3759                           fsr2l	equ	0xFD9
  3760                           status	equ	0xFD8
  3761                           
  3762 ;; *************** function ___awdiv *****************
  3763 ;; Defined at:
  3764 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  dividend        2    6[COMRAM] int 
  3767 ;;  divisor         2    8[COMRAM] int 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;  quotient        2   12[COMRAM] int 
  3770 ;;  sign            1   11[COMRAM] unsigned char 
  3771 ;;  counter         1   10[COMRAM] unsigned char 
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  2    6[COMRAM] int 
  3774 ;; Registers used:
  3775 ;;		wreg, status,2, status,0
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3781 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;Total ram usage:        8 bytes
  3786 ;; Hardware stack levels used:    1
  3787 ;; This function calls:
  3788 ;;		Nothing
  3789 ;; This function is called by:
  3790 ;;		_fround
  3791 ;;		_scale
  3792 ;;		_printf
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text8
  3797  002AAA                     __ptext8:
  3798                           	opt stack 0
  3799  002AAA                     ___awdiv:
  3800                           	opt stack 28
  3801                           
  3802                           ;incstack = 0
  3803  002AAA  0E00               	movlw	0
  3804  002AAC  6E0C               	movwf	___awdiv@sign,c
  3805  002AAE  AE0A               	btfss	___awdiv@divisor+1,7,c
  3806  002AB0  D007               	goto	l2226
  3807  002AB2  6C09               	negf	___awdiv@divisor,c
  3808  002AB4  1E0A               	comf	___awdiv@divisor+1,f,c
  3809  002AB6  B0D8               	btfsc	status,0,c
  3810  002AB8  2A0A               	incf	___awdiv@divisor+1,f,c
  3811  002ABA  0E01               	movlw	1
  3812  002ABC  6E0C               	movwf	___awdiv@sign,c
  3813  002ABE  D000               	goto	l2226
  3814  002AC0                     l2226:
  3815  002AC0  AE08               	btfss	___awdiv@dividend+1,7,c
  3816  002AC2  D007               	goto	l2232
  3817  002AC4  6C07               	negf	___awdiv@dividend,c
  3818  002AC6  1E08               	comf	___awdiv@dividend+1,f,c
  3819  002AC8  B0D8               	btfsc	status,0,c
  3820  002ACA  2A08               	incf	___awdiv@dividend+1,f,c
  3821  002ACC  0E01               	movlw	1
  3822  002ACE  1A0C               	xorwf	___awdiv@sign,f,c
  3823  002AD0  D000               	goto	l2232
  3824  002AD2                     l2232:
  3825  002AD2  0E00               	movlw	0
  3826  002AD4  6E0E               	movwf	___awdiv@quotient+1,c
  3827  002AD6  0E00               	movlw	0
  3828  002AD8  6E0D               	movwf	___awdiv@quotient,c
  3829  002ADA  5009               	movf	___awdiv@divisor,w,c
  3830  002ADC  100A               	iorwf	___awdiv@divisor+1,w,c
  3831  002ADE  B4D8               	btfsc	status,2,c
  3832  002AE0  D021               	goto	l2254
  3833  002AE2  0E01               	movlw	1
  3834  002AE4  6E0B               	movwf	___awdiv@counter,c
  3835  002AE6  D005               	goto	l2240
  3836  002AE8                     l2238:
  3837  002AE8  90D8               	bcf	status,0,c
  3838  002AEA  3609               	rlcf	___awdiv@divisor,f,c
  3839  002AEC  360A               	rlcf	___awdiv@divisor+1,f,c
  3840  002AEE  2A0B               	incf	___awdiv@counter,f,c
  3841  002AF0  D000               	goto	l2240
  3842  002AF2                     l2240:
  3843  002AF2  BE0A               	btfsc	___awdiv@divisor+1,7,c
  3844  002AF4  D002               	goto	l2242
  3845  002AF6  D7F8               	goto	l2238
  3846  002AF8  D000               	goto	l2242
  3847  002AFA                     l2242:
  3848  002AFA  90D8               	bcf	status,0,c
  3849  002AFC  360D               	rlcf	___awdiv@quotient,f,c
  3850  002AFE  360E               	rlcf	___awdiv@quotient+1,f,c
  3851  002B00  5009               	movf	___awdiv@divisor,w,c
  3852  002B02  5C07               	subwf	___awdiv@dividend,w,c
  3853  002B04  500A               	movf	___awdiv@divisor+1,w,c
  3854  002B06  5808               	subwfb	___awdiv@dividend+1,w,c
  3855  002B08  A0D8               	btfss	status,0,c
  3856  002B0A  D006               	goto	l2250
  3857  002B0C  5009               	movf	___awdiv@divisor,w,c
  3858  002B0E  5E07               	subwf	___awdiv@dividend,f,c
  3859  002B10  500A               	movf	___awdiv@divisor+1,w,c
  3860  002B12  5A08               	subwfb	___awdiv@dividend+1,f,c
  3861  002B14  800D               	bsf	___awdiv@quotient,0,c
  3862  002B16  D000               	goto	l2250
  3863  002B18                     l2250:
  3864  002B18  90D8               	bcf	status,0,c
  3865  002B1A  320A               	rrcf	___awdiv@divisor+1,f,c
  3866  002B1C  3209               	rrcf	___awdiv@divisor,f,c
  3867  002B1E  2E0B               	decfsz	___awdiv@counter,f,c
  3868  002B20  D7EC               	goto	l2242
  3869  002B22  D000               	goto	l2254
  3870  002B24                     l2254:
  3871  002B24  500C               	movf	___awdiv@sign,w,c
  3872  002B26  B4D8               	btfsc	status,2,c
  3873  002B28  D005               	goto	l2258
  3874  002B2A  6C0D               	negf	___awdiv@quotient,c
  3875  002B2C  1E0E               	comf	___awdiv@quotient+1,f,c
  3876  002B2E  B0D8               	btfsc	status,0,c
  3877  002B30  2A0E               	incf	___awdiv@quotient+1,f,c
  3878  002B32  D000               	goto	l2258
  3879  002B34                     l2258:
  3880  002B34  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3881  002B38  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3882  002B3C  D000               	goto	l528
  3883  002B3E                     l528:
  3884  002B3E  0012               	return		;funcret
  3885  002B40                     __end_of___awdiv:
  3886                           	opt stack 0
  3887                           tblptru	equ	0xFF8
  3888                           tblptrh	equ	0xFF7
  3889                           tblptrl	equ	0xFF6
  3890                           tablat	equ	0xFF5
  3891                           prodh	equ	0xFF4
  3892                           prodl	equ	0xFF3
  3893                           postinc0	equ	0xFEE
  3894                           wreg	equ	0xFE8
  3895                           postdec1	equ	0xFE5
  3896                           fsr1l	equ	0xFE1
  3897                           indf2	equ	0xFDF
  3898                           postinc2	equ	0xFDE
  3899                           postdec2	equ	0xFDD
  3900                           fsr2h	equ	0xFDA
  3901                           fsr2l	equ	0xFD9
  3902                           status	equ	0xFD8
  3903                           
  3904 ;; *************** function __tdiv_to_l_ *****************
  3905 ;; Defined at:
  3906 ;;		line 60 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftdivl.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  f1              3    0[COMRAM] float 
  3909 ;;  f2              3    3[COMRAM] float 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  quot            4    9[COMRAM] unsigned long 
  3912 ;;  exp1            1   14[COMRAM] unsigned char 
  3913 ;;  cntr            1   13[COMRAM] unsigned char 
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  4    0[COMRAM] unsigned long 
  3916 ;; Registers used:
  3917 ;;		wreg, status,2, status,0
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3923 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3924 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3925 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3926 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;Total ram usage:       15 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; This function calls:
  3930 ;;		Nothing
  3931 ;; This function is called by:
  3932 ;;		_printf
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           	psect	text9
  3937  00236E                     __ptext9:
  3938                           	opt stack 0
  3939  00236E                     __tdiv_to_l_:
  3940                           	opt stack 29
  3941                           
  3942                           ;incstack = 0
  3943  00236E  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3944  002372  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3945  002374  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3946  002376  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3947  002378  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3948  00237A  E301               	bnc	u2251
  3949  00237C  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3950  00237E                     u2251:
  3951  00237E  5007               	movf	??__tdiv_to_l_,w,c
  3952  002380  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3953  002382  500F               	movf	__tdiv_to_l_@exp1,w,c
  3954  002384  A4D8               	btfss	status,2,c
  3955  002386  D002               	goto	l2418
  3956  002388  D05D               	goto	l2460
  3957  00238A  D078               	goto	l740
  3958  00238C                     l2418:
  3959  00238C  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3960  002390  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3961  002392  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3962  002394  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3963  002396  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3964  002398  E301               	bnc	u2271
  3965  00239A  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3966  00239C                     u2271:
  3967  00239C  5007               	movf	??__tdiv_to_l_,w,c
  3968  00239E  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3969  0023A0  500E               	movf	__tdiv_to_l_@cntr,w,c
  3970  0023A2  A4D8               	btfss	status,2,c
  3971  0023A4  D002               	goto	l2424
  3972  0023A6  D04E               	goto	l2460
  3973  0023A8  D069               	goto	l740
  3974  0023AA                     l2424:
  3975  0023AA  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3976  0023AC  0EFF               	movlw	255
  3977  0023AE  1601               	andwf	__tdiv_to_l_@f1,f,c
  3978  0023B0  0EFF               	movlw	255
  3979  0023B2  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3980  0023B4  0E00               	movlw	0
  3981  0023B6  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3982  0023B8  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3983  0023BA  0EFF               	movlw	255
  3984  0023BC  1604               	andwf	__tdiv_to_l_@f2,f,c
  3985  0023BE  0EFF               	movlw	255
  3986  0023C0  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3987  0023C2  0E00               	movlw	0
  3988  0023C4  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3989  0023C6  0E00               	movlw	0
  3990  0023C8  6E0A               	movwf	__tdiv_to_l_@quot,c
  3991  0023CA  0E00               	movlw	0
  3992  0023CC  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  3993  0023CE  0E00               	movlw	0
  3994  0023D0  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  3995  0023D2  0E00               	movlw	0
  3996  0023D4  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  3997  0023D6  0E7F               	movlw	127
  3998  0023D8  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3999  0023DA  500E               	movf	__tdiv_to_l_@cntr,w,c
  4000  0023DC  0F98               	addlw	152
  4001  0023DE  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  4002  0023E0  0E18               	movlw	24
  4003  0023E2  6E0E               	movwf	__tdiv_to_l_@cntr,c
  4004  0023E4                     l742:
  4005  0023E4  90D8               	bcf	status,0,c
  4006  0023E6  360A               	rlcf	__tdiv_to_l_@quot,f,c
  4007  0023E8  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  4008  0023EA  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  4009  0023EC  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  4010  0023EE  5004               	movf	__tdiv_to_l_@f2,w,c
  4011  0023F0  5C01               	subwf	__tdiv_to_l_@f1,w,c
  4012  0023F2  5005               	movf	__tdiv_to_l_@f2+1,w,c
  4013  0023F4  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  4014  0023F6  5006               	movf	__tdiv_to_l_@f2+2,w,c
  4015  0023F8  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  4016  0023FA  A0D8               	btfss	status,0,c
  4017  0023FC  D007               	goto	l743
  4018  0023FE  5004               	movf	__tdiv_to_l_@f2,w,c
  4019  002400  5E01               	subwf	__tdiv_to_l_@f1,f,c
  4020  002402  5005               	movf	__tdiv_to_l_@f2+1,w,c
  4021  002404  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  4022  002406  5006               	movf	__tdiv_to_l_@f2+2,w,c
  4023  002408  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  4024  00240A  800A               	bsf	__tdiv_to_l_@quot,0,c
  4025  00240C                     l743:
  4026  00240C  90D8               	bcf	status,0,c
  4027  00240E  3601               	rlcf	__tdiv_to_l_@f1,f,c
  4028  002410  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  4029  002412  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  4030  002414  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  4031  002416  D7E6               	goto	l742
  4032  002418  D000               	goto	l2446
  4033  00241A                     l2446:
  4034  00241A  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  4035  00241C  D010               	goto	l2458
  4036  00241E  500F               	movf	__tdiv_to_l_@exp1,w,c
  4037  002420  0A80               	xorlw	128
  4038  002422  0F97               	addlw	151
  4039  002424  B0D8               	btfsc	status,0,c
  4040  002426  D003               	goto	l2454
  4041  002428  D00D               	goto	l2460
  4042  00242A  D028               	goto	l740
  4043  00242C  D000               	goto	l2454
  4044  00242E                     l2454:
  4045  00242E  90D8               	bcf	status,0,c
  4046  002430  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  4047  002432  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  4048  002434  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  4049  002436  320A               	rrcf	__tdiv_to_l_@quot,f,c
  4050  002438  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  4051  00243A  D7F9               	goto	l2454
  4052  00243C  D017               	goto	l749
  4053  00243E                     l2458:
  4054  00243E  0E17               	movlw	23
  4055  002440  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  4056  002442  D011               	goto	l2466
  4057  002444                     l2460:
  4058  002444  0E00               	movlw	0
  4059  002446  6E01               	movwf	?__tdiv_to_l_,c
  4060  002448  0E00               	movlw	0
  4061  00244A  6E02               	movwf	?__tdiv_to_l_+1,c
  4062  00244C  0E00               	movlw	0
  4063  00244E  6E03               	movwf	?__tdiv_to_l_+2,c
  4064  002450  0E00               	movlw	0
  4065  002452  6E04               	movwf	?__tdiv_to_l_+3,c
  4066  002454  D013               	goto	l740
  4067  002456  D007               	goto	l2466
  4068  002458                     l2464:
  4069  002458  90D8               	bcf	status,0,c
  4070  00245A  360A               	rlcf	__tdiv_to_l_@quot,f,c
  4071  00245C  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  4072  00245E  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  4073  002460  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  4074  002462  060F               	decf	__tdiv_to_l_@exp1,f,c
  4075  002464  D000               	goto	l2466
  4076  002466                     l2466:
  4077  002466  500F               	movf	__tdiv_to_l_@exp1,w,c
  4078  002468  A4D8               	btfss	status,2,c
  4079  00246A  D7F6               	goto	l2464
  4080  00246C                     l749:
  4081  00246C  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4082  002470  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4083  002474  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4084  002478  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4085  00247C                     l740:
  4086  00247C  0012               	return		;funcret
  4087  00247E                     __end_of__tdiv_to_l_:
  4088                           	opt stack 0
  4089                           tblptru	equ	0xFF8
  4090                           tblptrh	equ	0xFF7
  4091                           tblptrl	equ	0xFF6
  4092                           tablat	equ	0xFF5
  4093                           prodh	equ	0xFF4
  4094                           prodl	equ	0xFF3
  4095                           postinc0	equ	0xFEE
  4096                           wreg	equ	0xFE8
  4097                           postdec1	equ	0xFE5
  4098                           fsr1l	equ	0xFE1
  4099                           indf2	equ	0xFDF
  4100                           postinc2	equ	0xFDE
  4101                           postdec2	equ	0xFDD
  4102                           fsr2h	equ	0xFDA
  4103                           fsr2l	equ	0xFD9
  4104                           status	equ	0xFD8
  4105                           
  4106 ;; *************** function __div_to_l_ *****************
  4107 ;; Defined at:
  4108 ;;		line 60 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\fldivl.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;  f1              3    0[COMRAM] unsigned long 
  4111 ;;  f2              3    3[COMRAM] unsigned long 
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;  quot            4    6[COMRAM] unsigned long 
  4114 ;;  exp1            1   11[COMRAM] unsigned char 
  4115 ;;  cntr            1   10[COMRAM] unsigned char 
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  4    0[COMRAM] unsigned long 
  4118 ;; Registers used:
  4119 ;;		wreg, status,2, status,0
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4125 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4126 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;Total ram usage:       12 bytes
  4130 ;; Hardware stack levels used:    1
  4131 ;; This function calls:
  4132 ;;		Nothing
  4133 ;; This function is called by:
  4134 ;;		_printf
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           	psect	text10
  4139  00247E                     __ptext10:
  4140                           	opt stack 0
  4141  00247E                     __div_to_l_:
  4142                           	opt stack 29
  4143                           
  4144                           ;incstack = 0
  4145  00247E  3403               	rlcf	__div_to_l_@f1+2,w,c
  4146  002480  3404               	rlcf	__div_to_l_@f1+3,w,c
  4147  002482  6E0C               	movwf	__div_to_l_@exp1,c
  4148  002484  500C               	movf	__div_to_l_@exp1,w,c
  4149  002486  A4D8               	btfss	status,2,c
  4150  002488  D002               	goto	l2474
  4151  00248A  D061               	goto	l2520
  4152  00248C  D07C               	goto	l619
  4153  00248E                     l2474:
  4154  00248E  3406               	rlcf	__div_to_l_@f2+2,w,c
  4155  002490  3407               	rlcf	__div_to_l_@f2+3,w,c
  4156  002492  6E0B               	movwf	__div_to_l_@cntr,c
  4157  002494  500B               	movf	__div_to_l_@cntr,w,c
  4158  002496  A4D8               	btfss	status,2,c
  4159  002498  D002               	goto	l2480
  4160  00249A  D059               	goto	l2520
  4161  00249C  D074               	goto	l619
  4162  00249E                     l2480:
  4163  00249E  8E03               	bsf	__div_to_l_@f1+2,7,c
  4164  0024A0  0EFF               	movlw	255
  4165  0024A2  1601               	andwf	__div_to_l_@f1,f,c
  4166  0024A4  0EFF               	movlw	255
  4167  0024A6  1602               	andwf	__div_to_l_@f1+1,f,c
  4168  0024A8  0EFF               	movlw	255
  4169  0024AA  1603               	andwf	__div_to_l_@f1+2,f,c
  4170  0024AC  0E00               	movlw	0
  4171  0024AE  1604               	andwf	__div_to_l_@f1+3,f,c
  4172  0024B0  8E06               	bsf	__div_to_l_@f2+2,7,c
  4173  0024B2  0EFF               	movlw	255
  4174  0024B4  1604               	andwf	__div_to_l_@f2,f,c
  4175  0024B6  0EFF               	movlw	255
  4176  0024B8  1605               	andwf	__div_to_l_@f2+1,f,c
  4177  0024BA  0EFF               	movlw	255
  4178  0024BC  1606               	andwf	__div_to_l_@f2+2,f,c
  4179  0024BE  0E00               	movlw	0
  4180  0024C0  1607               	andwf	__div_to_l_@f2+3,f,c
  4181  0024C2  0E00               	movlw	0
  4182  0024C4  6E07               	movwf	__div_to_l_@quot,c
  4183  0024C6  0E00               	movlw	0
  4184  0024C8  6E08               	movwf	__div_to_l_@quot+1,c
  4185  0024CA  0E00               	movlw	0
  4186  0024CC  6E09               	movwf	__div_to_l_@quot+2,c
  4187  0024CE  0E00               	movlw	0
  4188  0024D0  6E0A               	movwf	__div_to_l_@quot+3,c
  4189  0024D2  0E7F               	movlw	127
  4190  0024D4  5E0C               	subwf	__div_to_l_@exp1,f,c
  4191  0024D6  500B               	movf	__div_to_l_@cntr,w,c
  4192  0024D8  0FA0               	addlw	160
  4193  0024DA  5E0C               	subwf	__div_to_l_@exp1,f,c
  4194  0024DC  0E20               	movlw	32
  4195  0024DE  6E0B               	movwf	__div_to_l_@cntr,c
  4196  0024E0  D000               	goto	l2494
  4197  0024E2                     l2494:
  4198  0024E2  90D8               	bcf	status,0,c
  4199  0024E4  3607               	rlcf	__div_to_l_@quot,f,c
  4200  0024E6  3608               	rlcf	__div_to_l_@quot+1,f,c
  4201  0024E8  3609               	rlcf	__div_to_l_@quot+2,f,c
  4202  0024EA  360A               	rlcf	__div_to_l_@quot+3,f,c
  4203  0024EC  5004               	movf	__div_to_l_@f2,w,c
  4204  0024EE  5C01               	subwf	__div_to_l_@f1,w,c
  4205  0024F0  5005               	movf	__div_to_l_@f2+1,w,c
  4206  0024F2  5802               	subwfb	__div_to_l_@f1+1,w,c
  4207  0024F4  5006               	movf	__div_to_l_@f2+2,w,c
  4208  0024F6  5803               	subwfb	__div_to_l_@f1+2,w,c
  4209  0024F8  5007               	movf	__div_to_l_@f2+3,w,c
  4210  0024FA  5804               	subwfb	__div_to_l_@f1+3,w,c
  4211  0024FC  A0D8               	btfss	status,0,c
  4212  0024FE  D00A               	goto	l2502
  4213  002500  5004               	movf	__div_to_l_@f2,w,c
  4214  002502  5E01               	subwf	__div_to_l_@f1,f,c
  4215  002504  5005               	movf	__div_to_l_@f2+1,w,c
  4216  002506  5A02               	subwfb	__div_to_l_@f1+1,f,c
  4217  002508  5006               	movf	__div_to_l_@f2+2,w,c
  4218  00250A  5A03               	subwfb	__div_to_l_@f1+2,f,c
  4219  00250C  5007               	movf	__div_to_l_@f2+3,w,c
  4220  00250E  5A04               	subwfb	__div_to_l_@f1+3,f,c
  4221  002510  8007               	bsf	__div_to_l_@quot,0,c
  4222  002512  D000               	goto	l2502
  4223  002514                     l2502:
  4224  002514  90D8               	bcf	status,0,c
  4225  002516  3601               	rlcf	__div_to_l_@f1,f,c
  4226  002518  3602               	rlcf	__div_to_l_@f1+1,f,c
  4227  00251A  3603               	rlcf	__div_to_l_@f1+2,f,c
  4228  00251C  3604               	rlcf	__div_to_l_@f1+3,f,c
  4229  00251E  2E0B               	decfsz	__div_to_l_@cntr,f,c
  4230  002520  D7E0               	goto	l2494
  4231  002522  D000               	goto	l2506
  4232  002524                     l2506:
  4233  002524  AE0C               	btfss	__div_to_l_@exp1,7,c
  4234  002526  D010               	goto	l2518
  4235  002528  500C               	movf	__div_to_l_@exp1,w,c
  4236  00252A  0A80               	xorlw	128
  4237  00252C  0F9F               	addlw	159
  4238  00252E  B0D8               	btfsc	status,0,c
  4239  002530  D003               	goto	l2514
  4240  002532  D00D               	goto	l2520
  4241  002534  D028               	goto	l619
  4242  002536  D000               	goto	l2514
  4243  002538                     l2514:
  4244  002538  90D8               	bcf	status,0,c
  4245  00253A  320A               	rrcf	__div_to_l_@quot+3,f,c
  4246  00253C  3209               	rrcf	__div_to_l_@quot+2,f,c
  4247  00253E  3208               	rrcf	__div_to_l_@quot+1,f,c
  4248  002540  3207               	rrcf	__div_to_l_@quot,f,c
  4249  002542  3E0C               	incfsz	__div_to_l_@exp1,f,c
  4250  002544  D7F9               	goto	l2514
  4251  002546  D017               	goto	l628
  4252  002548                     l2518:
  4253  002548  0E1F               	movlw	31
  4254  00254A  640C               	cpfsgt	__div_to_l_@exp1,c
  4255  00254C  D011               	goto	l2526
  4256  00254E                     l2520:
  4257  00254E  0E00               	movlw	0
  4258  002550  6E01               	movwf	?__div_to_l_,c
  4259  002552  0E00               	movlw	0
  4260  002554  6E02               	movwf	?__div_to_l_+1,c
  4261  002556  0E00               	movlw	0
  4262  002558  6E03               	movwf	?__div_to_l_+2,c
  4263  00255A  0E00               	movlw	0
  4264  00255C  6E04               	movwf	?__div_to_l_+3,c
  4265  00255E  D013               	goto	l619
  4266  002560  D007               	goto	l2526
  4267  002562                     l2524:
  4268  002562  90D8               	bcf	status,0,c
  4269  002564  3607               	rlcf	__div_to_l_@quot,f,c
  4270  002566  3608               	rlcf	__div_to_l_@quot+1,f,c
  4271  002568  3609               	rlcf	__div_to_l_@quot+2,f,c
  4272  00256A  360A               	rlcf	__div_to_l_@quot+3,f,c
  4273  00256C  060C               	decf	__div_to_l_@exp1,f,c
  4274  00256E  D000               	goto	l2526
  4275  002570                     l2526:
  4276  002570  500C               	movf	__div_to_l_@exp1,w,c
  4277  002572  A4D8               	btfss	status,2,c
  4278  002574  D7F6               	goto	l2524
  4279  002576                     l628:
  4280  002576  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4281  00257A  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4282  00257E  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4283  002582  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4284  002586                     l619:
  4285  002586  0012               	return		;funcret
  4286  002588                     __end_of__div_to_l_:
  4287                           	opt stack 0
  4288                           tblptru	equ	0xFF8
  4289                           tblptrh	equ	0xFF7
  4290                           tblptrl	equ	0xFF6
  4291                           tablat	equ	0xFF5
  4292                           prodh	equ	0xFF4
  4293                           prodl	equ	0xFF3
  4294                           postinc0	equ	0xFEE
  4295                           wreg	equ	0xFE8
  4296                           postdec1	equ	0xFE5
  4297                           fsr1l	equ	0xFE1
  4298                           indf2	equ	0xFDF
  4299                           postinc2	equ	0xFDE
  4300                           postdec2	equ	0xFDD
  4301                           fsr2h	equ	0xFDA
  4302                           fsr2l	equ	0xFD9
  4303                           status	equ	0xFD8
  4304                           
  4305 ;; *************** function ___lltoft *****************
  4306 ;; Defined at:
  4307 ;;		line 35 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\lltoft.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  c               4    8[COMRAM] unsigned long 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  exp             1   16[COMRAM] unsigned char 
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  3    8[COMRAM] float 
  4314 ;; Registers used:
  4315 ;;		wreg, status,2, status,0, cstack
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4321 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4322 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4323 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4324 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;Total ram usage:        9 bytes
  4326 ;; Hardware stack levels used:    1
  4327 ;; Hardware stack levels required when called:    1
  4328 ;; This function calls:
  4329 ;;		___ftpack
  4330 ;; This function is called by:
  4331 ;;		_printf
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335                           	psect	text11
  4336  002DC4                     __ptext11:
  4337                           	opt stack 0
  4338  002DC4                     ___lltoft:
  4339                           	opt stack 28
  4340                           
  4341                           ;incstack = 0
  4342  002DC4  0E8E               	movlw	142
  4343  002DC6  6E11               	movwf	___lltoft@exp,c
  4344  002DC8  D007               	goto	l2646
  4345  002DCA                     l2644:
  4346  002DCA  90D8               	bcf	status,0,c
  4347  002DCC  320C               	rrcf	___lltoft@c+3,f,c
  4348  002DCE  320B               	rrcf	___lltoft@c+2,f,c
  4349  002DD0  320A               	rrcf	___lltoft@c+1,f,c
  4350  002DD2  3209               	rrcf	___lltoft@c,f,c
  4351  002DD4  2A11               	incf	___lltoft@exp,f,c
  4352  002DD6  D000               	goto	l2646
  4353  002DD8                     l2646:
  4354  002DD8  0E00               	movlw	0
  4355  002DDA  1409               	andwf	___lltoft@c,w,c
  4356  002DDC  6E0D               	movwf	??___lltoft& (0+255),c
  4357  002DDE  0E00               	movlw	0
  4358  002DE0  140A               	andwf	___lltoft@c+1,w,c
  4359  002DE2  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  4360  002DE4  0E00               	movlw	0
  4361  002DE6  140B               	andwf	___lltoft@c+2,w,c
  4362  002DE8  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  4363  002DEA  0EFF               	movlw	255
  4364  002DEC  140C               	andwf	___lltoft@c+3,w,c
  4365  002DEE  6E10               	movwf	(??___lltoft+3)& (0+255),c
  4366  002DF0  500D               	movf	??___lltoft,w,c
  4367  002DF2  100E               	iorwf	??___lltoft+1,w,c
  4368  002DF4  100F               	iorwf	??___lltoft+2,w,c
  4369  002DF6  1010               	iorwf	??___lltoft+3,w,c
  4370  002DF8  A4D8               	btfss	status,2,c
  4371  002DFA  D7E7               	goto	l2644
  4372  002DFC  C009  F001         	movff	___lltoft@c,___ftpack@arg
  4373  002E00  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  4374  002E04  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  4375  002E08  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  4376  002E0C  0E00               	movlw	0
  4377  002E0E  6E05               	movwf	___ftpack@sign,c
  4378  002E10  EC93  F014         	call	___ftpack	;wreg free
  4379  002E14  C001  F009         	movff	?___ftpack,?___lltoft
  4380  002E18  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  4381  002E1C  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  4382  002E20  D000               	goto	l854
  4383  002E22                     l854:
  4384  002E22  0012               	return		;funcret
  4385  002E24                     __end_of___lltoft:
  4386                           	opt stack 0
  4387                           tblptru	equ	0xFF8
  4388                           tblptrh	equ	0xFF7
  4389                           tblptrl	equ	0xFF6
  4390                           tablat	equ	0xFF5
  4391                           prodh	equ	0xFF4
  4392                           prodl	equ	0xFF3
  4393                           postinc0	equ	0xFEE
  4394                           wreg	equ	0xFE8
  4395                           postdec1	equ	0xFE5
  4396                           fsr1l	equ	0xFE1
  4397                           indf2	equ	0xFDF
  4398                           postinc2	equ	0xFDE
  4399                           postdec2	equ	0xFDD
  4400                           fsr2h	equ	0xFDA
  4401                           fsr2l	equ	0xFD9
  4402                           status	equ	0xFD8
  4403                           
  4404 ;; *************** function ___llmod *****************
  4405 ;; Defined at:
  4406 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\llmod.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  dividend        4   13[COMRAM] unsigned long 
  4409 ;;  divisor         4   17[COMRAM] unsigned long 
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;  counter         1   21[COMRAM] unsigned char 
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  4   13[COMRAM] unsigned long 
  4414 ;; Registers used:
  4415 ;;		wreg, status,2, status,0
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4421 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4424 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4425 ;;Total ram usage:        9 bytes
  4426 ;; Hardware stack levels used:    1
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		_printf
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text12
  4435  002CE4                     __ptext12:
  4436                           	opt stack 0
  4437  002CE4                     ___llmod:
  4438                           	opt stack 29
  4439                           
  4440                           ;incstack = 0
  4441  002CE4  5012               	movf	___llmod@divisor,w,c
  4442  002CE6  1013               	iorwf	___llmod@divisor+1,w,c
  4443  002CE8  1014               	iorwf	___llmod@divisor+2,w,c
  4444  002CEA  1015               	iorwf	___llmod@divisor+3,w,c
  4445  002CEC  B4D8               	btfsc	status,2,c
  4446  002CEE  D029               	goto	l834
  4447  002CF0  0E01               	movlw	1
  4448  002CF2  6E16               	movwf	___llmod@counter,c
  4449  002CF4  D007               	goto	l2632
  4450  002CF6                     l2630:
  4451  002CF6  90D8               	bcf	status,0,c
  4452  002CF8  3612               	rlcf	___llmod@divisor,f,c
  4453  002CFA  3613               	rlcf	___llmod@divisor+1,f,c
  4454  002CFC  3614               	rlcf	___llmod@divisor+2,f,c
  4455  002CFE  3615               	rlcf	___llmod@divisor+3,f,c
  4456  002D00  2A16               	incf	___llmod@counter,f,c
  4457  002D02  D000               	goto	l2632
  4458  002D04                     l2632:
  4459  002D04  BE15               	btfsc	___llmod@divisor+3,7,c
  4460  002D06  D002               	goto	l2634
  4461  002D08  D7F6               	goto	l2630
  4462  002D0A  D000               	goto	l2634
  4463  002D0C                     l2634:
  4464  002D0C  5012               	movf	___llmod@divisor,w,c
  4465  002D0E  5C0E               	subwf	___llmod@dividend,w,c
  4466  002D10  5013               	movf	___llmod@divisor+1,w,c
  4467  002D12  580F               	subwfb	___llmod@dividend+1,w,c
  4468  002D14  5014               	movf	___llmod@divisor+2,w,c
  4469  002D16  5810               	subwfb	___llmod@dividend+2,w,c
  4470  002D18  5015               	movf	___llmod@divisor+3,w,c
  4471  002D1A  5811               	subwfb	___llmod@dividend+3,w,c
  4472  002D1C  A0D8               	btfss	status,0,c
  4473  002D1E  D009               	goto	l2638
  4474  002D20  5012               	movf	___llmod@divisor,w,c
  4475  002D22  5E0E               	subwf	___llmod@dividend,f,c
  4476  002D24  5013               	movf	___llmod@divisor+1,w,c
  4477  002D26  5A0F               	subwfb	___llmod@dividend+1,f,c
  4478  002D28  5014               	movf	___llmod@divisor+2,w,c
  4479  002D2A  5A10               	subwfb	___llmod@dividend+2,f,c
  4480  002D2C  5015               	movf	___llmod@divisor+3,w,c
  4481  002D2E  5A11               	subwfb	___llmod@dividend+3,f,c
  4482  002D30  D000               	goto	l2638
  4483  002D32                     l2638:
  4484  002D32  90D8               	bcf	status,0,c
  4485  002D34  3215               	rrcf	___llmod@divisor+3,f,c
  4486  002D36  3214               	rrcf	___llmod@divisor+2,f,c
  4487  002D38  3213               	rrcf	___llmod@divisor+1,f,c
  4488  002D3A  3212               	rrcf	___llmod@divisor,f,c
  4489  002D3C  2E16               	decfsz	___llmod@counter,f,c
  4490  002D3E  D7E6               	goto	l2634
  4491  002D40  D000               	goto	l834
  4492  002D42                     l834:
  4493  002D42  C00E  F00E         	movff	___llmod@dividend,?___llmod
  4494  002D46  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  4495  002D4A  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  4496  002D4E  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  4497  002D52  0012               	return		;funcret
  4498  002D54                     __end_of___llmod:
  4499                           	opt stack 0
  4500                           tblptru	equ	0xFF8
  4501                           tblptrh	equ	0xFF7
  4502                           tblptrl	equ	0xFF6
  4503                           tablat	equ	0xFF5
  4504                           prodh	equ	0xFF4
  4505                           prodl	equ	0xFF3
  4506                           postinc0	equ	0xFEE
  4507                           wreg	equ	0xFE8
  4508                           postdec1	equ	0xFE5
  4509                           fsr1l	equ	0xFE1
  4510                           indf2	equ	0xFDF
  4511                           postinc2	equ	0xFDE
  4512                           postdec2	equ	0xFDD
  4513                           fsr2h	equ	0xFDA
  4514                           fsr2l	equ	0xFD9
  4515                           status	equ	0xFD8
  4516                           
  4517 ;; *************** function ___lldiv *****************
  4518 ;; Defined at:
  4519 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4520 ;; Parameters:    Size  Location     Type
  4521 ;;  dividend        4    0[COMRAM] unsigned long 
  4522 ;;  divisor         4    4[COMRAM] unsigned long 
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;  quotient        4    8[COMRAM] unsigned long 
  4525 ;;  counter         1   12[COMRAM] unsigned char 
  4526 ;; Return value:  Size  Location     Type
  4527 ;;                  4    0[COMRAM] unsigned long 
  4528 ;; Registers used:
  4529 ;;		wreg, status,2, status,0
  4530 ;; Tracked objects:
  4531 ;;		On entry : 0/0
  4532 ;;		On exit  : 0/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4535 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4536 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4538 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4539 ;;Total ram usage:       13 bytes
  4540 ;; Hardware stack levels used:    1
  4541 ;; This function calls:
  4542 ;;		Nothing
  4543 ;; This function is called by:
  4544 ;;		_printf
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           	psect	text13
  4549  002BD6                     __ptext13:
  4550                           	opt stack 0
  4551  002BD6                     ___lldiv:
  4552                           	opt stack 29
  4553                           
  4554                           ;incstack = 0
  4555  002BD6  0E00               	movlw	0
  4556  002BD8  6E09               	movwf	___lldiv@quotient,c
  4557  002BDA  0E00               	movlw	0
  4558  002BDC  6E0A               	movwf	___lldiv@quotient+1,c
  4559  002BDE  0E00               	movlw	0
  4560  002BE0  6E0B               	movwf	___lldiv@quotient+2,c
  4561  002BE2  0E00               	movlw	0
  4562  002BE4  6E0C               	movwf	___lldiv@quotient+3,c
  4563  002BE6  5005               	movf	___lldiv@divisor,w,c
  4564  002BE8  1006               	iorwf	___lldiv@divisor+1,w,c
  4565  002BEA  1007               	iorwf	___lldiv@divisor+2,w,c
  4566  002BEC  1008               	iorwf	___lldiv@divisor+3,w,c
  4567  002BEE  B4D8               	btfsc	status,2,c
  4568  002BF0  D02F               	goto	l824
  4569  002BF2  0E01               	movlw	1
  4570  002BF4  6E0D               	movwf	___lldiv@counter,c
  4571  002BF6  D007               	goto	l2612
  4572  002BF8                     l2610:
  4573  002BF8  90D8               	bcf	status,0,c
  4574  002BFA  3605               	rlcf	___lldiv@divisor,f,c
  4575  002BFC  3606               	rlcf	___lldiv@divisor+1,f,c
  4576  002BFE  3607               	rlcf	___lldiv@divisor+2,f,c
  4577  002C00  3608               	rlcf	___lldiv@divisor+3,f,c
  4578  002C02  2A0D               	incf	___lldiv@counter,f,c
  4579  002C04  D000               	goto	l2612
  4580  002C06                     l2612:
  4581  002C06  BE08               	btfsc	___lldiv@divisor+3,7,c
  4582  002C08  D002               	goto	l2614
  4583  002C0A  D7F6               	goto	l2610
  4584  002C0C  D000               	goto	l2614
  4585  002C0E                     l2614:
  4586  002C0E  90D8               	bcf	status,0,c
  4587  002C10  3609               	rlcf	___lldiv@quotient,f,c
  4588  002C12  360A               	rlcf	___lldiv@quotient+1,f,c
  4589  002C14  360B               	rlcf	___lldiv@quotient+2,f,c
  4590  002C16  360C               	rlcf	___lldiv@quotient+3,f,c
  4591  002C18  5005               	movf	___lldiv@divisor,w,c
  4592  002C1A  5C01               	subwf	___lldiv@dividend,w,c
  4593  002C1C  5006               	movf	___lldiv@divisor+1,w,c
  4594  002C1E  5802               	subwfb	___lldiv@dividend+1,w,c
  4595  002C20  5007               	movf	___lldiv@divisor+2,w,c
  4596  002C22  5803               	subwfb	___lldiv@dividend+2,w,c
  4597  002C24  5008               	movf	___lldiv@divisor+3,w,c
  4598  002C26  5804               	subwfb	___lldiv@dividend+3,w,c
  4599  002C28  A0D8               	btfss	status,0,c
  4600  002C2A  D00A               	goto	l2622
  4601  002C2C  5005               	movf	___lldiv@divisor,w,c
  4602  002C2E  5E01               	subwf	___lldiv@dividend,f,c
  4603  002C30  5006               	movf	___lldiv@divisor+1,w,c
  4604  002C32  5A02               	subwfb	___lldiv@dividend+1,f,c
  4605  002C34  5007               	movf	___lldiv@divisor+2,w,c
  4606  002C36  5A03               	subwfb	___lldiv@dividend+2,f,c
  4607  002C38  5008               	movf	___lldiv@divisor+3,w,c
  4608  002C3A  5A04               	subwfb	___lldiv@dividend+3,f,c
  4609  002C3C  8009               	bsf	___lldiv@quotient,0,c
  4610  002C3E  D000               	goto	l2622
  4611  002C40                     l2622:
  4612  002C40  90D8               	bcf	status,0,c
  4613  002C42  3208               	rrcf	___lldiv@divisor+3,f,c
  4614  002C44  3207               	rrcf	___lldiv@divisor+2,f,c
  4615  002C46  3206               	rrcf	___lldiv@divisor+1,f,c
  4616  002C48  3205               	rrcf	___lldiv@divisor,f,c
  4617  002C4A  2E0D               	decfsz	___lldiv@counter,f,c
  4618  002C4C  D7E0               	goto	l2614
  4619  002C4E  D000               	goto	l824
  4620  002C50                     l824:
  4621  002C50  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4622  002C54  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4623  002C58  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4624  002C5C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4625  002C60  0012               	return		;funcret
  4626  002C62                     __end_of___lldiv:
  4627                           	opt stack 0
  4628                           tblptru	equ	0xFF8
  4629                           tblptrh	equ	0xFF7
  4630                           tblptrl	equ	0xFF6
  4631                           tablat	equ	0xFF5
  4632                           prodh	equ	0xFF4
  4633                           prodl	equ	0xFF3
  4634                           postinc0	equ	0xFEE
  4635                           wreg	equ	0xFE8
  4636                           postdec1	equ	0xFE5
  4637                           fsr1l	equ	0xFE1
  4638                           indf2	equ	0xFDF
  4639                           postinc2	equ	0xFDE
  4640                           postdec2	equ	0xFDD
  4641                           fsr2h	equ	0xFDA
  4642                           fsr2l	equ	0xFD9
  4643                           status	equ	0xFD8
  4644                           
  4645 ;; *************** function ___fttol *****************
  4646 ;; Defined at:
  4647 ;;		line 44 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\fttol.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;  f1              3   42[COMRAM] float 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  lval            4   52[COMRAM] unsigned long 
  4652 ;;  exp1            1   56[COMRAM] unsigned char 
  4653 ;;  sign1           1   51[COMRAM] unsigned char 
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  4   42[COMRAM] long 
  4656 ;; Registers used:
  4657 ;;		wreg, status,2, status,0
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4663 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4666 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4667 ;;Total ram usage:       15 bytes
  4668 ;; Hardware stack levels used:    1
  4669 ;; This function calls:
  4670 ;;		Nothing
  4671 ;; This function is called by:
  4672 ;;		_main
  4673 ;;		_printf
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text14
  4678  002680                     __ptext14:
  4679                           	opt stack 0
  4680  002680                     ___fttol:
  4681                           	opt stack 29
  4682                           
  4683                           ;incstack = 0
  4684  002680  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  4685  002684  6A30               	clrf	(??___fttol+1)& (0+255),c
  4686  002686  6A31               	clrf	(??___fttol+2)& (0+255),c
  4687  002688  342C               	rlcf	___fttol@f1+1,w,c
  4688  00268A  362F               	rlcf	??___fttol& (0+255),f,c
  4689  00268C  E301               	bnc	u2461
  4690  00268E  8030               	bsf	(??___fttol+1)& (0+255),0,c
  4691  002690                     u2461:
  4692  002690  502F               	movf	??___fttol,w,c
  4693  002692  6E39               	movwf	___fttol@exp1,c
  4694  002694  5039               	movf	___fttol@exp1,w,c
  4695  002696  A4D8               	btfss	status,2,c
  4696  002698  D002               	goto	l2564
  4697  00269A  D039               	goto	l2588
  4698  00269C  D063               	goto	l785
  4699  00269E                     l2564:
  4700  00269E  0E17               	movlw	23
  4701  0026A0  6E2F               	movwf	??___fttol& (0+255),c
  4702  0026A2  C02B  F030         	movff	___fttol@f1,??___fttol+1
  4703  0026A6  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  4704  0026AA  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  4705  0026AE  282F               	incf	??___fttol,w,c
  4706  0026B0  6E33               	movwf	(??___fttol+4)& (0+255),c
  4707  0026B2  D004               	goto	u2480
  4708  0026B4                     u2485:
  4709  0026B4  90D8               	bcf	status,0,c
  4710  0026B6  3232               	rrcf	??___fttol+3,f,c
  4711  0026B8  3231               	rrcf	??___fttol+2,f,c
  4712  0026BA  3230               	rrcf	??___fttol+1,f,c
  4713  0026BC                     u2480:
  4714  0026BC  2E33               	decfsz	(??___fttol+4)& (0+255),f,c
  4715  0026BE  D7FA               	goto	u2485
  4716  0026C0  5030               	movf	??___fttol+1,w,c
  4717  0026C2  6E34               	movwf	___fttol@sign1,c
  4718  0026C4  8E2C               	bsf	___fttol@f1+1,7,c
  4719  0026C6  0EFF               	movlw	255
  4720  0026C8  162B               	andwf	___fttol@f1,f,c
  4721  0026CA  0EFF               	movlw	255
  4722  0026CC  162C               	andwf	___fttol@f1+1,f,c
  4723  0026CE  0E00               	movlw	0
  4724  0026D0  162D               	andwf	___fttol@f1+2,f,c
  4725  0026D2  502B               	movf	___fttol@f1,w,c
  4726  0026D4  6E35               	movwf	___fttol@lval,c
  4727  0026D6  502C               	movf	___fttol@f1+1,w,c
  4728  0026D8  6E36               	movwf	___fttol@lval+1,c
  4729  0026DA  502D               	movf	___fttol@f1+2,w,c
  4730  0026DC  6E37               	movwf	___fttol@lval+2,c
  4731  0026DE  6A38               	clrf	___fttol@lval+3,c
  4732  0026E0  0E8E               	movlw	142
  4733  0026E2  5E39               	subwf	___fttol@exp1,f,c
  4734  0026E4  AE39               	btfss	___fttol@exp1,7,c
  4735  0026E6  D010               	goto	l2586
  4736  0026E8  5039               	movf	___fttol@exp1,w,c
  4737  0026EA  0A80               	xorlw	128
  4738  0026EC  0F8F               	addlw	143
  4739  0026EE  B0D8               	btfsc	status,0,c
  4740  0026F0  D003               	goto	l2582
  4741  0026F2  D00D               	goto	l2588
  4742  0026F4  D037               	goto	l785
  4743  0026F6  D000               	goto	l2582
  4744  0026F8                     l2582:
  4745  0026F8  90D8               	bcf	status,0,c
  4746  0026FA  3238               	rrcf	___fttol@lval+3,f,c
  4747  0026FC  3237               	rrcf	___fttol@lval+2,f,c
  4748  0026FE  3236               	rrcf	___fttol@lval+1,f,c
  4749  002700  3235               	rrcf	___fttol@lval,f,c
  4750  002702  3E39               	incfsz	___fttol@exp1,f,c
  4751  002704  D7F9               	goto	l2582
  4752  002706  D019               	goto	l2596
  4753  002708                     l2586:
  4754  002708  0E17               	movlw	23
  4755  00270A  6439               	cpfsgt	___fttol@exp1,c
  4756  00270C  D011               	goto	l2594
  4757  00270E                     l2588:
  4758  00270E  0E00               	movlw	0
  4759  002710  6E2B               	movwf	?___fttol,c
  4760  002712  0E00               	movlw	0
  4761  002714  6E2C               	movwf	?___fttol+1,c
  4762  002716  0E00               	movlw	0
  4763  002718  6E2D               	movwf	?___fttol+2,c
  4764  00271A  0E00               	movlw	0
  4765  00271C  6E2E               	movwf	?___fttol+3,c
  4766  00271E  D022               	goto	l785
  4767  002720  D007               	goto	l2594
  4768  002722                     l2592:
  4769  002722  90D8               	bcf	status,0,c
  4770  002724  3635               	rlcf	___fttol@lval,f,c
  4771  002726  3636               	rlcf	___fttol@lval+1,f,c
  4772  002728  3637               	rlcf	___fttol@lval+2,f,c
  4773  00272A  3638               	rlcf	___fttol@lval+3,f,c
  4774  00272C  0639               	decf	___fttol@exp1,f,c
  4775  00272E  D000               	goto	l2594
  4776  002730                     l2594:
  4777  002730  5039               	movf	___fttol@exp1,w,c
  4778  002732  B4D8               	btfsc	status,2,c
  4779  002734  D002               	goto	l2596
  4780  002736  D7F5               	goto	l2592
  4781  002738  D000               	goto	l2596
  4782  00273A                     l2596:
  4783  00273A  5034               	movf	___fttol@sign1,w,c
  4784  00273C  B4D8               	btfsc	status,2,c
  4785  00273E  D009               	goto	l2600
  4786  002740  1E38               	comf	___fttol@lval+3,f,c
  4787  002742  1E37               	comf	___fttol@lval+2,f,c
  4788  002744  1E36               	comf	___fttol@lval+1,f,c
  4789  002746  6C35               	negf	___fttol@lval,c
  4790  002748  0E00               	movlw	0
  4791  00274A  2236               	addwfc	___fttol@lval+1,f,c
  4792  00274C  2237               	addwfc	___fttol@lval+2,f,c
  4793  00274E  2238               	addwfc	___fttol@lval+3,f,c
  4794  002750  D000               	goto	l2600
  4795  002752                     l2600:
  4796  002752  C035  F02B         	movff	___fttol@lval,?___fttol
  4797  002756  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  4798  00275A  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  4799  00275E  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  4800  002762  D000               	goto	l785
  4801  002764                     l785:
  4802  002764  0012               	return		;funcret
  4803  002766                     __end_of___fttol:
  4804                           	opt stack 0
  4805                           tblptru	equ	0xFF8
  4806                           tblptrh	equ	0xFF7
  4807                           tblptrl	equ	0xFF6
  4808                           tablat	equ	0xFF5
  4809                           prodh	equ	0xFF4
  4810                           prodl	equ	0xFF3
  4811                           postinc0	equ	0xFEE
  4812                           wreg	equ	0xFE8
  4813                           postdec1	equ	0xFE5
  4814                           fsr1l	equ	0xFE1
  4815                           indf2	equ	0xFDF
  4816                           postinc2	equ	0xFDE
  4817                           postdec2	equ	0xFDD
  4818                           fsr2h	equ	0xFDA
  4819                           fsr2l	equ	0xFD9
  4820                           status	equ	0xFD8
  4821                           
  4822 ;; *************** function ___ftsub *****************
  4823 ;; Defined at:
  4824 ;;		line 20 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftsub.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;  f1              3   57[COMRAM] float 
  4827 ;;  f2              3   60[COMRAM] float 
  4828 ;; Auto vars:     Size  Location     Type
  4829 ;;		None
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  3   57[COMRAM] float 
  4832 ;; Registers used:
  4833 ;;		wreg, status,2, status,0, cstack
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4839 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4842 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4843 ;;Total ram usage:        6 bytes
  4844 ;; Hardware stack levels used:    1
  4845 ;; Hardware stack levels required when called:    2
  4846 ;; This function calls:
  4847 ;;		___ftadd
  4848 ;; This function is called by:
  4849 ;;		_printf
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853                           	psect	text15
  4854  002E6E                     __ptext15:
  4855                           	opt stack 0
  4856  002E6E                     ___ftsub:
  4857                           	opt stack 27
  4858                           
  4859                           ;incstack = 0
  4860  002E6E  503D               	movf	___ftsub@f2,w,c
  4861  002E70  103E               	iorwf	___ftsub@f2+1,w,c
  4862  002E72  103F               	iorwf	___ftsub@f2+2,w,c
  4863  002E74  B4D8               	btfsc	status,2,c
  4864  002E76  D007               	goto	l2532
  4865  002E78  0E00               	movlw	0
  4866  002E7A  1A3D               	xorwf	___ftsub@f2,f,c
  4867  002E7C  0E00               	movlw	0
  4868  002E7E  1A3E               	xorwf	___ftsub@f2+1,f,c
  4869  002E80  0E80               	movlw	128
  4870  002E82  1A3F               	xorwf	___ftsub@f2+2,f,c
  4871  002E84  D000               	goto	l2532
  4872  002E86                     l2532:
  4873  002E86  C03A  F02E         	movff	___ftsub@f1,___ftadd@f1
  4874  002E8A  C03B  F02F         	movff	___ftsub@f1+1,___ftadd@f1+1
  4875  002E8E  C03C  F030         	movff	___ftsub@f1+2,___ftadd@f1+2
  4876  002E92  C03D  F031         	movff	___ftsub@f2,___ftadd@f2
  4877  002E96  C03E  F032         	movff	___ftsub@f2+1,___ftadd@f2+1
  4878  002E9A  C03F  F033         	movff	___ftsub@f2+2,___ftadd@f2+2
  4879  002E9E  ECD5  F010         	call	___ftadd	;wreg free
  4880  002EA2  C02E  F03A         	movff	?___ftadd,?___ftsub
  4881  002EA6  C02F  F03B         	movff	?___ftadd+1,?___ftsub+1
  4882  002EAA  C030  F03C         	movff	?___ftadd+2,?___ftsub+2
  4883  002EAE  D000               	goto	l781
  4884  002EB0                     l781:
  4885  002EB0  0012               	return		;funcret
  4886  002EB2                     __end_of___ftsub:
  4887                           	opt stack 0
  4888                           tblptru	equ	0xFF8
  4889                           tblptrh	equ	0xFF7
  4890                           tblptrl	equ	0xFF6
  4891                           tablat	equ	0xFF5
  4892                           prodh	equ	0xFF4
  4893                           prodl	equ	0xFF3
  4894                           postinc0	equ	0xFEE
  4895                           wreg	equ	0xFE8
  4896                           postdec1	equ	0xFE5
  4897                           fsr1l	equ	0xFE1
  4898                           indf2	equ	0xFDF
  4899                           postinc2	equ	0xFDE
  4900                           postdec2	equ	0xFDD
  4901                           fsr2h	equ	0xFDA
  4902                           fsr2l	equ	0xFD9
  4903                           status	equ	0xFD8
  4904                           
  4905 ;; *************** function ___ftadd *****************
  4906 ;; Defined at:
  4907 ;;		line 86 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftadd.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;  f1              3   45[COMRAM] float 
  4910 ;;  f2              3   48[COMRAM] float 
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  exp1            1   56[COMRAM] unsigned char 
  4913 ;;  exp2            1   55[COMRAM] unsigned char 
  4914 ;;  sign            1   54[COMRAM] unsigned char 
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  3   45[COMRAM] float 
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0, cstack
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4924 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4927 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4928 ;;Total ram usage:       12 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; Hardware stack levels required when called:    1
  4931 ;; This function calls:
  4932 ;;		___ftpack
  4933 ;; This function is called by:
  4934 ;;		_main
  4935 ;;		_printf
  4936 ;;		___ftsub
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           	psect	text16
  4941  0021AA                     __ptext16:
  4942                           	opt stack 0
  4943  0021AA                     ___ftadd:
  4944                           	opt stack 27
  4945                           
  4946                           ;incstack = 0
  4947  0021AA  C030  F034         	movff	___ftadd@f1+2,??___ftadd
  4948  0021AE  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4949  0021B0  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4950  0021B2  342F               	rlcf	___ftadd@f1+1,w,c
  4951  0021B4  3634               	rlcf	??___ftadd& (0+255),f,c
  4952  0021B6  E301               	bnc	u1681
  4953  0021B8  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4954  0021BA                     u1681:
  4955  0021BA  5034               	movf	??___ftadd,w,c
  4956  0021BC  6E39               	movwf	___ftadd@exp1,c
  4957  0021BE  C033  F034         	movff	___ftadd@f2+2,??___ftadd
  4958  0021C2  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4959  0021C4  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4960  0021C6  3432               	rlcf	___ftadd@f2+1,w,c
  4961  0021C8  3634               	rlcf	??___ftadd& (0+255),f,c
  4962  0021CA  E301               	bnc	u1691
  4963  0021CC  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4964  0021CE                     u1691:
  4965  0021CE  5034               	movf	??___ftadd,w,c
  4966  0021D0  6E38               	movwf	___ftadd@exp2,c
  4967  0021D2  5039               	movf	___ftadd@exp1,w,c
  4968  0021D4  B4D8               	btfsc	status,2,c
  4969  0021D6  D00B               	goto	l700
  4970  0021D8  5038               	movf	___ftadd@exp2,w,c
  4971  0021DA  5C39               	subwf	___ftadd@exp1,w,c
  4972  0021DC  B0D8               	btfsc	status,0,c
  4973  0021DE  D00E               	goto	l2108
  4974  0021E0  5039               	movf	___ftadd@exp1,w,c
  4975  0021E2  0800               	sublw	0
  4976  0021E4  2438               	addwf	___ftadd@exp2,w,c
  4977  0021E6  6E34               	movwf	??___ftadd& (0+255),c
  4978  0021E8  0E18               	movlw	24
  4979  0021EA  6434               	cpfsgt	??___ftadd,c
  4980  0021EC  D007               	goto	l2108
  4981  0021EE                     l700:
  4982  0021EE  C031  F02E         	movff	___ftadd@f2,?___ftadd
  4983  0021F2  C032  F02F         	movff	___ftadd@f2+1,?___ftadd+1
  4984  0021F6  C033  F030         	movff	___ftadd@f2+2,?___ftadd+2
  4985  0021FA  D0B8               	goto	l701
  4986  0021FC                     l2108:
  4987  0021FC  5038               	movf	___ftadd@exp2,w,c
  4988  0021FE  B4D8               	btfsc	status,2,c
  4989  002200  D00B               	goto	l704
  4990  002202  5039               	movf	___ftadd@exp1,w,c
  4991  002204  5C38               	subwf	___ftadd@exp2,w,c
  4992  002206  B0D8               	btfsc	status,0,c
  4993  002208  D00E               	goto	l2114
  4994  00220A  5038               	movf	___ftadd@exp2,w,c
  4995  00220C  0800               	sublw	0
  4996  00220E  2439               	addwf	___ftadd@exp1,w,c
  4997  002210  6E34               	movwf	??___ftadd& (0+255),c
  4998  002212  0E18               	movlw	24
  4999  002214  6434               	cpfsgt	??___ftadd,c
  5000  002216  D007               	goto	l2114
  5001  002218                     l704:
  5002  002218  C02E  F02E         	movff	___ftadd@f1,?___ftadd
  5003  00221C  C02F  F02F         	movff	___ftadd@f1+1,?___ftadd+1
  5004  002220  C030  F030         	movff	___ftadd@f1+2,?___ftadd+2
  5005  002224  D0A3               	goto	l701
  5006  002226                     l2114:
  5007  002226  0E06               	movlw	6
  5008  002228  6E37               	movwf	___ftadd@sign,c
  5009  00222A  AE30               	btfss	___ftadd@f1+2,7,c
  5010  00222C  D002               	goto	l2120
  5011  00222E  8E37               	bsf	___ftadd@sign,7,c
  5012  002230  D000               	goto	l2120
  5013  002232                     l2120:
  5014  002232  BE33               	btfsc	___ftadd@f2+2,7,c
  5015  002234  8C37               	bsf	___ftadd@sign,6,c
  5016  002236  8E2F               	bsf	___ftadd@f1+1,7,c
  5017  002238  0EFF               	movlw	255
  5018  00223A  162E               	andwf	___ftadd@f1,f,c
  5019  00223C  0EFF               	movlw	255
  5020  00223E  162F               	andwf	___ftadd@f1+1,f,c
  5021  002240  0E00               	movlw	0
  5022  002242  1630               	andwf	___ftadd@f1+2,f,c
  5023  002244  8E32               	bsf	___ftadd@f2+1,7,c
  5024  002246  0EFF               	movlw	255
  5025  002248  1631               	andwf	___ftadd@f2,f,c
  5026  00224A  0EFF               	movlw	255
  5027  00224C  1632               	andwf	___ftadd@f2+1,f,c
  5028  00224E  0E00               	movlw	0
  5029  002250  1633               	andwf	___ftadd@f2+2,f,c
  5030  002252  5038               	movf	___ftadd@exp2,w,c
  5031  002254  5C39               	subwf	___ftadd@exp1,w,c
  5032  002256  B0D8               	btfsc	status,0,c
  5033  002258  D01E               	goto	l2140
  5034  00225A                     l2130:
  5035  00225A  90D8               	bcf	status,0,c
  5036  00225C  3631               	rlcf	___ftadd@f2,f,c
  5037  00225E  3632               	rlcf	___ftadd@f2+1,f,c
  5038  002260  3633               	rlcf	___ftadd@f2+2,f,c
  5039  002262  0638               	decf	___ftadd@exp2,f,c
  5040  002264  5039               	movf	___ftadd@exp1,w,c
  5041  002266  1838               	xorwf	___ftadd@exp2,w,c
  5042  002268  B4D8               	btfsc	status,2,c
  5043  00226A  D00F               	goto	l2138
  5044  00226C  0637               	decf	___ftadd@sign,f,c
  5045  00226E  C037  F034         	movff	___ftadd@sign,??___ftadd
  5046  002272  0E07               	movlw	7
  5047  002274  1634               	andwf	??___ftadd,f,c
  5048  002276  B4D8               	btfsc	status,2,c
  5049  002278  D008               	goto	l2138
  5050  00227A  D7EF               	goto	l2130
  5051  00227C  D006               	goto	l2138
  5052  00227E                     l2136:
  5053  00227E  90D8               	bcf	status,0,c
  5054  002280  3230               	rrcf	___ftadd@f1+2,f,c
  5055  002282  322F               	rrcf	___ftadd@f1+1,f,c
  5056  002284  322E               	rrcf	___ftadd@f1,f,c
  5057  002286  2A39               	incf	___ftadd@exp1,f,c
  5058  002288  D000               	goto	l2138
  5059  00228A                     l2138:
  5060  00228A  5038               	movf	___ftadd@exp2,w,c
  5061  00228C  1839               	xorwf	___ftadd@exp1,w,c
  5062  00228E  B4D8               	btfsc	status,2,c
  5063  002290  D024               	goto	l715
  5064  002292  D7F5               	goto	l2136
  5065  002294  D022               	goto	l715
  5066  002296                     l2140:
  5067  002296  5039               	movf	___ftadd@exp1,w,c
  5068  002298  5C38               	subwf	___ftadd@exp2,w,c
  5069  00229A  B0D8               	btfsc	status,0,c
  5070  00229C  D01E               	goto	l715
  5071  00229E                     l2142:
  5072  00229E  90D8               	bcf	status,0,c
  5073  0022A0  362E               	rlcf	___ftadd@f1,f,c
  5074  0022A2  362F               	rlcf	___ftadd@f1+1,f,c
  5075  0022A4  3630               	rlcf	___ftadd@f1+2,f,c
  5076  0022A6  0639               	decf	___ftadd@exp1,f,c
  5077  0022A8  5039               	movf	___ftadd@exp1,w,c
  5078  0022AA  1838               	xorwf	___ftadd@exp2,w,c
  5079  0022AC  B4D8               	btfsc	status,2,c
  5080  0022AE  D00F               	goto	l2150
  5081  0022B0  0637               	decf	___ftadd@sign,f,c
  5082  0022B2  C037  F034         	movff	___ftadd@sign,??___ftadd
  5083  0022B6  0E07               	movlw	7
  5084  0022B8  1634               	andwf	??___ftadd,f,c
  5085  0022BA  B4D8               	btfsc	status,2,c
  5086  0022BC  D008               	goto	l2150
  5087  0022BE  D7EF               	goto	l2142
  5088  0022C0  D006               	goto	l2150
  5089  0022C2                     l2148:
  5090  0022C2  90D8               	bcf	status,0,c
  5091  0022C4  3233               	rrcf	___ftadd@f2+2,f,c
  5092  0022C6  3232               	rrcf	___ftadd@f2+1,f,c
  5093  0022C8  3231               	rrcf	___ftadd@f2,f,c
  5094  0022CA  2A38               	incf	___ftadd@exp2,f,c
  5095  0022CC  D000               	goto	l2150
  5096  0022CE                     l2150:
  5097  0022CE  5038               	movf	___ftadd@exp2,w,c
  5098  0022D0  1839               	xorwf	___ftadd@exp1,w,c
  5099  0022D2  B4D8               	btfsc	status,2,c
  5100  0022D4  D002               	goto	l715
  5101  0022D6  D7F5               	goto	l2148
  5102  0022D8  D000               	goto	l715
  5103  0022DA                     l715:
  5104  0022DA  AE37               	btfss	___ftadd@sign,7,c
  5105  0022DC  D00C               	goto	l724
  5106  0022DE  0EFF               	movlw	255
  5107  0022E0  1A2E               	xorwf	___ftadd@f1,f,c
  5108  0022E2  0EFF               	movlw	255
  5109  0022E4  1A2F               	xorwf	___ftadd@f1+1,f,c
  5110  0022E6  0EFF               	movlw	255
  5111  0022E8  1A30               	xorwf	___ftadd@f1+2,f,c
  5112  0022EA  0E01               	movlw	1
  5113  0022EC  262E               	addwf	___ftadd@f1,f,c
  5114  0022EE  0E00               	movlw	0
  5115  0022F0  222F               	addwfc	___ftadd@f1+1,f,c
  5116  0022F2  0E00               	movlw	0
  5117  0022F4  2230               	addwfc	___ftadd@f1+2,f,c
  5118  0022F6                     l724:
  5119  0022F6  AC37               	btfss	___ftadd@sign,6,c
  5120  0022F8  D00D               	goto	l2156
  5121  0022FA  0EFF               	movlw	255
  5122  0022FC  1A31               	xorwf	___ftadd@f2,f,c
  5123  0022FE  0EFF               	movlw	255
  5124  002300  1A32               	xorwf	___ftadd@f2+1,f,c
  5125  002302  0EFF               	movlw	255
  5126  002304  1A33               	xorwf	___ftadd@f2+2,f,c
  5127  002306  0E01               	movlw	1
  5128  002308  2631               	addwf	___ftadd@f2,f,c
  5129  00230A  0E00               	movlw	0
  5130  00230C  2232               	addwfc	___ftadd@f2+1,f,c
  5131  00230E  0E00               	movlw	0
  5132  002310  2233               	addwfc	___ftadd@f2+2,f,c
  5133  002312  D000               	goto	l2156
  5134  002314                     l2156:
  5135  002314  0E00               	movlw	0
  5136  002316  6E37               	movwf	___ftadd@sign,c
  5137  002318  502E               	movf	___ftadd@f1,w,c
  5138  00231A  2631               	addwf	___ftadd@f2,f,c
  5139  00231C  502F               	movf	___ftadd@f1+1,w,c
  5140  00231E  2232               	addwfc	___ftadd@f2+1,f,c
  5141  002320  5030               	movf	___ftadd@f1+2,w,c
  5142  002322  2233               	addwfc	___ftadd@f2+2,f,c
  5143  002324  AE33               	btfss	___ftadd@f2+2,7,c
  5144  002326  D00F               	goto	l2166
  5145  002328  0EFF               	movlw	255
  5146  00232A  1A31               	xorwf	___ftadd@f2,f,c
  5147  00232C  0EFF               	movlw	255
  5148  00232E  1A32               	xorwf	___ftadd@f2+1,f,c
  5149  002330  0EFF               	movlw	255
  5150  002332  1A33               	xorwf	___ftadd@f2+2,f,c
  5151  002334  0E01               	movlw	1
  5152  002336  2631               	addwf	___ftadd@f2,f,c
  5153  002338  0E00               	movlw	0
  5154  00233A  2232               	addwfc	___ftadd@f2+1,f,c
  5155  00233C  0E00               	movlw	0
  5156  00233E  2233               	addwfc	___ftadd@f2+2,f,c
  5157  002340  0E01               	movlw	1
  5158  002342  6E37               	movwf	___ftadd@sign,c
  5159  002344  D000               	goto	l2166
  5160  002346                     l2166:
  5161  002346  C031  F001         	movff	___ftadd@f2,___ftpack@arg
  5162  00234A  C032  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  5163  00234E  C033  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  5164  002352  C039  F004         	movff	___ftadd@exp1,___ftpack@exp
  5165  002356  C037  F005         	movff	___ftadd@sign,___ftpack@sign
  5166  00235A  EC93  F014         	call	___ftpack	;wreg free
  5167  00235E  C001  F02E         	movff	?___ftpack,?___ftadd
  5168  002362  C002  F02F         	movff	?___ftpack+1,?___ftadd+1
  5169  002366  C003  F030         	movff	?___ftpack+2,?___ftadd+2
  5170  00236A  D000               	goto	l701
  5171  00236C                     l701:
  5172  00236C  0012               	return		;funcret
  5173  00236E                     __end_of___ftadd:
  5174                           	opt stack 0
  5175                           tblptru	equ	0xFF8
  5176                           tblptrh	equ	0xFF7
  5177                           tblptrl	equ	0xFF6
  5178                           tablat	equ	0xFF5
  5179                           prodh	equ	0xFF4
  5180                           prodl	equ	0xFF3
  5181                           postinc0	equ	0xFEE
  5182                           wreg	equ	0xFE8
  5183                           postdec1	equ	0xFE5
  5184                           fsr1l	equ	0xFE1
  5185                           indf2	equ	0xFDF
  5186                           postinc2	equ	0xFDE
  5187                           postdec2	equ	0xFDD
  5188                           fsr2h	equ	0xFDA
  5189                           fsr2l	equ	0xFD9
  5190                           status	equ	0xFD8
  5191                           
  5192 ;; *************** function ___ftneg *****************
  5193 ;; Defined at:
  5194 ;;		line 15 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftneg.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;  f1              3    0[COMRAM] float 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;		None
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  3    0[COMRAM] float 
  5201 ;; Registers used:
  5202 ;;		wreg, status,2, status,0
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5208 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5211 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5212 ;;Total ram usage:        3 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; This function calls:
  5215 ;;		Nothing
  5216 ;; This function is called by:
  5217 ;;		_main
  5218 ;;		_printf
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           	psect	text17
  5223  002F7A                     __ptext17:
  5224                           	opt stack 0
  5225  002F7A                     ___ftneg:
  5226                           	opt stack 29
  5227                           
  5228                           ;incstack = 0
  5229  002F7A  5001               	movf	___ftneg@f1,w,c
  5230  002F7C  1002               	iorwf	___ftneg@f1+1,w,c
  5231  002F7E  1003               	iorwf	___ftneg@f1+2,w,c
  5232  002F80  B4D8               	btfsc	status,2,c
  5233  002F82  D006               	goto	l774
  5234  002F84  0E00               	movlw	0
  5235  002F86  1A01               	xorwf	___ftneg@f1,f,c
  5236  002F88  0E00               	movlw	0
  5237  002F8A  1A02               	xorwf	___ftneg@f1+1,f,c
  5238  002F8C  0E80               	movlw	128
  5239  002F8E  1A03               	xorwf	___ftneg@f1+2,f,c
  5240  002F90                     l774:
  5241  002F90  C001  F001         	movff	___ftneg@f1,?___ftneg
  5242  002F94  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  5243  002F98  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  5244  002F9C  0012               	return		;funcret
  5245  002F9E                     __end_of___ftneg:
  5246                           	opt stack 0
  5247                           tblptru	equ	0xFF8
  5248                           tblptrh	equ	0xFF7
  5249                           tblptrl	equ	0xFF6
  5250                           tablat	equ	0xFF5
  5251                           prodh	equ	0xFF4
  5252                           prodl	equ	0xFF3
  5253                           postinc0	equ	0xFEE
  5254                           wreg	equ	0xFE8
  5255                           postdec1	equ	0xFE5
  5256                           fsr1l	equ	0xFE1
  5257                           indf2	equ	0xFDF
  5258                           postinc2	equ	0xFDE
  5259                           postdec2	equ	0xFDD
  5260                           fsr2h	equ	0xFDA
  5261                           fsr2l	equ	0xFD9
  5262                           status	equ	0xFD8
  5263                           
  5264 ;; *************** function ___ftge *****************
  5265 ;; Defined at:
  5266 ;;		line 4 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftge.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;  ff1             3    0[COMRAM] float 
  5269 ;;  ff2             3    3[COMRAM] float 
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;		None
  5272 ;; Return value:  Size  Location     Type
  5273 ;;		None               void
  5274 ;; Registers used:
  5275 ;;		wreg, status,2, status,0
  5276 ;; Tracked objects:
  5277 ;;		On entry : 0/0
  5278 ;;		On exit  : 0/0
  5279 ;;		Unchanged: 0/0
  5280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5281 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5283 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5284 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5285 ;;Total ram usage:        9 bytes
  5286 ;; Hardware stack levels used:    1
  5287 ;; This function calls:
  5288 ;;		Nothing
  5289 ;; This function is called by:
  5290 ;;		_printf
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           	psect	text18
  5295  002B40                     __ptext18:
  5296                           	opt stack 0
  5297  002B40                     ___ftge:
  5298                           	opt stack 29
  5299                           
  5300                           ;incstack = 0
  5301  002B40  AE03               	btfss	___ftge@ff1+2,7,c
  5302  002B42  D017               	goto	l2540
  5303  002B44  C001  F007         	movff	___ftge@ff1,??___ftge
  5304  002B48  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  5305  002B4C  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  5306  002B50  1E07               	comf	??___ftge,f,c
  5307  002B52  1E08               	comf	??___ftge+1,f,c
  5308  002B54  1E09               	comf	??___ftge+2,f,c
  5309  002B56  2A07               	incf	??___ftge,f,c
  5310  002B58  0E00               	movlw	0
  5311  002B5A  2208               	addwfc	??___ftge+1,f,c
  5312  002B5C  2209               	addwfc	??___ftge+2,f,c
  5313  002B5E  0E00               	movlw	0
  5314  002B60  2407               	addwf	??___ftge,w,c
  5315  002B62  6E01               	movwf	___ftge@ff1,c
  5316  002B64  0E00               	movlw	0
  5317  002B66  2008               	addwfc	??___ftge+1,w,c
  5318  002B68  6E02               	movwf	___ftge@ff1+1,c
  5319  002B6A  0E80               	movlw	128
  5320  002B6C  2009               	addwfc	??___ftge+2,w,c
  5321  002B6E  6E03               	movwf	___ftge@ff1+2,c
  5322  002B70  D000               	goto	l2540
  5323  002B72                     l2540:
  5324  002B72  AE06               	btfss	___ftge@ff2+2,7,c
  5325  002B74  D017               	goto	l2544
  5326  002B76  C004  F007         	movff	___ftge@ff2,??___ftge
  5327  002B7A  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  5328  002B7E  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  5329  002B82  1E07               	comf	??___ftge,f,c
  5330  002B84  1E08               	comf	??___ftge+1,f,c
  5331  002B86  1E09               	comf	??___ftge+2,f,c
  5332  002B88  2A07               	incf	??___ftge,f,c
  5333  002B8A  0E00               	movlw	0
  5334  002B8C  2208               	addwfc	??___ftge+1,f,c
  5335  002B8E  2209               	addwfc	??___ftge+2,f,c
  5336  002B90  0E00               	movlw	0
  5337  002B92  2407               	addwf	??___ftge,w,c
  5338  002B94  6E04               	movwf	___ftge@ff2,c
  5339  002B96  0E00               	movlw	0
  5340  002B98  2008               	addwfc	??___ftge+1,w,c
  5341  002B9A  6E05               	movwf	___ftge@ff2+1,c
  5342  002B9C  0E80               	movlw	128
  5343  002B9E  2009               	addwfc	??___ftge+2,w,c
  5344  002BA0  6E06               	movwf	___ftge@ff2+2,c
  5345  002BA2  D000               	goto	l2544
  5346  002BA4                     l2544:
  5347  002BA4  0E00               	movlw	0
  5348  002BA6  1A01               	xorwf	___ftge@ff1,f,c
  5349  002BA8  0E00               	movlw	0
  5350  002BAA  1A02               	xorwf	___ftge@ff1+1,f,c
  5351  002BAC  0E80               	movlw	128
  5352  002BAE  1A03               	xorwf	___ftge@ff1+2,f,c
  5353  002BB0  0E00               	movlw	0
  5354  002BB2  1A04               	xorwf	___ftge@ff2,f,c
  5355  002BB4  0E00               	movlw	0
  5356  002BB6  1A05               	xorwf	___ftge@ff2+1,f,c
  5357  002BB8  0E80               	movlw	128
  5358  002BBA  1A06               	xorwf	___ftge@ff2+2,f,c
  5359  002BBC  5004               	movf	___ftge@ff2,w,c
  5360  002BBE  5C01               	subwf	___ftge@ff1,w,c
  5361  002BC0  5005               	movf	___ftge@ff2+1,w,c
  5362  002BC2  5802               	subwfb	___ftge@ff1+1,w,c
  5363  002BC4  5006               	movf	___ftge@ff2+2,w,c
  5364  002BC6  5803               	subwfb	___ftge@ff1+2,w,c
  5365  002BC8  B0D8               	btfsc	status,0,c
  5366  002BCA  D002               	goto	l2550
  5367  002BCC  90D8               	bcf	status,0,c
  5368  002BCE  D002               	goto	l758
  5369  002BD0                     l2550:
  5370  002BD0  80D8               	bsf	status,0,c
  5371  002BD2  D000               	goto	l758
  5372  002BD4                     l758:
  5373  002BD4  0012               	return		;funcret
  5374  002BD6                     __end_of___ftge:
  5375                           	opt stack 0
  5376                           tblptru	equ	0xFF8
  5377                           tblptrh	equ	0xFF7
  5378                           tblptrl	equ	0xFF6
  5379                           tablat	equ	0xFF5
  5380                           prodh	equ	0xFF4
  5381                           prodl	equ	0xFF3
  5382                           postinc0	equ	0xFEE
  5383                           wreg	equ	0xFE8
  5384                           postdec1	equ	0xFE5
  5385                           fsr1l	equ	0xFE1
  5386                           indf2	equ	0xFDF
  5387                           postinc2	equ	0xFDE
  5388                           postdec2	equ	0xFDD
  5389                           fsr2h	equ	0xFDA
  5390                           fsr2l	equ	0xFD9
  5391                           status	equ	0xFD8
  5392                           
  5393 ;; *************** function _init_UART *****************
  5394 ;; Defined at:
  5395 ;;		line 144 in file "Lab6pB2.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;		None
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;		None
  5400 ;; Return value:  Size  Location     Type
  5401 ;;		None               void
  5402 ;; Registers used:
  5403 ;;		wreg, status,2, cstack
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5413 ;;Total ram usage:        0 bytes
  5414 ;; Hardware stack levels used:    1
  5415 ;; Hardware stack levels required when called:    1
  5416 ;; This function calls:
  5417 ;;		_OpenUSART
  5418 ;; This function is called by:
  5419 ;;		_main
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423                           	psect	text19
  5424  003000                     __ptext19:
  5425                           	opt stack 0
  5426  003000                     _init_UART:
  5427                           	opt stack 29
  5428                           
  5429                           ;Lab6pB2.c: 146: OpenUSART(0b01111111 & 0b10111111 & 0b11111110 & 0b11111101
  5430                           ;Lab6pB2.c: 147: & 0b11111111 & 0b11111111, 25);
  5431                           
  5432                           ;incstack = 0
  5433  003000  0E00               	movlw	0
  5434  003002  6E02               	movwf	OpenUSART@spbrg+1,c
  5435  003004  0E19               	movlw	25
  5436  003006  6E01               	movwf	OpenUSART@spbrg,c
  5437  003008  0E3C               	movlw	60
  5438  00300A  ECAA  F016         	call	_OpenUSART
  5439                           
  5440                           ;Lab6pB2.c: 148: OSCCON = 0x60;
  5441  00300E  0E60               	movlw	96
  5442  003010  6ED3               	movwf	4051,c	;volatile
  5443  003012  0012               	return		;funcret
  5444  003014                     __end_of_init_UART:
  5445                           	opt stack 0
  5446                           tblptru	equ	0xFF8
  5447                           tblptrh	equ	0xFF7
  5448                           tblptrl	equ	0xFF6
  5449                           tablat	equ	0xFF5
  5450                           prodh	equ	0xFF4
  5451                           prodl	equ	0xFF3
  5452                           postinc0	equ	0xFEE
  5453                           wreg	equ	0xFE8
  5454                           postdec1	equ	0xFE5
  5455                           fsr1l	equ	0xFE1
  5456                           indf2	equ	0xFDF
  5457                           postinc2	equ	0xFDE
  5458                           postdec2	equ	0xFDD
  5459                           fsr2h	equ	0xFDA
  5460                           fsr2l	equ	0xFD9
  5461                           status	equ	0xFD8
  5462                           
  5463 ;; *************** function _OpenUSART *****************
  5464 ;; Defined at:
  5465 ;;		line 73 in file "C:\My Programs\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;  config          1    wreg     unsigned char 
  5468 ;;  spbrg           2    0[COMRAM] unsigned int 
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  config          1    2[COMRAM] unsigned char 
  5471 ;; Return value:  Size  Location     Type
  5472 ;;		None               void
  5473 ;; Registers used:
  5474 ;;		wreg, status,2
  5475 ;; Tracked objects:
  5476 ;;		On entry : 0/0
  5477 ;;		On exit  : 0/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5481 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5483 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5484 ;;Total ram usage:        3 bytes
  5485 ;; Hardware stack levels used:    1
  5486 ;; This function calls:
  5487 ;;		Nothing
  5488 ;; This function is called by:
  5489 ;;		_init_UART
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           	psect	text20
  5494  002D54                     __ptext20:
  5495                           	opt stack 0
  5496  002D54                     _OpenUSART:
  5497                           	opt stack 29
  5498                           
  5499                           ;incstack = 0
  5500                           ;OpenUSART@config stored from wreg
  5501  002D54  6E03               	movwf	OpenUSART@config,c
  5502  002D56  0E00               	movlw	0
  5503  002D58  6EAC               	movwf	4012,c	;volatile
  5504  002D5A  0E00               	movlw	0
  5505  002D5C  6EAB               	movwf	4011,c	;volatile
  5506  002D5E  A003               	btfss	OpenUSART@config,0,c
  5507  002D60  D002               	goto	l2304
  5508  002D62  88AC               	bsf	4012,4,c	;volatile
  5509  002D64  D000               	goto	l2304
  5510  002D66                     l2304:
  5511  002D66  A203               	btfss	OpenUSART@config,1,c
  5512  002D68  D003               	goto	l2308
  5513  002D6A  8CAC               	bsf	4012,6,c	;volatile
  5514  002D6C  8CAB               	bsf	4011,6,c	;volatile
  5515  002D6E  D000               	goto	l2308
  5516  002D70                     l2308:
  5517  002D70  A403               	btfss	OpenUSART@config,2,c
  5518  002D72  D002               	goto	l2312
  5519  002D74  8EAC               	bsf	4012,7,c	;volatile
  5520  002D76  D000               	goto	l2312
  5521  002D78                     l2312:
  5522  002D78  A603               	btfss	OpenUSART@config,3,c
  5523  002D7A  D002               	goto	l323
  5524  002D7C  88AB               	bsf	4011,4,c	;volatile
  5525  002D7E  D002               	goto	l2316
  5526  002D80                     l323:
  5527  002D80  8AAB               	bsf	4011,5,c	;volatile
  5528  002D82  D000               	goto	l2316
  5529  002D84                     l2316:
  5530  002D84  B803               	btfsc	OpenUSART@config,4,c
  5531  002D86  84AC               	bsf	4012,2,c	;volatile
  5532  002D88  989E               	bcf	3998,4,c	;volatile
  5533  002D8A  AA03               	btfss	OpenUSART@config,5,c
  5534  002D8C  D002               	goto	l2324
  5535  002D8E  86AB               	bsf	4011,3,c	;volatile
  5536  002D90  D000               	goto	l2324
  5537  002D92                     l2324:
  5538  002D92  AC03               	btfss	OpenUSART@config,6,c
  5539  002D94  D002               	goto	l327
  5540  002D96  8A9D               	bsf	3997,5,c	;volatile
  5541  002D98  D001               	goto	l328
  5542  002D9A                     l327:
  5543  002D9A  9A9D               	bcf	3997,5,c	;volatile
  5544  002D9C                     l328:
  5545  002D9C  9A9E               	bcf	3998,5,c	;volatile
  5546  002D9E  AE03               	btfss	OpenUSART@config,7,c
  5547  002DA0  D002               	goto	l329
  5548  002DA2  889D               	bsf	3997,4,c	;volatile
  5549  002DA4  D001               	goto	l330
  5550  002DA6                     l329:
  5551  002DA6  989D               	bcf	3997,4,c	;volatile
  5552  002DA8                     l330:
  5553  002DA8  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5554  002DAC  5002               	movf	OpenUSART@spbrg+1,w,c
  5555  002DAE  6EB0               	movwf	4016,c	;volatile
  5556  002DB0  8AAC               	bsf	4012,5,c	;volatile
  5557  002DB2  8EAB               	bsf	4011,7,c	;volatile
  5558  002DB4  9C94               	bcf	3988,6,c	;volatile
  5559  002DB6  8E94               	bsf	3988,7,c	;volatile
  5560  002DB8  B8AC               	btfsc	4012,4,c	;volatile
  5561  002DBA  BEAC               	btfsc	4012,7,c	;volatile
  5562  002DBC  D002               	goto	l332
  5563  002DBE  8C94               	bsf	3988,6,c	;volatile
  5564  002DC0  D000               	goto	l332
  5565  002DC2                     l332:
  5566  002DC2  0012               	return		;funcret
  5567  002DC4                     __end_of_OpenUSART:
  5568                           	opt stack 0
  5569                           tblptru	equ	0xFF8
  5570                           tblptrh	equ	0xFF7
  5571                           tblptrl	equ	0xFF6
  5572                           tablat	equ	0xFF5
  5573                           prodh	equ	0xFF4
  5574                           prodl	equ	0xFF3
  5575                           postinc0	equ	0xFEE
  5576                           wreg	equ	0xFE8
  5577                           postdec1	equ	0xFE5
  5578                           fsr1l	equ	0xFE1
  5579                           indf2	equ	0xFDF
  5580                           postinc2	equ	0xFDE
  5581                           postdec2	equ	0xFDD
  5582                           fsr2h	equ	0xFDA
  5583                           fsr2l	equ	0xFD9
  5584                           status	equ	0xFD8
  5585                           
  5586 ;; *************** function _get_full_ADC *****************
  5587 ;; Defined at:
  5588 ;;		line 162 in file "Lab6pB2.c"
  5589 ;; Parameters:    Size  Location     Type
  5590 ;;		None
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;  result          2    4[COMRAM] int 
  5593 ;; Return value:  Size  Location     Type
  5594 ;;                  2    0[COMRAM] unsigned int 
  5595 ;; Registers used:
  5596 ;;		wreg, status,2, status,0
  5597 ;; Tracked objects:
  5598 ;;		On entry : 0/0
  5599 ;;		On exit  : 0/0
  5600 ;;		Unchanged: 0/0
  5601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5602 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5603 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5604 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5605 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5606 ;;Total ram usage:        6 bytes
  5607 ;; Hardware stack levels used:    1
  5608 ;; This function calls:
  5609 ;;		Nothing
  5610 ;; This function is called by:
  5611 ;;		_main
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           	psect	text21
  5616  002F54                     __ptext21:
  5617                           	opt stack 0
  5618  002F54                     _get_full_ADC:
  5619                           	opt stack 30
  5620                           
  5621                           ;Lab6pB2.c: 164: int result;
  5622                           ;Lab6pB2.c: 165: ADCON0bits.GO=1;
  5623                           
  5624                           ;incstack = 0
  5625  002F54  82C2               	bsf	4034,1,c	;volatile
  5626                           
  5627                           ;Lab6pB2.c: 166: while(ADCON0bits.DONE==1);
  5628  002F56  D000               	goto	l126
  5629  002F58                     l126:
  5630  002F58  B2C2               	btfsc	4034,1,c	;volatile
  5631  002F5A  D7FE               	goto	l126
  5632                           
  5633                           ;Lab6pB2.c: 167: result = (ADRESH * 0x100) + ADRESL;
  5634  002F5C  50C4               	movf	4036,w,c	;volatile
  5635  002F5E  6E04               	movwf	(??_get_full_ADC+1)& (0+255),c
  5636  002F60  6A03               	clrf	??_get_full_ADC& (0+255),c
  5637  002F62  50C3               	movf	4035,w,c	;volatile
  5638  002F64  2403               	addwf	??_get_full_ADC,w,c
  5639  002F66  6E05               	movwf	get_full_ADC@result,c
  5640  002F68  0E00               	movlw	0
  5641  002F6A  2004               	addwfc	??_get_full_ADC+1,w,c
  5642  002F6C  6E06               	movwf	get_full_ADC@result+1,c
  5643                           
  5644                           ;Lab6pB2.c: 169: return result;
  5645  002F6E  C005  F001         	movff	get_full_ADC@result,?_get_full_ADC
  5646  002F72  C006  F002         	movff	get_full_ADC@result+1,?_get_full_ADC+1
  5647  002F76  D000               	goto	l129
  5648  002F78                     l129:
  5649  002F78  0012               	return		;funcret
  5650  002F7A                     __end_of_get_full_ADC:
  5651                           	opt stack 0
  5652                           tblptru	equ	0xFF8
  5653                           tblptrh	equ	0xFF7
  5654                           tblptrl	equ	0xFF6
  5655                           tablat	equ	0xFF5
  5656                           prodh	equ	0xFF4
  5657                           prodl	equ	0xFF3
  5658                           postinc0	equ	0xFEE
  5659                           wreg	equ	0xFE8
  5660                           postdec1	equ	0xFE5
  5661                           fsr1l	equ	0xFE1
  5662                           indf2	equ	0xFDF
  5663                           postinc2	equ	0xFDE
  5664                           postdec2	equ	0xFDD
  5665                           fsr2h	equ	0xFDA
  5666                           fsr2l	equ	0xFD9
  5667                           status	equ	0xFD8
  5668                           
  5669 ;; *************** function ___ftdiv *****************
  5670 ;; Defined at:
  5671 ;;		line 54 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  5672 ;; Parameters:    Size  Location     Type
  5673 ;;  f1              3   12[COMRAM] float 
  5674 ;;  f2              3   15[COMRAM] float 
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;  f3              3   22[COMRAM] float 
  5677 ;;  sign            1   26[COMRAM] unsigned char 
  5678 ;;  exp             1   25[COMRAM] unsigned char 
  5679 ;;  cntr            1   21[COMRAM] unsigned char 
  5680 ;; Return value:  Size  Location     Type
  5681 ;;                  3   12[COMRAM] float 
  5682 ;; Registers used:
  5683 ;;		wreg, status,2, status,0, cstack
  5684 ;; Tracked objects:
  5685 ;;		On entry : 0/0
  5686 ;;		On exit  : 0/0
  5687 ;;		Unchanged: 0/0
  5688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5689 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5690 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5691 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5692 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5693 ;;Total ram usage:       15 bytes
  5694 ;; Hardware stack levels used:    1
  5695 ;; Hardware stack levels required when called:    1
  5696 ;; This function calls:
  5697 ;;		___ftpack
  5698 ;; This function is called by:
  5699 ;;		_main
  5700 ;; This function uses a non-reentrant model
  5701 ;;
  5702                           
  5703                           	psect	text22
  5704  002766                     __ptext22:
  5705                           	opt stack 0
  5706  002766                     ___ftdiv:
  5707                           	opt stack 29
  5708                           
  5709                           ;incstack = 0
  5710  002766  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
  5711  00276A  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  5712  00276C  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  5713  00276E  340E               	rlcf	___ftdiv@f1+1,w,c
  5714  002770  3613               	rlcf	??___ftdiv& (0+255),f,c
  5715  002772  E301               	bnc	u3071
  5716  002774  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  5717  002776                     u3071:
  5718  002776  5013               	movf	??___ftdiv,w,c
  5719  002778  6E1A               	movwf	___ftdiv@exp,c
  5720  00277A  501A               	movf	___ftdiv@exp,w,c
  5721  00277C  A4D8               	btfss	status,2,c
  5722  00277E  D002               	goto	l2952
  5723  002780  D00E               	goto	l2954
  5724  002782  D061               	goto	l732
  5725  002784                     l2952:
  5726  002784  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
  5727  002788  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  5728  00278A  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  5729  00278C  3411               	rlcf	___ftdiv@f2+1,w,c
  5730  00278E  3613               	rlcf	??___ftdiv& (0+255),f,c
  5731  002790  E301               	bnc	u3091
  5732  002792  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  5733  002794                     u3091:
  5734  002794  5013               	movf	??___ftdiv,w,c
  5735  002796  6E1B               	movwf	___ftdiv@sign,c
  5736  002798  501B               	movf	___ftdiv@sign,w,c
  5737  00279A  A4D8               	btfss	status,2,c
  5738  00279C  D007               	goto	l2958
  5739  00279E                     l2954:
  5740  00279E  0E00               	movlw	0
  5741  0027A0  6E0D               	movwf	?___ftdiv,c
  5742  0027A2  0E00               	movlw	0
  5743  0027A4  6E0E               	movwf	?___ftdiv+1,c
  5744  0027A6  0E00               	movlw	0
  5745  0027A8  6E0F               	movwf	?___ftdiv+2,c
  5746  0027AA  D04D               	goto	l732
  5747  0027AC                     l2958:
  5748  0027AC  0E00               	movlw	0
  5749  0027AE  6E17               	movwf	___ftdiv@f3,c
  5750  0027B0  0E00               	movlw	0
  5751  0027B2  6E18               	movwf	___ftdiv@f3+1,c
  5752  0027B4  0E00               	movlw	0
  5753  0027B6  6E19               	movwf	___ftdiv@f3+2,c
  5754  0027B8  501B               	movf	___ftdiv@sign,w,c
  5755  0027BA  0F89               	addlw	137
  5756  0027BC  5E1A               	subwf	___ftdiv@exp,f,c
  5757  0027BE  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
  5758  0027C2  5012               	movf	___ftdiv@f2+2,w,c
  5759  0027C4  1A1B               	xorwf	___ftdiv@sign,f,c
  5760  0027C6  0E80               	movlw	128
  5761  0027C8  161B               	andwf	___ftdiv@sign,f,c
  5762  0027CA  8E0E               	bsf	___ftdiv@f1+1,7,c
  5763  0027CC  0EFF               	movlw	255
  5764  0027CE  160D               	andwf	___ftdiv@f1,f,c
  5765  0027D0  0EFF               	movlw	255
  5766  0027D2  160E               	andwf	___ftdiv@f1+1,f,c
  5767  0027D4  0E00               	movlw	0
  5768  0027D6  160F               	andwf	___ftdiv@f1+2,f,c
  5769  0027D8  8E11               	bsf	___ftdiv@f2+1,7,c
  5770  0027DA  0EFF               	movlw	255
  5771  0027DC  1610               	andwf	___ftdiv@f2,f,c
  5772  0027DE  0EFF               	movlw	255
  5773  0027E0  1611               	andwf	___ftdiv@f2+1,f,c
  5774  0027E2  0E00               	movlw	0
  5775  0027E4  1612               	andwf	___ftdiv@f2+2,f,c
  5776  0027E6  0E18               	movlw	24
  5777  0027E8  6E16               	movwf	___ftdiv@cntr,c
  5778  0027EA  D000               	goto	l2978
  5779  0027EC                     l2978:
  5780  0027EC  90D8               	bcf	status,0,c
  5781  0027EE  3617               	rlcf	___ftdiv@f3,f,c
  5782  0027F0  3618               	rlcf	___ftdiv@f3+1,f,c
  5783  0027F2  3619               	rlcf	___ftdiv@f3+2,f,c
  5784  0027F4  5010               	movf	___ftdiv@f2,w,c
  5785  0027F6  5C0D               	subwf	___ftdiv@f1,w,c
  5786  0027F8  5011               	movf	___ftdiv@f2+1,w,c
  5787  0027FA  580E               	subwfb	___ftdiv@f1+1,w,c
  5788  0027FC  5012               	movf	___ftdiv@f2+2,w,c
  5789  0027FE  580F               	subwfb	___ftdiv@f1+2,w,c
  5790  002800  A0D8               	btfss	status,0,c
  5791  002802  D007               	goto	l735
  5792  002804  5010               	movf	___ftdiv@f2,w,c
  5793  002806  5E0D               	subwf	___ftdiv@f1,f,c
  5794  002808  5011               	movf	___ftdiv@f2+1,w,c
  5795  00280A  5A0E               	subwfb	___ftdiv@f1+1,f,c
  5796  00280C  5012               	movf	___ftdiv@f2+2,w,c
  5797  00280E  5A0F               	subwfb	___ftdiv@f1+2,f,c
  5798  002810  8017               	bsf	___ftdiv@f3,0,c
  5799  002812                     l735:
  5800  002812  90D8               	bcf	status,0,c
  5801  002814  360D               	rlcf	___ftdiv@f1,f,c
  5802  002816  360E               	rlcf	___ftdiv@f1+1,f,c
  5803  002818  360F               	rlcf	___ftdiv@f1+2,f,c
  5804  00281A  2E16               	decfsz	___ftdiv@cntr,f,c
  5805  00281C  D7E7               	goto	l2978
  5806  00281E  D000               	goto	l2988
  5807  002820                     l2988:
  5808  002820  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
  5809  002824  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5810  002828  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5811  00282C  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
  5812  002830  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
  5813  002834  EC93  F014         	call	___ftpack	;wreg free
  5814  002838  C001  F00D         	movff	?___ftpack,?___ftdiv
  5815  00283C  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
  5816  002840  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
  5817  002844  D000               	goto	l732
  5818  002846                     l732:
  5819  002846  0012               	return		;funcret
  5820  002848                     __end_of___ftdiv:
  5821                           	opt stack 0
  5822                           tblptru	equ	0xFF8
  5823                           tblptrh	equ	0xFF7
  5824                           tblptrl	equ	0xFF6
  5825                           tablat	equ	0xFF5
  5826                           prodh	equ	0xFF4
  5827                           prodl	equ	0xFF3
  5828                           postinc0	equ	0xFEE
  5829                           wreg	equ	0xFE8
  5830                           postdec1	equ	0xFE5
  5831                           fsr1l	equ	0xFE1
  5832                           indf2	equ	0xFDF
  5833                           postinc2	equ	0xFDE
  5834                           postdec2	equ	0xFDD
  5835                           fsr2h	equ	0xFDA
  5836                           fsr2l	equ	0xFD9
  5837                           status	equ	0xFD8
  5838                           
  5839 ;; *************** function ___awtoft *****************
  5840 ;; Defined at:
  5841 ;;		line 32 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\awtoft.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;  c               2    8[COMRAM] int 
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;  sign            1   11[COMRAM] unsigned char 
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  3    8[COMRAM] float 
  5848 ;; Registers used:
  5849 ;;		wreg, status,2, status,0, cstack
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5855 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5856 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5858 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5859 ;;Total ram usage:        4 bytes
  5860 ;; Hardware stack levels used:    1
  5861 ;; Hardware stack levels required when called:    1
  5862 ;; This function calls:
  5863 ;;		___ftpack
  5864 ;; This function is called by:
  5865 ;;		_main
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text23
  5870  002EF0                     __ptext23:
  5871                           	opt stack 0
  5872  002EF0                     ___awtoft:
  5873                           	opt stack 29
  5874                           
  5875                           ;incstack = 0
  5876  002EF0  0E00               	movlw	0
  5877  002EF2  6E0C               	movwf	___awtoft@sign,c
  5878  002EF4  AE0A               	btfss	___awtoft@c+1,7,c
  5879  002EF6  D007               	goto	l3000
  5880  002EF8  6C09               	negf	___awtoft@c,c
  5881  002EFA  1E0A               	comf	___awtoft@c+1,f,c
  5882  002EFC  B0D8               	btfsc	status,0,c
  5883  002EFE  2A0A               	incf	___awtoft@c+1,f,c
  5884  002F00  0E01               	movlw	1
  5885  002F02  6E0C               	movwf	___awtoft@sign,c
  5886  002F04  D000               	goto	l3000
  5887  002F06                     l3000:
  5888  002F06  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5889  002F0A  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5890  002F0E  6A03               	clrf	___ftpack@arg+2,c
  5891  002F10  0E8E               	movlw	142
  5892  002F12  6E04               	movwf	___ftpack@exp,c
  5893  002F14  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5894  002F18  EC93  F014         	call	___ftpack	;wreg free
  5895  002F1C  C001  F009         	movff	?___ftpack,?___awtoft
  5896  002F20  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5897  002F24  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5898  002F28  D000               	goto	l553
  5899  002F2A                     l553:
  5900  002F2A  0012               	return		;funcret
  5901  002F2C                     __end_of___awtoft:
  5902                           	opt stack 0
  5903                           tblptru	equ	0xFF8
  5904                           tblptrh	equ	0xFF7
  5905                           tblptrl	equ	0xFF6
  5906                           tablat	equ	0xFF5
  5907                           prodh	equ	0xFF4
  5908                           prodl	equ	0xFF3
  5909                           postinc0	equ	0xFEE
  5910                           wreg	equ	0xFE8
  5911                           postdec1	equ	0xFE5
  5912                           fsr1l	equ	0xFE1
  5913                           indf2	equ	0xFDF
  5914                           postinc2	equ	0xFDE
  5915                           postdec2	equ	0xFDD
  5916                           fsr2h	equ	0xFDA
  5917                           fsr2l	equ	0xFD9
  5918                           status	equ	0xFD8
  5919                           
  5920 ;; *************** function ___ftpack *****************
  5921 ;; Defined at:
  5922 ;;		line 62 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\float.c"
  5923 ;; Parameters:    Size  Location     Type
  5924 ;;  arg             3    0[COMRAM] unsigned um
  5925 ;;  exp             1    3[COMRAM] unsigned char 
  5926 ;;  sign            1    4[COMRAM] unsigned char 
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;		None
  5929 ;; Return value:  Size  Location     Type
  5930 ;;                  3    0[COMRAM] float 
  5931 ;; Registers used:
  5932 ;;		wreg, status,2, status,0
  5933 ;; Tracked objects:
  5934 ;;		On entry : 0/0
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5938 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5940 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5941 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5942 ;;Total ram usage:        8 bytes
  5943 ;; Hardware stack levels used:    1
  5944 ;; This function calls:
  5945 ;;		Nothing
  5946 ;; This function is called by:
  5947 ;;		___awtoft
  5948 ;;		___ftadd
  5949 ;;		___ftdiv
  5950 ;;		___ftmul
  5951 ;;		___lltoft
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955                           	psect	text24
  5956  002926                     __ptext24:
  5957                           	opt stack 0
  5958  002926                     ___ftpack:
  5959                           	opt stack 27
  5960                           
  5961                           ;incstack = 0
  5962  002926  5004               	movf	___ftpack@exp,w,c
  5963  002928  B4D8               	btfsc	status,2,c
  5964  00292A  D005               	goto	l2062
  5965  00292C  5001               	movf	___ftpack@arg,w,c
  5966  00292E  1002               	iorwf	___ftpack@arg+1,w,c
  5967  002930  1003               	iorwf	___ftpack@arg+2,w,c
  5968  002932  A4D8               	btfss	status,2,c
  5969  002934  D00E               	goto	l2068
  5970  002936                     l2062:
  5971  002936  0E00               	movlw	0
  5972  002938  6E01               	movwf	?___ftpack,c
  5973  00293A  0E00               	movlw	0
  5974  00293C  6E02               	movwf	?___ftpack+1,c
  5975  00293E  0E00               	movlw	0
  5976  002940  6E03               	movwf	?___ftpack+2,c
  5977  002942  D053               	goto	l660
  5978  002944  D006               	goto	l2068
  5979  002946                     l2066:
  5980  002946  2A04               	incf	___ftpack@exp,f,c
  5981  002948  90D8               	bcf	status,0,c
  5982  00294A  3203               	rrcf	___ftpack@arg+2,f,c
  5983  00294C  3202               	rrcf	___ftpack@arg+1,f,c
  5984  00294E  3201               	rrcf	___ftpack@arg,f,c
  5985  002950  D000               	goto	l2068
  5986  002952                     l2068:
  5987  002952  0E00               	movlw	0
  5988  002954  1401               	andwf	___ftpack@arg,w,c
  5989  002956  6E06               	movwf	??___ftpack& (0+255),c
  5990  002958  0E00               	movlw	0
  5991  00295A  1402               	andwf	___ftpack@arg+1,w,c
  5992  00295C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5993  00295E  0EFE               	movlw	254
  5994  002960  1403               	andwf	___ftpack@arg+2,w,c
  5995  002962  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5996  002964  5006               	movf	??___ftpack,w,c
  5997  002966  1007               	iorwf	??___ftpack+1,w,c
  5998  002968  1008               	iorwf	??___ftpack+2,w,c
  5999  00296A  B4D8               	btfsc	status,2,c
  6000  00296C  D00E               	goto	l2074
  6001  00296E  D7EB               	goto	l2066
  6002  002970  D00C               	goto	l2074
  6003  002972                     l2070:
  6004  002972  2A04               	incf	___ftpack@exp,f,c
  6005  002974  0E01               	movlw	1
  6006  002976  2601               	addwf	___ftpack@arg,f,c
  6007  002978  0E00               	movlw	0
  6008  00297A  2202               	addwfc	___ftpack@arg+1,f,c
  6009  00297C  0E00               	movlw	0
  6010  00297E  2203               	addwfc	___ftpack@arg+2,f,c
  6011  002980  90D8               	bcf	status,0,c
  6012  002982  3203               	rrcf	___ftpack@arg+2,f,c
  6013  002984  3202               	rrcf	___ftpack@arg+1,f,c
  6014  002986  3201               	rrcf	___ftpack@arg,f,c
  6015  002988  D000               	goto	l2074
  6016  00298A                     l2074:
  6017  00298A  0E00               	movlw	0
  6018  00298C  1401               	andwf	___ftpack@arg,w,c
  6019  00298E  6E06               	movwf	??___ftpack& (0+255),c
  6020  002990  0E00               	movlw	0
  6021  002992  1402               	andwf	___ftpack@arg+1,w,c
  6022  002994  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6023  002996  0EFF               	movlw	255
  6024  002998  1403               	andwf	___ftpack@arg+2,w,c
  6025  00299A  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6026  00299C  5006               	movf	??___ftpack,w,c
  6027  00299E  1007               	iorwf	??___ftpack+1,w,c
  6028  0029A0  1008               	iorwf	??___ftpack+2,w,c
  6029  0029A2  B4D8               	btfsc	status,2,c
  6030  0029A4  D008               	goto	l2078
  6031  0029A6  D7E5               	goto	l2070
  6032  0029A8  D006               	goto	l2078
  6033  0029AA                     l2076:
  6034  0029AA  0604               	decf	___ftpack@exp,f,c
  6035  0029AC  90D8               	bcf	status,0,c
  6036  0029AE  3601               	rlcf	___ftpack@arg,f,c
  6037  0029B0  3602               	rlcf	___ftpack@arg+1,f,c
  6038  0029B2  3603               	rlcf	___ftpack@arg+2,f,c
  6039  0029B4  D000               	goto	l2078
  6040  0029B6                     l2078:
  6041  0029B6  BE02               	btfsc	___ftpack@arg+1,7,c
  6042  0029B8  D004               	goto	l671
  6043  0029BA  0E02               	movlw	2
  6044  0029BC  6004               	cpfslt	___ftpack@exp,c
  6045  0029BE  D7F5               	goto	l2076
  6046  0029C0  D000               	goto	l671
  6047  0029C2                     l671:
  6048  0029C2  B004               	btfsc	___ftpack@exp,0,c
  6049  0029C4  D002               	goto	l2084
  6050  0029C6  9E02               	bcf	___ftpack@arg+1,7,c
  6051  0029C8  D000               	goto	l2084
  6052  0029CA                     l2084:
  6053  0029CA  90D8               	bcf	status,0,c
  6054  0029CC  3204               	rrcf	___ftpack@exp,f,c
  6055  0029CE  5004               	movf	___ftpack@exp,w,c
  6056  0029D0  1203               	iorwf	___ftpack@arg+2,f,c
  6057  0029D2  5005               	movf	___ftpack@sign,w,c
  6058  0029D4  B4D8               	btfsc	status,2,c
  6059  0029D6  D002               	goto	l2090
  6060  0029D8  8E03               	bsf	___ftpack@arg+2,7,c
  6061  0029DA  D000               	goto	l2090
  6062  0029DC                     l2090:
  6063  0029DC  C001  F001         	movff	___ftpack@arg,?___ftpack
  6064  0029E0  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  6065  0029E4  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  6066  0029E8  D000               	goto	l660
  6067  0029EA                     l660:
  6068  0029EA  0012               	return		;funcret
  6069  0029EC                     __end_of___ftpack:
  6070                           	opt stack 0
  6071                           tblptru	equ	0xFF8
  6072                           tblptrh	equ	0xFF7
  6073                           tblptrl	equ	0xFF6
  6074                           tablat	equ	0xFF5
  6075                           prodh	equ	0xFF4
  6076                           prodl	equ	0xFF3
  6077                           postinc0	equ	0xFEE
  6078                           wreg	equ	0xFE8
  6079                           postdec1	equ	0xFE5
  6080                           fsr1l	equ	0xFE1
  6081                           indf2	equ	0xFDF
  6082                           postinc2	equ	0xFDE
  6083                           postdec2	equ	0xFDD
  6084                           fsr2h	equ	0xFDA
  6085                           fsr2l	equ	0xFD9
  6086                           status	equ	0xFD8
  6087                           
  6088 ;; *************** function ___almod *****************
  6089 ;; Defined at:
  6090 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\almod.c"
  6091 ;; Parameters:    Size  Location     Type
  6092 ;;  dividend        4   14[COMRAM] long 
  6093 ;;  divisor         4   18[COMRAM] long 
  6094 ;; Auto vars:     Size  Location     Type
  6095 ;;  sign            1   23[COMRAM] unsigned char 
  6096 ;;  counter         1   22[COMRAM] unsigned char 
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  4   14[COMRAM] long 
  6099 ;; Registers used:
  6100 ;;		wreg, status,2, status,0
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6106 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6107 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6109 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6110 ;;Total ram usage:       10 bytes
  6111 ;; Hardware stack levels used:    1
  6112 ;; This function calls:
  6113 ;;		Nothing
  6114 ;; This function is called by:
  6115 ;;		_main
  6116 ;; This function uses a non-reentrant model
  6117 ;;
  6118                           
  6119                           	psect	text25
  6120  0029EC                     __ptext25:
  6121                           	opt stack 0
  6122  0029EC                     ___almod:
  6123                           	opt stack 30
  6124                           
  6125                           ;incstack = 0
  6126  0029EC  0E00               	movlw	0
  6127  0029EE  6E18               	movwf	___almod@sign,c
  6128  0029F0  AE12               	btfss	___almod@dividend+3,7,c
  6129  0029F2  D00B               	goto	l2918
  6130  0029F4  1E12               	comf	___almod@dividend+3,f,c
  6131  0029F6  1E11               	comf	___almod@dividend+2,f,c
  6132  0029F8  1E10               	comf	___almod@dividend+1,f,c
  6133  0029FA  6C0F               	negf	___almod@dividend,c
  6134  0029FC  0E00               	movlw	0
  6135  0029FE  2210               	addwfc	___almod@dividend+1,f,c
  6136  002A00  2211               	addwfc	___almod@dividend+2,f,c
  6137  002A02  2212               	addwfc	___almod@dividend+3,f,c
  6138  002A04  0E01               	movlw	1
  6139  002A06  6E18               	movwf	___almod@sign,c
  6140  002A08  D000               	goto	l2918
  6141  002A0A                     l2918:
  6142  002A0A  AE16               	btfss	___almod@divisor+3,7,c
  6143  002A0C  D009               	goto	l2922
  6144  002A0E  1E16               	comf	___almod@divisor+3,f,c
  6145  002A10  1E15               	comf	___almod@divisor+2,f,c
  6146  002A12  1E14               	comf	___almod@divisor+1,f,c
  6147  002A14  6C13               	negf	___almod@divisor,c
  6148  002A16  0E00               	movlw	0
  6149  002A18  2214               	addwfc	___almod@divisor+1,f,c
  6150  002A1A  2215               	addwfc	___almod@divisor+2,f,c
  6151  002A1C  2216               	addwfc	___almod@divisor+3,f,c
  6152  002A1E  D000               	goto	l2922
  6153  002A20                     l2922:
  6154  002A20  5013               	movf	___almod@divisor,w,c
  6155  002A22  1014               	iorwf	___almod@divisor+1,w,c
  6156  002A24  1015               	iorwf	___almod@divisor+2,w,c
  6157  002A26  1016               	iorwf	___almod@divisor+3,w,c
  6158  002A28  B4D8               	btfsc	status,2,c
  6159  002A2A  D029               	goto	l2938
  6160  002A2C  0E01               	movlw	1
  6161  002A2E  6E17               	movwf	___almod@counter,c
  6162  002A30  D007               	goto	l2928
  6163  002A32                     l2926:
  6164  002A32  90D8               	bcf	status,0,c
  6165  002A34  3613               	rlcf	___almod@divisor,f,c
  6166  002A36  3614               	rlcf	___almod@divisor+1,f,c
  6167  002A38  3615               	rlcf	___almod@divisor+2,f,c
  6168  002A3A  3616               	rlcf	___almod@divisor+3,f,c
  6169  002A3C  2A17               	incf	___almod@counter,f,c
  6170  002A3E  D000               	goto	l2928
  6171  002A40                     l2928:
  6172  002A40  BE16               	btfsc	___almod@divisor+3,7,c
  6173  002A42  D002               	goto	l2930
  6174  002A44  D7F6               	goto	l2926
  6175  002A46  D000               	goto	l2930
  6176  002A48                     l2930:
  6177  002A48  5013               	movf	___almod@divisor,w,c
  6178  002A4A  5C0F               	subwf	___almod@dividend,w,c
  6179  002A4C  5014               	movf	___almod@divisor+1,w,c
  6180  002A4E  5810               	subwfb	___almod@dividend+1,w,c
  6181  002A50  5015               	movf	___almod@divisor+2,w,c
  6182  002A52  5811               	subwfb	___almod@dividend+2,w,c
  6183  002A54  5016               	movf	___almod@divisor+3,w,c
  6184  002A56  5812               	subwfb	___almod@dividend+3,w,c
  6185  002A58  A0D8               	btfss	status,0,c
  6186  002A5A  D009               	goto	l2934
  6187  002A5C  5013               	movf	___almod@divisor,w,c
  6188  002A5E  5E0F               	subwf	___almod@dividend,f,c
  6189  002A60  5014               	movf	___almod@divisor+1,w,c
  6190  002A62  5A10               	subwfb	___almod@dividend+1,f,c
  6191  002A64  5015               	movf	___almod@divisor+2,w,c
  6192  002A66  5A11               	subwfb	___almod@dividend+2,f,c
  6193  002A68  5016               	movf	___almod@divisor+3,w,c
  6194  002A6A  5A12               	subwfb	___almod@dividend+3,f,c
  6195  002A6C  D000               	goto	l2934
  6196  002A6E                     l2934:
  6197  002A6E  90D8               	bcf	status,0,c
  6198  002A70  3216               	rrcf	___almod@divisor+3,f,c
  6199  002A72  3215               	rrcf	___almod@divisor+2,f,c
  6200  002A74  3214               	rrcf	___almod@divisor+1,f,c
  6201  002A76  3213               	rrcf	___almod@divisor,f,c
  6202  002A78  2E17               	decfsz	___almod@counter,f,c
  6203  002A7A  D7E6               	goto	l2930
  6204  002A7C  D000               	goto	l2938
  6205  002A7E                     l2938:
  6206  002A7E  5018               	movf	___almod@sign,w,c
  6207  002A80  B4D8               	btfsc	status,2,c
  6208  002A82  D009               	goto	l2942
  6209  002A84  1E12               	comf	___almod@dividend+3,f,c
  6210  002A86  1E11               	comf	___almod@dividend+2,f,c
  6211  002A88  1E10               	comf	___almod@dividend+1,f,c
  6212  002A8A  6C0F               	negf	___almod@dividend,c
  6213  002A8C  0E00               	movlw	0
  6214  002A8E  2210               	addwfc	___almod@dividend+1,f,c
  6215  002A90  2211               	addwfc	___almod@dividend+2,f,c
  6216  002A92  2212               	addwfc	___almod@dividend+3,f,c
  6217  002A94  D000               	goto	l2942
  6218  002A96                     l2942:
  6219  002A96  C00F  F00F         	movff	___almod@dividend,?___almod
  6220  002A9A  C010  F010         	movff	___almod@dividend+1,?___almod+1
  6221  002A9E  C011  F011         	movff	___almod@dividend+2,?___almod+2
  6222  002AA2  C012  F012         	movff	___almod@dividend+3,?___almod+3
  6223  002AA6  D000               	goto	l417
  6224  002AA8                     l417:
  6225  002AA8  0012               	return		;funcret
  6226  002AAA                     __end_of___almod:
  6227                           	opt stack 0
  6228                           tblptru	equ	0xFF8
  6229                           tblptrh	equ	0xFF7
  6230                           tblptrl	equ	0xFF6
  6231                           tablat	equ	0xFF5
  6232                           prodh	equ	0xFF4
  6233                           prodl	equ	0xFF3
  6234                           postinc0	equ	0xFEE
  6235                           wreg	equ	0xFE8
  6236                           postdec1	equ	0xFE5
  6237                           fsr1l	equ	0xFE1
  6238                           indf2	equ	0xFDF
  6239                           postinc2	equ	0xFDE
  6240                           postdec2	equ	0xFDD
  6241                           fsr2h	equ	0xFDA
  6242                           fsr2l	equ	0xFD9
  6243                           status	equ	0xFD8
  6244                           
  6245 ;; *************** function ___aldiv *****************
  6246 ;; Defined at:
  6247 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\aldiv.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  dividend        4    0[COMRAM] long 
  6250 ;;  divisor         4    4[COMRAM] long 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  quotient        4   10[COMRAM] long 
  6253 ;;  sign            1    9[COMRAM] unsigned char 
  6254 ;;  counter         1    8[COMRAM] unsigned char 
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  4    0[COMRAM] long 
  6257 ;; Registers used:
  6258 ;;		wreg, status,2, status,0
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6264 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6265 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6267 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6268 ;;Total ram usage:       14 bytes
  6269 ;; Hardware stack levels used:    1
  6270 ;; This function calls:
  6271 ;;		Nothing
  6272 ;; This function is called by:
  6273 ;;		_main
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           	psect	text26
  6278  002848                     __ptext26:
  6279                           	opt stack 0
  6280  002848                     ___aldiv:
  6281                           	opt stack 30
  6282                           
  6283                           ;incstack = 0
  6284  002848  0E00               	movlw	0
  6285  00284A  6E0A               	movwf	___aldiv@sign,c
  6286  00284C  AE08               	btfss	___aldiv@divisor+3,7,c
  6287  00284E  D00B               	goto	l2874
  6288  002850  1E08               	comf	___aldiv@divisor+3,f,c
  6289  002852  1E07               	comf	___aldiv@divisor+2,f,c
  6290  002854  1E06               	comf	___aldiv@divisor+1,f,c
  6291  002856  6C05               	negf	___aldiv@divisor,c
  6292  002858  0E00               	movlw	0
  6293  00285A  2206               	addwfc	___aldiv@divisor+1,f,c
  6294  00285C  2207               	addwfc	___aldiv@divisor+2,f,c
  6295  00285E  2208               	addwfc	___aldiv@divisor+3,f,c
  6296  002860  0E01               	movlw	1
  6297  002862  6E0A               	movwf	___aldiv@sign,c
  6298  002864  D000               	goto	l2874
  6299  002866                     l2874:
  6300  002866  AE04               	btfss	___aldiv@dividend+3,7,c
  6301  002868  D00B               	goto	l2880
  6302  00286A  1E04               	comf	___aldiv@dividend+3,f,c
  6303  00286C  1E03               	comf	___aldiv@dividend+2,f,c
  6304  00286E  1E02               	comf	___aldiv@dividend+1,f,c
  6305  002870  6C01               	negf	___aldiv@dividend,c
  6306  002872  0E00               	movlw	0
  6307  002874  2202               	addwfc	___aldiv@dividend+1,f,c
  6308  002876  2203               	addwfc	___aldiv@dividend+2,f,c
  6309  002878  2204               	addwfc	___aldiv@dividend+3,f,c
  6310  00287A  0E01               	movlw	1
  6311  00287C  1A0A               	xorwf	___aldiv@sign,f,c
  6312  00287E  D000               	goto	l2880
  6313  002880                     l2880:
  6314  002880  0E00               	movlw	0
  6315  002882  6E0B               	movwf	___aldiv@quotient,c
  6316  002884  0E00               	movlw	0
  6317  002886  6E0C               	movwf	___aldiv@quotient+1,c
  6318  002888  0E00               	movlw	0
  6319  00288A  6E0D               	movwf	___aldiv@quotient+2,c
  6320  00288C  0E00               	movlw	0
  6321  00288E  6E0E               	movwf	___aldiv@quotient+3,c
  6322  002890  5005               	movf	___aldiv@divisor,w,c
  6323  002892  1006               	iorwf	___aldiv@divisor+1,w,c
  6324  002894  1007               	iorwf	___aldiv@divisor+2,w,c
  6325  002896  1008               	iorwf	___aldiv@divisor+3,w,c
  6326  002898  B4D8               	btfsc	status,2,c
  6327  00289A  D02F               	goto	l2902
  6328  00289C  0E01               	movlw	1
  6329  00289E  6E09               	movwf	___aldiv@counter,c
  6330  0028A0  D007               	goto	l2888
  6331  0028A2                     l2886:
  6332  0028A2  90D8               	bcf	status,0,c
  6333  0028A4  3605               	rlcf	___aldiv@divisor,f,c
  6334  0028A6  3606               	rlcf	___aldiv@divisor+1,f,c
  6335  0028A8  3607               	rlcf	___aldiv@divisor+2,f,c
  6336  0028AA  3608               	rlcf	___aldiv@divisor+3,f,c
  6337  0028AC  2A09               	incf	___aldiv@counter,f,c
  6338  0028AE  D000               	goto	l2888
  6339  0028B0                     l2888:
  6340  0028B0  BE08               	btfsc	___aldiv@divisor+3,7,c
  6341  0028B2  D002               	goto	l2890
  6342  0028B4  D7F6               	goto	l2886
  6343  0028B6  D000               	goto	l2890
  6344  0028B8                     l2890:
  6345  0028B8  90D8               	bcf	status,0,c
  6346  0028BA  360B               	rlcf	___aldiv@quotient,f,c
  6347  0028BC  360C               	rlcf	___aldiv@quotient+1,f,c
  6348  0028BE  360D               	rlcf	___aldiv@quotient+2,f,c
  6349  0028C0  360E               	rlcf	___aldiv@quotient+3,f,c
  6350  0028C2  5005               	movf	___aldiv@divisor,w,c
  6351  0028C4  5C01               	subwf	___aldiv@dividend,w,c
  6352  0028C6  5006               	movf	___aldiv@divisor+1,w,c
  6353  0028C8  5802               	subwfb	___aldiv@dividend+1,w,c
  6354  0028CA  5007               	movf	___aldiv@divisor+2,w,c
  6355  0028CC  5803               	subwfb	___aldiv@dividend+2,w,c
  6356  0028CE  5008               	movf	___aldiv@divisor+3,w,c
  6357  0028D0  5804               	subwfb	___aldiv@dividend+3,w,c
  6358  0028D2  A0D8               	btfss	status,0,c
  6359  0028D4  D00A               	goto	l2898
  6360  0028D6  5005               	movf	___aldiv@divisor,w,c
  6361  0028D8  5E01               	subwf	___aldiv@dividend,f,c
  6362  0028DA  5006               	movf	___aldiv@divisor+1,w,c
  6363  0028DC  5A02               	subwfb	___aldiv@dividend+1,f,c
  6364  0028DE  5007               	movf	___aldiv@divisor+2,w,c
  6365  0028E0  5A03               	subwfb	___aldiv@dividend+2,f,c
  6366  0028E2  5008               	movf	___aldiv@divisor+3,w,c
  6367  0028E4  5A04               	subwfb	___aldiv@dividend+3,f,c
  6368  0028E6  800B               	bsf	___aldiv@quotient,0,c
  6369  0028E8  D000               	goto	l2898
  6370  0028EA                     l2898:
  6371  0028EA  90D8               	bcf	status,0,c
  6372  0028EC  3208               	rrcf	___aldiv@divisor+3,f,c
  6373  0028EE  3207               	rrcf	___aldiv@divisor+2,f,c
  6374  0028F0  3206               	rrcf	___aldiv@divisor+1,f,c
  6375  0028F2  3205               	rrcf	___aldiv@divisor,f,c
  6376  0028F4  2E09               	decfsz	___aldiv@counter,f,c
  6377  0028F6  D7E0               	goto	l2890
  6378  0028F8  D000               	goto	l2902
  6379  0028FA                     l2902:
  6380  0028FA  500A               	movf	___aldiv@sign,w,c
  6381  0028FC  B4D8               	btfsc	status,2,c
  6382  0028FE  D009               	goto	l2906
  6383  002900  1E0E               	comf	___aldiv@quotient+3,f,c
  6384  002902  1E0D               	comf	___aldiv@quotient+2,f,c
  6385  002904  1E0C               	comf	___aldiv@quotient+1,f,c
  6386  002906  6C0B               	negf	___aldiv@quotient,c
  6387  002908  0E00               	movlw	0
  6388  00290A  220C               	addwfc	___aldiv@quotient+1,f,c
  6389  00290C  220D               	addwfc	___aldiv@quotient+2,f,c
  6390  00290E  220E               	addwfc	___aldiv@quotient+3,f,c
  6391  002910  D000               	goto	l2906
  6392  002912                     l2906:
  6393  002912  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  6394  002916  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  6395  00291A  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  6396  00291E  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  6397  002922  D000               	goto	l404
  6398  002924                     l404:
  6399  002924  0012               	return		;funcret
  6400  002926                     __end_of___aldiv:
  6401                           	opt stack 0
  6402                           tblptru	equ	0xFF8
  6403                           tblptrh	equ	0xFF7
  6404                           tblptrl	equ	0xFF6
  6405                           tablat	equ	0xFF5
  6406                           prodh	equ	0xFF4
  6407                           prodl	equ	0xFF3
  6408                           postinc0	equ	0xFEE
  6409                           wreg	equ	0xFE8
  6410                           postdec1	equ	0xFE5
  6411                           fsr1l	equ	0xFE1
  6412                           indf2	equ	0xFDF
  6413                           postinc2	equ	0xFDE
  6414                           postdec2	equ	0xFDD
  6415                           fsr2h	equ	0xFDA
  6416                           fsr2l	equ	0xFD9
  6417                           status	equ	0xFD8
  6418                           
  6419 ;; *************** function _WAIT_1_SEC *****************
  6420 ;; Defined at:
  6421 ;;		line 172 in file "Lab6pB2.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;		None
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;		None
  6426 ;; Return value:  Size  Location     Type
  6427 ;;		None               void
  6428 ;; Registers used:
  6429 ;;		wreg, status,2, cstack
  6430 ;; Tracked objects:
  6431 ;;		On entry : 0/0
  6432 ;;		On exit  : 0/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6439 ;;Total ram usage:        0 bytes
  6440 ;; Hardware stack levels used:    1
  6441 ;; Hardware stack levels required when called:    1
  6442 ;; This function calls:
  6443 ;;		_WAIT_HALF_SEC
  6444 ;; This function is called by:
  6445 ;;		_main
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           	psect	text27
  6450  003058                     __ptext27:
  6451                           	opt stack 0
  6452  003058                     _WAIT_1_SEC:
  6453                           	opt stack 29
  6454                           
  6455                           ;Lab6pB2.c: 174: WAIT_HALF_SEC();
  6456                           
  6457                           ;incstack = 0
  6458  003058  ECCF  F017         	call	_WAIT_HALF_SEC	;wreg free
  6459                           
  6460                           ;Lab6pB2.c: 175: WAIT_HALF_SEC();
  6461  00305C  ECCF  F017         	call	_WAIT_HALF_SEC	;wreg free
  6462  003060  0012               	return		;funcret
  6463  003062                     __end_of_WAIT_1_SEC:
  6464                           	opt stack 0
  6465                           tblptru	equ	0xFF8
  6466                           tblptrh	equ	0xFF7
  6467                           tblptrl	equ	0xFF6
  6468                           tablat	equ	0xFF5
  6469                           prodh	equ	0xFF4
  6470                           prodl	equ	0xFF3
  6471                           postinc0	equ	0xFEE
  6472                           wreg	equ	0xFE8
  6473                           postdec1	equ	0xFE5
  6474                           fsr1l	equ	0xFE1
  6475                           indf2	equ	0xFDF
  6476                           postinc2	equ	0xFDE
  6477                           postdec2	equ	0xFDD
  6478                           fsr2h	equ	0xFDA
  6479                           fsr2l	equ	0xFD9
  6480                           status	equ	0xFD8
  6481                           
  6482 ;; *************** function _WAIT_HALF_SEC *****************
  6483 ;; Defined at:
  6484 ;;		line 178 in file "Lab6pB2.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;		None
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;		None
  6489 ;; Return value:  Size  Location     Type
  6490 ;;		None               void
  6491 ;; Registers used:
  6492 ;;		wreg, status,2
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6502 ;;Total ram usage:        0 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; This function calls:
  6505 ;;		Nothing
  6506 ;; This function is called by:
  6507 ;;		_WAIT_1_SEC
  6508 ;; This function uses a non-reentrant model
  6509 ;;
  6510                           
  6511                           	psect	text28
  6512  002F9E                     __ptext28:
  6513                           	opt stack 0
  6514  002F9E                     _WAIT_HALF_SEC:
  6515                           	opt stack 29
  6516                           
  6517                           ;Lab6pB2.c: 180: T0CON = 0x02;
  6518                           
  6519                           ;incstack = 0
  6520  002F9E  0E02               	movlw	2
  6521  002FA0  6ED5               	movwf	4053,c	;volatile
  6522                           
  6523                           ;Lab6pB2.c: 181: TMR0L = 0xDB;
  6524  002FA2  0EDB               	movlw	219
  6525  002FA4  6ED6               	movwf	4054,c	;volatile
  6526                           
  6527                           ;Lab6pB2.c: 182: TMR0H = 0xB;
  6528  002FA6  0E0B               	movlw	11
  6529  002FA8  6ED7               	movwf	4055,c	;volatile
  6530                           
  6531                           ;Lab6pB2.c: 183: INTCONbits.TMR0IF = 0;
  6532  002FAA  94F2               	bcf	intcon,2,c	;volatile
  6533                           
  6534                           ;Lab6pB2.c: 184: T0CONbits.TMR0ON = 1;
  6535  002FAC  8ED5               	bsf	4053,7,c	;volatile
  6536                           
  6537                           ;Lab6pB2.c: 185: while (INTCONbits.TMR0IF == 0);
  6538  002FAE  D000               	goto	l135
  6539  002FB0                     l135:
  6540  002FB0  A4F2               	btfss	intcon,2,c	;volatile
  6541  002FB2  D7FE               	goto	l135
  6542                           
  6543                           ;Lab6pB2.c: 186: T0CONbits.TMR0ON = 0;
  6544  002FB4  9ED5               	bcf	4053,7,c	;volatile
  6545  002FB6  0012               	return		;funcret
  6546  002FB8                     __end_of_WAIT_HALF_SEC:
  6547                           	opt stack 0
  6548                           tblptru	equ	0xFF8
  6549                           tblptrh	equ	0xFF7
  6550                           tblptrl	equ	0xFF6
  6551                           tablat	equ	0xFF5
  6552                           prodh	equ	0xFF4
  6553                           prodl	equ	0xFF3
  6554                           intcon	equ	0xFF2
  6555                           postinc0	equ	0xFEE
  6556                           wreg	equ	0xFE8
  6557                           postdec1	equ	0xFE5
  6558                           fsr1l	equ	0xFE1
  6559                           indf2	equ	0xFDF
  6560                           postinc2	equ	0xFDE
  6561                           postdec2	equ	0xFDD
  6562                           fsr2h	equ	0xFDA
  6563                           fsr2l	equ	0xFD9
  6564                           status	equ	0xFD8
  6565                           
  6566 ;; *************** function _Select_ADC_Channel *****************
  6567 ;; Defined at:
  6568 ;;		line 157 in file "Lab6pB2.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;  channel         1    wreg     unsigned char 
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;  channel         1    0[COMRAM] unsigned char 
  6573 ;; Return value:  Size  Location     Type
  6574 ;;		None               void
  6575 ;; Registers used:
  6576 ;;		wreg, status,2, status,0, prodl, prodh
  6577 ;; Tracked objects:
  6578 ;;		On entry : 0/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6583 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6585 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6586 ;;Total ram usage:        1 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; This function calls:
  6589 ;;		Nothing
  6590 ;; This function is called by:
  6591 ;;		_main
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           
  6595                           	psect	text29
  6596  003042                     __ptext29:
  6597                           	opt stack 0
  6598  003042                     _Select_ADC_Channel:
  6599                           	opt stack 30
  6600                           
  6601                           ;incstack = 0
  6602                           ;Select_ADC_Channel@channel stored from wreg
  6603  003042  6E01               	movwf	Select_ADC_Channel@channel,c
  6604                           
  6605                           ;Lab6pB2.c: 159: ADCON0 = channel * 4 + 1;
  6606  003044  5001               	movf	Select_ADC_Channel@channel,w,c
  6607  003046  0D04               	mullw	4
  6608  003048  28F3               	incf	prodl,w,c
  6609  00304A  6EC2               	movwf	4034,c	;volatile
  6610  00304C  0012               	return		;funcret
  6611  00304E                     __end_of_Select_ADC_Channel:
  6612                           	opt stack 0
  6613                           tblptru	equ	0xFF8
  6614                           tblptrh	equ	0xFF7
  6615                           tblptrl	equ	0xFF6
  6616                           tablat	equ	0xFF5
  6617                           prodh	equ	0xFF4
  6618                           prodl	equ	0xFF3
  6619                           intcon	equ	0xFF2
  6620                           postinc0	equ	0xFEE
  6621                           wreg	equ	0xFE8
  6622                           postdec1	equ	0xFE5
  6623                           fsr1l	equ	0xFE1
  6624                           indf2	equ	0xFDF
  6625                           postinc2	equ	0xFDE
  6626                           postdec2	equ	0xFDD
  6627                           fsr2h	equ	0xFDA
  6628                           fsr2l	equ	0xFD9
  6629                           status	equ	0xFD8
  6630                           
  6631 ;; *************** function _Init_TRIS *****************
  6632 ;; Defined at:
  6633 ;;		line 135 in file "Lab6pB2.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;		None
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;		None
  6638 ;; Return value:  Size  Location     Type
  6639 ;;		None               void
  6640 ;; Registers used:
  6641 ;;		wreg, status,2
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6651 ;;Total ram usage:        0 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; This function calls:
  6654 ;;		Nothing
  6655 ;; This function is called by:
  6656 ;;		_main
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660                           	psect	text30
  6661  002FEA                     __ptext30:
  6662                           	opt stack 0
  6663  002FEA                     _Init_TRIS:
  6664                           	opt stack 30
  6665                           
  6666                           ;Lab6pB2.c: 137: TRISA = 0x0F;
  6667                           
  6668                           ;incstack = 0
  6669  002FEA  0E0F               	movlw	15
  6670  002FEC  6E92               	movwf	3986,c	;volatile
  6671                           
  6672                           ;Lab6pB2.c: 138: TRISB = 0x00;
  6673  002FEE  0E00               	movlw	0
  6674  002FF0  6E93               	movwf	3987,c	;volatile
  6675                           
  6676                           ;Lab6pB2.c: 139: TRISC = 0x00;
  6677  002FF2  0E00               	movlw	0
  6678  002FF4  6E94               	movwf	3988,c	;volatile
  6679                           
  6680                           ;Lab6pB2.c: 140: TRISD = 0x00;
  6681  002FF6  0E00               	movlw	0
  6682  002FF8  6E95               	movwf	3989,c	;volatile
  6683                           
  6684                           ;Lab6pB2.c: 141: TRISE = 0x00;
  6685  002FFA  0E00               	movlw	0
  6686  002FFC  6E96               	movwf	3990,c	;volatile
  6687  002FFE  0012               	return		;funcret
  6688  003000                     __end_of_Init_TRIS:
  6689                           	opt stack 0
  6690                           tblptru	equ	0xFF8
  6691                           tblptrh	equ	0xFF7
  6692                           tblptrl	equ	0xFF6
  6693                           tablat	equ	0xFF5
  6694                           prodh	equ	0xFF4
  6695                           prodl	equ	0xFF3
  6696                           intcon	equ	0xFF2
  6697                           postinc0	equ	0xFEE
  6698                           wreg	equ	0xFE8
  6699                           postdec1	equ	0xFE5
  6700                           fsr1l	equ	0xFE1
  6701                           indf2	equ	0xFDF
  6702                           postinc2	equ	0xFDE
  6703                           postdec2	equ	0xFDD
  6704                           fsr2h	equ	0xFDA
  6705                           fsr2l	equ	0xFD9
  6706                           status	equ	0xFD8
  6707                           
  6708 ;; *************** function _Init_ADC *****************
  6709 ;; Defined at:
  6710 ;;		line 128 in file "Lab6pB2.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;		None
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;		None
  6715 ;; Return value:  Size  Location     Type
  6716 ;;		None               void
  6717 ;; Registers used:
  6718 ;;		wreg, status,2
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6728 ;;Total ram usage:        0 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; This function calls:
  6731 ;;		Nothing
  6732 ;; This function is called by:
  6733 ;;		_main
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           	psect	text31
  6738  003034                     __ptext31:
  6739                           	opt stack 0
  6740  003034                     _Init_ADC:
  6741                           	opt stack 30
  6742                           
  6743                           ;Lab6pB2.c: 130: ADCON0 = 0b00000001;
  6744                           
  6745                           ;incstack = 0
  6746  003034  0E01               	movlw	1
  6747  003036  6EC2               	movwf	4034,c	;volatile
  6748                           
  6749                           ;Lab6pB2.c: 131: ADCON1 = 0b00011011;
  6750  003038  0E1B               	movlw	27
  6751  00303A  6EC1               	movwf	4033,c	;volatile
  6752                           
  6753                           ;Lab6pB2.c: 132: ADCON2 = 0b11001001;
  6754  00303C  0EC9               	movlw	201
  6755  00303E  6EC0               	movwf	4032,c	;volatile
  6756  003040  0012               	return		;funcret
  6757  003042                     __end_of_Init_ADC:
  6758                           	opt stack 0
  6759                           tblptru	equ	0xFF8
  6760                           tblptrh	equ	0xFF7
  6761                           tblptrl	equ	0xFF6
  6762                           tablat	equ	0xFF5
  6763                           prodh	equ	0xFF4
  6764                           prodl	equ	0xFF3
  6765                           intcon	equ	0xFF2
  6766                           postinc0	equ	0xFEE
  6767                           wreg	equ	0xFE8
  6768                           postdec1	equ	0xFE5
  6769                           fsr1l	equ	0xFE1
  6770                           indf2	equ	0xFDF
  6771                           postinc2	equ	0xFDE
  6772                           postdec2	equ	0xFDD
  6773                           fsr2h	equ	0xFDA
  6774                           fsr2l	equ	0xFD9
  6775                           status	equ	0xFD8
  6776                           
  6777 ;; *************** function _Deactivate_Buzzer *****************
  6778 ;; Defined at:
  6779 ;;		line 198 in file "Lab6pB2.c"
  6780 ;; Parameters:    Size  Location     Type
  6781 ;;		None
  6782 ;; Auto vars:     Size  Location     Type
  6783 ;;		None
  6784 ;; Return value:  Size  Location     Type
  6785 ;;		None               void
  6786 ;; Registers used:
  6787 ;;		wreg, status,2
  6788 ;; Tracked objects:
  6789 ;;		On entry : 0/0
  6790 ;;		On exit  : 0/0
  6791 ;;		Unchanged: 0/0
  6792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6797 ;;Total ram usage:        0 bytes
  6798 ;; Hardware stack levels used:    1
  6799 ;; This function calls:
  6800 ;;		Nothing
  6801 ;; This function is called by:
  6802 ;;		_main
  6803 ;; This function uses a non-reentrant model
  6804 ;;
  6805                           
  6806                           	psect	text32
  6807  00306A                     __ptext32:
  6808                           	opt stack 0
  6809  00306A                     _Deactivate_Buzzer:
  6810                           	opt stack 30
  6811                           
  6812                           ;Lab6pB2.c: 200: CCP2CON = 0x0;
  6813                           
  6814                           ;incstack = 0
  6815  00306A  0E00               	movlw	0
  6816  00306C  6EBA               	movwf	4026,c	;volatile
  6817                           
  6818                           ;Lab6pB2.c: 201: PORTBbits.RB3 = 0;
  6819  00306E  9681               	bcf	3969,3,c	;volatile
  6820  003070  0012               	return		;funcret
  6821  003072                     __end_of_Deactivate_Buzzer:
  6822                           	opt stack 0
  6823                           tblptru	equ	0xFF8
  6824                           tblptrh	equ	0xFF7
  6825                           tblptrl	equ	0xFF6
  6826                           tablat	equ	0xFF5
  6827                           prodh	equ	0xFF4
  6828                           prodl	equ	0xFF3
  6829                           intcon	equ	0xFF2
  6830                           postinc0	equ	0xFEE
  6831                           wreg	equ	0xFE8
  6832                           postdec1	equ	0xFE5
  6833                           fsr1l	equ	0xFE1
  6834                           indf2	equ	0xFDF
  6835                           postinc2	equ	0xFDE
  6836                           postdec2	equ	0xFDD
  6837                           fsr2h	equ	0xFDA
  6838                           fsr2l	equ	0xFD9
  6839                           status	equ	0xFD8
  6840                           
  6841 ;; *************** function _D1_Yellow *****************
  6842 ;; Defined at:
  6843 ;;		line 245 in file "Lab6pB2.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;		None
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;		None
  6848 ;; Return value:  Size  Location     Type
  6849 ;;		None               void
  6850 ;; Registers used:
  6851 ;;		None
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6861 ;;Total ram usage:        0 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; This function calls:
  6864 ;;		Nothing
  6865 ;; This function is called by:
  6866 ;;		_main
  6867 ;; This function uses a non-reentrant model
  6868 ;;
  6869                           
  6870                           	psect	text33
  6871  003072                     __ptext33:
  6872                           	opt stack 0
  6873  003072                     _D1_Yellow:
  6874                           	opt stack 30
  6875                           
  6876                           ;Lab6pB2.c: 247: PORTBbits.RB4 = 1;
  6877                           
  6878                           ;incstack = 0
  6879  003072  8881               	bsf	3969,4,c	;volatile
  6880                           
  6881                           ;Lab6pB2.c: 248: PORTBbits.RB5 = 1;
  6882  003074  8A81               	bsf	3969,5,c	;volatile
  6883                           
  6884                           ;Lab6pB2.c: 249: PORTBbits.RB6 = 0;
  6885  003076  9C81               	bcf	3969,6,c	;volatile
  6886  003078  0012               	return		;funcret
  6887  00307A                     __end_of_D1_Yellow:
  6888                           	opt stack 0
  6889                           tblptru	equ	0xFF8
  6890                           tblptrh	equ	0xFF7
  6891                           tblptrl	equ	0xFF6
  6892                           tablat	equ	0xFF5
  6893                           prodh	equ	0xFF4
  6894                           prodl	equ	0xFF3
  6895                           intcon	equ	0xFF2
  6896                           postinc0	equ	0xFEE
  6897                           wreg	equ	0xFE8
  6898                           postdec1	equ	0xFE5
  6899                           fsr1l	equ	0xFE1
  6900                           indf2	equ	0xFDF
  6901                           postinc2	equ	0xFDE
  6902                           postdec2	equ	0xFDD
  6903                           fsr2h	equ	0xFDA
  6904                           fsr2l	equ	0xFD9
  6905                           status	equ	0xFD8
  6906                           
  6907 ;; *************** function _BCD_Upper_Digit *****************
  6908 ;; Defined at:
  6909 ;;		line 205 in file "Lab6pB2.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;  digit           1    wreg     unsigned char 
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;  digit           1    1[COMRAM] unsigned char 
  6914 ;;  Port_E          1    0[COMRAM] unsigned char 
  6915 ;; Return value:  Size  Location     Type
  6916 ;;		None               void
  6917 ;; Registers used:
  6918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6919 ;; Tracked objects:
  6920 ;;		On entry : 0/0
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6925 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6927 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6928 ;;Total ram usage:        2 bytes
  6929 ;; Hardware stack levels used:    1
  6930 ;; This function calls:
  6931 ;;		Nothing
  6932 ;; This function is called by:
  6933 ;;		_main
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           	psect	text34
  6938  002EB2                     __ptext34:
  6939                           	opt stack 0
  6940  002EB2                     _BCD_Upper_Digit:
  6941                           	opt stack 30
  6942                           
  6943                           ;incstack = 0
  6944                           ;BCD_Upper_Digit@digit stored from wreg
  6945  002EB2  6E02               	movwf	BCD_Upper_Digit@digit,c
  6946                           
  6947                           ;Lab6pB2.c: 207: PORTC = array[digit];
  6948  002EB4  5002               	movf	BCD_Upper_Digit@digit,w,c
  6949  002EB6  0D01               	mullw	1
  6950  002EB8  0E80               	movlw	low _array
  6951  002EBA  24F3               	addwf	prodl,w,c
  6952  002EBC  6ED9               	movwf	fsr2l,c
  6953  002EBE  0E00               	movlw	high _array
  6954  002EC0  20F4               	addwfc	prodh,w,c
  6955  002EC2  6EDA               	movwf	fsr2h,c
  6956  002EC4  50DF               	movf	indf2,w,c
  6957  002EC6  6E82               	movwf	3970,c	;volatile
  6958                           
  6959                           ;Lab6pB2.c: 208: char Port_E = array[digit] & 0x40;
  6960  002EC8  5002               	movf	BCD_Upper_Digit@digit,w,c
  6961  002ECA  0D01               	mullw	1
  6962  002ECC  0E80               	movlw	low _array
  6963  002ECE  24F3               	addwf	prodl,w,c
  6964  002ED0  6ED9               	movwf	fsr2l,c
  6965  002ED2  0E00               	movlw	high _array
  6966  002ED4  20F4               	addwfc	prodh,w,c
  6967  002ED6  6EDA               	movwf	fsr2h,c
  6968  002ED8  50DF               	movf	indf2,w,c
  6969  002EDA  0B40               	andlw	64
  6970  002EDC  6E01               	movwf	BCD_Upper_Digit@Port_E,c
  6971                           
  6972                           ;Lab6pB2.c: 209: if (Port_E == 0) PORTE = 0x00;
  6973  002EDE  5001               	movf	BCD_Upper_Digit@Port_E,w,c
  6974  002EE0  A4D8               	btfss	status,2,c
  6975  002EE2  D002               	goto	l2860
  6976  002EE4  0E00               	movlw	0
  6977  002EE6  D001               	goto	L10
  6978  002EE8                     l2860:
  6979                           
  6980                           ;Lab6pB2.c: 210: else PORTE = 0x01;
  6981  002EE8  0E01               	movlw	1
  6982  002EEA                     L10:
  6983  002EEA  6E84               	movwf	3972,c	;volatile
  6984  002EEC  D000               	goto	l149
  6985  002EEE                     l149:
  6986  002EEE  0012               	return		;funcret
  6987  002EF0                     __end_of_BCD_Upper_Digit:
  6988                           	opt stack 0
  6989                           tblptru	equ	0xFF8
  6990                           tblptrh	equ	0xFF7
  6991                           tblptrl	equ	0xFF6
  6992                           tablat	equ	0xFF5
  6993                           prodh	equ	0xFF4
  6994                           prodl	equ	0xFF3
  6995                           intcon	equ	0xFF2
  6996                           postinc0	equ	0xFEE
  6997                           wreg	equ	0xFE8
  6998                           postdec1	equ	0xFE5
  6999                           fsr1l	equ	0xFE1
  7000                           indf2	equ	0xFDF
  7001                           postinc2	equ	0xFDE
  7002                           postdec2	equ	0xFDD
  7003                           fsr2h	equ	0xFDA
  7004                           fsr2l	equ	0xFD9
  7005                           status	equ	0xFD8
  7006                           
  7007 ;; *************** function _BCD_Lower_Digit *****************
  7008 ;; Defined at:
  7009 ;;		line 213 in file "Lab6pB2.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;  digit           1    wreg     unsigned char 
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;  digit           1    0[COMRAM] unsigned char 
  7014 ;; Return value:  Size  Location     Type
  7015 ;;		None               void
  7016 ;; Registers used:
  7017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7024 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7026 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7027 ;;Total ram usage:        1 bytes
  7028 ;; Hardware stack levels used:    1
  7029 ;; This function calls:
  7030 ;;		Nothing
  7031 ;; This function is called by:
  7032 ;;		_main
  7033 ;; This function uses a non-reentrant model
  7034 ;;
  7035                           
  7036                           	psect	text35
  7037  002FB8                     __ptext35:
  7038                           	opt stack 0
  7039  002FB8                     _BCD_Lower_Digit:
  7040                           	opt stack 30
  7041                           
  7042                           ;incstack = 0
  7043                           ;BCD_Lower_Digit@digit stored from wreg
  7044  002FB8  6E01               	movwf	BCD_Lower_Digit@digit,c
  7045                           
  7046                           ;Lab6pB2.c: 215: PORTD = array[digit];
  7047  002FBA  5001               	movf	BCD_Lower_Digit@digit,w,c
  7048  002FBC  0D01               	mullw	1
  7049  002FBE  0E80               	movlw	low _array
  7050  002FC0  24F3               	addwf	prodl,w,c
  7051  002FC2  6ED9               	movwf	fsr2l,c
  7052  002FC4  0E00               	movlw	high _array
  7053  002FC6  20F4               	addwfc	prodh,w,c
  7054  002FC8  6EDA               	movwf	fsr2h,c
  7055  002FCA  50DF               	movf	indf2,w,c
  7056  002FCC  6E83               	movwf	3971,c	;volatile
  7057                           
  7058                           ;Lab6pB2.c: 216: PORTDbits.RD7 = 1;
  7059  002FCE  8E83               	bsf	3971,7,c	;volatile
  7060  002FD0  0012               	return		;funcret
  7061  002FD2                     __end_of_BCD_Lower_Digit:
  7062                           	opt stack 0
  7063                           tblptru	equ	0xFF8
  7064                           tblptrh	equ	0xFF7
  7065                           tblptrl	equ	0xFF6
  7066                           tablat	equ	0xFF5
  7067                           prodh	equ	0xFF4
  7068                           prodl	equ	0xFF3
  7069                           intcon	equ	0xFF2
  7070                           postinc0	equ	0xFEE
  7071                           wreg	equ	0xFE8
  7072                           postdec1	equ	0xFE5
  7073                           fsr1l	equ	0xFE1
  7074                           indf2	equ	0xFDF
  7075                           postinc2	equ	0xFDE
  7076                           postdec2	equ	0xFDD
  7077                           fsr2h	equ	0xFDA
  7078                           fsr2l	equ	0xFD9
  7079                           status	equ	0xFD8
  7080                           
  7081 ;; *************** function _BCD_DP *****************
  7082 ;; Defined at:
  7083 ;;		line 219 in file "Lab6pB2.c"
  7084 ;; Parameters:    Size  Location     Type
  7085 ;;  dp              1    wreg     unsigned char 
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;  dp              1    1[COMRAM] unsigned char 
  7088 ;; Return value:  Size  Location     Type
  7089 ;;		None               void
  7090 ;; Registers used:
  7091 ;;		wreg, status,2, status,0
  7092 ;; Tracked objects:
  7093 ;;		On entry : 0/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7098 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7099 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7100 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7101 ;;Total ram usage:        2 bytes
  7102 ;; Hardware stack levels used:    1
  7103 ;; This function calls:
  7104 ;;		Nothing
  7105 ;; This function is called by:
  7106 ;;		_main
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           	psect	text36
  7111  002FD2                     __ptext36:
  7112                           	opt stack 0
  7113  002FD2                     _BCD_DP:
  7114                           	opt stack 30
  7115                           
  7116                           ;incstack = 0
  7117                           ;BCD_DP@dp stored from wreg
  7118  002FD2  6E02               	movwf	BCD_DP@dp,c
  7119                           
  7120                           ;Lab6pB2.c: 221: PORTDbits.RD7 = ~dp;
  7121  002FD4  5002               	movf	BCD_DP@dp,w,c
  7122  002FD6  0AFF               	xorlw	255
  7123  002FD8  6E01               	movwf	??_BCD_DP& (0+255),c
  7124  002FDA  3201               	rrcf	??_BCD_DP,f,c
  7125  002FDC  3201               	rrcf	??_BCD_DP,f,c
  7126  002FDE  5083               	movf	3971,w,c	;volatile
  7127  002FE0  1801               	xorwf	??_BCD_DP,w,c
  7128  002FE2  0B7F               	andlw	-129
  7129  002FE4  1801               	xorwf	??_BCD_DP,w,c
  7130  002FE6  6E83               	movwf	3971,c	;volatile
  7131  002FE8  0012               	return		;funcret
  7132  002FEA                     __end_of_BCD_DP:
  7133                           	opt stack 0
  7134                           tblptru	equ	0xFF8
  7135                           tblptrh	equ	0xFF7
  7136                           tblptrl	equ	0xFF6
  7137                           tablat	equ	0xFF5
  7138                           prodh	equ	0xFF4
  7139                           prodl	equ	0xFF3
  7140                           intcon	equ	0xFF2
  7141                           postinc0	equ	0xFEE
  7142                           wreg	equ	0xFE8
  7143                           postdec1	equ	0xFE5
  7144                           fsr1l	equ	0xFE1
  7145                           indf2	equ	0xFDF
  7146                           postinc2	equ	0xFDE
  7147                           postdec2	equ	0xFDD
  7148                           fsr2h	equ	0xFDA
  7149                           fsr2l	equ	0xFD9
  7150                           status	equ	0xFD8
  7151                           
  7152 ;; *************** function _Activate_Buzzer *****************
  7153 ;; Defined at:
  7154 ;;		line 190 in file "Lab6pB2.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;		None
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;		None
  7159 ;; Return value:  Size  Location     Type
  7160 ;;		None               void
  7161 ;; Registers used:
  7162 ;;		wreg, status,2
  7163 ;; Tracked objects:
  7164 ;;		On entry : 0/0
  7165 ;;		On exit  : 0/0
  7166 ;;		Unchanged: 0/0
  7167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7172 ;;Total ram usage:        0 bytes
  7173 ;; Hardware stack levels used:    1
  7174 ;; This function calls:
  7175 ;;		Nothing
  7176 ;; This function is called by:
  7177 ;;		_main
  7178 ;; This function uses a non-reentrant model
  7179 ;;
  7180                           
  7181                           	psect	text37
  7182  003014                     __ptext37:
  7183                           	opt stack 0
  7184  003014                     _Activate_Buzzer:
  7185                           	opt stack 30
  7186                           
  7187                           ;Lab6pB2.c: 192: PR2 = 0b11111001 ;
  7188                           
  7189                           ;incstack = 0
  7190  003014  0EF9               	movlw	249
  7191  003016  6ECB               	movwf	4043,c	;volatile
  7192                           
  7193                           ;Lab6pB2.c: 193: T2CON = 0b00000101 ;
  7194  003018  0E05               	movlw	5
  7195  00301A  6ECA               	movwf	4042,c	;volatile
  7196                           
  7197                           ;Lab6pB2.c: 194: CCPR2L = 0b01001010 ;
  7198  00301C  0E4A               	movlw	74
  7199  00301E  6EBB               	movwf	4027,c	;volatile
  7200                           
  7201                           ;Lab6pB2.c: 195: CCP2CON = 0b00111100 ;
  7202  003020  0E3C               	movlw	60
  7203  003022  6EBA               	movwf	4026,c	;volatile
  7204  003024  0012               	return		;funcret
  7205  003026                     __end_of_Activate_Buzzer:
  7206                           	opt stack 0
  7207                           tblptru	equ	0xFF8
  7208                           tblptrh	equ	0xFF7
  7209                           tblptrl	equ	0xFF6
  7210                           tablat	equ	0xFF5
  7211                           prodh	equ	0xFF4
  7212                           prodl	equ	0xFF3
  7213                           intcon	equ	0xFF2
  7214                           postinc0	equ	0xFEE
  7215                           wreg	equ	0xFE8
  7216                           postdec1	equ	0xFE5
  7217                           fsr1l	equ	0xFE1
  7218                           indf2	equ	0xFDF
  7219                           postinc2	equ	0xFDE
  7220                           postdec2	equ	0xFDD
  7221                           fsr2h	equ	0xFDA
  7222                           fsr2l	equ	0xFD9
  7223                           status	equ	0xFD8
  7224                           tblptru	equ	0xFF8
  7225                           tblptrh	equ	0xFF7
  7226                           tblptrl	equ	0xFF6
  7227                           tablat	equ	0xFF5
  7228                           prodh	equ	0xFF4
  7229                           prodl	equ	0xFF3
  7230                           intcon	equ	0xFF2
  7231                           postinc0	equ	0xFEE
  7232                           wreg	equ	0xFE8
  7233                           postdec1	equ	0xFE5
  7234                           fsr1l	equ	0xFE1
  7235                           indf2	equ	0xFDF
  7236                           postinc2	equ	0xFDE
  7237                           postdec2	equ	0xFDD
  7238                           fsr2h	equ	0xFDA
  7239                           fsr2l	equ	0xFD9
  7240                           status	equ	0xFD8
  7241                           
  7242                           	psect	rparam
  7243  0000                     tblptru	equ	0xFF8
  7244                           tblptrh	equ	0xFF7
  7245                           tblptrl	equ	0xFF6
  7246                           tablat	equ	0xFF5
  7247                           prodh	equ	0xFF4
  7248                           prodl	equ	0xFF3
  7249                           intcon	equ	0xFF2
  7250                           postinc0	equ	0xFEE
  7251                           wreg	equ	0xFE8
  7252                           postdec1	equ	0xFE5
  7253                           fsr1l	equ	0xFE1
  7254                           indf2	equ	0xFDF
  7255                           postinc2	equ	0xFDE
  7256                           postdec2	equ	0xFDD
  7257                           fsr2h	equ	0xFDA
  7258                           fsr2l	equ	0xFD9
  7259                           status	equ	0xFD8


Data Sizes:
    Strings     77
    Constant    118
    Data        18
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    118     126
    BANK0           128      0      10
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          244      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_3(CODE[26]), STR_2(CODE[22]), STR_1(CODE[29]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _init_UART->_OpenUSART
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    ___almod->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   54373
                                             98 COMRAM    20    20      0
                    _Activate_Buzzer
                             _BCD_DP
                    _BCD_Lower_Digit
                    _BCD_Upper_Digit
                          _D1_Yellow
                  _Deactivate_Buzzer
                           _Init_ADC
                          _Init_TRIS
                 _Select_ADC_Channel
                         _WAIT_1_SEC
                            ___aldiv
                            ___almod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftneg
                            ___fttol
                       _get_full_ADC
                          _init_UART
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              43    37      6   42776
                                             63 COMRAM    35    29      6
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3   10053
                                             35 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    9855
                                             35 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2207
                                             14 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4329
                                             20 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1580
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     431
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     574
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    2242
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     671
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     546
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     508
                                             42 COMRAM    15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3732
                                             57 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3435
                                             45 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     173
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     520
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0     284
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _get_full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2875
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2264
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2109
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___almod                                             10     2      8     552
                                             14 COMRAM    10     2      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     940
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _WAIT_1_SEC                                           0     0      0       0
                      _WAIT_HALF_SEC
 ---------------------------------------------------------------------------------
 (2) _WAIT_HALF_SEC                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Select_ADC_Channel                                   1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_TRIS                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Deactivate_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _D1_Yellow                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BCD_Upper_Digit                                      2     2      0      67
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _BCD_Lower_Digit                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BCD_DP                                               2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Activate_Buzzer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Activate_Buzzer
   _BCD_DP
   _BCD_Lower_Digit
   _BCD_Upper_Digit
   _D1_Yellow
   _Deactivate_Buzzer
   _Init_ADC
   _Init_TRIS
   _Select_ADC_Channel
   _WAIT_1_SEC
     _WAIT_HALF_SEC
   ___aldiv
   ___almod
     ___aldiv (ARG)
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftneg (ARG)
     ___ftpack (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftneg
   ___fttol
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _get_full_ADC
   _init_UART
     _OpenUSART
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftneg (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftneg (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EF3      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           F4      0       0      33        0.0%
BANK14              F4      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       A       5        7.8%
BIGRAM_1            80      0       0      37        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     76      7E       1       99.2%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      88       6        0.0%
DATA                 0      0      88       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Oct 18 12:45:27 2022

          main@R_ref_current 006D                 ___awdiv@sign 000C          ___wmul@multiplicand 0011  
         __size_of_D1_Yellow 0008                 ___ftadd@exp1 0039                 ___ftadd@exp2 0038  
               ___ftadd@sign 0037                          l117 302A                          l126 2F58  
                        l230 1C20                          l135 2FB0                          l223 21A8  
                        l129 2F78                          l330 2DA8                          l323 2D80  
                        l251 16C8                          l404 2924                          l332 2DC2  
                        l149 2EEE                          l327 2D9A                          l335 2F52  
                        l328 2D9C                          l417 2AA8                          l329 2DA6  
                        l700 21EE                          l701 236C                          l541 2CE2  
                        l279 155C                          l704 2218                          l528 2B3E  
                        l553 2F2A                          l715 22DA                          l619 2586  
                        l299 1840                          l660 29EA                          l732 2846  
                        l724 22F6                          l628 2576                          l740 247C  
                        l742 23E4                          l671 29C2                          l735 2812  
                        l743 240C                          l824 2C50                          l834 2D42  
                        l764 267E                          l781 2EB0                          l749 246C  
                        l758 2BD4                          l774 2F90                          l854 2E22  
                        l785 2764            main@R_ref_voltage 0065                          _PR2 000FCB  
          _Deactivate_Buzzer 306A                 ___awmod@sign 0006                          prod 000FF3  
                        wreg 000FE8           ?_Deactivate_Buzzer 0001                 __CFG_LVP$OFF 000000  
               ___ftdiv@cntr 0016                 ___ftdiv@sign 001B                 __CFG_WDT$OFF 000000  
                       l3000 2F06                         l2120 2232                         l2200 2614  
                       l2130 225A                         l2114 2226                         l2210 2642  
                       l2140 2296                         l2108 21FC                         l2204 262A  
                       l3020 1C44                         l2070 2972                         l2062 2936  
                       l2150 22CE                         l2142 229E                         l2214 2658  
                       l2206 2630                         l2312 2D78                         l2304 2D66  
                       l2136 227E                         l2240 2AF2                         l2232 2AD2  
                       l2090 29DC                         l2074 298A                         l2066 2946  
                       l2138 228A                         l2250 2B18                         l2242 2AFA  
                       l2226 2AC0                         l2402 1B4A                         l2084 29CA  
                       l2076 29AA                         l2068 2952                         l2324 2D92  
                       l2316 2D84                         l2308 2D70                         l2156 2314  
                       l2148 22C2                         l3052 1ED4                         l3044 1E08  
                       l2078 29B6                         l2166 2346                         l2502 2514  
                       l2238 2AE8                         l2254 2B24                         l2270 2C78  
                       l2182 25CE                         l3046 1E20                         l3038 1D86  
                       l2600 2752                         l2520 254E                         l2424 23AA  
                       l2280 2C9E                         l2176 25A6                         l2408 1BFC  
                       l3072 1F3A                         l3056 1EF2                         l2610 2BF8  
                       l2514 2538                         l2506 2524                         l2418 238C  
                       l2258 2B34                         l2282 2CA6                         l2290 2CC8  
                       l2274 2C86                         l2178 25C0                         l2370 2168  
                       l2362 20A4                         l3074 1F40                         l3066 1F1C  
                       l2540 2B72                         l2532 2E86                         l2612 2C06  
                       l2524 2562                         l2460 2444                         l2196 2602  
                       l3068 1F30                         l2550 2BD0                         l2622 2C40  
                       l2614 2C0E                         l2630 2CF6                         l2526 2570  
                       l2518 2548                         l2454 242E                         l2446 241A  
                       l2294 2CD8                         l2286 2CBC                         l2278 2C94  
                       l2390 1A16                         l2710 1210                         l2544 2BA4  
                       l2632 2D04                         l2480 249E                         l2464 2458  
                       l2384 196E                         l2634 2D0C                         l2474 248E  
                       l2466 2466                         l2458 243E                         l2394 1A26  
                       l2810 16BC                         l2722 129A                         l2564 269E  
                       l2644 2DCA                         l2820 170C                         l2804 16A2  
                       l2740 1350                         l2724 12AA                         l2902 28FA  
                       l2582 26F8                         l2638 2D32                         l2646 2DD8  
                       l2494 24E2                         l2806 16AE                         l2734 1322  
                       l2726 12DA                         l2718 1274                         l2670 10E0  
                       l2592 2722                         l2840 176A                         l2832 1736  
                       l2816 16E8                         l2752 1434                         l2744 1392  
                       l2728 12EA                         l2680 112C                         l2672 10EC  
                       l2906 2912                         l2930 2A48                         l2922 2A20  
                       l2594 2730                         l2586 2708                         l2850 1810  
                       l2826 1726                         l2770 1494                         l2762 1474  
                       l2754 1438                         l2746 13C0                         l2738 1346  
                       l2674 10F0                         l2666 10D0                         l2860 2EE8  
                       l2588 270E                         l2596 273A                         l2844 1786  
                       l2836 1766                         l2828 172A                         l2748 13CE  
                       l2852 1824                         l2942 2A96                         l2934 2A6E  
                       l2926 2A32                         l2918 2A0A                         l2846 1792  
                       l2782 1538                         l2766 1478                         l2758 1444  
                       l2694 117E                         l2678 10F8                         l2880 2880  
                       l2928 2A40                         l2952 2784                         l2784 1546  
                       l2776 151E                         l2890 28B8                         l2874 2866  
                       l2938 2A7E                         l2954 279E                         l2794 157C  
                       l2778 152A                         l2788 1562                         l2886 28A2  
                       l2958 27AC                         l2798 15CC                         l2888 28B0  
                       l2898 28EA                         l2978 27EC                         l2988 2820  
                       STR_1 1077                         STR_2 10AE                         STR_3 1094  
                       u2251 237E                         u3150 1EEC                         u3071 2776  
                       u2271 239C                         u3160 1F0A                         u3091 2794  
                       u2461 2690                         u1911 25B6                         u2480 26BC  
                       u1681 21BA                         u1691 21CE                 printf@tmpval 005B  
                       u2820 1556                         u2660 11B6                         u2485 26B4  
                       u2665 11AC                         u1891 2598                         _TRMT 007D61  
        ??_Deactivate_Buzzer 0001                         _main 1C22                 ___ftpack@arg 0001  
               ___ftpack@exp 0004               ??_get_full_ADC 0003                         fsr2h 000FDA  
                       fsr1l 000FE1                         indf2 000FDF                         fsr2l 000FD9  
                       prodh 000FF4                         prodl 000FF3                         start 0000  
               ___ftmul@cntr 0022                 ___param_bank 000010                 ___ftmul@sign 0023  
               ___fttol@exp1 0039                 ___fttol@lval 0035                  ?_WAIT_1_SEC 0001  
  __end_of_Deactivate_Buzzer 3072              __end_of___aldiv 2926              __end_of___almod 2AAA  
                      ?_main 0001              __end_of___awdiv 2B40              __end_of___ftadd 236E  
            __end_of___awmod 2CE4              __end_of___ftdiv 2848              __end_of___ftneg 2F9E  
            __end_of___lldiv 2C62              __end_of___ftmul 2680                        _T0CON 000FD5  
            ___awdiv@divisor 0009              __end_of___llmod 2D54              __end_of___ftsub 2EB2  
            __end_of___fttol 2766                        _T2CON 000FCA              ___awdiv@counter 000B  
                      _RCSTA 000FAB                        _TMR0H 000FD7                        _TMR0L 000FD6  
                      _SPBRG 000FAF                        _PORTB 000F81                        _PORTC 000F82  
                      _PORTD 000F83                        _PORTE 000F84                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                        _TXREG 000FAD                        _TXSTA 000FAC  
               ___lltoft@exp 0011                ___awtoft@sign 000C              __end_of_dpowers 1029  
                      _array 0080                        _scale 1842                ___ftpack@sign 0005  
                      _putch 3026                 main@num_step 0068               __CFG_BOREN$OFF 000000  
                      tablat 000FF5            __end_of_D1_Yellow 307A                        status 000FD8  
   __size_of_BCD_Upper_Digit 003E              __initialization 2E24        __end_of_WAIT_HALF_SEC 2FB8  
               __end_of_main 1F66             __end_of_Init_ADC 3042            ??_BCD_Lower_Digit 0001  
                     ??_main 0063                ___fttol@sign1 0034                __activetblptr 000002  
       __size_of__tdiv_to_l_ 0110                       _ADCON0 000FC2                       _ADCON1 000FC1  
                     _ADCON2 000FC0                       _BCD_DP 2FD2             ___llmod@dividend 000E  
                     ?_scale 0024                       _ADRESH 000FC4                       _ADRESL 000FC3  
                     _CCPR2L 000FBB             ___awdiv@dividend 0007             __end_of___awtoft 2F2C  
                     ?_putch 0001             __end_of___ftpack 29EC             __end_of___lltoft 2E24  
                     _OSCCON 000FD3           __size_of_Init_TRIS 0016                       _SPBRGH 000FB0  
        __size_of_WAIT_1_SEC 000A             __end_of__powers_ 1077           __size_of_OpenUSART 0070  
                     ___ftge 2B40                    ??___aldiv 0009                    ??___almod 0017  
   __size_of_Activate_Buzzer 0012                       ___wmul 2F2C                    ??___awdiv 000B  
                  ??___ftadd 0034                    ??___awmod 0005                    ??___ftdiv 0013  
                  ??___ftneg 0004                    ??___lldiv 0009                    ??___ftmul 001B  
                  ??___llmod 0016                    ??___ftsub 0040                    ??___fttol 002F  
                     _fround 1F66             ___awdiv@quotient 000D              ___awmod@divisor 0003  
 __size_of_Deactivate_Buzzer 0008              ___awmod@counter 0005                       _printf 10C6  
      ___ftmul@f3_as_product 001F         __end_of_get_full_ADC 2F7A                 __pdataCOMRAM 0077  
               __mediumconst 0000                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                       putch@c 0001                main@voltage_v 006A  
                 __accesstop 0080      __end_of__initialization 2E64                   ___ftadd@f1 002E  
                 ___ftadd@f2 0031                   ___ftge@ff1 0001                   ___ftge@ff2 0004  
              ___rparam_used 000001                   ___ftdiv@f1 000D                   ___ftdiv@f2 0010  
                 ___ftdiv@f3 0017                   ___ftneg@f1 0001                   ___awtoft@c 0009  
                 ___ftmul@f1 0015                   ___ftmul@f2 0018                   ___ftsub@f1 003A  
                 ___ftsub@f2 003D                   ___fttol@f1 002B               __pcstackCOMRAM 0001  
               __pidataBANK0 304E                   ___lltoft@c 0009            ??_BCD_Upper_Digit 0001  
              __end_of_scale 1C22                __end_of_putch 3034            __end_of_Init_TRIS 3000  
                 __div_to_l_ 247E            __end_of_OpenUSART 2DC4              __div_to_l_@exp1 000C  
            __div_to_l_@cntr 000B                      ?_BCD_DP 0001                      ??_scale 0027  
            __div_to_l_@quot 0007                      ??_putch 0001                    ?_Init_ADC 0001  
         __size_of_init_UART 0014   __end_of_Select_ADC_Channel 304E                __div_to_l_@f1 0001  
              __div_to_l_@f2 0004           __CFG_CCP2MX$PORTBE 000000                      ?___ftge 0001  
                    ?___wmul 000F                      _CCP2CON 000FBA                      ?_fround 0024  
               ??_WAIT_1_SEC 0001                    ?___awtoft 0009                    ?___ftpack 0001  
                    ?_printf 0040    Select_ADC_Channel@channel 0001                    ?___lltoft 0009  
          ??_Activate_Buzzer 0001              __size_of_BCD_DP 0018                   ??_Init_ADC 0001  
            _BCD_Lower_Digit 2FB8           __end_of_WAIT_1_SEC 3062            __end_of__npowers_ 1050  
                    __Hparam 0000                   _scale$1415 0027                      __Lparam 0000  
                  _D1_Yellow 3072                      ___aldiv 2848                      ___almod 29EC  
            __size_of___ftge 0096                      ___awdiv 2AAA                      ___ftadd 21AA  
                    ___awmod 2C62                      ___ftdiv 2766                      ___ftneg 2F7A  
                    ___lldiv 2BD6              __size_of___wmul 0028                      ___ftmul 2588  
                    ___llmod 2CE4                      ___ftsub 2E6E                      ___fttol 2680  
      __size_of_get_full_ADC 0026                 __psmallconst 1000                      __pcinit 2E24  
                 ??___awtoft 000C                   ??___ftpack 0006              __size_of_fround 0244  
                    __ramtop 1000                   ??___lltoft 000D                      __ptext0 1C22  
                    __ptext1 10C6                      __ptext2 1842                      __ptext3 3026  
                    __ptext4 1F66                      __ptext5 2F2C                      __ptext6 2588  
                    __ptext7 2C62                      __ptext8 2AAA                      __ptext9 236E  
            __size_of_printf 077C            __end_of_init_UART 3014                    _T0CONbits 000FD5  
                ?__div_to_l_ 0001                      _dpowers 1001             ___awmod@dividend 0001  
           ___aldiv@dividend 0001         end_of_initialization 2E64         BCD_Lower_Digit@digit 0001  
              __Lmediumconst 0000                 _get_full_ADC 2F54              ___lldiv@divisor 0005  
            ___lldiv@counter 000D                   ?_D1_Yellow 0001                    _RCSTAbits 000FAB  
                    printf@c 0062                      printf@f 0040             ___aldiv@quotient 000B  
                    postdec1 000FE5                      postdec2 000FDD                      postinc0 000FEE  
                    postinc2 000FDE               __tdiv_to_l_@f1 0001               __tdiv_to_l_@f2 0004  
              ??__tdiv_to_l_ 0007                    _PORTBbits 000F81                    _PORTDbits 000F83  
                  _TRISCbits 000F94      __end_of_BCD_Lower_Digit 2FD2                   main@R_test 0073  
     __size_of_WAIT_HALF_SEC 001A               __end_of_BCD_DP 2FEA              _BCD_Upper_Digit 2EB2  
                ___ftdiv@exp 001A                    _TXSTAbits 000FAC           get_full_ADC@result 0005  
        __size_of__div_to_l_ 010A                  ___ftmul@exp 001E               __end_of___ftge 2BD6  
             __end_of___wmul 2F54                __pidataCOMRAM 3062               __end_of_fround 21AA  
             __end_of_printf 1842          start_initialization 2E24             main@R_test_float 0070  
                  _Init_TRIS 2FEA          __end_of__tdiv_to_l_ 247E                     ??_BCD_DP 0001  
                   BCD_DP@dp 0002                    _OpenUSART 2D54              ___llmod@divisor 0012  
           __CFG_OSC$INTIO67 000000            __size_of_Init_ADC 000E              ___llmod@counter 0016  
                ??_D1_Yellow 0001              _Activate_Buzzer 3014                     ??___ftge 0007  
                   ??___wmul 0013                _WAIT_HALF_SEC 2F9E                  __pdataBANK0 0080  
         _Select_ADC_Channel 3042                     ??_fround 0027                     ??_printf 0046  
                 fround@prec 002D            __size_of___awtoft 003C            __size_of___ftpack 00C6  
        ?_Select_ADC_Channel 0001            __size_of___lltoft 0060                   ?_Init_TRIS 0001  
    __end_of_BCD_Upper_Digit 2EF0             ?_BCD_Lower_Digit 0001                   ?_OpenUSART 0001  
       ??_Select_ADC_Channel 0001               ?_WAIT_HALF_SEC 0001                     ?___aldiv 0001  
                   ?___almod 000F                     ?___awdiv 0007                     ?___ftadd 002E  
                   ?___awmod 0001                     ?___ftdiv 000D                     ?___ftneg 0001  
                   ?___lldiv 0001                     ?___ftmul 0015                     ?___llmod 000E  
                   ?___ftsub 003A        BCD_Upper_Digit@Port_E 0001                    __npowers_ 1029  
                   ?___fttol 002B             ___almod@dividend 000F                  __tdiv_to_l_ 236E  
               ??__div_to_l_ 0007                  __smallconst 1000                    _init_UART 3000  
                   _D2_array 0077               __size_of_scale 03E0               __size_of_putch 000E  
            ___aldiv@divisor 0005      __end_of_Activate_Buzzer 3026              ___aldiv@counter 0009  
             ___wmul@product 0013                     _PIE1bits 000F9D                     _PIR1bits 000F9E  
         __end_of__div_to_l_ 2588                   _ADCON0bits 000FC2            ___wmul@multiplier 000F  
                 printf@flag 0051                   printf@fval 005F                   printf@prec 0053  
                ??_Init_TRIS 0001                   ?_init_UART 0001             ?_BCD_Upper_Digit 0001  
                  copy_data0 2E38                    copy_data1 2E58                     _Init_ADC 3034  
                ??_OpenUSART 0003              OpenUSART@config 0003                     __Hrparam 0000  
            ??_WAIT_HALF_SEC 0001                     __Lrparam 0000             __size_of___aldiv 00DE  
           __size_of___almod 00BE             __size_of___awdiv 0096             __size_of___ftadd 01C4  
           __size_of___awmod 0082             __size_of___ftdiv 00E2             __size_of___ftneg 0024  
           __size_of___lldiv 008C             __size_of___ftmul 00F8             __size_of___llmod 0070  
           __size_of___ftsub 0044             __size_of___fttol 00E6                     ___awtoft 2EF0  
                   ___ftpack 2926                  _fround$1413 002A                  _fround$1414 0027  
                   ___lltoft 2DC4                     __ptext10 247E                     __ptext11 2DC4  
                   __ptext20 2D54                     __ptext12 2CE4                     __ptext21 2F54  
                   __ptext13 2BD6                     __ptext30 2FEA                     __ptext22 2766  
                   __ptext14 2680                     __ptext31 3034                     __ptext23 2EF0  
                   __ptext15 2E6E                     __ptext32 306A                     __ptext24 2926  
                   __ptext16 21AA                     __ptext33 3072                     __ptext25 29EC  
                   __ptext17 2F7A                     __ptext34 2EB2                     __ptext26 2848  
                   __ptext18 2B40                     __ptext35 2FB8                     __ptext27 3058  
                   __ptext19 3000                     __ptext36 2FD2                     __ptext28 2F9E  
                   __ptext37 3014                     __ptext29 3042                     __powers_ 1050  
       BCD_Upper_Digit@digit 0002              ___almod@divisor 0013              ___almod@counter 0017  
           ?_Activate_Buzzer 0001                __size_of_main 0344                    printf@exp 0059  
                  printf@val 0055                   _INTCONbits 000FF2               OpenUSART@spbrg 0001  
                ??_init_UART 0004                     scale@scl 002A             __tdiv_to_l_@exp1 000F  
           __tdiv_to_l_@cntr 000E             __tdiv_to_l_@quot 000A             ___lldiv@dividend 0001  
                   printf@ap 004F                   _WAIT_1_SEC 3058                 ?__tdiv_to_l_ 0001  
                _printf$1416 004C             ___lldiv@quotient 0009                 ___aldiv@sign 000A  
               ___almod@sign 0018                ?_get_full_ADC 0001     __size_of_BCD_Lower_Digit 001A  
__size_of_Select_ADC_Channel 000C  
