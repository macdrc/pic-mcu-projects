

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Oct 18 11:54:49 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           	psect	idataCOMRAM
    40  001DAA                     __pidataCOMRAM:
    41                           	opt stack 0
    42                           
    43                           ;initializer for _array
    44  001DAA  40                 	db	64
    45  001DAB  79                 	db	121
    46  001DAC  24                 	db	36
    47  001DAD  30                 	db	48
    48  001DAE  19                 	db	25
    49  001DAF  12                 	db	18
    50  001DB0  02                 	db	2
    51  001DB1  78                 	db	120
    52  001DB2  00                 	db	0
    53  001DB3  10                 	db	16
    54                           
    55                           ;initializer for _D2_array
    56  001DB4  00                 	db	0
    57  001DB5  01                 	db	1
    58  001DB6  02                 	db	2
    59  001DB7  03                 	db	3
    60  001DB8  04                 	db	4
    61  001DB9  05                 	db	5
    62  001DBA  06                 	db	6
    63  001DBB  07                 	db	7
    64                           
    65                           	psect	smallconst
    66  001000                     __psmallconst:
    67                           	opt stack 0
    68  001000  00                 	db	0
    69  001001                     _dpowers:
    70                           	opt stack 0
    71  001001  0001               	dw	1
    72  001003  0000               	dw	0
    73  001005  000A               	dw	10
    74  001007  0000               	dw	0
    75  001009  0064               	dw	100
    76  00100B  0000               	dw	0
    77  00100D  03E8               	dw	1000
    78  00100F  0000               	dw	0
    79  001011  2710               	dw	10000
    80  001013  0000               	dw	0
    81  001015  86A0               	dw	34464
    82  001017  0001               	dw	1
    83  001019  4240               	dw	16960
    84  00101B  000F               	dw	15
    85  00101D  9680               	dw	38528
    86  00101F  0098               	dw	152
    87  001021  E100               	dw	57600
    88  001023  05F5               	dw	1525
    89  001025  CA00               	dw	51712
    90  001027  3B9A               	dw	15258
    91  001029                     __end_of_dpowers:
    92                           	opt stack 0
    93  0000                     _PORTB	set	3969
    94  0000                     _PORTBbits	set	3969
    95  0000                     _PORTC	set	3970
    96  0000                     _PORTD	set	3971
    97  0000                     _PORTDbits	set	3971
    98  0000                     _PORTE	set	3972
    99  0000                     _TRISA	set	3986
   100  0000                     _TRISB	set	3987
   101  0000                     _TRISC	set	3988
   102  0000                     _TRISCbits	set	3988
   103  0000                     _TRISD	set	3989
   104  0000                     _TRISE	set	3990
   105  0000                     _ADCON0	set	4034
   106  0000                     _ADCON0bits	set	4034
   107  0000                     _ADCON1	set	4033
   108  0000                     _ADCON2	set	4032
   109  0000                     _ADRESH	set	4036
   110  0000                     _ADRESL	set	4035
   111  0000                     _CCP2CON	set	4026
   112  0000                     _CCPR2L	set	4027
   113  0000                     _OSCCON	set	4051
   114  0000                     _PIE1bits	set	3997
   115  0000                     _PIR1bits	set	3998
   116  0000                     _PR2	set	4043
   117  0000                     _RCSTA	set	4011
   118  0000                     _RCSTAbits	set	4011
   119  0000                     _SPBRG	set	4015
   120  0000                     _SPBRGH	set	4016
   121  0000                     _T2CON	set	4042
   122  0000                     _TXREG	set	4013
   123  0000                     _TXSTA	set	4012
   124  0000                     _TXSTAbits	set	4012
   125  0000                     _TRMT	set	32097
   126  0000                     _T0CON	set	4053
   127  0000                     _T0CONbits	set	4053
   128  0000                     _TMR0H	set	4055
   129  0000                     _TMR0L	set	4054
   130  0000                     _INTCONbits	set	4082
   131  001029                     STR_1:
   132  001029  54                 	db	84	;'T'
   133  00102A  68                 	db	104	;'h'
   134  00102B  65                 	db	101	;'e'
   135  00102C  20                 	db	32
   136  00102D  52                 	db	82	;'R'
   137  00102E  65                 	db	101	;'e'
   138  00102F  73                 	db	115	;'s'
   139  001030  69                 	db	105	;'i'
   140  001031  73                 	db	115	;'s'
   141  001032  74                 	db	116	;'t'
   142  001033  61                 	db	97	;'a'
   143  001034  6E                 	db	110	;'n'
   144  001035  63                 	db	99	;'c'
   145  001036  65                 	db	101	;'e'
   146  001037  20                 	db	32
   147  001038  69                 	db	105	;'i'
   148  001039  73                 	db	115	;'s'
   149  00103A  20                 	db	32
   150  00103B  25                 	db	37
   151  00103C  6C                 	db	108	;'l'
   152  00103D  69                 	db	105	;'i'
   153  00103E  0D                 	db	13
   154  00103F  0A                 	db	10
   155  001040  0A                 	db	10
   156  001041  0A                 	db	10
   157  001042  00                 	db	0
   158                           
   159                           ; #config settings
   160  001043  00                 	db	0	; dummy byte at the end
   161  0000                     
   162                           	psect	cinit
   163  001CC0                     __pcinit:
   164                           	opt stack 0
   165  001CC0                     start_initialization:
   166                           	opt stack 0
   167  001CC0                     __initialization:
   168                           	opt stack 0
   169                           
   170                           ; Initialize objects allocated to COMRAM (18 bytes)
   171                           ; load TBLPTR registers with __pidataCOMRAM
   172  001CC0  0EAA               	movlw	low __pidataCOMRAM
   173  001CC2  6EF6               	movwf	tblptrl,c
   174  001CC4  0E1D               	movlw	high __pidataCOMRAM
   175  001CC6  6EF7               	movwf	tblptrh,c
   176  001CC8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   177  001CCA  6EF8               	movwf	tblptru,c
   178  001CCC  EE00  F03D         	lfsr	0,__pdataCOMRAM
   179  001CD0  EE10 F012          	lfsr	1,18
   180  001CD4                     copy_data0:
   181  001CD4  0009               	tblrd		*+
   182  001CD6  CFF5 FFEE          	movff	tablat,postinc0
   183  001CDA  50E5               	movf	postdec1,w,c
   184  001CDC  50E1               	movf	fsr1l,w,c
   185  001CDE  E1FA               	bnz	copy_data0
   186  001CE0                     end_of_initialization:
   187                           	opt stack 0
   188  001CE0                     __end_of__initialization:
   189                           	opt stack 0
   190  001CE0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   191  001CE2  6EF8               	movwf	tblptru,c
   192  001CE4  0100               	movlb	0
   193  001CE6  EF22  F008         	goto	_main	;jump to C main() function
   194                           tblptru	equ	0xFF8
   195                           tblptrh	equ	0xFF7
   196                           tblptrl	equ	0xFF6
   197                           tablat	equ	0xFF5
   198                           postinc0	equ	0xFEE
   199                           postdec1	equ	0xFE5
   200                           fsr1l	equ	0xFE1
   201                           
   202                           	psect	dataCOMRAM
   203  00003D                     __pdataCOMRAM:
   204                           	opt stack 0
   205  00003D                     _array:
   206                           	opt stack 0
   207  00003D                     	ds	10
   208  000047                     _D2_array:
   209                           	opt stack 0
   210  000047                     	ds	8
   211                           tblptru	equ	0xFF8
   212                           tblptrh	equ	0xFF7
   213                           tblptrl	equ	0xFF6
   214                           tablat	equ	0xFF5
   215                           postinc0	equ	0xFEE
   216                           postdec1	equ	0xFE5
   217                           fsr1l	equ	0xFE1
   218                           
   219                           	psect	cstackCOMRAM
   220  000001                     __pcstackCOMRAM:
   221                           	opt stack 0
   222  000001                     ??_BCD_DP:
   223  000001                     ?_get_full_ADC:
   224                           	opt stack 0
   225  000001                     ?___ftpack:
   226                           	opt stack 0
   227  000001                     ?___ftneg:
   228                           	opt stack 0
   229  000001                     ?___aldiv:
   230                           	opt stack 0
   231  000001                     ?___fttol:
   232                           	opt stack 0
   233  000001                     ?___lldiv:
   234                           	opt stack 0
   235  000001                     putch@c:
   236                           	opt stack 0
   237  000001                     Select_ADC_Channel@channel:
   238                           	opt stack 0
   239  000001                     BCD_Upper_Digit@Port_E:
   240                           	opt stack 0
   241  000001                     BCD_Lower_Digit@digit:
   242                           	opt stack 0
   243  000001                     OpenUSART@spbrg:
   244                           	opt stack 0
   245  000001                     ___ftpack@arg:
   246                           	opt stack 0
   247  000001                     ___ftneg@f1:
   248                           	opt stack 0
   249  000001                     ___fttol@f1:
   250                           	opt stack 0
   251  000001                     ___aldiv@dividend:
   252                           	opt stack 0
   253  000001                     ___lldiv@dividend:
   254                           	opt stack 0
   255                           
   256                           ; 4 bytes @ 0x0
   257  000001                     	ds	1
   258  000002                     BCD_Upper_Digit@digit:
   259                           	opt stack 0
   260  000002                     BCD_DP@dp:
   261                           	opt stack 0
   262                           
   263                           ; 1 bytes @ 0x1
   264  000002                     	ds	1
   265  000003                     ??_get_full_ADC:
   266  000003                     OpenUSART@config:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0x2
   270  000003                     	ds	1
   271  000004                     ___ftpack@exp:
   272                           	opt stack 0
   273                           
   274                           ; 1 bytes @ 0x3
   275  000004                     	ds	1
   276  000005                     ??___fttol:
   277  000005                     ___ftpack@sign:
   278                           	opt stack 0
   279  000005                     get_full_ADC@result:
   280                           	opt stack 0
   281  000005                     ___aldiv@divisor:
   282                           	opt stack 0
   283  000005                     ___lldiv@divisor:
   284                           	opt stack 0
   285                           
   286                           ; 4 bytes @ 0x4
   287  000005                     	ds	1
   288  000006                     ??___ftpack:
   289                           
   290                           ; 0 bytes @ 0x5
   291  000006                     	ds	3
   292  000009                     ?___ftadd:
   293                           	opt stack 0
   294  000009                     ?___awtoft:
   295                           	opt stack 0
   296  000009                     ___aldiv@counter:
   297                           	opt stack 0
   298  000009                     ___awtoft@c:
   299                           	opt stack 0
   300  000009                     ___ftadd@f1:
   301                           	opt stack 0
   302  000009                     ___lldiv@quotient:
   303                           	opt stack 0
   304                           
   305                           ; 4 bytes @ 0x8
   306  000009                     	ds	1
   307  00000A                     ___aldiv@sign:
   308                           	opt stack 0
   309  00000A                     ___fttol@sign1:
   310                           	opt stack 0
   311                           
   312                           ; 1 bytes @ 0x9
   313  00000A                     	ds	1
   314  00000B                     ___aldiv@quotient:
   315                           	opt stack 0
   316  00000B                     ___fttol@lval:
   317                           	opt stack 0
   318                           
   319                           ; 4 bytes @ 0xA
   320  00000B                     	ds	1
   321  00000C                     ___awtoft@sign:
   322                           	opt stack 0
   323  00000C                     ___ftadd@f2:
   324                           	opt stack 0
   325                           
   326                           ; 3 bytes @ 0xB
   327  00000C                     	ds	1
   328  00000D                     ?___ftdiv:
   329                           	opt stack 0
   330  00000D                     ___lldiv@counter:
   331                           	opt stack 0
   332  00000D                     ___ftdiv@f1:
   333                           	opt stack 0
   334                           
   335                           ; 3 bytes @ 0xC
   336  00000D                     	ds	1
   337  00000E                     ?___llmod:
   338                           	opt stack 0
   339  00000E                     ___llmod@dividend:
   340                           	opt stack 0
   341                           
   342                           ; 4 bytes @ 0xD
   343  00000E                     	ds	1
   344  00000F                     ??___ftadd:
   345  00000F                     ?___almod:
   346                           	opt stack 0
   347  00000F                     ___fttol@exp1:
   348                           	opt stack 0
   349  00000F                     ___almod@dividend:
   350                           	opt stack 0
   351                           
   352                           ; 4 bytes @ 0xE
   353  00000F                     	ds	1
   354  000010                     ___ftdiv@f2:
   355                           	opt stack 0
   356                           
   357                           ; 3 bytes @ 0xF
   358  000010                     	ds	2
   359  000012                     ___ftadd@sign:
   360                           	opt stack 0
   361  000012                     ___llmod@divisor:
   362                           	opt stack 0
   363                           
   364                           ; 4 bytes @ 0x11
   365  000012                     	ds	1
   366  000013                     ??___ftdiv:
   367  000013                     ___ftadd@exp2:
   368                           	opt stack 0
   369  000013                     ___almod@divisor:
   370                           	opt stack 0
   371                           
   372                           ; 4 bytes @ 0x12
   373  000013                     	ds	1
   374  000014                     ___ftadd@exp1:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0x13
   378  000014                     	ds	2
   379  000016                     ___ftdiv@cntr:
   380                           	opt stack 0
   381  000016                     ___llmod@counter:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x15
   385  000016                     	ds	1
   386  000017                     ?_printf:
   387                           	opt stack 0
   388  000017                     ___almod@counter:
   389                           	opt stack 0
   390  000017                     printf@f:
   391                           	opt stack 0
   392  000017                     ___ftdiv@f3:
   393                           	opt stack 0
   394                           
   395                           ; 3 bytes @ 0x16
   396  000017                     	ds	1
   397  000018                     ___almod@sign:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0x17
   401  000018                     	ds	2
   402  00001A                     ___ftdiv@exp:
   403                           	opt stack 0
   404                           
   405                           ; 1 bytes @ 0x19
   406  00001A                     	ds	1
   407  00001B                     ___ftdiv@sign:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x1A
   411  00001B                     	ds	2
   412  00001D                     ??_printf:
   413                           
   414                           ; 0 bytes @ 0x1C
   415  00001D                     	ds	2
   416  00001F                     printf@prec:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x1E
   420  00001F                     	ds	2
   421  000021                     printf@ap:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x20
   425  000021                     	ds	2
   426  000023                     printf@flag:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x22
   430  000023                     	ds	1
   431  000024                     printf@val:
   432                           	opt stack 0
   433                           
   434                           ; 4 bytes @ 0x23
   435  000024                     	ds	4
   436  000028                     printf@c:
   437                           	opt stack 0
   438                           
   439                           ; 1 bytes @ 0x27
   440  000028                     	ds	1
   441  000029                     ??_main:
   442                           
   443                           ; 0 bytes @ 0x28
   444  000029                     	ds	2
   445  00002B                     main@R_ref_voltage:
   446                           	opt stack 0
   447                           
   448                           ; 3 bytes @ 0x2A
   449  00002B                     	ds	3
   450  00002E                     main@R_ref_current:
   451                           	opt stack 0
   452                           
   453                           ; 3 bytes @ 0x2D
   454  00002E                     	ds	3
   455  000031                     main@R_test_float:
   456                           	opt stack 0
   457                           
   458                           ; 3 bytes @ 0x30
   459  000031                     	ds	3
   460  000034                     main@num_step:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x33
   464  000034                     	ds	2
   465  000036                     main@voltage_v:
   466                           	opt stack 0
   467                           
   468                           ; 3 bytes @ 0x35
   469  000036                     	ds	3
   470  000039                     main@R_test:
   471                           	opt stack 0
   472                           
   473                           ; 4 bytes @ 0x38
   474  000039                     	ds	4
   475                           tblptru	equ	0xFF8
   476                           tblptrh	equ	0xFF7
   477                           tblptrl	equ	0xFF6
   478                           tablat	equ	0xFF5
   479                           postinc0	equ	0xFEE
   480                           postdec1	equ	0xFE5
   481                           fsr1l	equ	0xFE1
   482                           
   483 ;;
   484 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   485 ;;
   486 ;; *************** function _main *****************
   487 ;; Defined at:
   488 ;;		line 56 in file "Lab6pB1.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;		None
   491 ;; Auto vars:     Size  Location     Type
   492 ;;  R_test          4   56[COMRAM] long 
   493 ;;  voltage_v       3   53[COMRAM] float 
   494 ;;  R_test_float    3   48[COMRAM] float 
   495 ;;  R_ref_curren    3   45[COMRAM] float 
   496 ;;  R_ref_voltag    3   42[COMRAM] float 
   497 ;;  num_step        2   51[COMRAM] int 
   498 ;; Return value:  Size  Location     Type
   499 ;;		None               void
   500 ;; Registers used:
   501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   508 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   509 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   510 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   511 ;;Total ram usage:       20 bytes
   512 ;; Hardware stack levels required when called:    2
   513 ;; This function calls:
   514 ;;		_Activate_Buzzer
   515 ;;		_BCD_DP
   516 ;;		_BCD_Lower_Digit
   517 ;;		_BCD_Upper_Digit
   518 ;;		_D1_Yellow
   519 ;;		_Deactivate_Buzzer
   520 ;;		_Init_ADC
   521 ;;		_Init_TRIS
   522 ;;		_Select_ADC_Channel
   523 ;;		_WAIT_HALF_SEC
   524 ;;		___aldiv
   525 ;;		___almod
   526 ;;		___awtoft
   527 ;;		___ftadd
   528 ;;		___ftdiv
   529 ;;		___ftneg
   530 ;;		___fttol
   531 ;;		_get_full_ADC
   532 ;;		_init_UART
   533 ;;		_printf
   534 ;; This function is called by:
   535 ;;		Startup code after reset
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           	psect	text0
   540  001044                     __ptext0:
   541                           	opt stack 0
   542  001044                     _main:
   543                           	opt stack 29
   544                           
   545                           ;Lab6pB1.c: 58: OSCCON = 0x60;
   546                           
   547                           ;incstack = 0
   548  001044  0E60               	movlw	96
   549  001046  6ED3               	movwf	4051,c	;volatile
   550                           
   551                           ;Lab6pB1.c: 60: PORTB = 0x00;
   552  001048  0E00               	movlw	0
   553  00104A  6E81               	movwf	3969,c	;volatile
   554                           
   555                           ;Lab6pB1.c: 61: PORTC = 0xFF;
   556  00104C  6882               	setf	3970,c	;volatile
   557                           
   558                           ;Lab6pB1.c: 62: PORTD = 0xFF;
   559  00104E  6883               	setf	3971,c	;volatile
   560                           
   561                           ;Lab6pB1.c: 63: PORTE = 0xFF;
   562  001050  6884               	setf	3972,c	;volatile
   563                           
   564                           ;Lab6pB1.c: 65: Init_ADC();
   565  001052  ECEE  F00E         	call	_Init_ADC	;wreg free
   566                           
   567                           ;Lab6pB1.c: 66: init_UART();
   568  001056  ECCB  F00E         	call	_init_UART	;wreg free
   569                           
   570                           ;Lab6pB1.c: 67: Init_TRIS();
   571  00105A  ECC0  F00E         	call	_Init_TRIS	;wreg free
   572                           
   573                           ;Lab6pB1.c: 69: Select_ADC_Channel(1);
   574  00105E  0E01               	movlw	1
   575  001060  ECF5  F00E         	call	_Select_ADC_Channel
   576  001064  D000               	goto	l1918
   577  001066                     l1918:
   578                           
   579                           ;Lab6pB1.c: 72: {
   580                           ;Lab6pB1.c: 73: int num_step = get_full_ADC();
   581  001066  EC75  F00E         	call	_get_full_ADC	;wreg free
   582  00106A  C001  F034         	movff	?_get_full_ADC,main@num_step
   583  00106E  C002  F035         	movff	?_get_full_ADC+1,main@num_step+1
   584                           
   585                           ;Lab6pB1.c: 74: float voltage_v = (num_step * 4)/1000.0;
   586  001072  C034  F029         	movff	main@num_step,??_main
   587  001076  C035  F02A         	movff	main@num_step+1,??_main+1
   588  00107A  90D8               	bcf	status,0,c
   589  00107C  3629               	rlcf	??_main,f,c
   590  00107E  362A               	rlcf	??_main+1,f,c
   591  001080  90D8               	bcf	status,0,c
   592  001082  3629               	rlcf	??_main,f,c
   593  001084  362A               	rlcf	??_main+1,f,c
   594  001086  C029  F009         	movff	??_main,___awtoft@c
   595  00108A  C02A  F00A         	movff	??_main+1,___awtoft@c+1
   596  00108E  EC42  F00E         	call	___awtoft	;wreg free
   597  001092  C009  F00D         	movff	?___awtoft,___ftdiv@f1
   598  001096  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
   599  00109A  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
   600  00109E  0E00               	movlw	0
   601  0010A0  6E10               	movwf	___ftdiv@f2,c
   602  0010A2  0E7A               	movlw	122
   603  0010A4  6E11               	movwf	___ftdiv@f2+1,c
   604  0010A6  0E44               	movlw	68
   605  0010A8  6E12               	movwf	___ftdiv@f2+2,c
   606  0010AA  ECCB  F00B         	call	___ftdiv	;wreg free
   607  0010AE  C00D  F036         	movff	?___ftdiv,main@voltage_v
   608  0010B2  C00E  F037         	movff	?___ftdiv+1,main@voltage_v+1
   609  0010B6  C00F  F038         	movff	?___ftdiv+2,main@voltage_v+2
   610                           
   611                           ;Lab6pB1.c: 77: float R_ref_voltage = (4.096 - voltage_v);
   612  0010BA  C036  F001         	movff	main@voltage_v,___ftneg@f1
   613  0010BE  C037  F002         	movff	main@voltage_v+1,___ftneg@f1+1
   614  0010C2  C038  F003         	movff	main@voltage_v+2,___ftneg@f1+2
   615  0010C6  EC88  F00E         	call	___ftneg	;wreg free
   616  0010CA  C001  F009         	movff	?___ftneg,___ftadd@f1
   617  0010CE  C002  F00A         	movff	?___ftneg+1,___ftadd@f1+1
   618  0010D2  C003  F00B         	movff	?___ftneg+2,___ftadd@f1+2
   619  0010D6  0E12               	movlw	18
   620  0010D8  6E0C               	movwf	___ftadd@f2,c
   621  0010DA  0E83               	movlw	131
   622  0010DC  6E0D               	movwf	___ftadd@f2+1,c
   623  0010DE  0E40               	movlw	64
   624  0010E0  6E0E               	movwf	___ftadd@f2+2,c
   625  0010E2  EC76  F00A         	call	___ftadd	;wreg free
   626  0010E6  C009  F02B         	movff	?___ftadd,main@R_ref_voltage
   627  0010EA  C00A  F02C         	movff	?___ftadd+1,main@R_ref_voltage+1
   628  0010EE  C00B  F02D         	movff	?___ftadd+2,main@R_ref_voltage+2
   629                           
   630                           ;Lab6pB1.c: 80: float R_ref_current = R_ref_voltage / 983;
   631  0010F2  C02B  F00D         	movff	main@R_ref_voltage,___ftdiv@f1
   632  0010F6  C02C  F00E         	movff	main@R_ref_voltage+1,___ftdiv@f1+1
   633  0010FA  C02D  F00F         	movff	main@R_ref_voltage+2,___ftdiv@f1+2
   634  0010FE  0EC0               	movlw	192
   635  001100  6E10               	movwf	___ftdiv@f2,c
   636  001102  0E75               	movlw	117
   637  001104  6E11               	movwf	___ftdiv@f2+1,c
   638  001106  0E44               	movlw	68
   639  001108  6E12               	movwf	___ftdiv@f2+2,c
   640  00110A  ECCB  F00B         	call	___ftdiv	;wreg free
   641  00110E  C00D  F02E         	movff	?___ftdiv,main@R_ref_current
   642  001112  C00E  F02F         	movff	?___ftdiv+1,main@R_ref_current+1
   643  001116  C00F  F030         	movff	?___ftdiv+2,main@R_ref_current+2
   644                           
   645                           ;Lab6pB1.c: 83: float R_test_float = (voltage_v / R_ref_current);
   646  00111A  C036  F00D         	movff	main@voltage_v,___ftdiv@f1
   647  00111E  C037  F00E         	movff	main@voltage_v+1,___ftdiv@f1+1
   648  001122  C038  F00F         	movff	main@voltage_v+2,___ftdiv@f1+2
   649  001126  C02E  F010         	movff	main@R_ref_current,___ftdiv@f2
   650  00112A  C02F  F011         	movff	main@R_ref_current+1,___ftdiv@f2+1
   651  00112E  C030  F012         	movff	main@R_ref_current+2,___ftdiv@f2+2
   652  001132  ECCB  F00B         	call	___ftdiv	;wreg free
   653  001136  C00D  F031         	movff	?___ftdiv,main@R_test_float
   654  00113A  C00E  F032         	movff	?___ftdiv+1,main@R_test_float+1
   655  00113E  C00F  F033         	movff	?___ftdiv+2,main@R_test_float+2
   656                           
   657                           ;Lab6pB1.c: 84: long R_test = (long) R_test_float;
   658  001142  C031  F001         	movff	main@R_test_float,___fttol@f1
   659  001146  C032  F002         	movff	main@R_test_float+1,___fttol@f1+1
   660  00114A  C033  F003         	movff	main@R_test_float+2,___fttol@f1+2
   661  00114E  EC58  F00B         	call	___fttol	;wreg free
   662  001152  C001  F039         	movff	?___fttol,main@R_test
   663  001156  C002  F03A         	movff	?___fttol+1,main@R_test+1
   664  00115A  C003  F03B         	movff	?___fttol+2,main@R_test+2
   665  00115E  C004  F03C         	movff	?___fttol+3,main@R_test+3
   666                           
   667                           ;Lab6pB1.c: 86: printf ("The Resistance is %li\r\n\n\n", R_test);
   668  001162  0E29               	movlw	low STR_1
   669  001164  6E17               	movwf	printf@f,c
   670  001166  0E10               	movlw	high STR_1
   671  001168  6E18               	movwf	printf@f+1,c
   672  00116A  C039  F019         	movff	main@R_test,?_printf+2
   673  00116E  C03A  F01A         	movff	main@R_test+1,?_printf+3
   674  001172  C03B  F01B         	movff	main@R_test+2,?_printf+4
   675  001176  C03C  F01C         	movff	main@R_test+3,?_printf+5
   676  00117A  EC90  F009         	call	_printf	;wreg free
   677                           
   678                           ;Lab6pB1.c: 88: if (R_test < 10000)
   679  00117E  BE3C               	btfsc	main@R_test+3,7,c
   680  001180  D009               	goto	l1934
   681  001182  503C               	movf	main@R_test+3,w,c
   682  001184  103B               	iorwf	main@R_test+2,w,c
   683  001186  E148               	bnz	l1940
   684  001188  0E10               	movlw	16
   685  00118A  5C39               	subwf	main@R_test,w,c
   686  00118C  0E27               	movlw	39
   687  00118E  583A               	subwfb	main@R_test+1,w,c
   688  001190  B0D8               	btfsc	status,0,c
   689  001192  D042               	goto	l1940
   690  001194                     l1934:
   691                           
   692                           ;Lab6pB1.c: 89: {
   693                           ;Lab6pB1.c: 90: BCD_Upper_Digit (R_test/1000);
   694  001194  C039  F001         	movff	main@R_test,___aldiv@dividend
   695  001198  C03A  F002         	movff	main@R_test+1,___aldiv@dividend+1
   696  00119C  C03B  F003         	movff	main@R_test+2,___aldiv@dividend+2
   697  0011A0  C03C  F004         	movff	main@R_test+3,___aldiv@dividend+3
   698  0011A4  0EE8               	movlw	232
   699  0011A6  6E05               	movwf	___aldiv@divisor,c
   700  0011A8  0E03               	movlw	3
   701  0011AA  6E06               	movwf	___aldiv@divisor+1,c
   702  0011AC  0E00               	movlw	0
   703  0011AE  6E07               	movwf	___aldiv@divisor+2,c
   704  0011B0  0E00               	movlw	0
   705  0011B2  6E08               	movwf	___aldiv@divisor+3,c
   706  0011B4  EC3C  F00C         	call	___aldiv	;wreg free
   707  0011B8  5001               	movf	?___aldiv,w,c
   708  0011BA  EC23  F00E         	call	_BCD_Upper_Digit
   709                           
   710                           ;Lab6pB1.c: 91: BCD_Lower_Digit (R_test/100%10);
   711  0011BE  0E64               	movlw	100
   712  0011C0  6E05               	movwf	___aldiv@divisor,c
   713  0011C2  0E00               	movlw	0
   714  0011C4  6E06               	movwf	___aldiv@divisor+1,c
   715  0011C6  0E00               	movlw	0
   716  0011C8  6E07               	movwf	___aldiv@divisor+2,c
   717  0011CA  0E00               	movlw	0
   718  0011CC  6E08               	movwf	___aldiv@divisor+3,c
   719  0011CE  C039  F001         	movff	main@R_test,___aldiv@dividend
   720  0011D2  C03A  F002         	movff	main@R_test+1,___aldiv@dividend+1
   721  0011D6  C03B  F003         	movff	main@R_test+2,___aldiv@dividend+2
   722  0011DA  C03C  F004         	movff	main@R_test+3,___aldiv@dividend+3
   723  0011DE  EC3C  F00C         	call	___aldiv	;wreg free
   724  0011E2  C001  F00F         	movff	?___aldiv,___almod@dividend
   725  0011E6  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
   726  0011EA  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
   727  0011EE  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
   728  0011F2  0E0A               	movlw	10
   729  0011F4  6E13               	movwf	___almod@divisor,c
   730  0011F6  0E00               	movlw	0
   731  0011F8  6E14               	movwf	___almod@divisor+1,c
   732  0011FA  0E00               	movlw	0
   733  0011FC  6E15               	movwf	___almod@divisor+2,c
   734  0011FE  0E00               	movlw	0
   735  001200  6E16               	movwf	___almod@divisor+3,c
   736  001202  EC0E  F00D         	call	___almod	;wreg free
   737  001206  500F               	movf	?___almod,w,c
   738  001208  ECA7  F00E         	call	_BCD_Lower_Digit
   739                           
   740                           ;Lab6pB1.c: 92: BCD_DP (1);
   741  00120C  0E01               	movlw	1
   742  00120E  ECB4  F00E         	call	_BCD_DP
   743                           
   744                           ;Lab6pB1.c: 93: PORTB = 0x00;
   745  001212  0E00               	movlw	0
   746  001214  6E81               	movwf	3969,c	;volatile
   747                           
   748                           ;Lab6pB1.c: 94: }
   749  001216  D06E               	goto	l1960
   750  001218                     l1940:
   751                           
   752                           ;Lab6pB1.c: 96: else if (R_test > 10000)
   753  001218  BE3C               	btfsc	main@R_test+3,7,c
   754  00121A  D06C               	goto	l1960
   755  00121C  503C               	movf	main@R_test+3,w,c
   756  00121E  103B               	iorwf	main@R_test+2,w,c
   757  001220  E106               	bnz	u1740
   758  001222  0E11               	movlw	17
   759  001224  5C39               	subwf	main@R_test,w,c
   760  001226  0E27               	movlw	39
   761  001228  583A               	subwfb	main@R_test+1,w,c
   762  00122A  A0D8               	btfss	status,0,c
   763  00122C  D063               	goto	l1960
   764  00122E                     u1740:
   765                           
   766                           ;Lab6pB1.c: 97: {
   767                           ;Lab6pB1.c: 98: BCD_Upper_Digit (R_test/10000);
   768  00122E  C039  F001         	movff	main@R_test,___aldiv@dividend
   769  001232  C03A  F002         	movff	main@R_test+1,___aldiv@dividend+1
   770  001236  C03B  F003         	movff	main@R_test+2,___aldiv@dividend+2
   771  00123A  C03C  F004         	movff	main@R_test+3,___aldiv@dividend+3
   772  00123E  0E10               	movlw	16
   773  001240  6E05               	movwf	___aldiv@divisor,c
   774  001242  0E27               	movlw	39
   775  001244  6E06               	movwf	___aldiv@divisor+1,c
   776  001246  0E00               	movlw	0
   777  001248  6E07               	movwf	___aldiv@divisor+2,c
   778  00124A  0E00               	movlw	0
   779  00124C  6E08               	movwf	___aldiv@divisor+3,c
   780  00124E  EC3C  F00C         	call	___aldiv	;wreg free
   781  001252  5001               	movf	?___aldiv,w,c
   782  001254  EC23  F00E         	call	_BCD_Upper_Digit
   783                           
   784                           ;Lab6pB1.c: 99: BCD_Lower_Digit ((R_test/1000)%10);
   785  001258  0EE8               	movlw	232
   786  00125A  6E05               	movwf	___aldiv@divisor,c
   787  00125C  0E03               	movlw	3
   788  00125E  6E06               	movwf	___aldiv@divisor+1,c
   789  001260  0E00               	movlw	0
   790  001262  6E07               	movwf	___aldiv@divisor+2,c
   791  001264  0E00               	movlw	0
   792  001266  6E08               	movwf	___aldiv@divisor+3,c
   793  001268  C039  F001         	movff	main@R_test,___aldiv@dividend
   794  00126C  C03A  F002         	movff	main@R_test+1,___aldiv@dividend+1
   795  001270  C03B  F003         	movff	main@R_test+2,___aldiv@dividend+2
   796  001274  C03C  F004         	movff	main@R_test+3,___aldiv@dividend+3
   797  001278  EC3C  F00C         	call	___aldiv	;wreg free
   798  00127C  C001  F00F         	movff	?___aldiv,___almod@dividend
   799  001280  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
   800  001284  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
   801  001288  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
   802  00128C  0E0A               	movlw	10
   803  00128E  6E13               	movwf	___almod@divisor,c
   804  001290  0E00               	movlw	0
   805  001292  6E14               	movwf	___almod@divisor+1,c
   806  001294  0E00               	movlw	0
   807  001296  6E15               	movwf	___almod@divisor+2,c
   808  001298  0E00               	movlw	0
   809  00129A  6E16               	movwf	___almod@divisor+3,c
   810  00129C  EC0E  F00D         	call	___almod	;wreg free
   811  0012A0  500F               	movf	?___almod,w,c
   812  0012A2  ECA7  F00E         	call	_BCD_Lower_Digit
   813                           
   814                           ;Lab6pB1.c: 100: BCD_DP (0);
   815  0012A6  0E00               	movlw	0
   816  0012A8  ECB4  F00E         	call	_BCD_DP
   817                           
   818                           ;Lab6pB1.c: 102: if (R_test > 70000)
   819  0012AC  BE3C               	btfsc	main@R_test+3,7,c
   820  0012AE  D00D               	goto	l1950
   821  0012B0  503C               	movf	main@R_test+3,w,c
   822  0012B2  E108               	bnz	u1750
   823  0012B4  0E71               	movlw	113
   824  0012B6  5C39               	subwf	main@R_test,w,c
   825  0012B8  0E11               	movlw	17
   826  0012BA  583A               	subwfb	main@R_test+1,w,c
   827  0012BC  0E01               	movlw	1
   828  0012BE  583B               	subwfb	main@R_test+2,w,c
   829  0012C0  A0D8               	btfss	status,0,c
   830  0012C2  D003               	goto	l1950
   831  0012C4                     u1750:
   832                           
   833                           ;Lab6pB1.c: 103: {
   834                           ;Lab6pB1.c: 104: PORTB = D2_array[7];
   835  0012C4  C04E  FF81         	movff	_D2_array+7,3969	;volatile
   836  0012C8  D000               	goto	l1950
   837  0012CA                     l1950:
   838                           
   839                           ;Lab6pB1.c: 105: }
   840                           ;Lab6pB1.c: 106: if (R_test > 100000)
   841  0012CA  BE3C               	btfsc	main@R_test+3,7,c
   842  0012CC  D013               	goto	l1960
   843  0012CE  503C               	movf	main@R_test+3,w,c
   844  0012D0  E108               	bnz	u1760
   845  0012D2  0EA1               	movlw	161
   846  0012D4  5C39               	subwf	main@R_test,w,c
   847  0012D6  0E86               	movlw	134
   848  0012D8  583A               	subwfb	main@R_test+1,w,c
   849  0012DA  0E01               	movlw	1
   850  0012DC  583B               	subwfb	main@R_test+2,w,c
   851  0012DE  A0D8               	btfss	status,0,c
   852  0012E0  D009               	goto	l1960
   853  0012E2                     u1760:
   854                           
   855                           ;Lab6pB1.c: 107: {
   856                           ;Lab6pB1.c: 108: BCD_Upper_Digit (0);
   857  0012E2  0E00               	movlw	0
   858  0012E4  EC23  F00E         	call	_BCD_Upper_Digit
   859                           
   860                           ;Lab6pB1.c: 109: PORTD = 0x47;
   861  0012E8  0E47               	movlw	71
   862  0012EA  6E83               	movwf	3971,c	;volatile
   863                           
   864                           ;Lab6pB1.c: 110: PORTDbits.RD7 = 1;
   865  0012EC  8E83               	bsf	3971,7,c	;volatile
   866                           
   867                           ;Lab6pB1.c: 111: PORTB = D2_array[7];
   868  0012EE  C04E  FF81         	movff	_D2_array+7,3969	;volatile
   869  0012F2  D000               	goto	l1960
   870  0012F4                     l1960:
   871                           
   872                           ;Lab6pB1.c: 112: }
   873                           ;Lab6pB1.c: 113: }
   874                           ;Lab6pB1.c: 115: if (R_test < 70)
   875  0012F4  BE3C               	btfsc	main@R_test+3,7,c
   876  0012F6  D008               	goto	l1962
   877  0012F8  503C               	movf	main@R_test+3,w,c
   878  0012FA  103B               	iorwf	main@R_test+2,w,c
   879  0012FC  103A               	iorwf	main@R_test+1,w,c
   880  0012FE  E109               	bnz	l1966
   881  001300  0E46               	movlw	70
   882  001302  5C39               	subwf	main@R_test,w,c
   883  001304  B0D8               	btfsc	status,0,c
   884  001306  D005               	goto	l1966
   885  001308                     l1962:
   886                           
   887                           ;Lab6pB1.c: 116: {
   888                           ;Lab6pB1.c: 117: Activate_Buzzer();
   889  001308  ECDE  F00E         	call	_Activate_Buzzer	;wreg free
   890                           
   891                           ;Lab6pB1.c: 118: D1_Yellow();
   892  00130C  ECFF  F00E         	call	_D1_Yellow	;wreg free
   893                           
   894                           ;Lab6pB1.c: 119: }
   895  001310  D002               	goto	l100
   896  001312                     l1966:
   897                           
   898                           ;Lab6pB1.c: 120: else
   899                           ;Lab6pB1.c: 121: {
   900                           ;Lab6pB1.c: 122: Deactivate_Buzzer();
   901  001312  ECFB  F00E         	call	_Deactivate_Buzzer	;wreg free
   902  001316                     l100:
   903                           
   904                           ;Lab6pB1.c: 123: }
   905                           ;Lab6pB1.c: 125: WAIT_HALF_SEC();
   906  001316  EC9A  F00E         	call	_WAIT_HALF_SEC	;wreg free
   907  00131A  D6A5               	goto	l1918
   908  00131C  EF00  F000         	goto	start
   909  001320                     __end_of_main:
   910                           	opt stack 0
   911                           tblptru	equ	0xFF8
   912                           tblptrh	equ	0xFF7
   913                           tblptrl	equ	0xFF6
   914                           tablat	equ	0xFF5
   915                           postinc0	equ	0xFEE
   916                           postdec1	equ	0xFE5
   917                           fsr1l	equ	0xFE1
   918                           status	equ	0xFD8
   919                           
   920 ;; *************** function _printf *****************
   921 ;; Defined at:
   922 ;;		line 464 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\doprnt.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;  f               2   22[COMRAM] PTR const unsigned char 
   925 ;;		 -> STR_1(26), 
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  val             4   35[COMRAM] unsigned long 
   928 ;;  tmpval          4    0        struct .
   929 ;;  cp              3    0        PTR const unsigned char 
   930 ;;  ap              2   32[COMRAM] PTR void [1]
   931 ;;		 -> ?_printf(2), 
   932 ;;  prec            2   30[COMRAM] int 
   933 ;;  len             2    0        unsigned int 
   934 ;;  c               1   39[COMRAM] char 
   935 ;;  flag            1   34[COMRAM] unsigned char 
   936 ;; Return value:  Size  Location     Type
   937 ;;                  2   22[COMRAM] int 
   938 ;; Registers used:
   939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   945 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   949 ;;Total ram usage:       18 bytes
   950 ;; Hardware stack levels used:    1
   951 ;; Hardware stack levels required when called:    1
   952 ;; This function calls:
   953 ;;		___lldiv
   954 ;;		___llmod
   955 ;;		_putch
   956 ;; This function is called by:
   957 ;;		_main
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           	psect	text1
   962  001320                     __ptext1:
   963                           	opt stack 0
   964  001320                     _printf:
   965                           	opt stack 29
   966                           
   967                           ;doprnt.c: 466: va_list ap;
   968                           ;doprnt.c: 499: signed char c;
   969                           ;doprnt.c: 504: int prec;
   970                           ;doprnt.c: 508: unsigned char flag;
   971                           ;doprnt.c: 523: union {
   972                           ;doprnt.c: 524: unsigned long vd;
   973                           ;doprnt.c: 525: double integ;
   974                           ;doprnt.c: 526: } tmpval;
   975                           ;doprnt.c: 528: unsigned long val;
   976                           ;doprnt.c: 529: unsigned len;
   977                           ;doprnt.c: 530: const char * cp;
   978                           ;doprnt.c: 533: *ap = __va_start();
   979                           
   980                           ;incstack = 0
   981  001320  0E19               	movlw	low (?_printf+2)
   982  001322  6E21               	movwf	printf@ap,c
   983  001324  0E00               	movlw	high (?_printf+2)
   984  001326  6E22               	movwf	printf@ap+1,c
   985                           
   986                           ;doprnt.c: 536: while(c = *f++) {
   987  001328  D0D2               	goto	l1642
   988  00132A                     l1590:
   989                           
   990                           ;doprnt.c: 538: if(c != '%')
   991  00132A  0E25               	movlw	37
   992  00132C  1828               	xorwf	printf@c,w,c
   993  00132E  B4D8               	btfsc	status,2,c
   994  001330  D004               	goto	l1594
   995                           
   996                           ;doprnt.c: 540: {
   997                           ;doprnt.c: 541: (putch(c) );
   998  001332  5028               	movf	printf@c,w,c
   999  001334  ECE7  F00E         	call	_putch
  1000                           
  1001                           ;doprnt.c: 542: continue;
  1002  001338  D0CA               	goto	l1642
  1003  00133A                     l1594:
  1004                           
  1005                           ;doprnt.c: 543: }
  1006                           ;doprnt.c: 548: flag = 0;
  1007  00133A  0E00               	movlw	0
  1008  00133C  6E23               	movwf	printf@flag,c
  1009                           
  1010                           ;doprnt.c: 635: switch(c = *f++) {
  1011                           
  1012                           ;doprnt.c: 633: loop:
  1013  00133E  D006               	goto	l1600
  1014                           
  1015                           ;doprnt.c: 638: goto alldone;
  1016                           
  1017                           ;doprnt.c: 637: case 0:
  1018  001340  D0D4               	goto	l235
  1019  001342                     l1596:
  1020                           
  1021                           ;doprnt.c: 643: flag |= 0x10;
  1022  001342  8823               	bsf	printf@flag,4,c
  1023                           
  1024                           ;doprnt.c: 644: goto loop;
  1025  001344  D003               	goto	l1600
  1026                           
  1027                           ;doprnt.c: 698: case 'i':
  1028                           ;doprnt.c: 699: break;
  1029                           
  1030                           ;doprnt.c: 697: case 'd':
  1031  001346  D019               	goto	l222
  1032                           
  1033                           ;doprnt.c: 813: continue;
  1034                           
  1035                           ;doprnt.c: 802: default:
  1036  001348  D0C2               	goto	l1642
  1037                           
  1038                           ;doprnt.c: 822: }
  1039  00134A  D017               	goto	l222
  1040  00134C                     l1600:
  1041  00134C  C017  FFF6         	movff	printf@f,tblptrl
  1042  001350  C018  FFF7         	movff	printf@f+1,tblptrh
  1043  001354  4A17               	infsnz	printf@f,f,c
  1044  001356  2A18               	incf	printf@f+1,f,c
  1045  001358                     	if	0	;tblptru may be non-zero
  1046  001358                     	endif
  1047  001358                     	if	0	;tblptru may be non-zero
  1048  001358                     	endif
  1049  001358  0008               	tblrd		*
  1050  00135A  CFF5 F028          	movff	tablat,printf@c
  1051  00135E  5028               	movf	printf@c,w,c
  1052                           
  1053                           ; Switch size 1, requested type "space"
  1054                           ; Number of cases is 4, Range of values is 0 to 108
  1055                           ; switch strategies available:
  1056                           ; Name         Instructions Cycles
  1057                           ; simple_byte           13     7 (average)
  1058                           ;	Chosen strategy is simple_byte
  1059  001360  0A00               	xorlw	0	; case 0
  1060  001362  B4D8               	btfsc	status,2,c
  1061  001364  D0C2               	goto	l235
  1062  001366  0A64               	xorlw	100	; case 100
  1063  001368  B4D8               	btfsc	status,2,c
  1064  00136A  D007               	goto	l222
  1065  00136C  0A0D               	xorlw	13	; case 105
  1066  00136E  B4D8               	btfsc	status,2,c
  1067  001370  D004               	goto	l222
  1068  001372  0A05               	xorlw	5	; case 108
  1069  001374  B4D8               	btfsc	status,2,c
  1070  001376  D7E5               	goto	l1596
  1071  001378  D0AA               	goto	l1642
  1072  00137A                     l222:
  1073                           
  1074                           ;doprnt.c: 1253: {
  1075                           ;doprnt.c: 1255: if(flag & 0x10)
  1076  00137A  A823               	btfss	printf@flag,4,c
  1077  00137C  D00E               	goto	l1606
  1078                           
  1079                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  1080  00137E  C021  FFD9         	movff	printf@ap,fsr2l
  1081  001382  C022  FFDA         	movff	printf@ap+1,fsr2h
  1082  001386  CFDE F024          	movff	postinc2,printf@val
  1083  00138A  CFDE F025          	movff	postinc2,printf@val+1
  1084  00138E  CFDE F026          	movff	postinc2,printf@val+2
  1085  001392  CFDE F027          	movff	postinc2,printf@val+3
  1086  001396  0E04               	movlw	4
  1087  001398  D00E               	goto	L1
  1088  00139A                     l1606:
  1089                           
  1090                           ;doprnt.c: 1257: else
  1091                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  1092  00139A  C021  FFD9         	movff	printf@ap,fsr2l
  1093  00139E  C022  FFDA         	movff	printf@ap+1,fsr2h
  1094  0013A2  CFDE F024          	movff	postinc2,printf@val
  1095  0013A6  CFDD F025          	movff	postdec2,printf@val+1
  1096  0013AA  0E00               	movlw	0
  1097  0013AC  BE25               	btfsc	printf@val+1,7,c
  1098  0013AE  0EFF               	movlw	-1
  1099  0013B0  6E26               	movwf	printf@val+2,c
  1100  0013B2  6E27               	movwf	printf@val+3,c
  1101  0013B4  0E02               	movlw	2
  1102  0013B6                     L1:
  1103  0013B6  2621               	addwf	printf@ap,f,c
  1104  0013B8  0E00               	movlw	0
  1105  0013BA  2222               	addwfc	printf@ap+1,f,c
  1106  0013BC  D000               	goto	l1610
  1107  0013BE                     l1610:
  1108                           
  1109                           ;doprnt.c: 1261: if((long)val < 0) {
  1110  0013BE  AE27               	btfss	printf@val+3,7,c
  1111  0013C0  D00B               	goto	l1616
  1112                           
  1113                           ;doprnt.c: 1262: flag |= 0x03;
  1114  0013C2  0E03               	movlw	3
  1115  0013C4  1223               	iorwf	printf@flag,f,c
  1116                           
  1117                           ;doprnt.c: 1263: val = -val;
  1118  0013C6  1E27               	comf	printf@val+3,f,c
  1119  0013C8  1E26               	comf	printf@val+2,f,c
  1120  0013CA  1E25               	comf	printf@val+1,f,c
  1121  0013CC  6C24               	negf	printf@val,c
  1122  0013CE  0E00               	movlw	0
  1123  0013D0  2225               	addwfc	printf@val+1,f,c
  1124  0013D2  2226               	addwfc	printf@val+2,f,c
  1125  0013D4  2227               	addwfc	printf@val+3,f,c
  1126  0013D6  D000               	goto	l1616
  1127  0013D8                     l1616:
  1128                           
  1129                           ;doprnt.c: 1264: }
  1130                           ;doprnt.c: 1266: }
  1131                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1132  0013D8  0E01               	movlw	1
  1133  0013DA  6E28               	movwf	printf@c,c
  1134  0013DC                     l1618:
  1135  0013DC  0E0A               	movlw	10
  1136  0013DE  1828               	xorwf	printf@c,w,c
  1137  0013E0  B4D8               	btfsc	status,2,c
  1138  0013E2  D01C               	goto	l1630
  1139  0013E4  D001               	goto	l1622
  1140  0013E6  D01A               	goto	l1630
  1141  0013E8                     l1622:
  1142                           
  1143                           ;doprnt.c: 1306: if(val < dpowers[c])
  1144  0013E8  5028               	movf	printf@c,w,c
  1145  0013EA  0D04               	mullw	4
  1146  0013EC  0E01               	movlw	low _dpowers
  1147  0013EE  24F3               	addwf	prodl,w,c
  1148  0013F0  6EF6               	movwf	tblptrl,c
  1149  0013F2  0E10               	movlw	high _dpowers
  1150  0013F4  20F4               	addwfc	prodh,w,c
  1151  0013F6  6EF7               	movwf	tblptrh,c
  1152  0013F8                     	if	0	;There are less than 3 active tblptr bytes
  1153  0013F8                     	endif
  1154  0013F8  0009               	tblrd		*+
  1155  0013FA  50F5               	movf	tablat,w,c
  1156  0013FC  5C24               	subwf	printf@val,w,c
  1157  0013FE  0009               	tblrd		*+
  1158  001400  50F5               	movf	tablat,w,c
  1159  001402  5825               	subwfb	printf@val+1,w,c
  1160  001404  0009               	tblrd		*+
  1161  001406  50F5               	movf	tablat,w,c
  1162  001408  5826               	subwfb	printf@val+2,w,c
  1163  00140A  0009               	tblrd		*+
  1164  00140C  50F5               	movf	tablat,w,c
  1165  00140E  5827               	subwfb	printf@val+3,w,c
  1166  001410  A0D8               	btfss	status,0,c
  1167  001412  D004               	goto	l1630
  1168  001414  D001               	goto	l1626
  1169                           
  1170                           ;doprnt.c: 1307: break;
  1171  001416  D002               	goto	l1630
  1172  001418                     l1626:
  1173  001418  2A28               	incf	printf@c,f,c
  1174  00141A  D7E0               	goto	l1618
  1175  00141C                     l1630:
  1176                           
  1177                           ;doprnt.c: 1422: {
  1178                           ;doprnt.c: 1438: if(flag & 0x03)
  1179  00141C  C023  F01D         	movff	printf@flag,??_printf
  1180  001420  0E03               	movlw	3
  1181  001422  161D               	andwf	??_printf,f,c
  1182  001424  B4D8               	btfsc	status,2,c
  1183  001426  D004               	goto	l1634
  1184                           
  1185                           ;doprnt.c: 1439: (putch('-') );
  1186  001428  0E2D               	movlw	45
  1187  00142A  ECE7  F00E         	call	_putch
  1188  00142E  D000               	goto	l1634
  1189  001430                     l1634:
  1190                           
  1191                           ;doprnt.c: 1469: }
  1192                           ;doprnt.c: 1472: prec = c;
  1193  001430  5028               	movf	printf@c,w,c
  1194  001432  6E1F               	movwf	printf@prec,c
  1195  001434  6A20               	clrf	printf@prec+1,c
  1196  001436  BE1F               	btfsc	printf@prec,7,c
  1197  001438  0620               	decf	printf@prec+1,f,c
  1198                           
  1199                           ;doprnt.c: 1474: while(prec--) {
  1200  00143A  D03F               	goto	l1640
  1201  00143C                     l1636:
  1202                           
  1203                           ;doprnt.c: 1478: {
  1204                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1205  00143C  C01F  F01D         	movff	printf@prec,??_printf
  1206  001440  C020  F01E         	movff	printf@prec+1,??_printf+1
  1207  001444  90D8               	bcf	status,0,c
  1208  001446  361D               	rlcf	??_printf,f,c
  1209  001448  361E               	rlcf	??_printf+1,f,c
  1210  00144A  90D8               	bcf	status,0,c
  1211  00144C  361D               	rlcf	??_printf,f,c
  1212  00144E  361E               	rlcf	??_printf+1,f,c
  1213  001450  0E01               	movlw	low _dpowers
  1214  001452  241D               	addwf	??_printf,w,c
  1215  001454  6EF6               	movwf	tblptrl,c
  1216  001456  0E10               	movlw	high _dpowers
  1217  001458  201E               	addwfc	??_printf+1,w,c
  1218  00145A  6EF7               	movwf	tblptrh,c
  1219  00145C                     	if	0	;There are less than 3 active tblptr bytes
  1220  00145C                     	endif
  1221  00145C  0009               	tblrd		*+
  1222  00145E  CFF5 F005          	movff	tablat,___lldiv@divisor
  1223  001462  0009               	tblrd		*+
  1224  001464  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1225  001468  0009               	tblrd		*+
  1226  00146A  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1227  00146E  000A               	tblrd		*-
  1228  001470  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1229  001474  C024  F001         	movff	printf@val,___lldiv@dividend
  1230  001478  C025  F002         	movff	printf@val+1,___lldiv@dividend+1
  1231  00147C  C026  F003         	movff	printf@val+2,___lldiv@dividend+2
  1232  001480  C027  F004         	movff	printf@val+3,___lldiv@dividend+3
  1233  001484  EC6D  F00D         	call	___lldiv	;wreg free
  1234  001488  C001  F00E         	movff	?___lldiv,___llmod@dividend
  1235  00148C  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  1236  001490  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  1237  001494  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  1238  001498  0E0A               	movlw	10
  1239  00149A  6E12               	movwf	___llmod@divisor,c
  1240  00149C  0E00               	movlw	0
  1241  00149E  6E13               	movwf	___llmod@divisor+1,c
  1242  0014A0  0E00               	movlw	0
  1243  0014A2  6E14               	movwf	___llmod@divisor+2,c
  1244  0014A4  0E00               	movlw	0
  1245  0014A6  6E15               	movwf	___llmod@divisor+3,c
  1246  0014A8  ECB3  F00D         	call	___llmod	;wreg free
  1247  0014AC  500E               	movf	?___llmod,w,c
  1248  0014AE  0F30               	addlw	48
  1249  0014B0  6E28               	movwf	printf@c,c
  1250                           
  1251                           ;doprnt.c: 1523: }
  1252                           ;doprnt.c: 1524: (putch(c) );
  1253  0014B2  5028               	movf	printf@c,w,c
  1254  0014B4  ECE7  F00E         	call	_putch
  1255  0014B8  D000               	goto	l1640
  1256  0014BA                     l1640:
  1257  0014BA  061F               	decf	printf@prec,f,c
  1258  0014BC  A0D8               	btfss	status,0,c
  1259  0014BE  0620               	decf	printf@prec+1,f,c
  1260  0014C0  281F               	incf	printf@prec,w,c
  1261  0014C2  E1BC               	bnz	l1636
  1262  0014C4  2820               	incf	printf@prec+1,w,c
  1263  0014C6  B4D8               	btfsc	status,2,c
  1264  0014C8  D002               	goto	l1642
  1265  0014CA  D7B8               	goto	l1636
  1266  0014CC  D000               	goto	l1642
  1267  0014CE                     l1642:
  1268  0014CE  C017  FFF6         	movff	printf@f,tblptrl
  1269  0014D2  C018  FFF7         	movff	printf@f+1,tblptrh
  1270  0014D6  4A17               	infsnz	printf@f,f,c
  1271  0014D8  2A18               	incf	printf@f+1,f,c
  1272  0014DA                     	if	0	;tblptru may be non-zero
  1273  0014DA                     	endif
  1274  0014DA                     	if	0	;tblptru may be non-zero
  1275  0014DA                     	endif
  1276  0014DA  0008               	tblrd		*
  1277  0014DC  CFF5 F028          	movff	tablat,printf@c
  1278  0014E0  5028               	movf	printf@c,w,c
  1279  0014E2  B4D8               	btfsc	status,2,c
  1280  0014E4  D002               	goto	l235
  1281  0014E6  D721               	goto	l1590
  1282  0014E8  D000               	goto	l235
  1283  0014EA                     l235:
  1284  0014EA  0012               	return		;funcret
  1285  0014EC                     __end_of_printf:
  1286                           	opt stack 0
  1287                           tblptru	equ	0xFF8
  1288                           tblptrh	equ	0xFF7
  1289                           tblptrl	equ	0xFF6
  1290                           tablat	equ	0xFF5
  1291                           prodh	equ	0xFF4
  1292                           prodl	equ	0xFF3
  1293                           postinc0	equ	0xFEE
  1294                           postdec1	equ	0xFE5
  1295                           fsr1l	equ	0xFE1
  1296                           postinc2	equ	0xFDE
  1297                           postdec2	equ	0xFDD
  1298                           fsr2h	equ	0xFDA
  1299                           fsr2l	equ	0xFD9
  1300                           status	equ	0xFD8
  1301                           
  1302 ;; *************** function _putch *****************
  1303 ;; Defined at:
  1304 ;;		line 153 in file "Lab6pB1.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;  c               1    wreg     unsigned char 
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;  c               1    0[COMRAM] unsigned char 
  1309 ;; Return value:  Size  Location     Type
  1310 ;;		None               void
  1311 ;; Registers used:
  1312 ;;		wreg
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;Total ram usage:        1 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; This function calls:
  1325 ;;		Nothing
  1326 ;; This function is called by:
  1327 ;;		_printf
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           	psect	text2
  1332  001DCE                     __ptext2:
  1333                           	opt stack 0
  1334  001DCE                     _putch:
  1335                           	opt stack 29
  1336                           
  1337                           ;incstack = 0
  1338                           ;putch@c stored from wreg
  1339  001DCE  6E01               	movwf	putch@c,c
  1340                           
  1341                           ;Lab6pB1.c: 155: while (!TRMT);
  1342  001DD0  D000               	goto	l115
  1343  001DD2                     l115:
  1344  001DD2  A2AC               	btfss	4012,1,c	;volatile
  1345  001DD4  D7FE               	goto	l115
  1346                           
  1347                           ;Lab6pB1.c: 156: TXREG = c;
  1348  001DD6  C001  FFAD         	movff	putch@c,4013	;volatile
  1349  001DDA  0012               	return		;funcret
  1350  001DDC                     __end_of_putch:
  1351                           	opt stack 0
  1352                           tblptru	equ	0xFF8
  1353                           tblptrh	equ	0xFF7
  1354                           tblptrl	equ	0xFF6
  1355                           tablat	equ	0xFF5
  1356                           prodh	equ	0xFF4
  1357                           prodl	equ	0xFF3
  1358                           postinc0	equ	0xFEE
  1359                           postdec1	equ	0xFE5
  1360                           fsr1l	equ	0xFE1
  1361                           postinc2	equ	0xFDE
  1362                           postdec2	equ	0xFDD
  1363                           fsr2h	equ	0xFDA
  1364                           fsr2l	equ	0xFD9
  1365                           status	equ	0xFD8
  1366                           
  1367 ;; *************** function ___llmod *****************
  1368 ;; Defined at:
  1369 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\llmod.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;  dividend        4   13[COMRAM] unsigned long 
  1372 ;;  divisor         4   17[COMRAM] unsigned long 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  counter         1   21[COMRAM] unsigned char 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  4   13[COMRAM] unsigned long 
  1377 ;; Registers used:
  1378 ;;		wreg, status,2, status,0
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1384 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1388 ;;Total ram usage:        9 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; This function calls:
  1391 ;;		Nothing
  1392 ;; This function is called by:
  1393 ;;		_printf
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           	psect	text3
  1398  001B66                     __ptext3:
  1399                           	opt stack 0
  1400  001B66                     ___llmod:
  1401                           	opt stack 29
  1402                           
  1403                           ;incstack = 0
  1404  001B66  5012               	movf	___llmod@divisor,w,c
  1405  001B68  1013               	iorwf	___llmod@divisor+1,w,c
  1406  001B6A  1014               	iorwf	___llmod@divisor+2,w,c
  1407  001B6C  1015               	iorwf	___llmod@divisor+3,w,c
  1408  001B6E  B4D8               	btfsc	status,2,c
  1409  001B70  D029               	goto	l736
  1410  001B72  0E01               	movlw	1
  1411  001B74  6E16               	movwf	___llmod@counter,c
  1412  001B76  D007               	goto	l1566
  1413  001B78                     l1564:
  1414  001B78  90D8               	bcf	status,0,c
  1415  001B7A  3612               	rlcf	___llmod@divisor,f,c
  1416  001B7C  3613               	rlcf	___llmod@divisor+1,f,c
  1417  001B7E  3614               	rlcf	___llmod@divisor+2,f,c
  1418  001B80  3615               	rlcf	___llmod@divisor+3,f,c
  1419  001B82  2A16               	incf	___llmod@counter,f,c
  1420  001B84  D000               	goto	l1566
  1421  001B86                     l1566:
  1422  001B86  BE15               	btfsc	___llmod@divisor+3,7,c
  1423  001B88  D002               	goto	l1568
  1424  001B8A  D7F6               	goto	l1564
  1425  001B8C  D000               	goto	l1568
  1426  001B8E                     l1568:
  1427  001B8E  5012               	movf	___llmod@divisor,w,c
  1428  001B90  5C0E               	subwf	___llmod@dividend,w,c
  1429  001B92  5013               	movf	___llmod@divisor+1,w,c
  1430  001B94  580F               	subwfb	___llmod@dividend+1,w,c
  1431  001B96  5014               	movf	___llmod@divisor+2,w,c
  1432  001B98  5810               	subwfb	___llmod@dividend+2,w,c
  1433  001B9A  5015               	movf	___llmod@divisor+3,w,c
  1434  001B9C  5811               	subwfb	___llmod@dividend+3,w,c
  1435  001B9E  A0D8               	btfss	status,0,c
  1436  001BA0  D009               	goto	l1572
  1437  001BA2  5012               	movf	___llmod@divisor,w,c
  1438  001BA4  5E0E               	subwf	___llmod@dividend,f,c
  1439  001BA6  5013               	movf	___llmod@divisor+1,w,c
  1440  001BA8  5A0F               	subwfb	___llmod@dividend+1,f,c
  1441  001BAA  5014               	movf	___llmod@divisor+2,w,c
  1442  001BAC  5A10               	subwfb	___llmod@dividend+2,f,c
  1443  001BAE  5015               	movf	___llmod@divisor+3,w,c
  1444  001BB0  5A11               	subwfb	___llmod@dividend+3,f,c
  1445  001BB2  D000               	goto	l1572
  1446  001BB4                     l1572:
  1447  001BB4  90D8               	bcf	status,0,c
  1448  001BB6  3215               	rrcf	___llmod@divisor+3,f,c
  1449  001BB8  3214               	rrcf	___llmod@divisor+2,f,c
  1450  001BBA  3213               	rrcf	___llmod@divisor+1,f,c
  1451  001BBC  3212               	rrcf	___llmod@divisor,f,c
  1452  001BBE  2E16               	decfsz	___llmod@counter,f,c
  1453  001BC0  D7E6               	goto	l1568
  1454  001BC2  D000               	goto	l736
  1455  001BC4                     l736:
  1456  001BC4  C00E  F00E         	movff	___llmod@dividend,?___llmod
  1457  001BC8  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  1458  001BCC  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  1459  001BD0  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  1460  001BD4  0012               	return		;funcret
  1461  001BD6                     __end_of___llmod:
  1462                           	opt stack 0
  1463                           tblptru	equ	0xFF8
  1464                           tblptrh	equ	0xFF7
  1465                           tblptrl	equ	0xFF6
  1466                           tablat	equ	0xFF5
  1467                           prodh	equ	0xFF4
  1468                           prodl	equ	0xFF3
  1469                           postinc0	equ	0xFEE
  1470                           postdec1	equ	0xFE5
  1471                           fsr1l	equ	0xFE1
  1472                           postinc2	equ	0xFDE
  1473                           postdec2	equ	0xFDD
  1474                           fsr2h	equ	0xFDA
  1475                           fsr2l	equ	0xFD9
  1476                           status	equ	0xFD8
  1477                           
  1478 ;; *************** function ___lldiv *****************
  1479 ;; Defined at:
  1480 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\lldiv.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;  dividend        4    0[COMRAM] unsigned long 
  1483 ;;  divisor         4    4[COMRAM] unsigned long 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;  quotient        4    8[COMRAM] unsigned long 
  1486 ;;  counter         1   12[COMRAM] unsigned char 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  4    0[COMRAM] unsigned long 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1496 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;Total ram usage:       13 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_printf
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text4
  1510  001ADA                     __ptext4:
  1511                           	opt stack 0
  1512  001ADA                     ___lldiv:
  1513                           	opt stack 29
  1514                           
  1515                           ;incstack = 0
  1516  001ADA  0E00               	movlw	0
  1517  001ADC  6E09               	movwf	___lldiv@quotient,c
  1518  001ADE  0E00               	movlw	0
  1519  001AE0  6E0A               	movwf	___lldiv@quotient+1,c
  1520  001AE2  0E00               	movlw	0
  1521  001AE4  6E0B               	movwf	___lldiv@quotient+2,c
  1522  001AE6  0E00               	movlw	0
  1523  001AE8  6E0C               	movwf	___lldiv@quotient+3,c
  1524  001AEA  5005               	movf	___lldiv@divisor,w,c
  1525  001AEC  1006               	iorwf	___lldiv@divisor+1,w,c
  1526  001AEE  1007               	iorwf	___lldiv@divisor+2,w,c
  1527  001AF0  1008               	iorwf	___lldiv@divisor+3,w,c
  1528  001AF2  B4D8               	btfsc	status,2,c
  1529  001AF4  D02F               	goto	l726
  1530  001AF6  0E01               	movlw	1
  1531  001AF8  6E0D               	movwf	___lldiv@counter,c
  1532  001AFA  D007               	goto	l1546
  1533  001AFC                     l1544:
  1534  001AFC  90D8               	bcf	status,0,c
  1535  001AFE  3605               	rlcf	___lldiv@divisor,f,c
  1536  001B00  3606               	rlcf	___lldiv@divisor+1,f,c
  1537  001B02  3607               	rlcf	___lldiv@divisor+2,f,c
  1538  001B04  3608               	rlcf	___lldiv@divisor+3,f,c
  1539  001B06  2A0D               	incf	___lldiv@counter,f,c
  1540  001B08  D000               	goto	l1546
  1541  001B0A                     l1546:
  1542  001B0A  BE08               	btfsc	___lldiv@divisor+3,7,c
  1543  001B0C  D002               	goto	l1548
  1544  001B0E  D7F6               	goto	l1544
  1545  001B10  D000               	goto	l1548
  1546  001B12                     l1548:
  1547  001B12  90D8               	bcf	status,0,c
  1548  001B14  3609               	rlcf	___lldiv@quotient,f,c
  1549  001B16  360A               	rlcf	___lldiv@quotient+1,f,c
  1550  001B18  360B               	rlcf	___lldiv@quotient+2,f,c
  1551  001B1A  360C               	rlcf	___lldiv@quotient+3,f,c
  1552  001B1C  5005               	movf	___lldiv@divisor,w,c
  1553  001B1E  5C01               	subwf	___lldiv@dividend,w,c
  1554  001B20  5006               	movf	___lldiv@divisor+1,w,c
  1555  001B22  5802               	subwfb	___lldiv@dividend+1,w,c
  1556  001B24  5007               	movf	___lldiv@divisor+2,w,c
  1557  001B26  5803               	subwfb	___lldiv@dividend+2,w,c
  1558  001B28  5008               	movf	___lldiv@divisor+3,w,c
  1559  001B2A  5804               	subwfb	___lldiv@dividend+3,w,c
  1560  001B2C  A0D8               	btfss	status,0,c
  1561  001B2E  D00A               	goto	l1556
  1562  001B30  5005               	movf	___lldiv@divisor,w,c
  1563  001B32  5E01               	subwf	___lldiv@dividend,f,c
  1564  001B34  5006               	movf	___lldiv@divisor+1,w,c
  1565  001B36  5A02               	subwfb	___lldiv@dividend+1,f,c
  1566  001B38  5007               	movf	___lldiv@divisor+2,w,c
  1567  001B3A  5A03               	subwfb	___lldiv@dividend+2,f,c
  1568  001B3C  5008               	movf	___lldiv@divisor+3,w,c
  1569  001B3E  5A04               	subwfb	___lldiv@dividend+3,f,c
  1570  001B40  8009               	bsf	___lldiv@quotient,0,c
  1571  001B42  D000               	goto	l1556
  1572  001B44                     l1556:
  1573  001B44  90D8               	bcf	status,0,c
  1574  001B46  3208               	rrcf	___lldiv@divisor+3,f,c
  1575  001B48  3207               	rrcf	___lldiv@divisor+2,f,c
  1576  001B4A  3206               	rrcf	___lldiv@divisor+1,f,c
  1577  001B4C  3205               	rrcf	___lldiv@divisor,f,c
  1578  001B4E  2E0D               	decfsz	___lldiv@counter,f,c
  1579  001B50  D7E0               	goto	l1548
  1580  001B52  D000               	goto	l726
  1581  001B54                     l726:
  1582  001B54  C009  F001         	movff	___lldiv@quotient,?___lldiv
  1583  001B58  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  1584  001B5C  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  1585  001B60  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  1586  001B64  0012               	return		;funcret
  1587  001B66                     __end_of___lldiv:
  1588                           	opt stack 0
  1589                           tblptru	equ	0xFF8
  1590                           tblptrh	equ	0xFF7
  1591                           tblptrl	equ	0xFF6
  1592                           tablat	equ	0xFF5
  1593                           prodh	equ	0xFF4
  1594                           prodl	equ	0xFF3
  1595                           postinc0	equ	0xFEE
  1596                           postdec1	equ	0xFE5
  1597                           fsr1l	equ	0xFE1
  1598                           postinc2	equ	0xFDE
  1599                           postdec2	equ	0xFDD
  1600                           fsr2h	equ	0xFDA
  1601                           fsr2l	equ	0xFD9
  1602                           status	equ	0xFD8
  1603                           
  1604 ;; *************** function _init_UART *****************
  1605 ;; Defined at:
  1606 ;;		line 146 in file "Lab6pB1.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;		None
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;		None               void
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1624 ;;Total ram usage:        0 bytes
  1625 ;; Hardware stack levels used:    1
  1626 ;; Hardware stack levels required when called:    1
  1627 ;; This function calls:
  1628 ;;		_OpenUSART
  1629 ;; This function is called by:
  1630 ;;		_main
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text5
  1635  001D96                     __ptext5:
  1636                           	opt stack 0
  1637  001D96                     _init_UART:
  1638                           	opt stack 29
  1639                           
  1640                           ;Lab6pB1.c: 148: OpenUSART(0b01111111 & 0b10111111 & 0b11111110 & 0b11111101
  1641                           ;Lab6pB1.c: 149: & 0b11111111 & 0b11111111, 25);
  1642                           
  1643                           ;incstack = 0
  1644  001D96  0E00               	movlw	0
  1645  001D98  6E02               	movwf	OpenUSART@spbrg+1,c
  1646  001D9A  0E19               	movlw	25
  1647  001D9C  6E01               	movwf	OpenUSART@spbrg,c
  1648  001D9E  0E3C               	movlw	60
  1649  001DA0  ECEB  F00D         	call	_OpenUSART
  1650                           
  1651                           ;Lab6pB1.c: 150: OSCCON = 0x60;
  1652  001DA4  0E60               	movlw	96
  1653  001DA6  6ED3               	movwf	4051,c	;volatile
  1654  001DA8  0012               	return		;funcret
  1655  001DAA                     __end_of_init_UART:
  1656                           	opt stack 0
  1657                           tblptru	equ	0xFF8
  1658                           tblptrh	equ	0xFF7
  1659                           tblptrl	equ	0xFF6
  1660                           tablat	equ	0xFF5
  1661                           prodh	equ	0xFF4
  1662                           prodl	equ	0xFF3
  1663                           postinc0	equ	0xFEE
  1664                           postdec1	equ	0xFE5
  1665                           fsr1l	equ	0xFE1
  1666                           postinc2	equ	0xFDE
  1667                           postdec2	equ	0xFDD
  1668                           fsr2h	equ	0xFDA
  1669                           fsr2l	equ	0xFD9
  1670                           status	equ	0xFD8
  1671                           
  1672 ;; *************** function _OpenUSART *****************
  1673 ;; Defined at:
  1674 ;;		line 73 in file "C:\My Programs\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;  config          1    wreg     unsigned char 
  1677 ;;  spbrg           2    0[COMRAM] unsigned int 
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  config          1    2[COMRAM] unsigned char 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;		None               void
  1682 ;; Registers used:
  1683 ;;		wreg, status,2
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1689 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;Total ram usage:        3 bytes
  1694 ;; Hardware stack levels used:    1
  1695 ;; This function calls:
  1696 ;;		Nothing
  1697 ;; This function is called by:
  1698 ;;		_init_UART
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text6
  1703  001BD6                     __ptext6:
  1704                           	opt stack 0
  1705  001BD6                     _OpenUSART:
  1706                           	opt stack 29
  1707                           
  1708                           ;incstack = 0
  1709                           ;OpenUSART@config stored from wreg
  1710  001BD6  6E03               	movwf	OpenUSART@config,c
  1711  001BD8  0E00               	movlw	0
  1712  001BDA  6EAC               	movwf	4012,c	;volatile
  1713  001BDC  0E00               	movlw	0
  1714  001BDE  6EAB               	movwf	4011,c	;volatile
  1715  001BE0  A003               	btfss	OpenUSART@config,0,c
  1716  001BE2  D002               	goto	l1458
  1717  001BE4  88AC               	bsf	4012,4,c	;volatile
  1718  001BE6  D000               	goto	l1458
  1719  001BE8                     l1458:
  1720  001BE8  A203               	btfss	OpenUSART@config,1,c
  1721  001BEA  D003               	goto	l1462
  1722  001BEC  8CAC               	bsf	4012,6,c	;volatile
  1723  001BEE  8CAB               	bsf	4011,6,c	;volatile
  1724  001BF0  D000               	goto	l1462
  1725  001BF2                     l1462:
  1726  001BF2  A403               	btfss	OpenUSART@config,2,c
  1727  001BF4  D002               	goto	l1466
  1728  001BF6  8EAC               	bsf	4012,7,c	;volatile
  1729  001BF8  D000               	goto	l1466
  1730  001BFA                     l1466:
  1731  001BFA  A603               	btfss	OpenUSART@config,3,c
  1732  001BFC  D002               	goto	l259
  1733  001BFE  88AB               	bsf	4011,4,c	;volatile
  1734  001C00  D002               	goto	l1470
  1735  001C02                     l259:
  1736  001C02  8AAB               	bsf	4011,5,c	;volatile
  1737  001C04  D000               	goto	l1470
  1738  001C06                     l1470:
  1739  001C06  B803               	btfsc	OpenUSART@config,4,c
  1740  001C08  84AC               	bsf	4012,2,c	;volatile
  1741  001C0A  989E               	bcf	3998,4,c	;volatile
  1742  001C0C  AA03               	btfss	OpenUSART@config,5,c
  1743  001C0E  D002               	goto	l1478
  1744  001C10  86AB               	bsf	4011,3,c	;volatile
  1745  001C12  D000               	goto	l1478
  1746  001C14                     l1478:
  1747  001C14  AC03               	btfss	OpenUSART@config,6,c
  1748  001C16  D002               	goto	l263
  1749  001C18  8A9D               	bsf	3997,5,c	;volatile
  1750  001C1A  D001               	goto	l264
  1751  001C1C                     l263:
  1752  001C1C  9A9D               	bcf	3997,5,c	;volatile
  1753  001C1E                     l264:
  1754  001C1E  9A9E               	bcf	3998,5,c	;volatile
  1755  001C20  AE03               	btfss	OpenUSART@config,7,c
  1756  001C22  D002               	goto	l265
  1757  001C24  889D               	bsf	3997,4,c	;volatile
  1758  001C26  D001               	goto	l266
  1759  001C28                     l265:
  1760  001C28  989D               	bcf	3997,4,c	;volatile
  1761  001C2A                     l266:
  1762  001C2A  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1763  001C2E  5002               	movf	OpenUSART@spbrg+1,w,c
  1764  001C30  6EB0               	movwf	4016,c	;volatile
  1765  001C32  8AAC               	bsf	4012,5,c	;volatile
  1766  001C34  8EAB               	bsf	4011,7,c	;volatile
  1767  001C36  9C94               	bcf	3988,6,c	;volatile
  1768  001C38  8E94               	bsf	3988,7,c	;volatile
  1769  001C3A  B8AC               	btfsc	4012,4,c	;volatile
  1770  001C3C  BEAC               	btfsc	4012,7,c	;volatile
  1771  001C3E  D002               	goto	l268
  1772  001C40  8C94               	bsf	3988,6,c	;volatile
  1773  001C42  D000               	goto	l268
  1774  001C44                     l268:
  1775  001C44  0012               	return		;funcret
  1776  001C46                     __end_of_OpenUSART:
  1777                           	opt stack 0
  1778                           tblptru	equ	0xFF8
  1779                           tblptrh	equ	0xFF7
  1780                           tblptrl	equ	0xFF6
  1781                           tablat	equ	0xFF5
  1782                           prodh	equ	0xFF4
  1783                           prodl	equ	0xFF3
  1784                           postinc0	equ	0xFEE
  1785                           postdec1	equ	0xFE5
  1786                           fsr1l	equ	0xFE1
  1787                           postinc2	equ	0xFDE
  1788                           postdec2	equ	0xFDD
  1789                           fsr2h	equ	0xFDA
  1790                           fsr2l	equ	0xFD9
  1791                           status	equ	0xFD8
  1792                           
  1793 ;; *************** function _get_full_ADC *****************
  1794 ;; Defined at:
  1795 ;;		line 164 in file "Lab6pB1.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;		None
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;  result          2    4[COMRAM] int 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  2    0[COMRAM] unsigned int 
  1802 ;; Registers used:
  1803 ;;		wreg, status,2, status,0
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1809 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1810 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1811 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1812 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1813 ;;Total ram usage:        6 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; This function calls:
  1816 ;;		Nothing
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text7
  1823  001CEA                     __ptext7:
  1824                           	opt stack 0
  1825  001CEA                     _get_full_ADC:
  1826                           	opt stack 30
  1827                           
  1828                           ;Lab6pB1.c: 166: int result;
  1829                           ;Lab6pB1.c: 167: ADCON0bits.GO=1;
  1830                           
  1831                           ;incstack = 0
  1832  001CEA  82C2               	bsf	4034,1,c	;volatile
  1833                           
  1834                           ;Lab6pB1.c: 168: while(ADCON0bits.DONE==1);
  1835  001CEC  D000               	goto	l124
  1836  001CEE                     l124:
  1837  001CEE  B2C2               	btfsc	4034,1,c	;volatile
  1838  001CF0  D7FE               	goto	l124
  1839                           
  1840                           ;Lab6pB1.c: 169: result = (ADRESH * 0x100) + ADRESL;
  1841  001CF2  50C4               	movf	4036,w,c	;volatile
  1842  001CF4  6E04               	movwf	(??_get_full_ADC+1)& (0+255),c
  1843  001CF6  6A03               	clrf	??_get_full_ADC& (0+255),c
  1844  001CF8  50C3               	movf	4035,w,c	;volatile
  1845  001CFA  2403               	addwf	??_get_full_ADC,w,c
  1846  001CFC  6E05               	movwf	get_full_ADC@result,c
  1847  001CFE  0E00               	movlw	0
  1848  001D00  2004               	addwfc	??_get_full_ADC+1,w,c
  1849  001D02  6E06               	movwf	get_full_ADC@result+1,c
  1850                           
  1851                           ;Lab6pB1.c: 171: return result;
  1852  001D04  C005  F001         	movff	get_full_ADC@result,?_get_full_ADC
  1853  001D08  C006  F002         	movff	get_full_ADC@result+1,?_get_full_ADC+1
  1854  001D0C  D000               	goto	l127
  1855  001D0E                     l127:
  1856  001D0E  0012               	return		;funcret
  1857  001D10                     __end_of_get_full_ADC:
  1858                           	opt stack 0
  1859                           tblptru	equ	0xFF8
  1860                           tblptrh	equ	0xFF7
  1861                           tblptrl	equ	0xFF6
  1862                           tablat	equ	0xFF5
  1863                           prodh	equ	0xFF4
  1864                           prodl	equ	0xFF3
  1865                           postinc0	equ	0xFEE
  1866                           postdec1	equ	0xFE5
  1867                           fsr1l	equ	0xFE1
  1868                           postinc2	equ	0xFDE
  1869                           postdec2	equ	0xFDD
  1870                           fsr2h	equ	0xFDA
  1871                           fsr2l	equ	0xFD9
  1872                           status	equ	0xFD8
  1873                           
  1874 ;; *************** function ___fttol *****************
  1875 ;; Defined at:
  1876 ;;		line 44 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\fttol.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  f1              3    0[COMRAM] float 
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  lval            4   10[COMRAM] unsigned long 
  1881 ;;  exp1            1   14[COMRAM] unsigned char 
  1882 ;;  sign1           1    9[COMRAM] unsigned char 
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  4    0[COMRAM] long 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1892 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1893 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1894 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1895 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1896 ;;Total ram usage:       15 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; This function calls:
  1899 ;;		Nothing
  1900 ;; This function is called by:
  1901 ;;		_main
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           	psect	text8
  1906  0016B0                     __ptext8:
  1907                           	opt stack 0
  1908  0016B0                     ___fttol:
  1909                           	opt stack 30
  1910                           
  1911                           ;incstack = 0
  1912  0016B0  C003  F005         	movff	___fttol@f1+2,??___fttol
  1913  0016B4  6A06               	clrf	(??___fttol+1)& (0+255),c
  1914  0016B6  6A07               	clrf	(??___fttol+2)& (0+255),c
  1915  0016B8  3402               	rlcf	___fttol@f1+1,w,c
  1916  0016BA  3605               	rlcf	??___fttol& (0+255),f,c
  1917  0016BC  E301               	bnc	u1651
  1918  0016BE  8006               	bsf	(??___fttol+1)& (0+255),0,c
  1919  0016C0                     u1651:
  1920  0016C0  5005               	movf	??___fttol,w,c
  1921  0016C2  6E0F               	movwf	___fttol@exp1,c
  1922  0016C4  500F               	movf	___fttol@exp1,w,c
  1923  0016C6  A4D8               	btfss	status,2,c
  1924  0016C8  D002               	goto	l1862
  1925  0016CA  D039               	goto	l1886
  1926  0016CC  D063               	goto	l687
  1927  0016CE                     l1862:
  1928  0016CE  0E17               	movlw	23
  1929  0016D0  6E05               	movwf	??___fttol& (0+255),c
  1930  0016D2  C001  F006         	movff	___fttol@f1,??___fttol+1
  1931  0016D6  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  1932  0016DA  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  1933  0016DE  2805               	incf	??___fttol,w,c
  1934  0016E0  6E09               	movwf	(??___fttol+4)& (0+255),c
  1935  0016E2  D004               	goto	u1670
  1936  0016E4                     u1675:
  1937  0016E4  90D8               	bcf	status,0,c
  1938  0016E6  3208               	rrcf	??___fttol+3,f,c
  1939  0016E8  3207               	rrcf	??___fttol+2,f,c
  1940  0016EA  3206               	rrcf	??___fttol+1,f,c
  1941  0016EC                     u1670:
  1942  0016EC  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
  1943  0016EE  D7FA               	goto	u1675
  1944  0016F0  5006               	movf	??___fttol+1,w,c
  1945  0016F2  6E0A               	movwf	___fttol@sign1,c
  1946  0016F4  8E02               	bsf	___fttol@f1+1,7,c
  1947  0016F6  0EFF               	movlw	255
  1948  0016F8  1601               	andwf	___fttol@f1,f,c
  1949  0016FA  0EFF               	movlw	255
  1950  0016FC  1602               	andwf	___fttol@f1+1,f,c
  1951  0016FE  0E00               	movlw	0
  1952  001700  1603               	andwf	___fttol@f1+2,f,c
  1953  001702  5001               	movf	___fttol@f1,w,c
  1954  001704  6E0B               	movwf	___fttol@lval,c
  1955  001706  5002               	movf	___fttol@f1+1,w,c
  1956  001708  6E0C               	movwf	___fttol@lval+1,c
  1957  00170A  5003               	movf	___fttol@f1+2,w,c
  1958  00170C  6E0D               	movwf	___fttol@lval+2,c
  1959  00170E  6A0E               	clrf	___fttol@lval+3,c
  1960  001710  0E8E               	movlw	142
  1961  001712  5E0F               	subwf	___fttol@exp1,f,c
  1962  001714  AE0F               	btfss	___fttol@exp1,7,c
  1963  001716  D010               	goto	l1884
  1964  001718  500F               	movf	___fttol@exp1,w,c
  1965  00171A  0A80               	xorlw	128
  1966  00171C  0F8F               	addlw	143
  1967  00171E  B0D8               	btfsc	status,0,c
  1968  001720  D003               	goto	l1880
  1969  001722  D00D               	goto	l1886
  1970  001724  D037               	goto	l687
  1971  001726  D000               	goto	l1880
  1972  001728                     l1880:
  1973  001728  90D8               	bcf	status,0,c
  1974  00172A  320E               	rrcf	___fttol@lval+3,f,c
  1975  00172C  320D               	rrcf	___fttol@lval+2,f,c
  1976  00172E  320C               	rrcf	___fttol@lval+1,f,c
  1977  001730  320B               	rrcf	___fttol@lval,f,c
  1978  001732  3E0F               	incfsz	___fttol@exp1,f,c
  1979  001734  D7F9               	goto	l1880
  1980  001736  D019               	goto	l1894
  1981  001738                     l1884:
  1982  001738  0E17               	movlw	23
  1983  00173A  640F               	cpfsgt	___fttol@exp1,c
  1984  00173C  D011               	goto	l1892
  1985  00173E                     l1886:
  1986  00173E  0E00               	movlw	0
  1987  001740  6E01               	movwf	?___fttol,c
  1988  001742  0E00               	movlw	0
  1989  001744  6E02               	movwf	?___fttol+1,c
  1990  001746  0E00               	movlw	0
  1991  001748  6E03               	movwf	?___fttol+2,c
  1992  00174A  0E00               	movlw	0
  1993  00174C  6E04               	movwf	?___fttol+3,c
  1994  00174E  D022               	goto	l687
  1995  001750  D007               	goto	l1892
  1996  001752                     l1890:
  1997  001752  90D8               	bcf	status,0,c
  1998  001754  360B               	rlcf	___fttol@lval,f,c
  1999  001756  360C               	rlcf	___fttol@lval+1,f,c
  2000  001758  360D               	rlcf	___fttol@lval+2,f,c
  2001  00175A  360E               	rlcf	___fttol@lval+3,f,c
  2002  00175C  060F               	decf	___fttol@exp1,f,c
  2003  00175E  D000               	goto	l1892
  2004  001760                     l1892:
  2005  001760  500F               	movf	___fttol@exp1,w,c
  2006  001762  B4D8               	btfsc	status,2,c
  2007  001764  D002               	goto	l1894
  2008  001766  D7F5               	goto	l1890
  2009  001768  D000               	goto	l1894
  2010  00176A                     l1894:
  2011  00176A  500A               	movf	___fttol@sign1,w,c
  2012  00176C  B4D8               	btfsc	status,2,c
  2013  00176E  D009               	goto	l1898
  2014  001770  1E0E               	comf	___fttol@lval+3,f,c
  2015  001772  1E0D               	comf	___fttol@lval+2,f,c
  2016  001774  1E0C               	comf	___fttol@lval+1,f,c
  2017  001776  6C0B               	negf	___fttol@lval,c
  2018  001778  0E00               	movlw	0
  2019  00177A  220C               	addwfc	___fttol@lval+1,f,c
  2020  00177C  220D               	addwfc	___fttol@lval+2,f,c
  2021  00177E  220E               	addwfc	___fttol@lval+3,f,c
  2022  001780  D000               	goto	l1898
  2023  001782                     l1898:
  2024  001782  C00B  F001         	movff	___fttol@lval,?___fttol
  2025  001786  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  2026  00178A  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  2027  00178E  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  2028  001792  D000               	goto	l687
  2029  001794                     l687:
  2030  001794  0012               	return		;funcret
  2031  001796                     __end_of___fttol:
  2032                           	opt stack 0
  2033                           tblptru	equ	0xFF8
  2034                           tblptrh	equ	0xFF7
  2035                           tblptrl	equ	0xFF6
  2036                           tablat	equ	0xFF5
  2037                           prodh	equ	0xFF4
  2038                           prodl	equ	0xFF3
  2039                           postinc0	equ	0xFEE
  2040                           postdec1	equ	0xFE5
  2041                           fsr1l	equ	0xFE1
  2042                           postinc2	equ	0xFDE
  2043                           postdec2	equ	0xFDD
  2044                           fsr2h	equ	0xFDA
  2045                           fsr2l	equ	0xFD9
  2046                           status	equ	0xFD8
  2047                           
  2048 ;; *************** function ___ftneg *****************
  2049 ;; Defined at:
  2050 ;;		line 15 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftneg.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  f1              3    0[COMRAM] float 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;		None
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  3    0[COMRAM] float 
  2057 ;; Registers used:
  2058 ;;		wreg, status,2, status,0
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2064 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;Total ram usage:        3 bytes
  2069 ;; Hardware stack levels used:    1
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		_main
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           	psect	text9
  2078  001D10                     __ptext9:
  2079                           	opt stack 0
  2080  001D10                     ___ftneg:
  2081                           	opt stack 30
  2082                           
  2083                           ;incstack = 0
  2084  001D10  5001               	movf	___ftneg@f1,w,c
  2085  001D12  1002               	iorwf	___ftneg@f1+1,w,c
  2086  001D14  1003               	iorwf	___ftneg@f1+2,w,c
  2087  001D16  B4D8               	btfsc	status,2,c
  2088  001D18  D006               	goto	l676
  2089  001D1A  0E00               	movlw	0
  2090  001D1C  1A01               	xorwf	___ftneg@f1,f,c
  2091  001D1E  0E00               	movlw	0
  2092  001D20  1A02               	xorwf	___ftneg@f1+1,f,c
  2093  001D22  0E80               	movlw	128
  2094  001D24  1A03               	xorwf	___ftneg@f1+2,f,c
  2095  001D26                     l676:
  2096  001D26  C001  F001         	movff	___ftneg@f1,?___ftneg
  2097  001D2A  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  2098  001D2E  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  2099  001D32  0012               	return		;funcret
  2100  001D34                     __end_of___ftneg:
  2101                           	opt stack 0
  2102                           tblptru	equ	0xFF8
  2103                           tblptrh	equ	0xFF7
  2104                           tblptrl	equ	0xFF6
  2105                           tablat	equ	0xFF5
  2106                           prodh	equ	0xFF4
  2107                           prodl	equ	0xFF3
  2108                           postinc0	equ	0xFEE
  2109                           postdec1	equ	0xFE5
  2110                           fsr1l	equ	0xFE1
  2111                           postinc2	equ	0xFDE
  2112                           postdec2	equ	0xFDD
  2113                           fsr2h	equ	0xFDA
  2114                           fsr2l	equ	0xFD9
  2115                           status	equ	0xFD8
  2116                           
  2117 ;; *************** function ___ftdiv *****************
  2118 ;; Defined at:
  2119 ;;		line 54 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  f1              3   12[COMRAM] float 
  2122 ;;  f2              3   15[COMRAM] float 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  f3              3   22[COMRAM] float 
  2125 ;;  sign            1   26[COMRAM] unsigned char 
  2126 ;;  exp             1   25[COMRAM] unsigned char 
  2127 ;;  cntr            1   21[COMRAM] unsigned char 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  3   12[COMRAM] float 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2137 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;Total ram usage:       15 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; Hardware stack levels required when called:    1
  2144 ;; This function calls:
  2145 ;;		___ftpack
  2146 ;; This function is called by:
  2147 ;;		_main
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           	psect	text10
  2152  001796                     __ptext10:
  2153                           	opt stack 0
  2154  001796                     ___ftdiv:
  2155                           	opt stack 29
  2156                           
  2157                           ;incstack = 0
  2158  001796  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
  2159  00179A  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  2160  00179C  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  2161  00179E  340E               	rlcf	___ftdiv@f1+1,w,c
  2162  0017A0  3613               	rlcf	??___ftdiv& (0+255),f,c
  2163  0017A2  E301               	bnc	u1581
  2164  0017A4  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  2165  0017A6                     u1581:
  2166  0017A6  5013               	movf	??___ftdiv,w,c
  2167  0017A8  6E1A               	movwf	___ftdiv@exp,c
  2168  0017AA  501A               	movf	___ftdiv@exp,w,c
  2169  0017AC  A4D8               	btfss	status,2,c
  2170  0017AE  D002               	goto	l1800
  2171  0017B0  D00E               	goto	l1802
  2172  0017B2  D061               	goto	l651
  2173  0017B4                     l1800:
  2174  0017B4  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
  2175  0017B8  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  2176  0017BA  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  2177  0017BC  3411               	rlcf	___ftdiv@f2+1,w,c
  2178  0017BE  3613               	rlcf	??___ftdiv& (0+255),f,c
  2179  0017C0  E301               	bnc	u1601
  2180  0017C2  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  2181  0017C4                     u1601:
  2182  0017C4  5013               	movf	??___ftdiv,w,c
  2183  0017C6  6E1B               	movwf	___ftdiv@sign,c
  2184  0017C8  501B               	movf	___ftdiv@sign,w,c
  2185  0017CA  A4D8               	btfss	status,2,c
  2186  0017CC  D007               	goto	l1806
  2187  0017CE                     l1802:
  2188  0017CE  0E00               	movlw	0
  2189  0017D0  6E0D               	movwf	?___ftdiv,c
  2190  0017D2  0E00               	movlw	0
  2191  0017D4  6E0E               	movwf	?___ftdiv+1,c
  2192  0017D6  0E00               	movlw	0
  2193  0017D8  6E0F               	movwf	?___ftdiv+2,c
  2194  0017DA  D04D               	goto	l651
  2195  0017DC                     l1806:
  2196  0017DC  0E00               	movlw	0
  2197  0017DE  6E17               	movwf	___ftdiv@f3,c
  2198  0017E0  0E00               	movlw	0
  2199  0017E2  6E18               	movwf	___ftdiv@f3+1,c
  2200  0017E4  0E00               	movlw	0
  2201  0017E6  6E19               	movwf	___ftdiv@f3+2,c
  2202  0017E8  501B               	movf	___ftdiv@sign,w,c
  2203  0017EA  0F89               	addlw	137
  2204  0017EC  5E1A               	subwf	___ftdiv@exp,f,c
  2205  0017EE  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
  2206  0017F2  5012               	movf	___ftdiv@f2+2,w,c
  2207  0017F4  1A1B               	xorwf	___ftdiv@sign,f,c
  2208  0017F6  0E80               	movlw	128
  2209  0017F8  161B               	andwf	___ftdiv@sign,f,c
  2210  0017FA  8E0E               	bsf	___ftdiv@f1+1,7,c
  2211  0017FC  0EFF               	movlw	255
  2212  0017FE  160D               	andwf	___ftdiv@f1,f,c
  2213  001800  0EFF               	movlw	255
  2214  001802  160E               	andwf	___ftdiv@f1+1,f,c
  2215  001804  0E00               	movlw	0
  2216  001806  160F               	andwf	___ftdiv@f1+2,f,c
  2217  001808  8E11               	bsf	___ftdiv@f2+1,7,c
  2218  00180A  0EFF               	movlw	255
  2219  00180C  1610               	andwf	___ftdiv@f2,f,c
  2220  00180E  0EFF               	movlw	255
  2221  001810  1611               	andwf	___ftdiv@f2+1,f,c
  2222  001812  0E00               	movlw	0
  2223  001814  1612               	andwf	___ftdiv@f2+2,f,c
  2224  001816  0E18               	movlw	24
  2225  001818  6E16               	movwf	___ftdiv@cntr,c
  2226  00181A  D000               	goto	l1826
  2227  00181C                     l1826:
  2228  00181C  90D8               	bcf	status,0,c
  2229  00181E  3617               	rlcf	___ftdiv@f3,f,c
  2230  001820  3618               	rlcf	___ftdiv@f3+1,f,c
  2231  001822  3619               	rlcf	___ftdiv@f3+2,f,c
  2232  001824  5010               	movf	___ftdiv@f2,w,c
  2233  001826  5C0D               	subwf	___ftdiv@f1,w,c
  2234  001828  5011               	movf	___ftdiv@f2+1,w,c
  2235  00182A  580E               	subwfb	___ftdiv@f1+1,w,c
  2236  00182C  5012               	movf	___ftdiv@f2+2,w,c
  2237  00182E  580F               	subwfb	___ftdiv@f1+2,w,c
  2238  001830  A0D8               	btfss	status,0,c
  2239  001832  D007               	goto	l654
  2240  001834  5010               	movf	___ftdiv@f2,w,c
  2241  001836  5E0D               	subwf	___ftdiv@f1,f,c
  2242  001838  5011               	movf	___ftdiv@f2+1,w,c
  2243  00183A  5A0E               	subwfb	___ftdiv@f1+1,f,c
  2244  00183C  5012               	movf	___ftdiv@f2+2,w,c
  2245  00183E  5A0F               	subwfb	___ftdiv@f1+2,f,c
  2246  001840  8017               	bsf	___ftdiv@f3,0,c
  2247  001842                     l654:
  2248  001842  90D8               	bcf	status,0,c
  2249  001844  360D               	rlcf	___ftdiv@f1,f,c
  2250  001846  360E               	rlcf	___ftdiv@f1+1,f,c
  2251  001848  360F               	rlcf	___ftdiv@f1+2,f,c
  2252  00184A  2E16               	decfsz	___ftdiv@cntr,f,c
  2253  00184C  D7E7               	goto	l1826
  2254  00184E  D000               	goto	l1836
  2255  001850                     l1836:
  2256  001850  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
  2257  001854  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2258  001858  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2259  00185C  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
  2260  001860  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
  2261  001864  ECAB  F00C         	call	___ftpack	;wreg free
  2262  001868  C001  F00D         	movff	?___ftpack,?___ftdiv
  2263  00186C  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
  2264  001870  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
  2265  001874  D000               	goto	l651
  2266  001876                     l651:
  2267  001876  0012               	return		;funcret
  2268  001878                     __end_of___ftdiv:
  2269                           	opt stack 0
  2270                           tblptru	equ	0xFF8
  2271                           tblptrh	equ	0xFF7
  2272                           tblptrl	equ	0xFF6
  2273                           tablat	equ	0xFF5
  2274                           prodh	equ	0xFF4
  2275                           prodl	equ	0xFF3
  2276                           postinc0	equ	0xFEE
  2277                           postdec1	equ	0xFE5
  2278                           fsr1l	equ	0xFE1
  2279                           postinc2	equ	0xFDE
  2280                           postdec2	equ	0xFDD
  2281                           fsr2h	equ	0xFDA
  2282                           fsr2l	equ	0xFD9
  2283                           status	equ	0xFD8
  2284                           
  2285 ;; *************** function ___ftadd *****************
  2286 ;; Defined at:
  2287 ;;		line 86 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftadd.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  f1              3    8[COMRAM] float 
  2290 ;;  f2              3   11[COMRAM] float 
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;  exp1            1   19[COMRAM] unsigned char 
  2293 ;;  exp2            1   18[COMRAM] unsigned char 
  2294 ;;  sign            1   17[COMRAM] unsigned char 
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  3    8[COMRAM] float 
  2297 ;; Registers used:
  2298 ;;		wreg, status,2, status,0, cstack
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2304 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2305 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2306 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2307 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2308 ;;Total ram usage:       12 bytes
  2309 ;; Hardware stack levels used:    1
  2310 ;; Hardware stack levels required when called:    1
  2311 ;; This function calls:
  2312 ;;		___ftpack
  2313 ;; This function is called by:
  2314 ;;		_main
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text11
  2319  0014EC                     __ptext11:
  2320                           	opt stack 0
  2321  0014EC                     ___ftadd:
  2322                           	opt stack 29
  2323                           
  2324                           ;incstack = 0
  2325  0014EC  C00B  F00F         	movff	___ftadd@f1+2,??___ftadd
  2326  0014F0  6A10               	clrf	(??___ftadd+1)& (0+255),c
  2327  0014F2  6A11               	clrf	(??___ftadd+2)& (0+255),c
  2328  0014F4  340A               	rlcf	___ftadd@f1+1,w,c
  2329  0014F6  360F               	rlcf	??___ftadd& (0+255),f,c
  2330  0014F8  E301               	bnc	u1371
  2331  0014FA  8010               	bsf	(??___ftadd+1)& (0+255),0,c
  2332  0014FC                     u1371:
  2333  0014FC  500F               	movf	??___ftadd,w,c
  2334  0014FE  6E14               	movwf	___ftadd@exp1,c
  2335  001500  C00E  F00F         	movff	___ftadd@f2+2,??___ftadd
  2336  001504  6A10               	clrf	(??___ftadd+1)& (0+255),c
  2337  001506  6A11               	clrf	(??___ftadd+2)& (0+255),c
  2338  001508  340D               	rlcf	___ftadd@f2+1,w,c
  2339  00150A  360F               	rlcf	??___ftadd& (0+255),f,c
  2340  00150C  E301               	bnc	u1381
  2341  00150E  8010               	bsf	(??___ftadd+1)& (0+255),0,c
  2342  001510                     u1381:
  2343  001510  500F               	movf	??___ftadd,w,c
  2344  001512  6E13               	movwf	___ftadd@exp2,c
  2345  001514  5014               	movf	___ftadd@exp1,w,c
  2346  001516  B4D8               	btfsc	status,2,c
  2347  001518  D00B               	goto	l619
  2348  00151A  5013               	movf	___ftadd@exp2,w,c
  2349  00151C  5C14               	subwf	___ftadd@exp1,w,c
  2350  00151E  B0D8               	btfsc	status,0,c
  2351  001520  D00E               	goto	l1732
  2352  001522  5014               	movf	___ftadd@exp1,w,c
  2353  001524  0800               	sublw	0
  2354  001526  2413               	addwf	___ftadd@exp2,w,c
  2355  001528  6E0F               	movwf	??___ftadd& (0+255),c
  2356  00152A  0E18               	movlw	24
  2357  00152C  640F               	cpfsgt	??___ftadd,c
  2358  00152E  D007               	goto	l1732
  2359  001530                     l619:
  2360  001530  C00C  F009         	movff	___ftadd@f2,?___ftadd
  2361  001534  C00D  F00A         	movff	___ftadd@f2+1,?___ftadd+1
  2362  001538  C00E  F00B         	movff	___ftadd@f2+2,?___ftadd+2
  2363  00153C  D0B8               	goto	l620
  2364  00153E                     l1732:
  2365  00153E  5013               	movf	___ftadd@exp2,w,c
  2366  001540  B4D8               	btfsc	status,2,c
  2367  001542  D00B               	goto	l623
  2368  001544  5014               	movf	___ftadd@exp1,w,c
  2369  001546  5C13               	subwf	___ftadd@exp2,w,c
  2370  001548  B0D8               	btfsc	status,0,c
  2371  00154A  D00E               	goto	l1738
  2372  00154C  5013               	movf	___ftadd@exp2,w,c
  2373  00154E  0800               	sublw	0
  2374  001550  2414               	addwf	___ftadd@exp1,w,c
  2375  001552  6E0F               	movwf	??___ftadd& (0+255),c
  2376  001554  0E18               	movlw	24
  2377  001556  640F               	cpfsgt	??___ftadd,c
  2378  001558  D007               	goto	l1738
  2379  00155A                     l623:
  2380  00155A  C009  F009         	movff	___ftadd@f1,?___ftadd
  2381  00155E  C00A  F00A         	movff	___ftadd@f1+1,?___ftadd+1
  2382  001562  C00B  F00B         	movff	___ftadd@f1+2,?___ftadd+2
  2383  001566  D0A3               	goto	l620
  2384  001568                     l1738:
  2385  001568  0E06               	movlw	6
  2386  00156A  6E12               	movwf	___ftadd@sign,c
  2387  00156C  AE0B               	btfss	___ftadd@f1+2,7,c
  2388  00156E  D002               	goto	l1744
  2389  001570  8E12               	bsf	___ftadd@sign,7,c
  2390  001572  D000               	goto	l1744
  2391  001574                     l1744:
  2392  001574  BE0E               	btfsc	___ftadd@f2+2,7,c
  2393  001576  8C12               	bsf	___ftadd@sign,6,c
  2394  001578  8E0A               	bsf	___ftadd@f1+1,7,c
  2395  00157A  0EFF               	movlw	255
  2396  00157C  1609               	andwf	___ftadd@f1,f,c
  2397  00157E  0EFF               	movlw	255
  2398  001580  160A               	andwf	___ftadd@f1+1,f,c
  2399  001582  0E00               	movlw	0
  2400  001584  160B               	andwf	___ftadd@f1+2,f,c
  2401  001586  8E0D               	bsf	___ftadd@f2+1,7,c
  2402  001588  0EFF               	movlw	255
  2403  00158A  160C               	andwf	___ftadd@f2,f,c
  2404  00158C  0EFF               	movlw	255
  2405  00158E  160D               	andwf	___ftadd@f2+1,f,c
  2406  001590  0E00               	movlw	0
  2407  001592  160E               	andwf	___ftadd@f2+2,f,c
  2408  001594  5013               	movf	___ftadd@exp2,w,c
  2409  001596  5C14               	subwf	___ftadd@exp1,w,c
  2410  001598  B0D8               	btfsc	status,0,c
  2411  00159A  D01E               	goto	l1764
  2412  00159C                     l1754:
  2413  00159C  90D8               	bcf	status,0,c
  2414  00159E  360C               	rlcf	___ftadd@f2,f,c
  2415  0015A0  360D               	rlcf	___ftadd@f2+1,f,c
  2416  0015A2  360E               	rlcf	___ftadd@f2+2,f,c
  2417  0015A4  0613               	decf	___ftadd@exp2,f,c
  2418  0015A6  5014               	movf	___ftadd@exp1,w,c
  2419  0015A8  1813               	xorwf	___ftadd@exp2,w,c
  2420  0015AA  B4D8               	btfsc	status,2,c
  2421  0015AC  D00F               	goto	l1762
  2422  0015AE  0612               	decf	___ftadd@sign,f,c
  2423  0015B0  C012  F00F         	movff	___ftadd@sign,??___ftadd
  2424  0015B4  0E07               	movlw	7
  2425  0015B6  160F               	andwf	??___ftadd,f,c
  2426  0015B8  B4D8               	btfsc	status,2,c
  2427  0015BA  D008               	goto	l1762
  2428  0015BC  D7EF               	goto	l1754
  2429  0015BE  D006               	goto	l1762
  2430  0015C0                     l1760:
  2431  0015C0  90D8               	bcf	status,0,c
  2432  0015C2  320B               	rrcf	___ftadd@f1+2,f,c
  2433  0015C4  320A               	rrcf	___ftadd@f1+1,f,c
  2434  0015C6  3209               	rrcf	___ftadd@f1,f,c
  2435  0015C8  2A14               	incf	___ftadd@exp1,f,c
  2436  0015CA  D000               	goto	l1762
  2437  0015CC                     l1762:
  2438  0015CC  5013               	movf	___ftadd@exp2,w,c
  2439  0015CE  1814               	xorwf	___ftadd@exp1,w,c
  2440  0015D0  B4D8               	btfsc	status,2,c
  2441  0015D2  D024               	goto	l634
  2442  0015D4  D7F5               	goto	l1760
  2443  0015D6  D022               	goto	l634
  2444  0015D8                     l1764:
  2445  0015D8  5014               	movf	___ftadd@exp1,w,c
  2446  0015DA  5C13               	subwf	___ftadd@exp2,w,c
  2447  0015DC  B0D8               	btfsc	status,0,c
  2448  0015DE  D01E               	goto	l634
  2449  0015E0                     l1766:
  2450  0015E0  90D8               	bcf	status,0,c
  2451  0015E2  3609               	rlcf	___ftadd@f1,f,c
  2452  0015E4  360A               	rlcf	___ftadd@f1+1,f,c
  2453  0015E6  360B               	rlcf	___ftadd@f1+2,f,c
  2454  0015E8  0614               	decf	___ftadd@exp1,f,c
  2455  0015EA  5014               	movf	___ftadd@exp1,w,c
  2456  0015EC  1813               	xorwf	___ftadd@exp2,w,c
  2457  0015EE  B4D8               	btfsc	status,2,c
  2458  0015F0  D00F               	goto	l1774
  2459  0015F2  0612               	decf	___ftadd@sign,f,c
  2460  0015F4  C012  F00F         	movff	___ftadd@sign,??___ftadd
  2461  0015F8  0E07               	movlw	7
  2462  0015FA  160F               	andwf	??___ftadd,f,c
  2463  0015FC  B4D8               	btfsc	status,2,c
  2464  0015FE  D008               	goto	l1774
  2465  001600  D7EF               	goto	l1766
  2466  001602  D006               	goto	l1774
  2467  001604                     l1772:
  2468  001604  90D8               	bcf	status,0,c
  2469  001606  320E               	rrcf	___ftadd@f2+2,f,c
  2470  001608  320D               	rrcf	___ftadd@f2+1,f,c
  2471  00160A  320C               	rrcf	___ftadd@f2,f,c
  2472  00160C  2A13               	incf	___ftadd@exp2,f,c
  2473  00160E  D000               	goto	l1774
  2474  001610                     l1774:
  2475  001610  5013               	movf	___ftadd@exp2,w,c
  2476  001612  1814               	xorwf	___ftadd@exp1,w,c
  2477  001614  B4D8               	btfsc	status,2,c
  2478  001616  D002               	goto	l634
  2479  001618  D7F5               	goto	l1772
  2480  00161A  D000               	goto	l634
  2481  00161C                     l634:
  2482  00161C  AE12               	btfss	___ftadd@sign,7,c
  2483  00161E  D00C               	goto	l643
  2484  001620  0EFF               	movlw	255
  2485  001622  1A09               	xorwf	___ftadd@f1,f,c
  2486  001624  0EFF               	movlw	255
  2487  001626  1A0A               	xorwf	___ftadd@f1+1,f,c
  2488  001628  0EFF               	movlw	255
  2489  00162A  1A0B               	xorwf	___ftadd@f1+2,f,c
  2490  00162C  0E01               	movlw	1
  2491  00162E  2609               	addwf	___ftadd@f1,f,c
  2492  001630  0E00               	movlw	0
  2493  001632  220A               	addwfc	___ftadd@f1+1,f,c
  2494  001634  0E00               	movlw	0
  2495  001636  220B               	addwfc	___ftadd@f1+2,f,c
  2496  001638                     l643:
  2497  001638  AC12               	btfss	___ftadd@sign,6,c
  2498  00163A  D00D               	goto	l1780
  2499  00163C  0EFF               	movlw	255
  2500  00163E  1A0C               	xorwf	___ftadd@f2,f,c
  2501  001640  0EFF               	movlw	255
  2502  001642  1A0D               	xorwf	___ftadd@f2+1,f,c
  2503  001644  0EFF               	movlw	255
  2504  001646  1A0E               	xorwf	___ftadd@f2+2,f,c
  2505  001648  0E01               	movlw	1
  2506  00164A  260C               	addwf	___ftadd@f2,f,c
  2507  00164C  0E00               	movlw	0
  2508  00164E  220D               	addwfc	___ftadd@f2+1,f,c
  2509  001650  0E00               	movlw	0
  2510  001652  220E               	addwfc	___ftadd@f2+2,f,c
  2511  001654  D000               	goto	l1780
  2512  001656                     l1780:
  2513  001656  0E00               	movlw	0
  2514  001658  6E12               	movwf	___ftadd@sign,c
  2515  00165A  5009               	movf	___ftadd@f1,w,c
  2516  00165C  260C               	addwf	___ftadd@f2,f,c
  2517  00165E  500A               	movf	___ftadd@f1+1,w,c
  2518  001660  220D               	addwfc	___ftadd@f2+1,f,c
  2519  001662  500B               	movf	___ftadd@f1+2,w,c
  2520  001664  220E               	addwfc	___ftadd@f2+2,f,c
  2521  001666  AE0E               	btfss	___ftadd@f2+2,7,c
  2522  001668  D00F               	goto	l1790
  2523  00166A  0EFF               	movlw	255
  2524  00166C  1A0C               	xorwf	___ftadd@f2,f,c
  2525  00166E  0EFF               	movlw	255
  2526  001670  1A0D               	xorwf	___ftadd@f2+1,f,c
  2527  001672  0EFF               	movlw	255
  2528  001674  1A0E               	xorwf	___ftadd@f2+2,f,c
  2529  001676  0E01               	movlw	1
  2530  001678  260C               	addwf	___ftadd@f2,f,c
  2531  00167A  0E00               	movlw	0
  2532  00167C  220D               	addwfc	___ftadd@f2+1,f,c
  2533  00167E  0E00               	movlw	0
  2534  001680  220E               	addwfc	___ftadd@f2+2,f,c
  2535  001682  0E01               	movlw	1
  2536  001684  6E12               	movwf	___ftadd@sign,c
  2537  001686  D000               	goto	l1790
  2538  001688                     l1790:
  2539  001688  C00C  F001         	movff	___ftadd@f2,___ftpack@arg
  2540  00168C  C00D  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  2541  001690  C00E  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  2542  001694  C014  F004         	movff	___ftadd@exp1,___ftpack@exp
  2543  001698  C012  F005         	movff	___ftadd@sign,___ftpack@sign
  2544  00169C  ECAB  F00C         	call	___ftpack	;wreg free
  2545  0016A0  C001  F009         	movff	?___ftpack,?___ftadd
  2546  0016A4  C002  F00A         	movff	?___ftpack+1,?___ftadd+1
  2547  0016A8  C003  F00B         	movff	?___ftpack+2,?___ftadd+2
  2548  0016AC  D000               	goto	l620
  2549  0016AE                     l620:
  2550  0016AE  0012               	return		;funcret
  2551  0016B0                     __end_of___ftadd:
  2552                           	opt stack 0
  2553                           tblptru	equ	0xFF8
  2554                           tblptrh	equ	0xFF7
  2555                           tblptrl	equ	0xFF6
  2556                           tablat	equ	0xFF5
  2557                           prodh	equ	0xFF4
  2558                           prodl	equ	0xFF3
  2559                           postinc0	equ	0xFEE
  2560                           postdec1	equ	0xFE5
  2561                           fsr1l	equ	0xFE1
  2562                           postinc2	equ	0xFDE
  2563                           postdec2	equ	0xFDD
  2564                           fsr2h	equ	0xFDA
  2565                           fsr2l	equ	0xFD9
  2566                           status	equ	0xFD8
  2567                           
  2568 ;; *************** function ___awtoft *****************
  2569 ;; Defined at:
  2570 ;;		line 32 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\awtoft.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  c               2    8[COMRAM] int 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  sign            1   11[COMRAM] unsigned char 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  3    8[COMRAM] float 
  2577 ;; Registers used:
  2578 ;;		wreg, status,2, status,0, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2584 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;Total ram usage:        4 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    1
  2591 ;; This function calls:
  2592 ;;		___ftpack
  2593 ;; This function is called by:
  2594 ;;		_main
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text12
  2599  001C84                     __ptext12:
  2600                           	opt stack 0
  2601  001C84                     ___awtoft:
  2602                           	opt stack 29
  2603                           
  2604                           ;incstack = 0
  2605  001C84  0E00               	movlw	0
  2606  001C86  6E0C               	movwf	___awtoft@sign,c
  2607  001C88  AE0A               	btfss	___awtoft@c+1,7,c
  2608  001C8A  D007               	goto	l1848
  2609  001C8C  6C09               	negf	___awtoft@c,c
  2610  001C8E  1E0A               	comf	___awtoft@c+1,f,c
  2611  001C90  B0D8               	btfsc	status,0,c
  2612  001C92  2A0A               	incf	___awtoft@c+1,f,c
  2613  001C94  0E01               	movlw	1
  2614  001C96  6E0C               	movwf	___awtoft@sign,c
  2615  001C98  D000               	goto	l1848
  2616  001C9A                     l1848:
  2617  001C9A  C009  F001         	movff	___awtoft@c,___ftpack@arg
  2618  001C9E  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  2619  001CA2  6A03               	clrf	___ftpack@arg+2,c
  2620  001CA4  0E8E               	movlw	142
  2621  001CA6  6E04               	movwf	___ftpack@exp,c
  2622  001CA8  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  2623  001CAC  ECAB  F00C         	call	___ftpack	;wreg free
  2624  001CB0  C001  F009         	movff	?___ftpack,?___awtoft
  2625  001CB4  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  2626  001CB8  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  2627  001CBC  D000               	goto	l489
  2628  001CBE                     l489:
  2629  001CBE  0012               	return		;funcret
  2630  001CC0                     __end_of___awtoft:
  2631                           	opt stack 0
  2632                           tblptru	equ	0xFF8
  2633                           tblptrh	equ	0xFF7
  2634                           tblptrl	equ	0xFF6
  2635                           tablat	equ	0xFF5
  2636                           prodh	equ	0xFF4
  2637                           prodl	equ	0xFF3
  2638                           postinc0	equ	0xFEE
  2639                           postdec1	equ	0xFE5
  2640                           fsr1l	equ	0xFE1
  2641                           postinc2	equ	0xFDE
  2642                           postdec2	equ	0xFDD
  2643                           fsr2h	equ	0xFDA
  2644                           fsr2l	equ	0xFD9
  2645                           status	equ	0xFD8
  2646                           
  2647 ;; *************** function ___ftpack *****************
  2648 ;; Defined at:
  2649 ;;		line 62 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\float.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;  arg             3    0[COMRAM] unsigned um
  2652 ;;  exp             1    3[COMRAM] unsigned char 
  2653 ;;  sign            1    4[COMRAM] unsigned char 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;		None
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  3    0[COMRAM] float 
  2658 ;; Registers used:
  2659 ;;		wreg, status,2, status,0
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2665 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;Total ram usage:        8 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; This function calls:
  2672 ;;		Nothing
  2673 ;; This function is called by:
  2674 ;;		___awtoft
  2675 ;;		___ftadd
  2676 ;;		___ftdiv
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           	psect	text13
  2681  001956                     __ptext13:
  2682                           	opt stack 0
  2683  001956                     ___ftpack:
  2684                           	opt stack 29
  2685                           
  2686                           ;incstack = 0
  2687  001956  5004               	movf	___ftpack@exp,w,c
  2688  001958  B4D8               	btfsc	status,2,c
  2689  00195A  D005               	goto	l1506
  2690  00195C  5001               	movf	___ftpack@arg,w,c
  2691  00195E  1002               	iorwf	___ftpack@arg+1,w,c
  2692  001960  1003               	iorwf	___ftpack@arg+2,w,c
  2693  001962  A4D8               	btfss	status,2,c
  2694  001964  D00E               	goto	l1512
  2695  001966                     l1506:
  2696  001966  0E00               	movlw	0
  2697  001968  6E01               	movwf	?___ftpack,c
  2698  00196A  0E00               	movlw	0
  2699  00196C  6E02               	movwf	?___ftpack+1,c
  2700  00196E  0E00               	movlw	0
  2701  001970  6E03               	movwf	?___ftpack+2,c
  2702  001972  D053               	goto	l579
  2703  001974  D006               	goto	l1512
  2704  001976                     l1510:
  2705  001976  2A04               	incf	___ftpack@exp,f,c
  2706  001978  90D8               	bcf	status,0,c
  2707  00197A  3203               	rrcf	___ftpack@arg+2,f,c
  2708  00197C  3202               	rrcf	___ftpack@arg+1,f,c
  2709  00197E  3201               	rrcf	___ftpack@arg,f,c
  2710  001980  D000               	goto	l1512
  2711  001982                     l1512:
  2712  001982  0E00               	movlw	0
  2713  001984  1401               	andwf	___ftpack@arg,w,c
  2714  001986  6E06               	movwf	??___ftpack& (0+255),c
  2715  001988  0E00               	movlw	0
  2716  00198A  1402               	andwf	___ftpack@arg+1,w,c
  2717  00198C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2718  00198E  0EFE               	movlw	254
  2719  001990  1403               	andwf	___ftpack@arg+2,w,c
  2720  001992  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2721  001994  5006               	movf	??___ftpack,w,c
  2722  001996  1007               	iorwf	??___ftpack+1,w,c
  2723  001998  1008               	iorwf	??___ftpack+2,w,c
  2724  00199A  B4D8               	btfsc	status,2,c
  2725  00199C  D00E               	goto	l1518
  2726  00199E  D7EB               	goto	l1510
  2727  0019A0  D00C               	goto	l1518
  2728  0019A2                     l1514:
  2729  0019A2  2A04               	incf	___ftpack@exp,f,c
  2730  0019A4  0E01               	movlw	1
  2731  0019A6  2601               	addwf	___ftpack@arg,f,c
  2732  0019A8  0E00               	movlw	0
  2733  0019AA  2202               	addwfc	___ftpack@arg+1,f,c
  2734  0019AC  0E00               	movlw	0
  2735  0019AE  2203               	addwfc	___ftpack@arg+2,f,c
  2736  0019B0  90D8               	bcf	status,0,c
  2737  0019B2  3203               	rrcf	___ftpack@arg+2,f,c
  2738  0019B4  3202               	rrcf	___ftpack@arg+1,f,c
  2739  0019B6  3201               	rrcf	___ftpack@arg,f,c
  2740  0019B8  D000               	goto	l1518
  2741  0019BA                     l1518:
  2742  0019BA  0E00               	movlw	0
  2743  0019BC  1401               	andwf	___ftpack@arg,w,c
  2744  0019BE  6E06               	movwf	??___ftpack& (0+255),c
  2745  0019C0  0E00               	movlw	0
  2746  0019C2  1402               	andwf	___ftpack@arg+1,w,c
  2747  0019C4  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2748  0019C6  0EFF               	movlw	255
  2749  0019C8  1403               	andwf	___ftpack@arg+2,w,c
  2750  0019CA  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2751  0019CC  5006               	movf	??___ftpack,w,c
  2752  0019CE  1007               	iorwf	??___ftpack+1,w,c
  2753  0019D0  1008               	iorwf	??___ftpack+2,w,c
  2754  0019D2  B4D8               	btfsc	status,2,c
  2755  0019D4  D008               	goto	l1522
  2756  0019D6  D7E5               	goto	l1514
  2757  0019D8  D006               	goto	l1522
  2758  0019DA                     l1520:
  2759  0019DA  0604               	decf	___ftpack@exp,f,c
  2760  0019DC  90D8               	bcf	status,0,c
  2761  0019DE  3601               	rlcf	___ftpack@arg,f,c
  2762  0019E0  3602               	rlcf	___ftpack@arg+1,f,c
  2763  0019E2  3603               	rlcf	___ftpack@arg+2,f,c
  2764  0019E4  D000               	goto	l1522
  2765  0019E6                     l1522:
  2766  0019E6  BE02               	btfsc	___ftpack@arg+1,7,c
  2767  0019E8  D004               	goto	l590
  2768  0019EA  0E02               	movlw	2
  2769  0019EC  6004               	cpfslt	___ftpack@exp,c
  2770  0019EE  D7F5               	goto	l1520
  2771  0019F0  D000               	goto	l590
  2772  0019F2                     l590:
  2773  0019F2  B004               	btfsc	___ftpack@exp,0,c
  2774  0019F4  D002               	goto	l1528
  2775  0019F6  9E02               	bcf	___ftpack@arg+1,7,c
  2776  0019F8  D000               	goto	l1528
  2777  0019FA                     l1528:
  2778  0019FA  90D8               	bcf	status,0,c
  2779  0019FC  3204               	rrcf	___ftpack@exp,f,c
  2780  0019FE  5004               	movf	___ftpack@exp,w,c
  2781  001A00  1203               	iorwf	___ftpack@arg+2,f,c
  2782  001A02  5005               	movf	___ftpack@sign,w,c
  2783  001A04  B4D8               	btfsc	status,2,c
  2784  001A06  D002               	goto	l1534
  2785  001A08  8E03               	bsf	___ftpack@arg+2,7,c
  2786  001A0A  D000               	goto	l1534
  2787  001A0C                     l1534:
  2788  001A0C  C001  F001         	movff	___ftpack@arg,?___ftpack
  2789  001A10  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2790  001A14  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2791  001A18  D000               	goto	l579
  2792  001A1A                     l579:
  2793  001A1A  0012               	return		;funcret
  2794  001A1C                     __end_of___ftpack:
  2795                           	opt stack 0
  2796                           tblptru	equ	0xFF8
  2797                           tblptrh	equ	0xFF7
  2798                           tblptrl	equ	0xFF6
  2799                           tablat	equ	0xFF5
  2800                           prodh	equ	0xFF4
  2801                           prodl	equ	0xFF3
  2802                           postinc0	equ	0xFEE
  2803                           postdec1	equ	0xFE5
  2804                           fsr1l	equ	0xFE1
  2805                           postinc2	equ	0xFDE
  2806                           postdec2	equ	0xFDD
  2807                           fsr2h	equ	0xFDA
  2808                           fsr2l	equ	0xFD9
  2809                           status	equ	0xFD8
  2810                           
  2811 ;; *************** function ___almod *****************
  2812 ;; Defined at:
  2813 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\almod.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  dividend        4   14[COMRAM] long 
  2816 ;;  divisor         4   18[COMRAM] long 
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;  sign            1   23[COMRAM] unsigned char 
  2819 ;;  counter         1   22[COMRAM] unsigned char 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  4   14[COMRAM] long 
  2822 ;; Registers used:
  2823 ;;		wreg, status,2, status,0
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2829 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2830 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2832 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;Total ram usage:       10 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_main
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text14
  2843  001A1C                     __ptext14:
  2844                           	opt stack 0
  2845  001A1C                     ___almod:
  2846                           	opt stack 30
  2847                           
  2848                           ;incstack = 0
  2849  001A1C  0E00               	movlw	0
  2850  001A1E  6E18               	movwf	___almod@sign,c
  2851  001A20  AE12               	btfss	___almod@dividend+3,7,c
  2852  001A22  D00B               	goto	l1696
  2853  001A24  1E12               	comf	___almod@dividend+3,f,c
  2854  001A26  1E11               	comf	___almod@dividend+2,f,c
  2855  001A28  1E10               	comf	___almod@dividend+1,f,c
  2856  001A2A  6C0F               	negf	___almod@dividend,c
  2857  001A2C  0E00               	movlw	0
  2858  001A2E  2210               	addwfc	___almod@dividend+1,f,c
  2859  001A30  2211               	addwfc	___almod@dividend+2,f,c
  2860  001A32  2212               	addwfc	___almod@dividend+3,f,c
  2861  001A34  0E01               	movlw	1
  2862  001A36  6E18               	movwf	___almod@sign,c
  2863  001A38  D000               	goto	l1696
  2864  001A3A                     l1696:
  2865  001A3A  AE16               	btfss	___almod@divisor+3,7,c
  2866  001A3C  D009               	goto	l1700
  2867  001A3E  1E16               	comf	___almod@divisor+3,f,c
  2868  001A40  1E15               	comf	___almod@divisor+2,f,c
  2869  001A42  1E14               	comf	___almod@divisor+1,f,c
  2870  001A44  6C13               	negf	___almod@divisor,c
  2871  001A46  0E00               	movlw	0
  2872  001A48  2214               	addwfc	___almod@divisor+1,f,c
  2873  001A4A  2215               	addwfc	___almod@divisor+2,f,c
  2874  001A4C  2216               	addwfc	___almod@divisor+3,f,c
  2875  001A4E  D000               	goto	l1700
  2876  001A50                     l1700:
  2877  001A50  5013               	movf	___almod@divisor,w,c
  2878  001A52  1014               	iorwf	___almod@divisor+1,w,c
  2879  001A54  1015               	iorwf	___almod@divisor+2,w,c
  2880  001A56  1016               	iorwf	___almod@divisor+3,w,c
  2881  001A58  B4D8               	btfsc	status,2,c
  2882  001A5A  D029               	goto	l1716
  2883  001A5C  0E01               	movlw	1
  2884  001A5E  6E17               	movwf	___almod@counter,c
  2885  001A60  D007               	goto	l1706
  2886  001A62                     l1704:
  2887  001A62  90D8               	bcf	status,0,c
  2888  001A64  3613               	rlcf	___almod@divisor,f,c
  2889  001A66  3614               	rlcf	___almod@divisor+1,f,c
  2890  001A68  3615               	rlcf	___almod@divisor+2,f,c
  2891  001A6A  3616               	rlcf	___almod@divisor+3,f,c
  2892  001A6C  2A17               	incf	___almod@counter,f,c
  2893  001A6E  D000               	goto	l1706
  2894  001A70                     l1706:
  2895  001A70  BE16               	btfsc	___almod@divisor+3,7,c
  2896  001A72  D002               	goto	l1708
  2897  001A74  D7F6               	goto	l1704
  2898  001A76  D000               	goto	l1708
  2899  001A78                     l1708:
  2900  001A78  5013               	movf	___almod@divisor,w,c
  2901  001A7A  5C0F               	subwf	___almod@dividend,w,c
  2902  001A7C  5014               	movf	___almod@divisor+1,w,c
  2903  001A7E  5810               	subwfb	___almod@dividend+1,w,c
  2904  001A80  5015               	movf	___almod@divisor+2,w,c
  2905  001A82  5811               	subwfb	___almod@dividend+2,w,c
  2906  001A84  5016               	movf	___almod@divisor+3,w,c
  2907  001A86  5812               	subwfb	___almod@dividend+3,w,c
  2908  001A88  A0D8               	btfss	status,0,c
  2909  001A8A  D009               	goto	l1712
  2910  001A8C  5013               	movf	___almod@divisor,w,c
  2911  001A8E  5E0F               	subwf	___almod@dividend,f,c
  2912  001A90  5014               	movf	___almod@divisor+1,w,c
  2913  001A92  5A10               	subwfb	___almod@dividend+1,f,c
  2914  001A94  5015               	movf	___almod@divisor+2,w,c
  2915  001A96  5A11               	subwfb	___almod@dividend+2,f,c
  2916  001A98  5016               	movf	___almod@divisor+3,w,c
  2917  001A9A  5A12               	subwfb	___almod@dividend+3,f,c
  2918  001A9C  D000               	goto	l1712
  2919  001A9E                     l1712:
  2920  001A9E  90D8               	bcf	status,0,c
  2921  001AA0  3216               	rrcf	___almod@divisor+3,f,c
  2922  001AA2  3215               	rrcf	___almod@divisor+2,f,c
  2923  001AA4  3214               	rrcf	___almod@divisor+1,f,c
  2924  001AA6  3213               	rrcf	___almod@divisor,f,c
  2925  001AA8  2E17               	decfsz	___almod@counter,f,c
  2926  001AAA  D7E6               	goto	l1708
  2927  001AAC  D000               	goto	l1716
  2928  001AAE                     l1716:
  2929  001AAE  5018               	movf	___almod@sign,w,c
  2930  001AB0  B4D8               	btfsc	status,2,c
  2931  001AB2  D009               	goto	l1720
  2932  001AB4  1E12               	comf	___almod@dividend+3,f,c
  2933  001AB6  1E11               	comf	___almod@dividend+2,f,c
  2934  001AB8  1E10               	comf	___almod@dividend+1,f,c
  2935  001ABA  6C0F               	negf	___almod@dividend,c
  2936  001ABC  0E00               	movlw	0
  2937  001ABE  2210               	addwfc	___almod@dividend+1,f,c
  2938  001AC0  2211               	addwfc	___almod@dividend+2,f,c
  2939  001AC2  2212               	addwfc	___almod@dividend+3,f,c
  2940  001AC4  D000               	goto	l1720
  2941  001AC6                     l1720:
  2942  001AC6  C00F  F00F         	movff	___almod@dividend,?___almod
  2943  001ACA  C010  F010         	movff	___almod@dividend+1,?___almod+1
  2944  001ACE  C011  F011         	movff	___almod@dividend+2,?___almod+2
  2945  001AD2  C012  F012         	movff	___almod@dividend+3,?___almod+3
  2946  001AD6  D000               	goto	l353
  2947  001AD8                     l353:
  2948  001AD8  0012               	return		;funcret
  2949  001ADA                     __end_of___almod:
  2950                           	opt stack 0
  2951                           tblptru	equ	0xFF8
  2952                           tblptrh	equ	0xFF7
  2953                           tblptrl	equ	0xFF6
  2954                           tablat	equ	0xFF5
  2955                           prodh	equ	0xFF4
  2956                           prodl	equ	0xFF3
  2957                           postinc0	equ	0xFEE
  2958                           postdec1	equ	0xFE5
  2959                           fsr1l	equ	0xFE1
  2960                           postinc2	equ	0xFDE
  2961                           postdec2	equ	0xFDD
  2962                           fsr2h	equ	0xFDA
  2963                           fsr2l	equ	0xFD9
  2964                           status	equ	0xFD8
  2965                           
  2966 ;; *************** function ___aldiv *****************
  2967 ;; Defined at:
  2968 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\aldiv.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  dividend        4    0[COMRAM] long 
  2971 ;;  divisor         4    4[COMRAM] long 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  quotient        4   10[COMRAM] long 
  2974 ;;  sign            1    9[COMRAM] unsigned char 
  2975 ;;  counter         1    8[COMRAM] unsigned char 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  4    0[COMRAM] long 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2985 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2986 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;Total ram usage:       14 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_main
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text15
  2999  001878                     __ptext15:
  3000                           	opt stack 0
  3001  001878                     ___aldiv:
  3002                           	opt stack 30
  3003                           
  3004                           ;incstack = 0
  3005  001878  0E00               	movlw	0
  3006  00187A  6E0A               	movwf	___aldiv@sign,c
  3007  00187C  AE08               	btfss	___aldiv@divisor+3,7,c
  3008  00187E  D00B               	goto	l1652
  3009  001880  1E08               	comf	___aldiv@divisor+3,f,c
  3010  001882  1E07               	comf	___aldiv@divisor+2,f,c
  3011  001884  1E06               	comf	___aldiv@divisor+1,f,c
  3012  001886  6C05               	negf	___aldiv@divisor,c
  3013  001888  0E00               	movlw	0
  3014  00188A  2206               	addwfc	___aldiv@divisor+1,f,c
  3015  00188C  2207               	addwfc	___aldiv@divisor+2,f,c
  3016  00188E  2208               	addwfc	___aldiv@divisor+3,f,c
  3017  001890  0E01               	movlw	1
  3018  001892  6E0A               	movwf	___aldiv@sign,c
  3019  001894  D000               	goto	l1652
  3020  001896                     l1652:
  3021  001896  AE04               	btfss	___aldiv@dividend+3,7,c
  3022  001898  D00B               	goto	l1658
  3023  00189A  1E04               	comf	___aldiv@dividend+3,f,c
  3024  00189C  1E03               	comf	___aldiv@dividend+2,f,c
  3025  00189E  1E02               	comf	___aldiv@dividend+1,f,c
  3026  0018A0  6C01               	negf	___aldiv@dividend,c
  3027  0018A2  0E00               	movlw	0
  3028  0018A4  2202               	addwfc	___aldiv@dividend+1,f,c
  3029  0018A6  2203               	addwfc	___aldiv@dividend+2,f,c
  3030  0018A8  2204               	addwfc	___aldiv@dividend+3,f,c
  3031  0018AA  0E01               	movlw	1
  3032  0018AC  1A0A               	xorwf	___aldiv@sign,f,c
  3033  0018AE  D000               	goto	l1658
  3034  0018B0                     l1658:
  3035  0018B0  0E00               	movlw	0
  3036  0018B2  6E0B               	movwf	___aldiv@quotient,c
  3037  0018B4  0E00               	movlw	0
  3038  0018B6  6E0C               	movwf	___aldiv@quotient+1,c
  3039  0018B8  0E00               	movlw	0
  3040  0018BA  6E0D               	movwf	___aldiv@quotient+2,c
  3041  0018BC  0E00               	movlw	0
  3042  0018BE  6E0E               	movwf	___aldiv@quotient+3,c
  3043  0018C0  5005               	movf	___aldiv@divisor,w,c
  3044  0018C2  1006               	iorwf	___aldiv@divisor+1,w,c
  3045  0018C4  1007               	iorwf	___aldiv@divisor+2,w,c
  3046  0018C6  1008               	iorwf	___aldiv@divisor+3,w,c
  3047  0018C8  B4D8               	btfsc	status,2,c
  3048  0018CA  D02F               	goto	l1680
  3049  0018CC  0E01               	movlw	1
  3050  0018CE  6E09               	movwf	___aldiv@counter,c
  3051  0018D0  D007               	goto	l1666
  3052  0018D2                     l1664:
  3053  0018D2  90D8               	bcf	status,0,c
  3054  0018D4  3605               	rlcf	___aldiv@divisor,f,c
  3055  0018D6  3606               	rlcf	___aldiv@divisor+1,f,c
  3056  0018D8  3607               	rlcf	___aldiv@divisor+2,f,c
  3057  0018DA  3608               	rlcf	___aldiv@divisor+3,f,c
  3058  0018DC  2A09               	incf	___aldiv@counter,f,c
  3059  0018DE  D000               	goto	l1666
  3060  0018E0                     l1666:
  3061  0018E0  BE08               	btfsc	___aldiv@divisor+3,7,c
  3062  0018E2  D002               	goto	l1668
  3063  0018E4  D7F6               	goto	l1664
  3064  0018E6  D000               	goto	l1668
  3065  0018E8                     l1668:
  3066  0018E8  90D8               	bcf	status,0,c
  3067  0018EA  360B               	rlcf	___aldiv@quotient,f,c
  3068  0018EC  360C               	rlcf	___aldiv@quotient+1,f,c
  3069  0018EE  360D               	rlcf	___aldiv@quotient+2,f,c
  3070  0018F0  360E               	rlcf	___aldiv@quotient+3,f,c
  3071  0018F2  5005               	movf	___aldiv@divisor,w,c
  3072  0018F4  5C01               	subwf	___aldiv@dividend,w,c
  3073  0018F6  5006               	movf	___aldiv@divisor+1,w,c
  3074  0018F8  5802               	subwfb	___aldiv@dividend+1,w,c
  3075  0018FA  5007               	movf	___aldiv@divisor+2,w,c
  3076  0018FC  5803               	subwfb	___aldiv@dividend+2,w,c
  3077  0018FE  5008               	movf	___aldiv@divisor+3,w,c
  3078  001900  5804               	subwfb	___aldiv@dividend+3,w,c
  3079  001902  A0D8               	btfss	status,0,c
  3080  001904  D00A               	goto	l1676
  3081  001906  5005               	movf	___aldiv@divisor,w,c
  3082  001908  5E01               	subwf	___aldiv@dividend,f,c
  3083  00190A  5006               	movf	___aldiv@divisor+1,w,c
  3084  00190C  5A02               	subwfb	___aldiv@dividend+1,f,c
  3085  00190E  5007               	movf	___aldiv@divisor+2,w,c
  3086  001910  5A03               	subwfb	___aldiv@dividend+2,f,c
  3087  001912  5008               	movf	___aldiv@divisor+3,w,c
  3088  001914  5A04               	subwfb	___aldiv@dividend+3,f,c
  3089  001916  800B               	bsf	___aldiv@quotient,0,c
  3090  001918  D000               	goto	l1676
  3091  00191A                     l1676:
  3092  00191A  90D8               	bcf	status,0,c
  3093  00191C  3208               	rrcf	___aldiv@divisor+3,f,c
  3094  00191E  3207               	rrcf	___aldiv@divisor+2,f,c
  3095  001920  3206               	rrcf	___aldiv@divisor+1,f,c
  3096  001922  3205               	rrcf	___aldiv@divisor,f,c
  3097  001924  2E09               	decfsz	___aldiv@counter,f,c
  3098  001926  D7E0               	goto	l1668
  3099  001928  D000               	goto	l1680
  3100  00192A                     l1680:
  3101  00192A  500A               	movf	___aldiv@sign,w,c
  3102  00192C  B4D8               	btfsc	status,2,c
  3103  00192E  D009               	goto	l1684
  3104  001930  1E0E               	comf	___aldiv@quotient+3,f,c
  3105  001932  1E0D               	comf	___aldiv@quotient+2,f,c
  3106  001934  1E0C               	comf	___aldiv@quotient+1,f,c
  3107  001936  6C0B               	negf	___aldiv@quotient,c
  3108  001938  0E00               	movlw	0
  3109  00193A  220C               	addwfc	___aldiv@quotient+1,f,c
  3110  00193C  220D               	addwfc	___aldiv@quotient+2,f,c
  3111  00193E  220E               	addwfc	___aldiv@quotient+3,f,c
  3112  001940  D000               	goto	l1684
  3113  001942                     l1684:
  3114  001942  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  3115  001946  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  3116  00194A  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  3117  00194E  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  3118  001952  D000               	goto	l340
  3119  001954                     l340:
  3120  001954  0012               	return		;funcret
  3121  001956                     __end_of___aldiv:
  3122                           	opt stack 0
  3123                           tblptru	equ	0xFF8
  3124                           tblptrh	equ	0xFF7
  3125                           tblptrl	equ	0xFF6
  3126                           tablat	equ	0xFF5
  3127                           prodh	equ	0xFF4
  3128                           prodl	equ	0xFF3
  3129                           postinc0	equ	0xFEE
  3130                           postdec1	equ	0xFE5
  3131                           fsr1l	equ	0xFE1
  3132                           postinc2	equ	0xFDE
  3133                           postdec2	equ	0xFDD
  3134                           fsr2h	equ	0xFDA
  3135                           fsr2l	equ	0xFD9
  3136                           status	equ	0xFD8
  3137                           
  3138 ;; *************** function _WAIT_HALF_SEC *****************
  3139 ;; Defined at:
  3140 ;;		line 180 in file "Lab6pB1.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;		None
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;		None
  3145 ;; Return value:  Size  Location     Type
  3146 ;;		None               void
  3147 ;; Registers used:
  3148 ;;		wreg, status,2
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;Total ram usage:        0 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; This function calls:
  3161 ;;		Nothing
  3162 ;; This function is called by:
  3163 ;;		_main
  3164 ;;		_WAIT_1_SEC
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text16
  3169  001D34                     __ptext16:
  3170                           	opt stack 0
  3171  001D34                     _WAIT_HALF_SEC:
  3172                           	opt stack 30
  3173                           
  3174                           ;Lab6pB1.c: 182: T0CON = 0x02;
  3175                           
  3176                           ;incstack = 0
  3177  001D34  0E02               	movlw	2
  3178  001D36  6ED5               	movwf	4053,c	;volatile
  3179                           
  3180                           ;Lab6pB1.c: 183: TMR0L = 0xDB;
  3181  001D38  0EDB               	movlw	219
  3182  001D3A  6ED6               	movwf	4054,c	;volatile
  3183                           
  3184                           ;Lab6pB1.c: 184: TMR0H = 0xB;
  3185  001D3C  0E0B               	movlw	11
  3186  001D3E  6ED7               	movwf	4055,c	;volatile
  3187                           
  3188                           ;Lab6pB1.c: 185: INTCONbits.TMR0IF = 0;
  3189  001D40  94F2               	bcf	intcon,2,c	;volatile
  3190                           
  3191                           ;Lab6pB1.c: 186: T0CONbits.TMR0ON = 1;
  3192  001D42  8ED5               	bsf	4053,7,c	;volatile
  3193                           
  3194                           ;Lab6pB1.c: 187: while (INTCONbits.TMR0IF == 0);
  3195  001D44  D000               	goto	l133
  3196  001D46                     l133:
  3197  001D46  A4F2               	btfss	intcon,2,c	;volatile
  3198  001D48  D7FE               	goto	l133
  3199                           
  3200                           ;Lab6pB1.c: 188: T0CONbits.TMR0ON = 0;
  3201  001D4A  9ED5               	bcf	4053,7,c	;volatile
  3202  001D4C  0012               	return		;funcret
  3203  001D4E                     __end_of_WAIT_HALF_SEC:
  3204                           	opt stack 0
  3205                           tblptru	equ	0xFF8
  3206                           tblptrh	equ	0xFF7
  3207                           tblptrl	equ	0xFF6
  3208                           tablat	equ	0xFF5
  3209                           prodh	equ	0xFF4
  3210                           prodl	equ	0xFF3
  3211                           intcon	equ	0xFF2
  3212                           postinc0	equ	0xFEE
  3213                           postdec1	equ	0xFE5
  3214                           fsr1l	equ	0xFE1
  3215                           postinc2	equ	0xFDE
  3216                           postdec2	equ	0xFDD
  3217                           fsr2h	equ	0xFDA
  3218                           fsr2l	equ	0xFD9
  3219                           status	equ	0xFD8
  3220                           
  3221 ;; *************** function _Select_ADC_Channel *****************
  3222 ;; Defined at:
  3223 ;;		line 159 in file "Lab6pB1.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;  channel         1    wreg     unsigned char 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  channel         1    0[COMRAM] unsigned char 
  3228 ;; Return value:  Size  Location     Type
  3229 ;;		None               void
  3230 ;; Registers used:
  3231 ;;		wreg, status,2, status,0, prodl, prodh
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3238 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;Total ram usage:        1 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; This function calls:
  3244 ;;		Nothing
  3245 ;; This function is called by:
  3246 ;;		_main
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           	psect	text17
  3251  001DEA                     __ptext17:
  3252                           	opt stack 0
  3253  001DEA                     _Select_ADC_Channel:
  3254                           	opt stack 30
  3255                           
  3256                           ;incstack = 0
  3257                           ;Select_ADC_Channel@channel stored from wreg
  3258  001DEA  6E01               	movwf	Select_ADC_Channel@channel,c
  3259                           
  3260                           ;Lab6pB1.c: 161: ADCON0 = channel * 4 + 1;
  3261  001DEC  5001               	movf	Select_ADC_Channel@channel,w,c
  3262  001DEE  0D04               	mullw	4
  3263  001DF0  28F3               	incf	prodl,w,c
  3264  001DF2  6EC2               	movwf	4034,c	;volatile
  3265  001DF4  0012               	return		;funcret
  3266  001DF6                     __end_of_Select_ADC_Channel:
  3267                           	opt stack 0
  3268                           tblptru	equ	0xFF8
  3269                           tblptrh	equ	0xFF7
  3270                           tblptrl	equ	0xFF6
  3271                           tablat	equ	0xFF5
  3272                           prodh	equ	0xFF4
  3273                           prodl	equ	0xFF3
  3274                           intcon	equ	0xFF2
  3275                           postinc0	equ	0xFEE
  3276                           postdec1	equ	0xFE5
  3277                           fsr1l	equ	0xFE1
  3278                           postinc2	equ	0xFDE
  3279                           postdec2	equ	0xFDD
  3280                           fsr2h	equ	0xFDA
  3281                           fsr2l	equ	0xFD9
  3282                           status	equ	0xFD8
  3283                           
  3284 ;; *************** function _Init_TRIS *****************
  3285 ;; Defined at:
  3286 ;;		line 137 in file "Lab6pB1.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;		None
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;		None
  3291 ;; Return value:  Size  Location     Type
  3292 ;;		None               void
  3293 ;; Registers used:
  3294 ;;		wreg, status,2
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;Total ram usage:        0 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_main
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text18
  3314  001D80                     __ptext18:
  3315                           	opt stack 0
  3316  001D80                     _Init_TRIS:
  3317                           	opt stack 30
  3318                           
  3319                           ;Lab6pB1.c: 139: TRISA = 0x0F;
  3320                           
  3321                           ;incstack = 0
  3322  001D80  0E0F               	movlw	15
  3323  001D82  6E92               	movwf	3986,c	;volatile
  3324                           
  3325                           ;Lab6pB1.c: 140: TRISB = 0x00;
  3326  001D84  0E00               	movlw	0
  3327  001D86  6E93               	movwf	3987,c	;volatile
  3328                           
  3329                           ;Lab6pB1.c: 141: TRISC = 0x00;
  3330  001D88  0E00               	movlw	0
  3331  001D8A  6E94               	movwf	3988,c	;volatile
  3332                           
  3333                           ;Lab6pB1.c: 142: TRISD = 0x00;
  3334  001D8C  0E00               	movlw	0
  3335  001D8E  6E95               	movwf	3989,c	;volatile
  3336                           
  3337                           ;Lab6pB1.c: 143: TRISE = 0x00;
  3338  001D90  0E00               	movlw	0
  3339  001D92  6E96               	movwf	3990,c	;volatile
  3340  001D94  0012               	return		;funcret
  3341  001D96                     __end_of_Init_TRIS:
  3342                           	opt stack 0
  3343                           tblptru	equ	0xFF8
  3344                           tblptrh	equ	0xFF7
  3345                           tblptrl	equ	0xFF6
  3346                           tablat	equ	0xFF5
  3347                           prodh	equ	0xFF4
  3348                           prodl	equ	0xFF3
  3349                           intcon	equ	0xFF2
  3350                           postinc0	equ	0xFEE
  3351                           postdec1	equ	0xFE5
  3352                           fsr1l	equ	0xFE1
  3353                           postinc2	equ	0xFDE
  3354                           postdec2	equ	0xFDD
  3355                           fsr2h	equ	0xFDA
  3356                           fsr2l	equ	0xFD9
  3357                           status	equ	0xFD8
  3358                           
  3359 ;; *************** function _Init_ADC *****************
  3360 ;; Defined at:
  3361 ;;		line 130 in file "Lab6pB1.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;		None
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;		None
  3366 ;; Return value:  Size  Location     Type
  3367 ;;		None               void
  3368 ;; Registers used:
  3369 ;;		wreg, status,2
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;Total ram usage:        0 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; This function calls:
  3382 ;;		Nothing
  3383 ;; This function is called by:
  3384 ;;		_main
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           	psect	text19
  3389  001DDC                     __ptext19:
  3390                           	opt stack 0
  3391  001DDC                     _Init_ADC:
  3392                           	opt stack 30
  3393                           
  3394                           ;Lab6pB1.c: 132: ADCON0 = 0b00000001;
  3395                           
  3396                           ;incstack = 0
  3397  001DDC  0E01               	movlw	1
  3398  001DDE  6EC2               	movwf	4034,c	;volatile
  3399                           
  3400                           ;Lab6pB1.c: 133: ADCON1 = 0b00011011;
  3401  001DE0  0E1B               	movlw	27
  3402  001DE2  6EC1               	movwf	4033,c	;volatile
  3403                           
  3404                           ;Lab6pB1.c: 134: ADCON2 = 0b11001001;
  3405  001DE4  0EC9               	movlw	201
  3406  001DE6  6EC0               	movwf	4032,c	;volatile
  3407  001DE8  0012               	return		;funcret
  3408  001DEA                     __end_of_Init_ADC:
  3409                           	opt stack 0
  3410                           tblptru	equ	0xFF8
  3411                           tblptrh	equ	0xFF7
  3412                           tblptrl	equ	0xFF6
  3413                           tablat	equ	0xFF5
  3414                           prodh	equ	0xFF4
  3415                           prodl	equ	0xFF3
  3416                           intcon	equ	0xFF2
  3417                           postinc0	equ	0xFEE
  3418                           postdec1	equ	0xFE5
  3419                           fsr1l	equ	0xFE1
  3420                           postinc2	equ	0xFDE
  3421                           postdec2	equ	0xFDD
  3422                           fsr2h	equ	0xFDA
  3423                           fsr2l	equ	0xFD9
  3424                           status	equ	0xFD8
  3425                           
  3426 ;; *************** function _Deactivate_Buzzer *****************
  3427 ;; Defined at:
  3428 ;;		line 200 in file "Lab6pB1.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;		None
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;		None
  3433 ;; Return value:  Size  Location     Type
  3434 ;;		None               void
  3435 ;; Registers used:
  3436 ;;		wreg, status,2
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3446 ;;Total ram usage:        0 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_main
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           	psect	text20
  3456  001DF6                     __ptext20:
  3457                           	opt stack 0
  3458  001DF6                     _Deactivate_Buzzer:
  3459                           	opt stack 30
  3460                           
  3461                           ;Lab6pB1.c: 202: CCP2CON = 0x0;
  3462                           
  3463                           ;incstack = 0
  3464  001DF6  0E00               	movlw	0
  3465  001DF8  6EBA               	movwf	4026,c	;volatile
  3466                           
  3467                           ;Lab6pB1.c: 203: PORTBbits.RB3 = 0;
  3468  001DFA  9681               	bcf	3969,3,c	;volatile
  3469  001DFC  0012               	return		;funcret
  3470  001DFE                     __end_of_Deactivate_Buzzer:
  3471                           	opt stack 0
  3472                           tblptru	equ	0xFF8
  3473                           tblptrh	equ	0xFF7
  3474                           tblptrl	equ	0xFF6
  3475                           tablat	equ	0xFF5
  3476                           prodh	equ	0xFF4
  3477                           prodl	equ	0xFF3
  3478                           intcon	equ	0xFF2
  3479                           postinc0	equ	0xFEE
  3480                           postdec1	equ	0xFE5
  3481                           fsr1l	equ	0xFE1
  3482                           postinc2	equ	0xFDE
  3483                           postdec2	equ	0xFDD
  3484                           fsr2h	equ	0xFDA
  3485                           fsr2l	equ	0xFD9
  3486                           status	equ	0xFD8
  3487                           
  3488 ;; *************** function _D1_Yellow *****************
  3489 ;; Defined at:
  3490 ;;		line 247 in file "Lab6pB1.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;		None
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;		None
  3495 ;; Return value:  Size  Location     Type
  3496 ;;		None               void
  3497 ;; Registers used:
  3498 ;;		None
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;Total ram usage:        0 bytes
  3509 ;; Hardware stack levels used:    1
  3510 ;; This function calls:
  3511 ;;		Nothing
  3512 ;; This function is called by:
  3513 ;;		_main
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           	psect	text21
  3518  001DFE                     __ptext21:
  3519                           	opt stack 0
  3520  001DFE                     _D1_Yellow:
  3521                           	opt stack 30
  3522                           
  3523                           ;Lab6pB1.c: 249: PORTBbits.RB4 = 1;
  3524                           
  3525                           ;incstack = 0
  3526  001DFE  8881               	bsf	3969,4,c	;volatile
  3527                           
  3528                           ;Lab6pB1.c: 250: PORTBbits.RB5 = 1;
  3529  001E00  8A81               	bsf	3969,5,c	;volatile
  3530                           
  3531                           ;Lab6pB1.c: 251: PORTBbits.RB6 = 0;
  3532  001E02  9C81               	bcf	3969,6,c	;volatile
  3533  001E04  0012               	return		;funcret
  3534  001E06                     __end_of_D1_Yellow:
  3535                           	opt stack 0
  3536                           tblptru	equ	0xFF8
  3537                           tblptrh	equ	0xFF7
  3538                           tblptrl	equ	0xFF6
  3539                           tablat	equ	0xFF5
  3540                           prodh	equ	0xFF4
  3541                           prodl	equ	0xFF3
  3542                           intcon	equ	0xFF2
  3543                           postinc0	equ	0xFEE
  3544                           postdec1	equ	0xFE5
  3545                           fsr1l	equ	0xFE1
  3546                           postinc2	equ	0xFDE
  3547                           postdec2	equ	0xFDD
  3548                           fsr2h	equ	0xFDA
  3549                           fsr2l	equ	0xFD9
  3550                           status	equ	0xFD8
  3551                           
  3552 ;; *************** function _BCD_Upper_Digit *****************
  3553 ;; Defined at:
  3554 ;;		line 207 in file "Lab6pB1.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  digit           1    wreg     unsigned char 
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  digit           1    1[COMRAM] unsigned char 
  3559 ;;  Port_E          1    0[COMRAM] unsigned char 
  3560 ;; Return value:  Size  Location     Type
  3561 ;;		None               void
  3562 ;; Registers used:
  3563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3570 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3572 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3573 ;;Total ram usage:        2 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; This function calls:
  3576 ;;		Nothing
  3577 ;; This function is called by:
  3578 ;;		_main
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text22
  3583  001C46                     __ptext22:
  3584                           	opt stack 0
  3585  001C46                     _BCD_Upper_Digit:
  3586                           	opt stack 30
  3587                           
  3588                           ;incstack = 0
  3589                           ;BCD_Upper_Digit@digit stored from wreg
  3590  001C46  6E02               	movwf	BCD_Upper_Digit@digit,c
  3591                           
  3592                           ;Lab6pB1.c: 209: PORTC = array[digit];
  3593  001C48  5002               	movf	BCD_Upper_Digit@digit,w,c
  3594  001C4A  0D01               	mullw	1
  3595  001C4C  0E3D               	movlw	low _array
  3596  001C4E  24F3               	addwf	prodl,w,c
  3597  001C50  6ED9               	movwf	fsr2l,c
  3598  001C52  0E00               	movlw	high _array
  3599  001C54  20F4               	addwfc	prodh,w,c
  3600  001C56  6EDA               	movwf	fsr2h,c
  3601  001C58  50DF               	movf	indf2,w,c
  3602  001C5A  6E82               	movwf	3970,c	;volatile
  3603                           
  3604                           ;Lab6pB1.c: 210: char Port_E = array[digit] & 0x40;
  3605  001C5C  5002               	movf	BCD_Upper_Digit@digit,w,c
  3606  001C5E  0D01               	mullw	1
  3607  001C60  0E3D               	movlw	low _array
  3608  001C62  24F3               	addwf	prodl,w,c
  3609  001C64  6ED9               	movwf	fsr2l,c
  3610  001C66  0E00               	movlw	high _array
  3611  001C68  20F4               	addwfc	prodh,w,c
  3612  001C6A  6EDA               	movwf	fsr2h,c
  3613  001C6C  50DF               	movf	indf2,w,c
  3614  001C6E  0B40               	andlw	64
  3615  001C70  6E01               	movwf	BCD_Upper_Digit@Port_E,c
  3616                           
  3617                           ;Lab6pB1.c: 211: if (Port_E == 0) PORTE = 0x00;
  3618  001C72  5001               	movf	BCD_Upper_Digit@Port_E,w,c
  3619  001C74  A4D8               	btfss	status,2,c
  3620  001C76  D002               	goto	l1074
  3621  001C78  0E00               	movlw	0
  3622  001C7A  D001               	goto	L2
  3623  001C7C                     l1074:
  3624                           
  3625                           ;Lab6pB1.c: 212: else PORTE = 0x01;
  3626  001C7C  0E01               	movlw	1
  3627  001C7E                     L2:
  3628  001C7E  6E84               	movwf	3972,c	;volatile
  3629  001C80  D000               	goto	l147
  3630  001C82                     l147:
  3631  001C82  0012               	return		;funcret
  3632  001C84                     __end_of_BCD_Upper_Digit:
  3633                           	opt stack 0
  3634                           tblptru	equ	0xFF8
  3635                           tblptrh	equ	0xFF7
  3636                           tblptrl	equ	0xFF6
  3637                           tablat	equ	0xFF5
  3638                           prodh	equ	0xFF4
  3639                           prodl	equ	0xFF3
  3640                           intcon	equ	0xFF2
  3641                           postinc0	equ	0xFEE
  3642                           postdec1	equ	0xFE5
  3643                           fsr1l	equ	0xFE1
  3644                           indf2	equ	0xFDF
  3645                           postinc2	equ	0xFDE
  3646                           postdec2	equ	0xFDD
  3647                           fsr2h	equ	0xFDA
  3648                           fsr2l	equ	0xFD9
  3649                           status	equ	0xFD8
  3650                           
  3651 ;; *************** function _BCD_Lower_Digit *****************
  3652 ;; Defined at:
  3653 ;;		line 215 in file "Lab6pB1.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  digit           1    wreg     unsigned char 
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;  digit           1    0[COMRAM] unsigned char 
  3658 ;; Return value:  Size  Location     Type
  3659 ;;		None               void
  3660 ;; Registers used:
  3661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3668 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3670 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3671 ;;Total ram usage:        1 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; This function calls:
  3674 ;;		Nothing
  3675 ;; This function is called by:
  3676 ;;		_main
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text23
  3681  001D4E                     __ptext23:
  3682                           	opt stack 0
  3683  001D4E                     _BCD_Lower_Digit:
  3684                           	opt stack 30
  3685                           
  3686                           ;incstack = 0
  3687                           ;BCD_Lower_Digit@digit stored from wreg
  3688  001D4E  6E01               	movwf	BCD_Lower_Digit@digit,c
  3689                           
  3690                           ;Lab6pB1.c: 217: PORTD = array[digit];
  3691  001D50  5001               	movf	BCD_Lower_Digit@digit,w,c
  3692  001D52  0D01               	mullw	1
  3693  001D54  0E3D               	movlw	low _array
  3694  001D56  24F3               	addwf	prodl,w,c
  3695  001D58  6ED9               	movwf	fsr2l,c
  3696  001D5A  0E00               	movlw	high _array
  3697  001D5C  20F4               	addwfc	prodh,w,c
  3698  001D5E  6EDA               	movwf	fsr2h,c
  3699  001D60  50DF               	movf	indf2,w,c
  3700  001D62  6E83               	movwf	3971,c	;volatile
  3701                           
  3702                           ;Lab6pB1.c: 218: PORTDbits.RD7 = 1;
  3703  001D64  8E83               	bsf	3971,7,c	;volatile
  3704  001D66  0012               	return		;funcret
  3705  001D68                     __end_of_BCD_Lower_Digit:
  3706                           	opt stack 0
  3707                           tblptru	equ	0xFF8
  3708                           tblptrh	equ	0xFF7
  3709                           tblptrl	equ	0xFF6
  3710                           tablat	equ	0xFF5
  3711                           prodh	equ	0xFF4
  3712                           prodl	equ	0xFF3
  3713                           intcon	equ	0xFF2
  3714                           postinc0	equ	0xFEE
  3715                           postdec1	equ	0xFE5
  3716                           fsr1l	equ	0xFE1
  3717                           indf2	equ	0xFDF
  3718                           postinc2	equ	0xFDE
  3719                           postdec2	equ	0xFDD
  3720                           fsr2h	equ	0xFDA
  3721                           fsr2l	equ	0xFD9
  3722                           status	equ	0xFD8
  3723                           
  3724 ;; *************** function _BCD_DP *****************
  3725 ;; Defined at:
  3726 ;;		line 221 in file "Lab6pB1.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;  dp              1    wreg     unsigned char 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  dp              1    1[COMRAM] unsigned char 
  3731 ;; Return value:  Size  Location     Type
  3732 ;;		None               void
  3733 ;; Registers used:
  3734 ;;		wreg, status,2, status,0
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3742 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3743 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3744 ;;Total ram usage:        2 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; This function calls:
  3747 ;;		Nothing
  3748 ;; This function is called by:
  3749 ;;		_main
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           	psect	text24
  3754  001D68                     __ptext24:
  3755                           	opt stack 0
  3756  001D68                     _BCD_DP:
  3757                           	opt stack 30
  3758                           
  3759                           ;incstack = 0
  3760                           ;BCD_DP@dp stored from wreg
  3761  001D68  6E02               	movwf	BCD_DP@dp,c
  3762                           
  3763                           ;Lab6pB1.c: 223: PORTDbits.RD7 = ~dp;
  3764  001D6A  5002               	movf	BCD_DP@dp,w,c
  3765  001D6C  0AFF               	xorlw	255
  3766  001D6E  6E01               	movwf	??_BCD_DP& (0+255),c
  3767  001D70  3201               	rrcf	??_BCD_DP,f,c
  3768  001D72  3201               	rrcf	??_BCD_DP,f,c
  3769  001D74  5083               	movf	3971,w,c	;volatile
  3770  001D76  1801               	xorwf	??_BCD_DP,w,c
  3771  001D78  0B7F               	andlw	-129
  3772  001D7A  1801               	xorwf	??_BCD_DP,w,c
  3773  001D7C  6E83               	movwf	3971,c	;volatile
  3774  001D7E  0012               	return		;funcret
  3775  001D80                     __end_of_BCD_DP:
  3776                           	opt stack 0
  3777                           tblptru	equ	0xFF8
  3778                           tblptrh	equ	0xFF7
  3779                           tblptrl	equ	0xFF6
  3780                           tablat	equ	0xFF5
  3781                           prodh	equ	0xFF4
  3782                           prodl	equ	0xFF3
  3783                           intcon	equ	0xFF2
  3784                           postinc0	equ	0xFEE
  3785                           postdec1	equ	0xFE5
  3786                           fsr1l	equ	0xFE1
  3787                           indf2	equ	0xFDF
  3788                           postinc2	equ	0xFDE
  3789                           postdec2	equ	0xFDD
  3790                           fsr2h	equ	0xFDA
  3791                           fsr2l	equ	0xFD9
  3792                           status	equ	0xFD8
  3793                           
  3794 ;; *************** function _Activate_Buzzer *****************
  3795 ;; Defined at:
  3796 ;;		line 192 in file "Lab6pB1.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;		None               void
  3803 ;; Registers used:
  3804 ;;		wreg, status,2
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3814 ;;Total ram usage:        0 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		_main
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           	psect	text25
  3824  001DBC                     __ptext25:
  3825                           	opt stack 0
  3826  001DBC                     _Activate_Buzzer:
  3827                           	opt stack 30
  3828                           
  3829                           ;Lab6pB1.c: 194: PR2 = 0b11111001 ;
  3830                           
  3831                           ;incstack = 0
  3832  001DBC  0EF9               	movlw	249
  3833  001DBE  6ECB               	movwf	4043,c	;volatile
  3834                           
  3835                           ;Lab6pB1.c: 195: T2CON = 0b00000101 ;
  3836  001DC0  0E05               	movlw	5
  3837  001DC2  6ECA               	movwf	4042,c	;volatile
  3838                           
  3839                           ;Lab6pB1.c: 196: CCPR2L = 0b01001010 ;
  3840  001DC4  0E4A               	movlw	74
  3841  001DC6  6EBB               	movwf	4027,c	;volatile
  3842                           
  3843                           ;Lab6pB1.c: 197: CCP2CON = 0b00111100 ;
  3844  001DC8  0E3C               	movlw	60
  3845  001DCA  6EBA               	movwf	4026,c	;volatile
  3846  001DCC  0012               	return		;funcret
  3847  001DCE                     __end_of_Activate_Buzzer:
  3848                           	opt stack 0
  3849                           tblptru	equ	0xFF8
  3850                           tblptrh	equ	0xFF7
  3851                           tblptrl	equ	0xFF6
  3852                           tablat	equ	0xFF5
  3853                           prodh	equ	0xFF4
  3854                           prodl	equ	0xFF3
  3855                           intcon	equ	0xFF2
  3856                           postinc0	equ	0xFEE
  3857                           postdec1	equ	0xFE5
  3858                           fsr1l	equ	0xFE1
  3859                           indf2	equ	0xFDF
  3860                           postinc2	equ	0xFDE
  3861                           postdec2	equ	0xFDD
  3862                           fsr2h	equ	0xFDA
  3863                           fsr2l	equ	0xFD9
  3864                           status	equ	0xFD8
  3865                           tblptru	equ	0xFF8
  3866                           tblptrh	equ	0xFF7
  3867                           tblptrl	equ	0xFF6
  3868                           tablat	equ	0xFF5
  3869                           prodh	equ	0xFF4
  3870                           prodl	equ	0xFF3
  3871                           intcon	equ	0xFF2
  3872                           postinc0	equ	0xFEE
  3873                           postdec1	equ	0xFE5
  3874                           fsr1l	equ	0xFE1
  3875                           indf2	equ	0xFDF
  3876                           postinc2	equ	0xFDE
  3877                           postdec2	equ	0xFDD
  3878                           fsr2h	equ	0xFDA
  3879                           fsr2l	equ	0xFD9
  3880                           status	equ	0xFD8
  3881                           
  3882                           	psect	rparam
  3883  0000                     tblptru	equ	0xFF8
  3884                           tblptrh	equ	0xFF7
  3885                           tblptrl	equ	0xFF6
  3886                           tablat	equ	0xFF5
  3887                           prodh	equ	0xFF4
  3888                           prodl	equ	0xFF3
  3889                           intcon	equ	0xFF2
  3890                           postinc0	equ	0xFEE
  3891                           postdec1	equ	0xFE5
  3892                           fsr1l	equ	0xFE1
  3893                           indf2	equ	0xFDF
  3894                           postinc2	equ	0xFDE
  3895                           postdec2	equ	0xFDD
  3896                           fsr2h	equ	0xFDA
  3897                           fsr2l	equ	0xFD9
  3898                           status	equ	0xFD8


Data Sizes:
    Strings     26
    Constant    40
    Data        18
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     60      78
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          244      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_1(CODE[26]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___llmod
    ___llmod->___lldiv
    _init_UART->_OpenUSART
    ___ftdiv->___awtoft
    ___ftadd->___ftpack
    ___awtoft->___ftpack
    ___almod->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   11819
                                             40 COMRAM    20    20      0
                    _Activate_Buzzer
                             _BCD_DP
                    _BCD_Lower_Digit
                    _BCD_Upper_Digit
                          _D1_Yellow
                  _Deactivate_Buzzer
                           _Init_ADC
                          _Init_TRIS
                 _Select_ADC_Channel
                      _WAIT_HALF_SEC
                            ___aldiv
                            ___almod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftneg
                            ___fttol
                       _get_full_ADC
                          _init_UART
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              27    21      6    1089
                                             22 COMRAM    18    12      6
                            ___lldiv
                            ___llmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     287
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     290
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0     284
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _get_full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     316
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     109
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2797
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    3203
                                              8 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2186
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2031
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___almod                                             10     2      8     552
                                             14 COMRAM    10     2      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     812
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _WAIT_HALF_SEC                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Select_ADC_Channel                                   1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_TRIS                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Deactivate_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _D1_Yellow                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BCD_Upper_Digit                                      2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _BCD_Lower_Digit                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BCD_DP                                               2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Activate_Buzzer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Activate_Buzzer
   _BCD_DP
   _BCD_Lower_Digit
   _BCD_Upper_Digit
   _D1_Yellow
   _Deactivate_Buzzer
   _Init_ADC
   _Init_TRIS
   _Select_ADC_Channel
   _WAIT_HALF_SEC
   ___aldiv
   ___almod
     ___aldiv (ARG)
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftneg
   ___fttol
   _get_full_ADC
   _init_UART
     _OpenUSART
   _printf
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EF3      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           F4      0       0      33        0.0%
BANK14              F4      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BIGRAM_1            80      0       0      37        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3C      4E       1       61.4%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4E       6        0.0%
DATA                 0      0      4E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Oct 18 11:54:49 2022

          main@R_ref_current 002E           __size_of_D1_Yellow 0008                 ___ftadd@exp1 0014  
               ___ftadd@exp2 0013                 ___ftadd@sign 0012                          l100 1316  
                        l115 1DD2                          l124 1CEE                          l133 1D46  
                        l222 137A                          l127 1D0E                          l147 1C82  
                        l235 14EA                          l340 1954                          l263 1C1C  
                        l264 1C1E                          l353 1AD8                          l265 1C28  
                        l266 1C2A                          l259 1C02                          l620 16AE  
                        l268 1C44                          l623 155A                          l634 161C  
                        l643 1638                          l619 1530                          l651 1876  
                        l590 19F2                          l654 1842                          l726 1B54  
                        l736 1BC4                          l489 1CBE                          l579 1A1A  
                        l676 1D26                          l687 1794            main@R_ref_voltage 002B  
                        _PR2 000FCB            _Deactivate_Buzzer 1DF6                          prod 000FF3  
         ?_Deactivate_Buzzer 0001                 __CFG_LVP$OFF 000000                 ___ftdiv@cntr 0016  
               ___ftdiv@sign 001B                 __CFG_WDT$OFF 000000                         l1074 1C7C  
                       l1510 1976                         l1520 19DA                         l1512 1982  
                       l1600 134C                         l1522 19E6                         l1514 19A2  
                       l1506 1966                         l1610 13BE                         l1700 1A50  
                       l1534 1A0C                         l1518 19BA                         l1470 1C06  
                       l1462 1BF2                         l1630 141C                         l1622 13E8  
                       l1606 139A                         l1720 1AC6                         l1712 1A9E  
                       l1704 1A62                         l1528 19FA                         l1800 17B4  
                       l1544 1AFC                         l1640 14BA                         l1616 13D8  
                       l1706 1A70                         l1802 17CE                         l1466 1BFA  
                       l1458 1BE8                         l1546 1B0A                         l1634 1430  
                       l1626 1418                         l1618 13DC                         l1642 14CE  
                       l1652 1896                         l1708 1A78                         l1716 1AAE  
                       l1732 153E                         l1556 1B44                         l1548 1B12  
                       l1572 1BB4                         l1564 1B78                         l1636 143C  
                       l1806 17DC                         l1478 1C14                         l1566 1B86  
                       l1590 132A                         l1664 18D2                         l1680 192A  
                       l1760 15C0                         l1744 1574                         l1568 1B8E  
                       l1666 18E0                         l1658 18B0                         l1762 15CC  
                       l1754 159C                         l1738 1568                         l1826 181C  
                       l1594 133A                         l1684 1942                         l1676 191A  
                       l1668 18E8                         l1780 1656                         l1772 1604  
                       l1764 15D8                         l1836 1850                         l1596 1342  
                       l1940 1218                         l1790 1688                         l1774 1610  
                       l1766 15E0                         l1862 16CE                         l1950 12CA  
                       l1934 1194                         l1918 1066                         l1696 1A3A  
                       l1848 1C9A                         l1880 1728                         l1960 12F4  
                       l1890 1752                         l1962 1308                         l1892 1760  
                       l1884 1738                         l1886 173E                         l1894 176A  
                       l1966 1312                         l1898 1782                         STR_1 1029  
                       u1601 17C4                         u1371 14FC                         u1381 1510  
                       u1651 16C0                         u1740 122E                         u1581 17A6  
                       u1670 16EC                         u1750 12C4                         u1760 12E2  
                       u1675 16E4                         _TRMT 007D61          ??_Deactivate_Buzzer 0001  
                       _main 1044                 ___ftpack@arg 0001                 ___ftpack@exp 0004  
             ??_get_full_ADC 0003                         fsr2h 000FDA                         fsr1l 000FE1  
                       indf2 000FDF                         fsr2l 000FD9                         prodh 000FF4  
                       prodl 000FF3                         start 0000                 ___param_bank 000010  
               ___fttol@exp1 000F                 ___fttol@lval 000B    __end_of_Deactivate_Buzzer 1DFE  
            __end_of___aldiv 1956              __end_of___almod 1ADA                        ?_main 0001  
            __end_of___ftadd 16B0              __end_of___ftdiv 1878              __end_of___ftneg 1D34  
            __end_of___lldiv 1B66                        _T0CON 000FD5              __end_of___llmod 1BD6  
            __end_of___fttol 1796                        _T2CON 000FCA                        _RCSTA 000FAB  
                      _TMR0H 000FD7                        _TMR0L 000FD6                        _SPBRG 000FAF  
                      _PORTB 000F81                        _PORTC 000F82                        _PORTD 000F83  
                      _PORTE 000F84                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
                      _TXREG 000FAD                        _TXSTA 000FAC                ___awtoft@sign 000C  
            __end_of_dpowers 1029                        _array 003D                ___ftpack@sign 0005  
                      _putch 1DCE                 main@num_step 0034               __CFG_BOREN$OFF 000000  
                      tablat 000FF5            __end_of_D1_Yellow 1E06                        status 000FD8  
   __size_of_BCD_Upper_Digit 003E              __initialization 1CC0        __end_of_WAIT_HALF_SEC 1D4E  
               __end_of_main 1320             __end_of_Init_ADC 1DEA            ??_BCD_Lower_Digit 0001  
                     ??_main 0029                ___fttol@sign1 000A                __activetblptr 000002  
                     _ADCON0 000FC2                       _ADCON1 000FC1                       _ADCON2 000FC0  
                     _BCD_DP 1D68             ___llmod@dividend 000E                       _ADRESH 000FC4  
                     _ADRESL 000FC3                       _CCPR2L 000FBB             __end_of___awtoft 1CC0  
                     ?_putch 0001             __end_of___ftpack 1A1C                       _OSCCON 000FD3  
         __size_of_Init_TRIS 0016                       _SPBRGH 000FB0           __size_of_OpenUSART 0070  
                  ??___aldiv 0009                    ??___almod 0017     __size_of_Activate_Buzzer 0012  
                  ??___ftadd 000F                    ??___ftdiv 0013                    ??___ftneg 0004  
                  ??___lldiv 0009                    ??___llmod 0016                    ??___fttol 0005  
 __size_of_Deactivate_Buzzer 0008                       _printf 1320         __end_of_get_full_ADC 1D10  
               __pdataCOMRAM 003D                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                       putch@c 0001  
              main@voltage_v 0036                   __accesstop 0080      __end_of__initialization 1CE0  
                 ___ftadd@f1 0009                   ___ftadd@f2 000C                ___rparam_used 000001  
                 ___ftdiv@f1 000D                   ___ftdiv@f2 0010                   ___ftdiv@f3 0017  
                 ___ftneg@f1 0001                   ___awtoft@c 0009                   ___fttol@f1 0001  
             __pcstackCOMRAM 0001            ??_BCD_Upper_Digit 0001                __end_of_putch 1DDC  
          __end_of_Init_TRIS 1D96            __end_of_OpenUSART 1C46                      ?_BCD_DP 0001  
                    ??_putch 0001                    ?_Init_ADC 0001           __size_of_init_UART 0014  
 __end_of_Select_ADC_Channel 1DF6           __CFG_CCP2MX$PORTBE 000000                      _CCP2CON 000FBA  
                  ?___awtoft 0009                    ?___ftpack 0001                      ?_printf 0017  
  Select_ADC_Channel@channel 0001            ??_Activate_Buzzer 0001              __size_of_BCD_DP 0018  
                 ??_Init_ADC 0001              _BCD_Lower_Digit 1D4E                      __Hparam 0000  
                    __Lparam 0000                    _D1_Yellow 1DFE                      ___aldiv 1878  
                    ___almod 1A1C                      ___ftadd 14EC                      ___ftdiv 1796  
                    ___ftneg 1D10                      ___lldiv 1ADA                      ___llmod 1B66  
                    ___fttol 16B0        __size_of_get_full_ADC 0026                 __psmallconst 1000  
                    __pcinit 1CC0                   ??___awtoft 000C                   ??___ftpack 0006  
                    __ramtop 1000                      __ptext0 1044                      __ptext1 1320  
                    __ptext2 1DCE                      __ptext3 1B66                      __ptext4 1ADA  
                    __ptext5 1D96                      __ptext6 1BD6                      __ptext7 1CEA  
                    __ptext8 16B0                      __ptext9 1D10              __size_of_printf 01CC  
          __end_of_init_UART 1DAA                    _T0CONbits 000FD5                      _dpowers 1001  
           ___aldiv@dividend 0001         end_of_initialization 1CE0         BCD_Lower_Digit@digit 0001  
              __Lmediumconst 0000                 _get_full_ADC 1CEA              ___lldiv@divisor 0005  
            ___lldiv@counter 000D                   ?_D1_Yellow 0001                    _RCSTAbits 000FAB  
                    printf@c 0028                      printf@f 0017             ___aldiv@quotient 000B  
                    postdec1 000FE5                      postdec2 000FDD                      postinc0 000FEE  
                    postinc2 000FDE                    _PORTBbits 000F81                    _PORTDbits 000F83  
                  _TRISCbits 000F94      __end_of_BCD_Lower_Digit 1D68                   main@R_test 0039  
     __size_of_WAIT_HALF_SEC 001A               __end_of_BCD_DP 1D80              _BCD_Upper_Digit 1C46  
                ___ftdiv@exp 001A                    _TXSTAbits 000FAC           get_full_ADC@result 0005  
              __pidataCOMRAM 1DAA               __end_of_printf 14EC          start_initialization 1CC0  
           main@R_test_float 0031                    _Init_TRIS 1D80                     ??_BCD_DP 0001  
                   BCD_DP@dp 0002                    _OpenUSART 1BD6              ___llmod@divisor 0012  
           __CFG_OSC$INTIO67 000000            __size_of_Init_ADC 000E              ___llmod@counter 0016  
                ??_D1_Yellow 0001              _Activate_Buzzer 1DBC                _WAIT_HALF_SEC 1D34  
         _Select_ADC_Channel 1DEA                     ??_printf 001D            __size_of___awtoft 003C  
          __size_of___ftpack 00C6          ?_Select_ADC_Channel 0001                   ?_Init_TRIS 0001  
    __end_of_BCD_Upper_Digit 1C84             ?_BCD_Lower_Digit 0001                   ?_OpenUSART 0001  
       ??_Select_ADC_Channel 0001               ?_WAIT_HALF_SEC 0001                     ?___aldiv 0001  
                   ?___almod 000F                     ?___ftadd 0009                     ?___ftdiv 000D  
                   ?___ftneg 0001                     ?___lldiv 0001                     ?___llmod 000E  
      BCD_Upper_Digit@Port_E 0001                     ?___fttol 0001             ___almod@dividend 000F  
                __smallconst 1000                    _init_UART 1D96                     _D2_array 0047  
             __size_of_putch 000E              ___aldiv@divisor 0005      __end_of_Activate_Buzzer 1DCE  
            ___aldiv@counter 0009                     _PIE1bits 000F9D                     _PIR1bits 000F9E  
                 _ADCON0bits 000FC2                   printf@flag 0023                   printf@prec 001F  
                ??_Init_TRIS 0001                   ?_init_UART 0001             ?_BCD_Upper_Digit 0001  
                  copy_data0 1CD4                     _Init_ADC 1DDC                  ??_OpenUSART 0003  
            OpenUSART@config 0003                     __Hrparam 0000              ??_WAIT_HALF_SEC 0001  
                   __Lrparam 0000             __size_of___aldiv 00DE             __size_of___almod 00BE  
           __size_of___ftadd 01C4             __size_of___ftdiv 00E2             __size_of___ftneg 0024  
           __size_of___lldiv 008C             __size_of___llmod 0070             __size_of___fttol 00E6  
                   ___awtoft 1C84                     ___ftpack 1956                     __ptext10 1796  
                   __ptext11 14EC                     __ptext20 1DF6                     __ptext12 1C84  
                   __ptext21 1DFE                     __ptext13 1956                     __ptext22 1C46  
                   __ptext14 1A1C                     __ptext23 1D4E                     __ptext15 1878  
                   __ptext24 1D68                     __ptext16 1D34                     __ptext25 1DBC  
                   __ptext17 1DEA                     __ptext18 1D80                     __ptext19 1DDC  
       BCD_Upper_Digit@digit 0002              ___almod@divisor 0013              ___almod@counter 0017  
           ?_Activate_Buzzer 0001                __size_of_main 02DC                    printf@val 0024  
                 _INTCONbits 000FF2               OpenUSART@spbrg 0001                  ??_init_UART 0004  
           ___lldiv@dividend 0001                     printf@ap 0021             ___lldiv@quotient 0009  
               ___aldiv@sign 000A                 ___almod@sign 0018                ?_get_full_ADC 0001  
   __size_of_BCD_Lower_Digit 001A  __size_of_Select_ADC_Channel 000C  
