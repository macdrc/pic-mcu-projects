

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Oct 18 14:00:25 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           	psect	idataCOMRAM
    40  001DE2                     __pidataCOMRAM:
    41                           	opt stack 0
    42                           
    43                           ;initializer for _array
    44  001DE2  40                 	db	64
    45  001DE3  79                 	db	121
    46  001DE4  24                 	db	36
    47  001DE5  30                 	db	48
    48  001DE6  19                 	db	25
    49  001DE7  12                 	db	18
    50  001DE8  02                 	db	2
    51  001DE9  78                 	db	120
    52  001DEA  00                 	db	0
    53  001DEB  10                 	db	16
    54                           
    55                           ;initializer for _D2_array
    56  001DEC  00                 	db	0
    57  001DED  01                 	db	1
    58  001DEE  02                 	db	2
    59  001DEF  03                 	db	3
    60  001DF0  04                 	db	4
    61  001DF1  05                 	db	5
    62  001DF2  06                 	db	6
    63  001DF3  07                 	db	7
    64                           
    65                           	psect	smallconst
    66  001000                     __psmallconst:
    67                           	opt stack 0
    68  001000  00                 	db	0
    69  001001                     _dpowers:
    70                           	opt stack 0
    71  001001  0001               	dw	1
    72  001003  0000               	dw	0
    73  001005  000A               	dw	10
    74  001007  0000               	dw	0
    75  001009  0064               	dw	100
    76  00100B  0000               	dw	0
    77  00100D  03E8               	dw	1000
    78  00100F  0000               	dw	0
    79  001011  2710               	dw	10000
    80  001013  0000               	dw	0
    81  001015  86A0               	dw	34464
    82  001017  0001               	dw	1
    83  001019  4240               	dw	16960
    84  00101B  000F               	dw	15
    85  00101D  9680               	dw	38528
    86  00101F  0098               	dw	152
    87  001021  E100               	dw	57600
    88  001023  05F5               	dw	1525
    89  001025  CA00               	dw	51712
    90  001027  3B9A               	dw	15258
    91  001029                     __end_of_dpowers:
    92                           	opt stack 0
    93  0000                     _ADCON0	set	4034
    94  0000                     _ADCON0bits	set	4034
    95  0000                     _ADCON1	set	4033
    96  0000                     _ADCON2	set	4032
    97  0000                     _ADRESH	set	4036
    98  0000                     _ADRESL	set	4035
    99  0000                     _CCP2CON	set	4026
   100  0000                     _CCPR2L	set	4027
   101  0000                     _INTCONbits	set	4082
   102  0000                     _OSCCON	set	4051
   103  0000                     _PIE1bits	set	3997
   104  0000                     _PIR1bits	set	3998
   105  0000                     _PORTB	set	3969
   106  0000                     _PORTBbits	set	3969
   107  0000                     _PORTC	set	3970
   108  0000                     _PORTD	set	3971
   109  0000                     _PORTDbits	set	3971
   110  0000                     _PORTE	set	3972
   111  0000                     _PR2	set	4043
   112  0000                     _RCSTA	set	4011
   113  0000                     _RCSTAbits	set	4011
   114  0000                     _SPBRG	set	4015
   115  0000                     _SPBRGH	set	4016
   116  0000                     _T0CON	set	4053
   117  0000                     _T0CONbits	set	4053
   118  0000                     _T2CON	set	4042
   119  0000                     _TMR0H	set	4055
   120  0000                     _TMR0L	set	4054
   121  0000                     _TRISA	set	3986
   122  0000                     _TRISB	set	3987
   123  0000                     _TRISC	set	3988
   124  0000                     _TRISCbits	set	3988
   125  0000                     _TRISD	set	3989
   126  0000                     _TRISE	set	3990
   127  0000                     _TXREG	set	4013
   128  0000                     _TXSTA	set	4012
   129  0000                     _TXSTAbits	set	4012
   130  0000                     _TRMT	set	32097
   131  001029                     STR_1:
   132  001029  54                 	db	84	;'T'
   133  00102A  68                 	db	104	;'h'
   134  00102B  65                 	db	101	;'e'
   135  00102C  20                 	db	32
   136  00102D  52                 	db	82	;'R'
   137  00102E  65                 	db	101	;'e'
   138  00102F  73                 	db	115	;'s'
   139  001030  69                 	db	105	;'i'
   140  001031  73                 	db	115	;'s'
   141  001032  74                 	db	116	;'t'
   142  001033  61                 	db	97	;'a'
   143  001034  6E                 	db	110	;'n'
   144  001035  63                 	db	99	;'c'
   145  001036  65                 	db	101	;'e'
   146  001037  20                 	db	32
   147  001038  69                 	db	105	;'i'
   148  001039  73                 	db	115	;'s'
   149  00103A  20                 	db	32
   150  00103B  25                 	db	37
   151  00103C  6C                 	db	108	;'l'
   152  00103D  69                 	db	105	;'i'
   153  00103E  0D                 	db	13
   154  00103F  0A                 	db	10
   155  001040  0A                 	db	10
   156  001041  0A                 	db	10
   157  001042  00                 	db	0
   158                           
   159                           ; #config settings
   160  001043  00                 	db	0	; dummy byte at the end
   161  0000                     
   162                           	psect	cinit
   163  001CF8                     __pcinit:
   164                           	opt stack 0
   165  001CF8                     start_initialization:
   166                           	opt stack 0
   167  001CF8                     __initialization:
   168                           	opt stack 0
   169                           
   170                           ; Initialize objects allocated to COMRAM (18 bytes)
   171                           ; load TBLPTR registers with __pidataCOMRAM
   172  001CF8  0EE2               	movlw	low __pidataCOMRAM
   173  001CFA  6EF6               	movwf	tblptrl,c
   174  001CFC  0E1D               	movlw	high __pidataCOMRAM
   175  001CFE  6EF7               	movwf	tblptrh,c
   176  001D00  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   177  001D02  6EF8               	movwf	tblptru,c
   178  001D04  EE00  F03D         	lfsr	0,__pdataCOMRAM
   179  001D08  EE10 F012          	lfsr	1,18
   180  001D0C                     copy_data0:
   181  001D0C  0009               	tblrd		*+
   182  001D0E  CFF5 FFEE          	movff	tablat,postinc0
   183  001D12  50E5               	movf	postdec1,w,c
   184  001D14  50E1               	movf	fsr1l,w,c
   185  001D16  E1FA               	bnz	copy_data0
   186  001D18                     end_of_initialization:
   187                           	opt stack 0
   188  001D18                     __end_of__initialization:
   189                           	opt stack 0
   190  001D18  0E00               	movlw	low (__Lmediumconst shr (0+16))
   191  001D1A  6EF8               	movwf	tblptru,c
   192  001D1C  0100               	movlb	0
   193  001D1E  EF22  F008         	goto	_main	;jump to C main() function
   194                           tblptru	equ	0xFF8
   195                           tblptrh	equ	0xFF7
   196                           tblptrl	equ	0xFF6
   197                           tablat	equ	0xFF5
   198                           postinc0	equ	0xFEE
   199                           postdec1	equ	0xFE5
   200                           fsr1l	equ	0xFE1
   201                           
   202                           	psect	dataCOMRAM
   203  00003D                     __pdataCOMRAM:
   204                           	opt stack 0
   205  00003D                     _array:
   206                           	opt stack 0
   207  00003D                     	ds	10
   208  000047                     _D2_array:
   209                           	opt stack 0
   210  000047                     	ds	8
   211                           tblptru	equ	0xFF8
   212                           tblptrh	equ	0xFF7
   213                           tblptrl	equ	0xFF6
   214                           tablat	equ	0xFF5
   215                           postinc0	equ	0xFEE
   216                           postdec1	equ	0xFE5
   217                           fsr1l	equ	0xFE1
   218                           
   219                           	psect	cstackCOMRAM
   220  000001                     __pcstackCOMRAM:
   221                           	opt stack 0
   222  000001                     ??_BCD_DP:
   223  000001                     ?_get_full_ADC:
   224                           	opt stack 0
   225  000001                     ?___ftpack:
   226                           	opt stack 0
   227  000001                     ?___ftneg:
   228                           	opt stack 0
   229  000001                     ?___aldiv:
   230                           	opt stack 0
   231  000001                     ?___fttol:
   232                           	opt stack 0
   233  000001                     ?___lldiv:
   234                           	opt stack 0
   235  000001                     putch@c:
   236                           	opt stack 0
   237  000001                     Select_ADC_Channel@channel:
   238                           	opt stack 0
   239  000001                     BCD_Upper_Digit@Port_E:
   240                           	opt stack 0
   241  000001                     BCD_Lower_Digit@digit:
   242                           	opt stack 0
   243  000001                     OpenUSART@spbrg:
   244                           	opt stack 0
   245  000001                     ___ftpack@arg:
   246                           	opt stack 0
   247  000001                     ___ftneg@f1:
   248                           	opt stack 0
   249  000001                     ___fttol@f1:
   250                           	opt stack 0
   251  000001                     ___aldiv@dividend:
   252                           	opt stack 0
   253  000001                     ___lldiv@dividend:
   254                           	opt stack 0
   255                           
   256                           ; 4 bytes @ 0x0
   257  000001                     	ds	1
   258  000002                     BCD_Upper_Digit@digit:
   259                           	opt stack 0
   260  000002                     BCD_DP@dp:
   261                           	opt stack 0
   262                           
   263                           ; 1 bytes @ 0x1
   264  000002                     	ds	1
   265  000003                     ??_get_full_ADC:
   266  000003                     OpenUSART@config:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0x2
   270  000003                     	ds	1
   271  000004                     ___ftpack@exp:
   272                           	opt stack 0
   273                           
   274                           ; 1 bytes @ 0x3
   275  000004                     	ds	1
   276  000005                     ??___fttol:
   277  000005                     ___ftpack@sign:
   278                           	opt stack 0
   279  000005                     get_full_ADC@result:
   280                           	opt stack 0
   281  000005                     ___aldiv@divisor:
   282                           	opt stack 0
   283  000005                     ___lldiv@divisor:
   284                           	opt stack 0
   285                           
   286                           ; 4 bytes @ 0x4
   287  000005                     	ds	1
   288  000006                     ??___ftpack:
   289                           
   290                           ; 0 bytes @ 0x5
   291  000006                     	ds	3
   292  000009                     ?___ftadd:
   293                           	opt stack 0
   294  000009                     ?___awtoft:
   295                           	opt stack 0
   296  000009                     ___aldiv@counter:
   297                           	opt stack 0
   298  000009                     ___awtoft@c:
   299                           	opt stack 0
   300  000009                     ___ftadd@f1:
   301                           	opt stack 0
   302  000009                     ___lldiv@quotient:
   303                           	opt stack 0
   304                           
   305                           ; 4 bytes @ 0x8
   306  000009                     	ds	1
   307  00000A                     ___aldiv@sign:
   308                           	opt stack 0
   309  00000A                     ___fttol@sign1:
   310                           	opt stack 0
   311                           
   312                           ; 1 bytes @ 0x9
   313  00000A                     	ds	1
   314  00000B                     ___aldiv@quotient:
   315                           	opt stack 0
   316  00000B                     ___fttol@lval:
   317                           	opt stack 0
   318                           
   319                           ; 4 bytes @ 0xA
   320  00000B                     	ds	1
   321  00000C                     ___awtoft@sign:
   322                           	opt stack 0
   323  00000C                     ___ftadd@f2:
   324                           	opt stack 0
   325                           
   326                           ; 3 bytes @ 0xB
   327  00000C                     	ds	1
   328  00000D                     ?___ftdiv:
   329                           	opt stack 0
   330  00000D                     ___lldiv@counter:
   331                           	opt stack 0
   332  00000D                     ___ftdiv@f1:
   333                           	opt stack 0
   334                           
   335                           ; 3 bytes @ 0xC
   336  00000D                     	ds	1
   337  00000E                     ?___llmod:
   338                           	opt stack 0
   339  00000E                     ___llmod@dividend:
   340                           	opt stack 0
   341                           
   342                           ; 4 bytes @ 0xD
   343  00000E                     	ds	1
   344  00000F                     ??___ftadd:
   345  00000F                     ?___almod:
   346                           	opt stack 0
   347  00000F                     ___fttol@exp1:
   348                           	opt stack 0
   349  00000F                     ___almod@dividend:
   350                           	opt stack 0
   351                           
   352                           ; 4 bytes @ 0xE
   353  00000F                     	ds	1
   354  000010                     ___ftdiv@f2:
   355                           	opt stack 0
   356                           
   357                           ; 3 bytes @ 0xF
   358  000010                     	ds	2
   359  000012                     ___ftadd@sign:
   360                           	opt stack 0
   361  000012                     ___llmod@divisor:
   362                           	opt stack 0
   363                           
   364                           ; 4 bytes @ 0x11
   365  000012                     	ds	1
   366  000013                     ??___ftdiv:
   367  000013                     ___ftadd@exp2:
   368                           	opt stack 0
   369  000013                     ___almod@divisor:
   370                           	opt stack 0
   371                           
   372                           ; 4 bytes @ 0x12
   373  000013                     	ds	1
   374  000014                     ___ftadd@exp1:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0x13
   378  000014                     	ds	2
   379  000016                     ___ftdiv@cntr:
   380                           	opt stack 0
   381  000016                     ___llmod@counter:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x15
   385  000016                     	ds	1
   386  000017                     ?_printf:
   387                           	opt stack 0
   388  000017                     ___almod@counter:
   389                           	opt stack 0
   390  000017                     printf@f:
   391                           	opt stack 0
   392  000017                     ___ftdiv@f3:
   393                           	opt stack 0
   394                           
   395                           ; 3 bytes @ 0x16
   396  000017                     	ds	1
   397  000018                     ___almod@sign:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0x17
   401  000018                     	ds	2
   402  00001A                     ___ftdiv@exp:
   403                           	opt stack 0
   404                           
   405                           ; 1 bytes @ 0x19
   406  00001A                     	ds	1
   407  00001B                     ___ftdiv@sign:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x1A
   411  00001B                     	ds	2
   412  00001D                     ??_printf:
   413                           
   414                           ; 0 bytes @ 0x1C
   415  00001D                     	ds	2
   416  00001F                     printf@prec:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x1E
   420  00001F                     	ds	2
   421  000021                     printf@ap:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x20
   425  000021                     	ds	2
   426  000023                     printf@flag:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x22
   430  000023                     	ds	1
   431  000024                     printf@val:
   432                           	opt stack 0
   433                           
   434                           ; 4 bytes @ 0x23
   435  000024                     	ds	4
   436  000028                     printf@c:
   437                           	opt stack 0
   438                           
   439                           ; 1 bytes @ 0x27
   440  000028                     	ds	1
   441  000029                     ??_main:
   442                           
   443                           ; 0 bytes @ 0x28
   444  000029                     	ds	2
   445  00002B                     main@R_ref_voltage:
   446                           	opt stack 0
   447                           
   448                           ; 3 bytes @ 0x2A
   449  00002B                     	ds	3
   450  00002E                     main@R_ref_current:
   451                           	opt stack 0
   452                           
   453                           ; 3 bytes @ 0x2D
   454  00002E                     	ds	3
   455  000031                     main@R_test_float:
   456                           	opt stack 0
   457                           
   458                           ; 3 bytes @ 0x30
   459  000031                     	ds	3
   460  000034                     main@num_step:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x33
   464  000034                     	ds	2
   465  000036                     main@voltage_v:
   466                           	opt stack 0
   467                           
   468                           ; 3 bytes @ 0x35
   469  000036                     	ds	3
   470  000039                     main@R_test:
   471                           	opt stack 0
   472                           
   473                           ; 4 bytes @ 0x38
   474  000039                     	ds	4
   475                           tblptru	equ	0xFF8
   476                           tblptrh	equ	0xFF7
   477                           tblptrl	equ	0xFF6
   478                           tablat	equ	0xFF5
   479                           postinc0	equ	0xFEE
   480                           postdec1	equ	0xFE5
   481                           fsr1l	equ	0xFE1
   482                           
   483 ;;
   484 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   485 ;;
   486 ;; *************** function _main *****************
   487 ;; Defined at:
   488 ;;		line 56 in file "Lab6pB2.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;		None
   491 ;; Auto vars:     Size  Location     Type
   492 ;;  R_test          4   56[COMRAM] long 
   493 ;;  voltage_v       3   53[COMRAM] float 
   494 ;;  R_test_float    3   48[COMRAM] float 
   495 ;;  R_ref_curren    3   45[COMRAM] float 
   496 ;;  R_ref_voltag    3   42[COMRAM] float 
   497 ;;  num_step        2   51[COMRAM] int 
   498 ;; Return value:  Size  Location     Type
   499 ;;		None               void
   500 ;; Registers used:
   501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   508 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   509 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   510 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   511 ;;Total ram usage:       20 bytes
   512 ;; Hardware stack levels required when called:    2
   513 ;; This function calls:
   514 ;;		_Activate_Buzzer
   515 ;;		_BCD_DP
   516 ;;		_BCD_Lower_Digit
   517 ;;		_BCD_Upper_Digit
   518 ;;		_D1_Yellow
   519 ;;		_Deactivate_Buzzer
   520 ;;		_Init_ADC
   521 ;;		_Init_TRIS
   522 ;;		_Select_ADC_Channel
   523 ;;		_WAIT_HALF_SEC
   524 ;;		___aldiv
   525 ;;		___almod
   526 ;;		___awtoft
   527 ;;		___ftadd
   528 ;;		___ftdiv
   529 ;;		___ftneg
   530 ;;		___fttol
   531 ;;		_get_full_ADC
   532 ;;		_init_UART
   533 ;;		_printf
   534 ;; This function is called by:
   535 ;;		Startup code after reset
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           	psect	text0
   540  001044                     __ptext0:
   541                           	opt stack 0
   542  001044                     _main:
   543                           	opt stack 29
   544                           
   545                           ;Lab6pB2.c: 58: OSCCON = 0x60;
   546                           
   547                           ;incstack = 0
   548  001044  0E60               	movlw	96
   549  001046  6ED3               	movwf	4051,c	;volatile
   550                           
   551                           ;Lab6pB2.c: 60: PORTB = 0x00;
   552  001048  0E00               	movlw	0
   553  00104A  6E81               	movwf	3969,c	;volatile
   554                           
   555                           ;Lab6pB2.c: 61: PORTC = 0xFF;
   556  00104C  6882               	setf	3970,c	;volatile
   557                           
   558                           ;Lab6pB2.c: 62: PORTD = 0xFF;
   559  00104E  6883               	setf	3971,c	;volatile
   560                           
   561                           ;Lab6pB2.c: 63: PORTE = 0xFF;
   562  001050  6884               	setf	3972,c	;volatile
   563                           
   564                           ;Lab6pB2.c: 65: Init_ADC();
   565  001052  EC0A  F00F         	call	_Init_ADC	;wreg free
   566                           
   567                           ;Lab6pB2.c: 66: init_UART();
   568  001056  ECE7  F00E         	call	_init_UART	;wreg free
   569                           
   570                           ;Lab6pB2.c: 67: Init_TRIS();
   571  00105A  ECDC  F00E         	call	_Init_TRIS	;wreg free
   572                           
   573                           ;Lab6pB2.c: 69: Select_ADC_Channel(2);
   574  00105E  0E02               	movlw	2
   575  001060  EC11  F00F         	call	_Select_ADC_Channel
   576  001064  D000               	goto	l1922
   577  001066                     l1922:
   578                           
   579                           ;Lab6pB2.c: 72: {
   580                           ;Lab6pB2.c: 73: int num_step = get_full_ADC();
   581  001066  EC91  F00E         	call	_get_full_ADC	;wreg free
   582  00106A  C001  F034         	movff	?_get_full_ADC,main@num_step
   583  00106E  C002  F035         	movff	?_get_full_ADC+1,main@num_step+1
   584                           
   585                           ;Lab6pB2.c: 74: float voltage_v = (num_step * 4)/1000.0;
   586  001072  C034  F029         	movff	main@num_step,??_main
   587  001076  C035  F02A         	movff	main@num_step+1,??_main+1
   588  00107A  90D8               	bcf	status,0,c
   589  00107C  3629               	rlcf	??_main,f,c
   590  00107E  362A               	rlcf	??_main+1,f,c
   591  001080  90D8               	bcf	status,0,c
   592  001082  3629               	rlcf	??_main,f,c
   593  001084  362A               	rlcf	??_main+1,f,c
   594  001086  C029  F009         	movff	??_main,___awtoft@c
   595  00108A  C02A  F00A         	movff	??_main+1,___awtoft@c+1
   596  00108E  EC5E  F00E         	call	___awtoft	;wreg free
   597  001092  C009  F00D         	movff	?___awtoft,___ftdiv@f1
   598  001096  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
   599  00109A  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
   600  00109E  0E00               	movlw	0
   601  0010A0  6E10               	movwf	___ftdiv@f2,c
   602  0010A2  0E7A               	movlw	122
   603  0010A4  6E11               	movwf	___ftdiv@f2+1,c
   604  0010A6  0E44               	movlw	68
   605  0010A8  6E12               	movwf	___ftdiv@f2+2,c
   606  0010AA  ECE7  F00B         	call	___ftdiv	;wreg free
   607  0010AE  C00D  F036         	movff	?___ftdiv,main@voltage_v
   608  0010B2  C00E  F037         	movff	?___ftdiv+1,main@voltage_v+1
   609  0010B6  C00F  F038         	movff	?___ftdiv+2,main@voltage_v+2
   610                           
   611                           ;Lab6pB2.c: 77: float R_ref_voltage = (4.096 - voltage_v);
   612  0010BA  C036  F001         	movff	main@voltage_v,___ftneg@f1
   613  0010BE  C037  F002         	movff	main@voltage_v+1,___ftneg@f1+1
   614  0010C2  C038  F003         	movff	main@voltage_v+2,___ftneg@f1+2
   615  0010C6  ECA4  F00E         	call	___ftneg	;wreg free
   616  0010CA  C001  F009         	movff	?___ftneg,___ftadd@f1
   617  0010CE  C002  F00A         	movff	?___ftneg+1,___ftadd@f1+1
   618  0010D2  C003  F00B         	movff	?___ftneg+2,___ftadd@f1+2
   619  0010D6  0E12               	movlw	18
   620  0010D8  6E0C               	movwf	___ftadd@f2,c
   621  0010DA  0E83               	movlw	131
   622  0010DC  6E0D               	movwf	___ftadd@f2+1,c
   623  0010DE  0E40               	movlw	64
   624  0010E0  6E0E               	movwf	___ftadd@f2+2,c
   625  0010E2  EC92  F00A         	call	___ftadd	;wreg free
   626  0010E6  C009  F02B         	movff	?___ftadd,main@R_ref_voltage
   627  0010EA  C00A  F02C         	movff	?___ftadd+1,main@R_ref_voltage+1
   628  0010EE  C00B  F02D         	movff	?___ftadd+2,main@R_ref_voltage+2
   629                           
   630                           ;Lab6pB2.c: 80: float R_ref_current = R_ref_voltage / 9830;
   631  0010F2  C02B  F00D         	movff	main@R_ref_voltage,___ftdiv@f1
   632  0010F6  C02C  F00E         	movff	main@R_ref_voltage+1,___ftdiv@f1+1
   633  0010FA  C02D  F00F         	movff	main@R_ref_voltage+2,___ftdiv@f1+2
   634  0010FE  0E98               	movlw	152
   635  001100  6E10               	movwf	___ftdiv@f2,c
   636  001102  0E19               	movlw	25
   637  001104  6E11               	movwf	___ftdiv@f2+1,c
   638  001106  0E46               	movlw	70
   639  001108  6E12               	movwf	___ftdiv@f2+2,c
   640  00110A  ECE7  F00B         	call	___ftdiv	;wreg free
   641  00110E  C00D  F02E         	movff	?___ftdiv,main@R_ref_current
   642  001112  C00E  F02F         	movff	?___ftdiv+1,main@R_ref_current+1
   643  001116  C00F  F030         	movff	?___ftdiv+2,main@R_ref_current+2
   644                           
   645                           ;Lab6pB2.c: 83: float R_test_float = (voltage_v / R_ref_current);
   646  00111A  C036  F00D         	movff	main@voltage_v,___ftdiv@f1
   647  00111E  C037  F00E         	movff	main@voltage_v+1,___ftdiv@f1+1
   648  001122  C038  F00F         	movff	main@voltage_v+2,___ftdiv@f1+2
   649  001126  C02E  F010         	movff	main@R_ref_current,___ftdiv@f2
   650  00112A  C02F  F011         	movff	main@R_ref_current+1,___ftdiv@f2+1
   651  00112E  C030  F012         	movff	main@R_ref_current+2,___ftdiv@f2+2
   652  001132  ECE7  F00B         	call	___ftdiv	;wreg free
   653  001136  C00D  F031         	movff	?___ftdiv,main@R_test_float
   654  00113A  C00E  F032         	movff	?___ftdiv+1,main@R_test_float+1
   655  00113E  C00F  F033         	movff	?___ftdiv+2,main@R_test_float+2
   656                           
   657                           ;Lab6pB2.c: 84: long R_test = (long) R_test_float;
   658  001142  C031  F001         	movff	main@R_test_float,___fttol@f1
   659  001146  C032  F002         	movff	main@R_test_float+1,___fttol@f1+1
   660  00114A  C033  F003         	movff	main@R_test_float+2,___fttol@f1+2
   661  00114E  EC74  F00B         	call	___fttol	;wreg free
   662  001152  C001  F039         	movff	?___fttol,main@R_test
   663  001156  C002  F03A         	movff	?___fttol+1,main@R_test+1
   664  00115A  C003  F03B         	movff	?___fttol+2,main@R_test+2
   665  00115E  C004  F03C         	movff	?___fttol+3,main@R_test+3
   666                           
   667                           ;Lab6pB2.c: 86: if (R_test < 10000)
   668  001162  BE3C               	btfsc	main@R_test+3,7,c
   669  001164  D009               	goto	l1936
   670  001166  503C               	movf	main@R_test+3,w,c
   671  001168  103B               	iorwf	main@R_test+2,w,c
   672  00116A  E147               	bnz	l1942
   673  00116C  0E10               	movlw	16
   674  00116E  5C39               	subwf	main@R_test,w,c
   675  001170  0E27               	movlw	39
   676  001172  583A               	subwfb	main@R_test+1,w,c
   677  001174  B0D8               	btfsc	status,0,c
   678  001176  D041               	goto	l1942
   679  001178                     l1936:
   680                           
   681                           ;Lab6pB2.c: 87: {
   682                           ;Lab6pB2.c: 88: BCD_Upper_Digit (R_test/1000);
   683  001178  C039  F001         	movff	main@R_test,___aldiv@dividend
   684  00117C  C03A  F002         	movff	main@R_test+1,___aldiv@dividend+1
   685  001180  C03B  F003         	movff	main@R_test+2,___aldiv@dividend+2
   686  001184  C03C  F004         	movff	main@R_test+3,___aldiv@dividend+3
   687  001188  0EE8               	movlw	232
   688  00118A  6E05               	movwf	___aldiv@divisor,c
   689  00118C  0E03               	movlw	3
   690  00118E  6E06               	movwf	___aldiv@divisor+1,c
   691  001190  0E00               	movlw	0
   692  001192  6E07               	movwf	___aldiv@divisor+2,c
   693  001194  0E00               	movlw	0
   694  001196  6E08               	movwf	___aldiv@divisor+3,c
   695  001198  EC58  F00C         	call	___aldiv	;wreg free
   696  00119C  5001               	movf	?___aldiv,w,c
   697  00119E  EC3F  F00E         	call	_BCD_Upper_Digit
   698                           
   699                           ;Lab6pB2.c: 89: BCD_Lower_Digit (R_test/100%10);
   700  0011A2  0E64               	movlw	100
   701  0011A4  6E05               	movwf	___aldiv@divisor,c
   702  0011A6  0E00               	movlw	0
   703  0011A8  6E06               	movwf	___aldiv@divisor+1,c
   704  0011AA  0E00               	movlw	0
   705  0011AC  6E07               	movwf	___aldiv@divisor+2,c
   706  0011AE  0E00               	movlw	0
   707  0011B0  6E08               	movwf	___aldiv@divisor+3,c
   708  0011B2  C039  F001         	movff	main@R_test,___aldiv@dividend
   709  0011B6  C03A  F002         	movff	main@R_test+1,___aldiv@dividend+1
   710  0011BA  C03B  F003         	movff	main@R_test+2,___aldiv@dividend+2
   711  0011BE  C03C  F004         	movff	main@R_test+3,___aldiv@dividend+3
   712  0011C2  EC58  F00C         	call	___aldiv	;wreg free
   713  0011C6  C001  F00F         	movff	?___aldiv,___almod@dividend
   714  0011CA  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
   715  0011CE  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
   716  0011D2  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
   717  0011D6  0E0A               	movlw	10
   718  0011D8  6E13               	movwf	___almod@divisor,c
   719  0011DA  0E00               	movlw	0
   720  0011DC  6E14               	movwf	___almod@divisor+1,c
   721  0011DE  0E00               	movlw	0
   722  0011E0  6E15               	movwf	___almod@divisor+2,c
   723  0011E2  0E00               	movlw	0
   724  0011E4  6E16               	movwf	___almod@divisor+3,c
   725  0011E6  EC2A  F00D         	call	___almod	;wreg free
   726  0011EA  500F               	movf	?___almod,w,c
   727  0011EC  ECC3  F00E         	call	_BCD_Lower_Digit
   728                           
   729                           ;Lab6pB2.c: 90: BCD_DP (1);
   730  0011F0  0E01               	movlw	1
   731  0011F2  ECD0  F00E         	call	_BCD_DP
   732                           
   733                           ;Lab6pB2.c: 91: PORTB = 0x00;
   734  0011F6  0E00               	movlw	0
   735  0011F8  D064               	goto	L1
   736  0011FA                     l1942:
   737                           
   738                           ;Lab6pB2.c: 93: else if (R_test > 10000, R_test < 100000)
   739  0011FA  BE3C               	btfsc	main@R_test+3,7,c
   740  0011FC  D00A               	goto	l1944
   741  0011FE  503C               	movf	main@R_test+3,w,c
   742  001200  E162               	bnz	l1950
   743  001202  0EA0               	movlw	160
   744  001204  5C39               	subwf	main@R_test,w,c
   745  001206  0E86               	movlw	134
   746  001208  583A               	subwfb	main@R_test+1,w,c
   747  00120A  0E01               	movlw	1
   748  00120C  583B               	subwfb	main@R_test+2,w,c
   749  00120E  B0D8               	btfsc	status,0,c
   750  001210  D05A               	goto	l1950
   751  001212                     l1944:
   752                           
   753                           ;Lab6pB2.c: 94: {
   754                           ;Lab6pB2.c: 95: BCD_Upper_Digit (R_test/10000);
   755  001212  C039  F001         	movff	main@R_test,___aldiv@dividend
   756  001216  C03A  F002         	movff	main@R_test+1,___aldiv@dividend+1
   757  00121A  C03B  F003         	movff	main@R_test+2,___aldiv@dividend+2
   758  00121E  C03C  F004         	movff	main@R_test+3,___aldiv@dividend+3
   759  001222  0E10               	movlw	16
   760  001224  6E05               	movwf	___aldiv@divisor,c
   761  001226  0E27               	movlw	39
   762  001228  6E06               	movwf	___aldiv@divisor+1,c
   763  00122A  0E00               	movlw	0
   764  00122C  6E07               	movwf	___aldiv@divisor+2,c
   765  00122E  0E00               	movlw	0
   766  001230  6E08               	movwf	___aldiv@divisor+3,c
   767  001232  EC58  F00C         	call	___aldiv	;wreg free
   768  001236  5001               	movf	?___aldiv,w,c
   769  001238  EC3F  F00E         	call	_BCD_Upper_Digit
   770                           
   771                           ;Lab6pB2.c: 96: BCD_Lower_Digit ((R_test/1000)%10);
   772  00123C  0EE8               	movlw	232
   773  00123E  6E05               	movwf	___aldiv@divisor,c
   774  001240  0E03               	movlw	3
   775  001242  6E06               	movwf	___aldiv@divisor+1,c
   776  001244  0E00               	movlw	0
   777  001246  6E07               	movwf	___aldiv@divisor+2,c
   778  001248  0E00               	movlw	0
   779  00124A  6E08               	movwf	___aldiv@divisor+3,c
   780  00124C  C039  F001         	movff	main@R_test,___aldiv@dividend
   781  001250  C03A  F002         	movff	main@R_test+1,___aldiv@dividend+1
   782  001254  C03B  F003         	movff	main@R_test+2,___aldiv@dividend+2
   783  001258  C03C  F004         	movff	main@R_test+3,___aldiv@dividend+3
   784  00125C  EC58  F00C         	call	___aldiv	;wreg free
   785  001260  C001  F00F         	movff	?___aldiv,___almod@dividend
   786  001264  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
   787  001268  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
   788  00126C  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
   789  001270  0E0A               	movlw	10
   790  001272  6E13               	movwf	___almod@divisor,c
   791  001274  0E00               	movlw	0
   792  001276  6E14               	movwf	___almod@divisor+1,c
   793  001278  0E00               	movlw	0
   794  00127A  6E15               	movwf	___almod@divisor+2,c
   795  00127C  0E00               	movlw	0
   796  00127E  6E16               	movwf	___almod@divisor+3,c
   797  001280  EC2A  F00D         	call	___almod	;wreg free
   798  001284  500F               	movf	?___almod,w,c
   799  001286  ECC3  F00E         	call	_BCD_Lower_Digit
   800                           
   801                           ;Lab6pB2.c: 97: BCD_DP (0);
   802  00128A  0E00               	movlw	0
   803  00128C  ECD0  F00E         	call	_BCD_DP
   804                           
   805                           ;Lab6pB2.c: 98: PORTB = D2_array[R_test/10000];
   806  001290  C039  F001         	movff	main@R_test,___aldiv@dividend
   807  001294  C03A  F002         	movff	main@R_test+1,___aldiv@dividend+1
   808  001298  C03B  F003         	movff	main@R_test+2,___aldiv@dividend+2
   809  00129C  C03C  F004         	movff	main@R_test+3,___aldiv@dividend+3
   810  0012A0  0E10               	movlw	16
   811  0012A2  6E05               	movwf	___aldiv@divisor,c
   812  0012A4  0E27               	movlw	39
   813  0012A6  6E06               	movwf	___aldiv@divisor+1,c
   814  0012A8  0E00               	movlw	0
   815  0012AA  6E07               	movwf	___aldiv@divisor+2,c
   816  0012AC  0E00               	movlw	0
   817  0012AE  6E08               	movwf	___aldiv@divisor+3,c
   818  0012B0  EC58  F00C         	call	___aldiv	;wreg free
   819  0012B4  0E47               	movlw	low _D2_array
   820  0012B6  2401               	addwf	?___aldiv,w,c
   821  0012B8  6ED9               	movwf	fsr2l,c
   822  0012BA  0E00               	movlw	high _D2_array
   823  0012BC  2002               	addwfc	?___aldiv+1,w,c
   824  0012BE  6EDA               	movwf	fsr2h,c
   825  0012C0  50DF               	movf	indf2,w,c
   826  0012C2                     L1:
   827  0012C2  6E81               	movwf	3969,c	;volatile
   828  0012C4  D000               	goto	l1950
   829  0012C6                     l1950:
   830                           
   831                           ;Lab6pB2.c: 99: }
   832                           ;Lab6pB2.c: 101: if (R_test > 70000)
   833  0012C6  BE3C               	btfsc	main@R_test+3,7,c
   834  0012C8  D00D               	goto	l1954
   835  0012CA  503C               	movf	main@R_test+3,w,c
   836  0012CC  E108               	bnz	u1750
   837  0012CE  0E71               	movlw	113
   838  0012D0  5C39               	subwf	main@R_test,w,c
   839  0012D2  0E11               	movlw	17
   840  0012D4  583A               	subwfb	main@R_test+1,w,c
   841  0012D6  0E01               	movlw	1
   842  0012D8  583B               	subwfb	main@R_test+2,w,c
   843  0012DA  A0D8               	btfss	status,0,c
   844  0012DC  D003               	goto	l1954
   845  0012DE                     u1750:
   846                           
   847                           ;Lab6pB2.c: 102: {
   848                           ;Lab6pB2.c: 103: PORTB = D2_array[7];
   849  0012DE  C04E  FF81         	movff	_D2_array+7,3969	;volatile
   850  0012E2  D000               	goto	l1954
   851  0012E4                     l1954:
   852                           
   853                           ;Lab6pB2.c: 104: }
   854                           ;Lab6pB2.c: 106: if (R_test > 100000)
   855  0012E4  BE3C               	btfsc	main@R_test+3,7,c
   856  0012E6  D013               	goto	l1964
   857  0012E8  503C               	movf	main@R_test+3,w,c
   858  0012EA  E108               	bnz	u1760
   859  0012EC  0EA1               	movlw	161
   860  0012EE  5C39               	subwf	main@R_test,w,c
   861  0012F0  0E86               	movlw	134
   862  0012F2  583A               	subwfb	main@R_test+1,w,c
   863  0012F4  0E01               	movlw	1
   864  0012F6  583B               	subwfb	main@R_test+2,w,c
   865  0012F8  A0D8               	btfss	status,0,c
   866  0012FA  D009               	goto	l1964
   867  0012FC                     u1760:
   868                           
   869                           ;Lab6pB2.c: 107: {
   870                           ;Lab6pB2.c: 108: BCD_Upper_Digit (0);
   871  0012FC  0E00               	movlw	0
   872  0012FE  EC3F  F00E         	call	_BCD_Upper_Digit
   873                           
   874                           ;Lab6pB2.c: 109: PORTD = 0x47;
   875  001302  0E47               	movlw	71
   876  001304  6E83               	movwf	3971,c	;volatile
   877                           
   878                           ;Lab6pB2.c: 110: PORTDbits.RD7 = 1;
   879  001306  8E83               	bsf	3971,7,c	;volatile
   880                           
   881                           ;Lab6pB2.c: 111: PORTB = D2_array[7];
   882  001308  C04E  FF81         	movff	_D2_array+7,3969	;volatile
   883  00130C  D000               	goto	l1964
   884  00130E                     l1964:
   885                           
   886                           ;Lab6pB2.c: 112: }
   887                           ;Lab6pB2.c: 114: if (R_test < 70)
   888  00130E  BE3C               	btfsc	main@R_test+3,7,c
   889  001310  D008               	goto	l1966
   890  001312  503C               	movf	main@R_test+3,w,c
   891  001314  103B               	iorwf	main@R_test+2,w,c
   892  001316  103A               	iorwf	main@R_test+1,w,c
   893  001318  E109               	bnz	l1970
   894  00131A  0E46               	movlw	70
   895  00131C  5C39               	subwf	main@R_test,w,c
   896  00131E  B0D8               	btfsc	status,0,c
   897  001320  D005               	goto	l1970
   898  001322                     l1966:
   899                           
   900                           ;Lab6pB2.c: 115: {
   901                           ;Lab6pB2.c: 116: Activate_Buzzer();
   902  001322  ECFA  F00E         	call	_Activate_Buzzer	;wreg free
   903                           
   904                           ;Lab6pB2.c: 117: D1_Yellow();
   905  001326  EC1B  F00F         	call	_D1_Yellow	;wreg free
   906                           
   907                           ;Lab6pB2.c: 118: }
   908  00132A  D003               	goto	l1972
   909  00132C                     l1970:
   910                           
   911                           ;Lab6pB2.c: 119: else
   912                           ;Lab6pB2.c: 120: {
   913                           ;Lab6pB2.c: 121: Deactivate_Buzzer();
   914  00132C  EC17  F00F         	call	_Deactivate_Buzzer	;wreg free
   915  001330  D000               	goto	l1972
   916  001332                     l1972:
   917                           
   918                           ;Lab6pB2.c: 122: }
   919                           ;Lab6pB2.c: 123: printf ("The Resistance is %li\r\n\n\n", R_test);
   920  001332  0E29               	movlw	low STR_1
   921  001334  6E17               	movwf	printf@f,c
   922  001336  0E10               	movlw	high STR_1
   923  001338  6E18               	movwf	printf@f+1,c
   924  00133A  C039  F019         	movff	main@R_test,?_printf+2
   925  00133E  C03A  F01A         	movff	main@R_test+1,?_printf+3
   926  001342  C03B  F01B         	movff	main@R_test+2,?_printf+4
   927  001346  C03C  F01C         	movff	main@R_test+3,?_printf+5
   928  00134A  ECAC  F009         	call	_printf	;wreg free
   929                           
   930                           ;Lab6pB2.c: 124: WAIT_HALF_SEC();
   931  00134E  ECB6  F00E         	call	_WAIT_HALF_SEC	;wreg free
   932  001352  D689               	goto	l1922
   933  001354  EF00  F000         	goto	start
   934  001358                     __end_of_main:
   935                           	opt stack 0
   936                           tblptru	equ	0xFF8
   937                           tblptrh	equ	0xFF7
   938                           tblptrl	equ	0xFF6
   939                           tablat	equ	0xFF5
   940                           postinc0	equ	0xFEE
   941                           postdec1	equ	0xFE5
   942                           fsr1l	equ	0xFE1
   943                           indf2	equ	0xFDF
   944                           fsr2h	equ	0xFDA
   945                           fsr2l	equ	0xFD9
   946                           status	equ	0xFD8
   947                           
   948 ;; *************** function _printf *****************
   949 ;; Defined at:
   950 ;;		line 464 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\doprnt.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;  f               2   22[COMRAM] PTR const unsigned char 
   953 ;;		 -> STR_1(26), 
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  val             4   35[COMRAM] unsigned long 
   956 ;;  tmpval          4    0        struct .
   957 ;;  cp              3    0        PTR const unsigned char 
   958 ;;  ap              2   32[COMRAM] PTR void [1]
   959 ;;		 -> ?_printf(2), 
   960 ;;  prec            2   30[COMRAM] int 
   961 ;;  len             2    0        unsigned int 
   962 ;;  c               1   39[COMRAM] char 
   963 ;;  flag            1   34[COMRAM] unsigned char 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  2   22[COMRAM] int 
   966 ;; Registers used:
   967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   973 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;Total ram usage:       18 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    1
   980 ;; This function calls:
   981 ;;		___lldiv
   982 ;;		___llmod
   983 ;;		_putch
   984 ;; This function is called by:
   985 ;;		_main
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text1
   990  001358                     __ptext1:
   991                           	opt stack 0
   992  001358                     _printf:
   993                           	opt stack 29
   994                           
   995                           ;doprnt.c: 466: va_list ap;
   996                           ;doprnt.c: 499: signed char c;
   997                           ;doprnt.c: 504: int prec;
   998                           ;doprnt.c: 508: unsigned char flag;
   999                           ;doprnt.c: 523: union {
  1000                           ;doprnt.c: 524: unsigned long vd;
  1001                           ;doprnt.c: 525: double integ;
  1002                           ;doprnt.c: 526: } tmpval;
  1003                           ;doprnt.c: 528: unsigned long val;
  1004                           ;doprnt.c: 529: unsigned len;
  1005                           ;doprnt.c: 530: const char * cp;
  1006                           ;doprnt.c: 533: *ap = __va_start();
  1007                           
  1008                           ;incstack = 0
  1009  001358  0E19               	movlw	low (?_printf+2)
  1010  00135A  6E21               	movwf	printf@ap,c
  1011  00135C  0E00               	movlw	high (?_printf+2)
  1012  00135E  6E22               	movwf	printf@ap+1,c
  1013                           
  1014                           ;doprnt.c: 536: while(c = *f++) {
  1015  001360  D0D2               	goto	l1646
  1016  001362                     l1594:
  1017                           
  1018                           ;doprnt.c: 538: if(c != '%')
  1019  001362  0E25               	movlw	37
  1020  001364  1828               	xorwf	printf@c,w,c
  1021  001366  B4D8               	btfsc	status,2,c
  1022  001368  D004               	goto	l1598
  1023                           
  1024                           ;doprnt.c: 540: {
  1025                           ;doprnt.c: 541: (putch(c) );
  1026  00136A  5028               	movf	printf@c,w,c
  1027  00136C  EC03  F00F         	call	_putch
  1028                           
  1029                           ;doprnt.c: 542: continue;
  1030  001370  D0CA               	goto	l1646
  1031  001372                     l1598:
  1032                           
  1033                           ;doprnt.c: 543: }
  1034                           ;doprnt.c: 548: flag = 0;
  1035  001372  0E00               	movlw	0
  1036  001374  6E23               	movwf	printf@flag,c
  1037                           
  1038                           ;doprnt.c: 635: switch(c = *f++) {
  1039                           
  1040                           ;doprnt.c: 633: loop:
  1041  001376  D006               	goto	l1604
  1042                           
  1043                           ;doprnt.c: 638: goto alldone;
  1044                           
  1045                           ;doprnt.c: 637: case 0:
  1046  001378  D0D4               	goto	l235
  1047  00137A                     l1600:
  1048                           
  1049                           ;doprnt.c: 643: flag |= 0x10;
  1050  00137A  8823               	bsf	printf@flag,4,c
  1051                           
  1052                           ;doprnt.c: 644: goto loop;
  1053  00137C  D003               	goto	l1604
  1054                           
  1055                           ;doprnt.c: 698: case 'i':
  1056                           ;doprnt.c: 699: break;
  1057                           
  1058                           ;doprnt.c: 697: case 'd':
  1059  00137E  D019               	goto	l222
  1060                           
  1061                           ;doprnt.c: 813: continue;
  1062                           
  1063                           ;doprnt.c: 802: default:
  1064  001380  D0C2               	goto	l1646
  1065                           
  1066                           ;doprnt.c: 822: }
  1067  001382  D017               	goto	l222
  1068  001384                     l1604:
  1069  001384  C017  FFF6         	movff	printf@f,tblptrl
  1070  001388  C018  FFF7         	movff	printf@f+1,tblptrh
  1071  00138C  4A17               	infsnz	printf@f,f,c
  1072  00138E  2A18               	incf	printf@f+1,f,c
  1073  001390                     	if	0	;tblptru may be non-zero
  1074  001390                     	endif
  1075  001390                     	if	0	;tblptru may be non-zero
  1076  001390                     	endif
  1077  001390  0008               	tblrd		*
  1078  001392  CFF5 F028          	movff	tablat,printf@c
  1079  001396  5028               	movf	printf@c,w,c
  1080                           
  1081                           ; Switch size 1, requested type "space"
  1082                           ; Number of cases is 4, Range of values is 0 to 108
  1083                           ; switch strategies available:
  1084                           ; Name         Instructions Cycles
  1085                           ; simple_byte           13     7 (average)
  1086                           ;	Chosen strategy is simple_byte
  1087  001398  0A00               	xorlw	0	; case 0
  1088  00139A  B4D8               	btfsc	status,2,c
  1089  00139C  D0C2               	goto	l235
  1090  00139E  0A64               	xorlw	100	; case 100
  1091  0013A0  B4D8               	btfsc	status,2,c
  1092  0013A2  D007               	goto	l222
  1093  0013A4  0A0D               	xorlw	13	; case 105
  1094  0013A6  B4D8               	btfsc	status,2,c
  1095  0013A8  D004               	goto	l222
  1096  0013AA  0A05               	xorlw	5	; case 108
  1097  0013AC  B4D8               	btfsc	status,2,c
  1098  0013AE  D7E5               	goto	l1600
  1099  0013B0  D0AA               	goto	l1646
  1100  0013B2                     l222:
  1101                           
  1102                           ;doprnt.c: 1253: {
  1103                           ;doprnt.c: 1255: if(flag & 0x10)
  1104  0013B2  A823               	btfss	printf@flag,4,c
  1105  0013B4  D00E               	goto	l1610
  1106                           
  1107                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  1108  0013B6  C021  FFD9         	movff	printf@ap,fsr2l
  1109  0013BA  C022  FFDA         	movff	printf@ap+1,fsr2h
  1110  0013BE  CFDE F024          	movff	postinc2,printf@val
  1111  0013C2  CFDE F025          	movff	postinc2,printf@val+1
  1112  0013C6  CFDE F026          	movff	postinc2,printf@val+2
  1113  0013CA  CFDE F027          	movff	postinc2,printf@val+3
  1114  0013CE  0E04               	movlw	4
  1115  0013D0  D00E               	goto	L2
  1116  0013D2                     l1610:
  1117                           
  1118                           ;doprnt.c: 1257: else
  1119                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  1120  0013D2  C021  FFD9         	movff	printf@ap,fsr2l
  1121  0013D6  C022  FFDA         	movff	printf@ap+1,fsr2h
  1122  0013DA  CFDE F024          	movff	postinc2,printf@val
  1123  0013DE  CFDD F025          	movff	postdec2,printf@val+1
  1124  0013E2  0E00               	movlw	0
  1125  0013E4  BE25               	btfsc	printf@val+1,7,c
  1126  0013E6  0EFF               	movlw	-1
  1127  0013E8  6E26               	movwf	printf@val+2,c
  1128  0013EA  6E27               	movwf	printf@val+3,c
  1129  0013EC  0E02               	movlw	2
  1130  0013EE                     L2:
  1131  0013EE  2621               	addwf	printf@ap,f,c
  1132  0013F0  0E00               	movlw	0
  1133  0013F2  2222               	addwfc	printf@ap+1,f,c
  1134  0013F4  D000               	goto	l1614
  1135  0013F6                     l1614:
  1136                           
  1137                           ;doprnt.c: 1261: if((long)val < 0) {
  1138  0013F6  AE27               	btfss	printf@val+3,7,c
  1139  0013F8  D00B               	goto	l1620
  1140                           
  1141                           ;doprnt.c: 1262: flag |= 0x03;
  1142  0013FA  0E03               	movlw	3
  1143  0013FC  1223               	iorwf	printf@flag,f,c
  1144                           
  1145                           ;doprnt.c: 1263: val = -val;
  1146  0013FE  1E27               	comf	printf@val+3,f,c
  1147  001400  1E26               	comf	printf@val+2,f,c
  1148  001402  1E25               	comf	printf@val+1,f,c
  1149  001404  6C24               	negf	printf@val,c
  1150  001406  0E00               	movlw	0
  1151  001408  2225               	addwfc	printf@val+1,f,c
  1152  00140A  2226               	addwfc	printf@val+2,f,c
  1153  00140C  2227               	addwfc	printf@val+3,f,c
  1154  00140E  D000               	goto	l1620
  1155  001410                     l1620:
  1156                           
  1157                           ;doprnt.c: 1264: }
  1158                           ;doprnt.c: 1266: }
  1159                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1160  001410  0E01               	movlw	1
  1161  001412  6E28               	movwf	printf@c,c
  1162  001414                     l1622:
  1163  001414  0E0A               	movlw	10
  1164  001416  1828               	xorwf	printf@c,w,c
  1165  001418  B4D8               	btfsc	status,2,c
  1166  00141A  D01C               	goto	l1634
  1167  00141C  D001               	goto	l1626
  1168  00141E  D01A               	goto	l1634
  1169  001420                     l1626:
  1170                           
  1171                           ;doprnt.c: 1306: if(val < dpowers[c])
  1172  001420  5028               	movf	printf@c,w,c
  1173  001422  0D04               	mullw	4
  1174  001424  0E01               	movlw	low _dpowers
  1175  001426  24F3               	addwf	prodl,w,c
  1176  001428  6EF6               	movwf	tblptrl,c
  1177  00142A  0E10               	movlw	high _dpowers
  1178  00142C  20F4               	addwfc	prodh,w,c
  1179  00142E  6EF7               	movwf	tblptrh,c
  1180  001430                     	if	0	;There are less than 3 active tblptr bytes
  1181  001430                     	endif
  1182  001430  0009               	tblrd		*+
  1183  001432  50F5               	movf	tablat,w,c
  1184  001434  5C24               	subwf	printf@val,w,c
  1185  001436  0009               	tblrd		*+
  1186  001438  50F5               	movf	tablat,w,c
  1187  00143A  5825               	subwfb	printf@val+1,w,c
  1188  00143C  0009               	tblrd		*+
  1189  00143E  50F5               	movf	tablat,w,c
  1190  001440  5826               	subwfb	printf@val+2,w,c
  1191  001442  0009               	tblrd		*+
  1192  001444  50F5               	movf	tablat,w,c
  1193  001446  5827               	subwfb	printf@val+3,w,c
  1194  001448  A0D8               	btfss	status,0,c
  1195  00144A  D004               	goto	l1634
  1196  00144C  D001               	goto	l1630
  1197                           
  1198                           ;doprnt.c: 1307: break;
  1199  00144E  D002               	goto	l1634
  1200  001450                     l1630:
  1201  001450  2A28               	incf	printf@c,f,c
  1202  001452  D7E0               	goto	l1622
  1203  001454                     l1634:
  1204                           
  1205                           ;doprnt.c: 1422: {
  1206                           ;doprnt.c: 1438: if(flag & 0x03)
  1207  001454  C023  F01D         	movff	printf@flag,??_printf
  1208  001458  0E03               	movlw	3
  1209  00145A  161D               	andwf	??_printf,f,c
  1210  00145C  B4D8               	btfsc	status,2,c
  1211  00145E  D004               	goto	l1638
  1212                           
  1213                           ;doprnt.c: 1439: (putch('-') );
  1214  001460  0E2D               	movlw	45
  1215  001462  EC03  F00F         	call	_putch
  1216  001466  D000               	goto	l1638
  1217  001468                     l1638:
  1218                           
  1219                           ;doprnt.c: 1469: }
  1220                           ;doprnt.c: 1472: prec = c;
  1221  001468  5028               	movf	printf@c,w,c
  1222  00146A  6E1F               	movwf	printf@prec,c
  1223  00146C  6A20               	clrf	printf@prec+1,c
  1224  00146E  BE1F               	btfsc	printf@prec,7,c
  1225  001470  0620               	decf	printf@prec+1,f,c
  1226                           
  1227                           ;doprnt.c: 1474: while(prec--) {
  1228  001472  D03F               	goto	l1644
  1229  001474                     l1640:
  1230                           
  1231                           ;doprnt.c: 1478: {
  1232                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1233  001474  C01F  F01D         	movff	printf@prec,??_printf
  1234  001478  C020  F01E         	movff	printf@prec+1,??_printf+1
  1235  00147C  90D8               	bcf	status,0,c
  1236  00147E  361D               	rlcf	??_printf,f,c
  1237  001480  361E               	rlcf	??_printf+1,f,c
  1238  001482  90D8               	bcf	status,0,c
  1239  001484  361D               	rlcf	??_printf,f,c
  1240  001486  361E               	rlcf	??_printf+1,f,c
  1241  001488  0E01               	movlw	low _dpowers
  1242  00148A  241D               	addwf	??_printf,w,c
  1243  00148C  6EF6               	movwf	tblptrl,c
  1244  00148E  0E10               	movlw	high _dpowers
  1245  001490  201E               	addwfc	??_printf+1,w,c
  1246  001492  6EF7               	movwf	tblptrh,c
  1247  001494                     	if	0	;There are less than 3 active tblptr bytes
  1248  001494                     	endif
  1249  001494  0009               	tblrd		*+
  1250  001496  CFF5 F005          	movff	tablat,___lldiv@divisor
  1251  00149A  0009               	tblrd		*+
  1252  00149C  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1253  0014A0  0009               	tblrd		*+
  1254  0014A2  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1255  0014A6  000A               	tblrd		*-
  1256  0014A8  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1257  0014AC  C024  F001         	movff	printf@val,___lldiv@dividend
  1258  0014B0  C025  F002         	movff	printf@val+1,___lldiv@dividend+1
  1259  0014B4  C026  F003         	movff	printf@val+2,___lldiv@dividend+2
  1260  0014B8  C027  F004         	movff	printf@val+3,___lldiv@dividend+3
  1261  0014BC  EC89  F00D         	call	___lldiv	;wreg free
  1262  0014C0  C001  F00E         	movff	?___lldiv,___llmod@dividend
  1263  0014C4  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  1264  0014C8  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  1265  0014CC  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  1266  0014D0  0E0A               	movlw	10
  1267  0014D2  6E12               	movwf	___llmod@divisor,c
  1268  0014D4  0E00               	movlw	0
  1269  0014D6  6E13               	movwf	___llmod@divisor+1,c
  1270  0014D8  0E00               	movlw	0
  1271  0014DA  6E14               	movwf	___llmod@divisor+2,c
  1272  0014DC  0E00               	movlw	0
  1273  0014DE  6E15               	movwf	___llmod@divisor+3,c
  1274  0014E0  ECCF  F00D         	call	___llmod	;wreg free
  1275  0014E4  500E               	movf	?___llmod,w,c
  1276  0014E6  0F30               	addlw	48
  1277  0014E8  6E28               	movwf	printf@c,c
  1278                           
  1279                           ;doprnt.c: 1523: }
  1280                           ;doprnt.c: 1524: (putch(c) );
  1281  0014EA  5028               	movf	printf@c,w,c
  1282  0014EC  EC03  F00F         	call	_putch
  1283  0014F0  D000               	goto	l1644
  1284  0014F2                     l1644:
  1285  0014F2  061F               	decf	printf@prec,f,c
  1286  0014F4  A0D8               	btfss	status,0,c
  1287  0014F6  0620               	decf	printf@prec+1,f,c
  1288  0014F8  281F               	incf	printf@prec,w,c
  1289  0014FA  E1BC               	bnz	l1640
  1290  0014FC  2820               	incf	printf@prec+1,w,c
  1291  0014FE  B4D8               	btfsc	status,2,c
  1292  001500  D002               	goto	l1646
  1293  001502  D7B8               	goto	l1640
  1294  001504  D000               	goto	l1646
  1295  001506                     l1646:
  1296  001506  C017  FFF6         	movff	printf@f,tblptrl
  1297  00150A  C018  FFF7         	movff	printf@f+1,tblptrh
  1298  00150E  4A17               	infsnz	printf@f,f,c
  1299  001510  2A18               	incf	printf@f+1,f,c
  1300  001512                     	if	0	;tblptru may be non-zero
  1301  001512                     	endif
  1302  001512                     	if	0	;tblptru may be non-zero
  1303  001512                     	endif
  1304  001512  0008               	tblrd		*
  1305  001514  CFF5 F028          	movff	tablat,printf@c
  1306  001518  5028               	movf	printf@c,w,c
  1307  00151A  B4D8               	btfsc	status,2,c
  1308  00151C  D002               	goto	l235
  1309  00151E  D721               	goto	l1594
  1310  001520  D000               	goto	l235
  1311  001522                     l235:
  1312  001522  0012               	return		;funcret
  1313  001524                     __end_of_printf:
  1314                           	opt stack 0
  1315                           tblptru	equ	0xFF8
  1316                           tblptrh	equ	0xFF7
  1317                           tblptrl	equ	0xFF6
  1318                           tablat	equ	0xFF5
  1319                           prodh	equ	0xFF4
  1320                           prodl	equ	0xFF3
  1321                           postinc0	equ	0xFEE
  1322                           postdec1	equ	0xFE5
  1323                           fsr1l	equ	0xFE1
  1324                           indf2	equ	0xFDF
  1325                           postinc2	equ	0xFDE
  1326                           postdec2	equ	0xFDD
  1327                           fsr2h	equ	0xFDA
  1328                           fsr2l	equ	0xFD9
  1329                           status	equ	0xFD8
  1330                           
  1331 ;; *************** function _putch *****************
  1332 ;; Defined at:
  1333 ;;		line 150 in file "Lab6pB2.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  c               1    wreg     unsigned char 
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;  c               1    0[COMRAM] unsigned char 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;		None               void
  1340 ;; Registers used:
  1341 ;;		wreg
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1350 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1351 ;;Total ram usage:        1 bytes
  1352 ;; Hardware stack levels used:    1
  1353 ;; This function calls:
  1354 ;;		Nothing
  1355 ;; This function is called by:
  1356 ;;		_printf
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text2
  1361  001E06                     __ptext2:
  1362                           	opt stack 0
  1363  001E06                     _putch:
  1364                           	opt stack 29
  1365                           
  1366                           ;incstack = 0
  1367                           ;putch@c stored from wreg
  1368  001E06  6E01               	movwf	putch@c,c
  1369                           
  1370                           ;Lab6pB2.c: 152: while (!TRMT);
  1371  001E08  D000               	goto	l115
  1372  001E0A                     l115:
  1373  001E0A  A2AC               	btfss	4012,1,c	;volatile
  1374  001E0C  D7FE               	goto	l115
  1375                           
  1376                           ;Lab6pB2.c: 153: TXREG = c;
  1377  001E0E  C001  FFAD         	movff	putch@c,4013	;volatile
  1378  001E12  0012               	return		;funcret
  1379  001E14                     __end_of_putch:
  1380                           	opt stack 0
  1381                           tblptru	equ	0xFF8
  1382                           tblptrh	equ	0xFF7
  1383                           tblptrl	equ	0xFF6
  1384                           tablat	equ	0xFF5
  1385                           prodh	equ	0xFF4
  1386                           prodl	equ	0xFF3
  1387                           postinc0	equ	0xFEE
  1388                           postdec1	equ	0xFE5
  1389                           fsr1l	equ	0xFE1
  1390                           indf2	equ	0xFDF
  1391                           postinc2	equ	0xFDE
  1392                           postdec2	equ	0xFDD
  1393                           fsr2h	equ	0xFDA
  1394                           fsr2l	equ	0xFD9
  1395                           status	equ	0xFD8
  1396                           
  1397 ;; *************** function ___llmod *****************
  1398 ;; Defined at:
  1399 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\llmod.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;  dividend        4   13[COMRAM] unsigned long 
  1402 ;;  divisor         4   17[COMRAM] unsigned long 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;  counter         1   21[COMRAM] unsigned char 
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  4   13[COMRAM] unsigned long 
  1407 ;; Registers used:
  1408 ;;		wreg, status,2, status,0
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1414 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;Total ram usage:        9 bytes
  1419 ;; Hardware stack levels used:    1
  1420 ;; This function calls:
  1421 ;;		Nothing
  1422 ;; This function is called by:
  1423 ;;		_printf
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text3
  1428  001B9E                     __ptext3:
  1429                           	opt stack 0
  1430  001B9E                     ___llmod:
  1431                           	opt stack 29
  1432                           
  1433                           ;incstack = 0
  1434  001B9E  5012               	movf	___llmod@divisor,w,c
  1435  001BA0  1013               	iorwf	___llmod@divisor+1,w,c
  1436  001BA2  1014               	iorwf	___llmod@divisor+2,w,c
  1437  001BA4  1015               	iorwf	___llmod@divisor+3,w,c
  1438  001BA6  B4D8               	btfsc	status,2,c
  1439  001BA8  D029               	goto	l736
  1440  001BAA  0E01               	movlw	1
  1441  001BAC  6E16               	movwf	___llmod@counter,c
  1442  001BAE  D007               	goto	l1570
  1443  001BB0                     l1568:
  1444  001BB0  90D8               	bcf	status,0,c
  1445  001BB2  3612               	rlcf	___llmod@divisor,f,c
  1446  001BB4  3613               	rlcf	___llmod@divisor+1,f,c
  1447  001BB6  3614               	rlcf	___llmod@divisor+2,f,c
  1448  001BB8  3615               	rlcf	___llmod@divisor+3,f,c
  1449  001BBA  2A16               	incf	___llmod@counter,f,c
  1450  001BBC  D000               	goto	l1570
  1451  001BBE                     l1570:
  1452  001BBE  BE15               	btfsc	___llmod@divisor+3,7,c
  1453  001BC0  D002               	goto	l1572
  1454  001BC2  D7F6               	goto	l1568
  1455  001BC4  D000               	goto	l1572
  1456  001BC6                     l1572:
  1457  001BC6  5012               	movf	___llmod@divisor,w,c
  1458  001BC8  5C0E               	subwf	___llmod@dividend,w,c
  1459  001BCA  5013               	movf	___llmod@divisor+1,w,c
  1460  001BCC  580F               	subwfb	___llmod@dividend+1,w,c
  1461  001BCE  5014               	movf	___llmod@divisor+2,w,c
  1462  001BD0  5810               	subwfb	___llmod@dividend+2,w,c
  1463  001BD2  5015               	movf	___llmod@divisor+3,w,c
  1464  001BD4  5811               	subwfb	___llmod@dividend+3,w,c
  1465  001BD6  A0D8               	btfss	status,0,c
  1466  001BD8  D009               	goto	l1576
  1467  001BDA  5012               	movf	___llmod@divisor,w,c
  1468  001BDC  5E0E               	subwf	___llmod@dividend,f,c
  1469  001BDE  5013               	movf	___llmod@divisor+1,w,c
  1470  001BE0  5A0F               	subwfb	___llmod@dividend+1,f,c
  1471  001BE2  5014               	movf	___llmod@divisor+2,w,c
  1472  001BE4  5A10               	subwfb	___llmod@dividend+2,f,c
  1473  001BE6  5015               	movf	___llmod@divisor+3,w,c
  1474  001BE8  5A11               	subwfb	___llmod@dividend+3,f,c
  1475  001BEA  D000               	goto	l1576
  1476  001BEC                     l1576:
  1477  001BEC  90D8               	bcf	status,0,c
  1478  001BEE  3215               	rrcf	___llmod@divisor+3,f,c
  1479  001BF0  3214               	rrcf	___llmod@divisor+2,f,c
  1480  001BF2  3213               	rrcf	___llmod@divisor+1,f,c
  1481  001BF4  3212               	rrcf	___llmod@divisor,f,c
  1482  001BF6  2E16               	decfsz	___llmod@counter,f,c
  1483  001BF8  D7E6               	goto	l1572
  1484  001BFA  D000               	goto	l736
  1485  001BFC                     l736:
  1486  001BFC  C00E  F00E         	movff	___llmod@dividend,?___llmod
  1487  001C00  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  1488  001C04  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  1489  001C08  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  1490  001C0C  0012               	return		;funcret
  1491  001C0E                     __end_of___llmod:
  1492                           	opt stack 0
  1493                           tblptru	equ	0xFF8
  1494                           tblptrh	equ	0xFF7
  1495                           tblptrl	equ	0xFF6
  1496                           tablat	equ	0xFF5
  1497                           prodh	equ	0xFF4
  1498                           prodl	equ	0xFF3
  1499                           postinc0	equ	0xFEE
  1500                           postdec1	equ	0xFE5
  1501                           fsr1l	equ	0xFE1
  1502                           indf2	equ	0xFDF
  1503                           postinc2	equ	0xFDE
  1504                           postdec2	equ	0xFDD
  1505                           fsr2h	equ	0xFDA
  1506                           fsr2l	equ	0xFD9
  1507                           status	equ	0xFD8
  1508                           
  1509 ;; *************** function ___lldiv *****************
  1510 ;; Defined at:
  1511 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\lldiv.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  dividend        4    0[COMRAM] unsigned long 
  1514 ;;  divisor         4    4[COMRAM] unsigned long 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  quotient        4    8[COMRAM] unsigned long 
  1517 ;;  counter         1   12[COMRAM] unsigned char 
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  4    0[COMRAM] unsigned long 
  1520 ;; Registers used:
  1521 ;;		wreg, status,2, status,0
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1527 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1531 ;;Total ram usage:       13 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_printf
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text4
  1541  001B12                     __ptext4:
  1542                           	opt stack 0
  1543  001B12                     ___lldiv:
  1544                           	opt stack 29
  1545                           
  1546                           ;incstack = 0
  1547  001B12  0E00               	movlw	0
  1548  001B14  6E09               	movwf	___lldiv@quotient,c
  1549  001B16  0E00               	movlw	0
  1550  001B18  6E0A               	movwf	___lldiv@quotient+1,c
  1551  001B1A  0E00               	movlw	0
  1552  001B1C  6E0B               	movwf	___lldiv@quotient+2,c
  1553  001B1E  0E00               	movlw	0
  1554  001B20  6E0C               	movwf	___lldiv@quotient+3,c
  1555  001B22  5005               	movf	___lldiv@divisor,w,c
  1556  001B24  1006               	iorwf	___lldiv@divisor+1,w,c
  1557  001B26  1007               	iorwf	___lldiv@divisor+2,w,c
  1558  001B28  1008               	iorwf	___lldiv@divisor+3,w,c
  1559  001B2A  B4D8               	btfsc	status,2,c
  1560  001B2C  D02F               	goto	l726
  1561  001B2E  0E01               	movlw	1
  1562  001B30  6E0D               	movwf	___lldiv@counter,c
  1563  001B32  D007               	goto	l1550
  1564  001B34                     l1548:
  1565  001B34  90D8               	bcf	status,0,c
  1566  001B36  3605               	rlcf	___lldiv@divisor,f,c
  1567  001B38  3606               	rlcf	___lldiv@divisor+1,f,c
  1568  001B3A  3607               	rlcf	___lldiv@divisor+2,f,c
  1569  001B3C  3608               	rlcf	___lldiv@divisor+3,f,c
  1570  001B3E  2A0D               	incf	___lldiv@counter,f,c
  1571  001B40  D000               	goto	l1550
  1572  001B42                     l1550:
  1573  001B42  BE08               	btfsc	___lldiv@divisor+3,7,c
  1574  001B44  D002               	goto	l1552
  1575  001B46  D7F6               	goto	l1548
  1576  001B48  D000               	goto	l1552
  1577  001B4A                     l1552:
  1578  001B4A  90D8               	bcf	status,0,c
  1579  001B4C  3609               	rlcf	___lldiv@quotient,f,c
  1580  001B4E  360A               	rlcf	___lldiv@quotient+1,f,c
  1581  001B50  360B               	rlcf	___lldiv@quotient+2,f,c
  1582  001B52  360C               	rlcf	___lldiv@quotient+3,f,c
  1583  001B54  5005               	movf	___lldiv@divisor,w,c
  1584  001B56  5C01               	subwf	___lldiv@dividend,w,c
  1585  001B58  5006               	movf	___lldiv@divisor+1,w,c
  1586  001B5A  5802               	subwfb	___lldiv@dividend+1,w,c
  1587  001B5C  5007               	movf	___lldiv@divisor+2,w,c
  1588  001B5E  5803               	subwfb	___lldiv@dividend+2,w,c
  1589  001B60  5008               	movf	___lldiv@divisor+3,w,c
  1590  001B62  5804               	subwfb	___lldiv@dividend+3,w,c
  1591  001B64  A0D8               	btfss	status,0,c
  1592  001B66  D00A               	goto	l1560
  1593  001B68  5005               	movf	___lldiv@divisor,w,c
  1594  001B6A  5E01               	subwf	___lldiv@dividend,f,c
  1595  001B6C  5006               	movf	___lldiv@divisor+1,w,c
  1596  001B6E  5A02               	subwfb	___lldiv@dividend+1,f,c
  1597  001B70  5007               	movf	___lldiv@divisor+2,w,c
  1598  001B72  5A03               	subwfb	___lldiv@dividend+2,f,c
  1599  001B74  5008               	movf	___lldiv@divisor+3,w,c
  1600  001B76  5A04               	subwfb	___lldiv@dividend+3,f,c
  1601  001B78  8009               	bsf	___lldiv@quotient,0,c
  1602  001B7A  D000               	goto	l1560
  1603  001B7C                     l1560:
  1604  001B7C  90D8               	bcf	status,0,c
  1605  001B7E  3208               	rrcf	___lldiv@divisor+3,f,c
  1606  001B80  3207               	rrcf	___lldiv@divisor+2,f,c
  1607  001B82  3206               	rrcf	___lldiv@divisor+1,f,c
  1608  001B84  3205               	rrcf	___lldiv@divisor,f,c
  1609  001B86  2E0D               	decfsz	___lldiv@counter,f,c
  1610  001B88  D7E0               	goto	l1552
  1611  001B8A  D000               	goto	l726
  1612  001B8C                     l726:
  1613  001B8C  C009  F001         	movff	___lldiv@quotient,?___lldiv
  1614  001B90  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  1615  001B94  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  1616  001B98  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  1617  001B9C  0012               	return		;funcret
  1618  001B9E                     __end_of___lldiv:
  1619                           	opt stack 0
  1620                           tblptru	equ	0xFF8
  1621                           tblptrh	equ	0xFF7
  1622                           tblptrl	equ	0xFF6
  1623                           tablat	equ	0xFF5
  1624                           prodh	equ	0xFF4
  1625                           prodl	equ	0xFF3
  1626                           postinc0	equ	0xFEE
  1627                           postdec1	equ	0xFE5
  1628                           fsr1l	equ	0xFE1
  1629                           indf2	equ	0xFDF
  1630                           postinc2	equ	0xFDE
  1631                           postdec2	equ	0xFDD
  1632                           fsr2h	equ	0xFDA
  1633                           fsr2l	equ	0xFD9
  1634                           status	equ	0xFD8
  1635                           
  1636 ;; *************** function _init_UART *****************
  1637 ;; Defined at:
  1638 ;;		line 143 in file "Lab6pB2.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;		None
  1643 ;; Return value:  Size  Location     Type
  1644 ;;		None               void
  1645 ;; Registers used:
  1646 ;;		wreg, status,2, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1656 ;;Total ram usage:        0 bytes
  1657 ;; Hardware stack levels used:    1
  1658 ;; Hardware stack levels required when called:    1
  1659 ;; This function calls:
  1660 ;;		_OpenUSART
  1661 ;; This function is called by:
  1662 ;;		_main
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           	psect	text5
  1667  001DCE                     __ptext5:
  1668                           	opt stack 0
  1669  001DCE                     _init_UART:
  1670                           	opt stack 29
  1671                           
  1672                           ;Lab6pB2.c: 145: OpenUSART(0b01111111 & 0b10111111 & 0b11111110 & 0b11111101
  1673                           ;Lab6pB2.c: 146: & 0b11111111 & 0b11111111, 25);
  1674                           
  1675                           ;incstack = 0
  1676  001DCE  0E00               	movlw	0
  1677  001DD0  6E02               	movwf	OpenUSART@spbrg+1,c
  1678  001DD2  0E19               	movlw	25
  1679  001DD4  6E01               	movwf	OpenUSART@spbrg,c
  1680  001DD6  0E3C               	movlw	60
  1681  001DD8  EC07  F00E         	call	_OpenUSART
  1682                           
  1683                           ;Lab6pB2.c: 147: OSCCON = 0x60;
  1684  001DDC  0E60               	movlw	96
  1685  001DDE  6ED3               	movwf	4051,c	;volatile
  1686  001DE0  0012               	return		;funcret
  1687  001DE2                     __end_of_init_UART:
  1688                           	opt stack 0
  1689                           tblptru	equ	0xFF8
  1690                           tblptrh	equ	0xFF7
  1691                           tblptrl	equ	0xFF6
  1692                           tablat	equ	0xFF5
  1693                           prodh	equ	0xFF4
  1694                           prodl	equ	0xFF3
  1695                           postinc0	equ	0xFEE
  1696                           postdec1	equ	0xFE5
  1697                           fsr1l	equ	0xFE1
  1698                           indf2	equ	0xFDF
  1699                           postinc2	equ	0xFDE
  1700                           postdec2	equ	0xFDD
  1701                           fsr2h	equ	0xFDA
  1702                           fsr2l	equ	0xFD9
  1703                           status	equ	0xFD8
  1704                           
  1705 ;; *************** function _OpenUSART *****************
  1706 ;; Defined at:
  1707 ;;		line 73 in file "C:\My Programs\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  config          1    wreg     unsigned char 
  1710 ;;  spbrg           2    0[COMRAM] unsigned int 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  config          1    2[COMRAM] unsigned char 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;		None               void
  1715 ;; Registers used:
  1716 ;;		wreg, status,2
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1723 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1725 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;Total ram usage:        3 bytes
  1727 ;; Hardware stack levels used:    1
  1728 ;; This function calls:
  1729 ;;		Nothing
  1730 ;; This function is called by:
  1731 ;;		_init_UART
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text6
  1736  001C0E                     __ptext6:
  1737                           	opt stack 0
  1738  001C0E                     _OpenUSART:
  1739                           	opt stack 29
  1740                           
  1741                           ;incstack = 0
  1742                           ;OpenUSART@config stored from wreg
  1743  001C0E  6E03               	movwf	OpenUSART@config,c
  1744  001C10  0E00               	movlw	0
  1745  001C12  6EAC               	movwf	4012,c	;volatile
  1746  001C14  0E00               	movlw	0
  1747  001C16  6EAB               	movwf	4011,c	;volatile
  1748  001C18  A003               	btfss	OpenUSART@config,0,c
  1749  001C1A  D002               	goto	l1462
  1750  001C1C  88AC               	bsf	4012,4,c	;volatile
  1751  001C1E  D000               	goto	l1462
  1752  001C20                     l1462:
  1753  001C20  A203               	btfss	OpenUSART@config,1,c
  1754  001C22  D003               	goto	l1466
  1755  001C24  8CAC               	bsf	4012,6,c	;volatile
  1756  001C26  8CAB               	bsf	4011,6,c	;volatile
  1757  001C28  D000               	goto	l1466
  1758  001C2A                     l1466:
  1759  001C2A  A403               	btfss	OpenUSART@config,2,c
  1760  001C2C  D002               	goto	l1470
  1761  001C2E  8EAC               	bsf	4012,7,c	;volatile
  1762  001C30  D000               	goto	l1470
  1763  001C32                     l1470:
  1764  001C32  A603               	btfss	OpenUSART@config,3,c
  1765  001C34  D002               	goto	l259
  1766  001C36  88AB               	bsf	4011,4,c	;volatile
  1767  001C38  D002               	goto	l1474
  1768  001C3A                     l259:
  1769  001C3A  8AAB               	bsf	4011,5,c	;volatile
  1770  001C3C  D000               	goto	l1474
  1771  001C3E                     l1474:
  1772  001C3E  B803               	btfsc	OpenUSART@config,4,c
  1773  001C40  84AC               	bsf	4012,2,c	;volatile
  1774  001C42  989E               	bcf	3998,4,c	;volatile
  1775  001C44  AA03               	btfss	OpenUSART@config,5,c
  1776  001C46  D002               	goto	l1482
  1777  001C48  86AB               	bsf	4011,3,c	;volatile
  1778  001C4A  D000               	goto	l1482
  1779  001C4C                     l1482:
  1780  001C4C  AC03               	btfss	OpenUSART@config,6,c
  1781  001C4E  D002               	goto	l263
  1782  001C50  8A9D               	bsf	3997,5,c	;volatile
  1783  001C52  D001               	goto	l264
  1784  001C54                     l263:
  1785  001C54  9A9D               	bcf	3997,5,c	;volatile
  1786  001C56                     l264:
  1787  001C56  9A9E               	bcf	3998,5,c	;volatile
  1788  001C58  AE03               	btfss	OpenUSART@config,7,c
  1789  001C5A  D002               	goto	l265
  1790  001C5C  889D               	bsf	3997,4,c	;volatile
  1791  001C5E  D001               	goto	l266
  1792  001C60                     l265:
  1793  001C60  989D               	bcf	3997,4,c	;volatile
  1794  001C62                     l266:
  1795  001C62  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1796  001C66  5002               	movf	OpenUSART@spbrg+1,w,c
  1797  001C68  6EB0               	movwf	4016,c	;volatile
  1798  001C6A  8AAC               	bsf	4012,5,c	;volatile
  1799  001C6C  8EAB               	bsf	4011,7,c	;volatile
  1800  001C6E  9C94               	bcf	3988,6,c	;volatile
  1801  001C70  8E94               	bsf	3988,7,c	;volatile
  1802  001C72  B8AC               	btfsc	4012,4,c	;volatile
  1803  001C74  BEAC               	btfsc	4012,7,c	;volatile
  1804  001C76  D002               	goto	l268
  1805  001C78  8C94               	bsf	3988,6,c	;volatile
  1806  001C7A  D000               	goto	l268
  1807  001C7C                     l268:
  1808  001C7C  0012               	return		;funcret
  1809  001C7E                     __end_of_OpenUSART:
  1810                           	opt stack 0
  1811                           tblptru	equ	0xFF8
  1812                           tblptrh	equ	0xFF7
  1813                           tblptrl	equ	0xFF6
  1814                           tablat	equ	0xFF5
  1815                           prodh	equ	0xFF4
  1816                           prodl	equ	0xFF3
  1817                           postinc0	equ	0xFEE
  1818                           postdec1	equ	0xFE5
  1819                           fsr1l	equ	0xFE1
  1820                           indf2	equ	0xFDF
  1821                           postinc2	equ	0xFDE
  1822                           postdec2	equ	0xFDD
  1823                           fsr2h	equ	0xFDA
  1824                           fsr2l	equ	0xFD9
  1825                           status	equ	0xFD8
  1826                           
  1827 ;; *************** function _get_full_ADC *****************
  1828 ;; Defined at:
  1829 ;;		line 161 in file "Lab6pB2.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  result          2    4[COMRAM] int 
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  2    0[COMRAM] unsigned int 
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, status,0
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1843 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1844 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;Total ram usage:        6 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; This function calls:
  1850 ;;		Nothing
  1851 ;; This function is called by:
  1852 ;;		_main
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text7
  1857  001D22                     __ptext7:
  1858                           	opt stack 0
  1859  001D22                     _get_full_ADC:
  1860                           	opt stack 30
  1861                           
  1862                           ;Lab6pB2.c: 163: int result;
  1863                           ;Lab6pB2.c: 164: ADCON0bits.GO=1;
  1864                           
  1865                           ;incstack = 0
  1866  001D22  82C2               	bsf	4034,1,c	;volatile
  1867                           
  1868                           ;Lab6pB2.c: 165: while(ADCON0bits.DONE==1);
  1869  001D24  D000               	goto	l124
  1870  001D26                     l124:
  1871  001D26  B2C2               	btfsc	4034,1,c	;volatile
  1872  001D28  D7FE               	goto	l124
  1873                           
  1874                           ;Lab6pB2.c: 166: result = (ADRESH * 0x100) + ADRESL;
  1875  001D2A  50C4               	movf	4036,w,c	;volatile
  1876  001D2C  6E04               	movwf	(??_get_full_ADC+1)& (0+255),c
  1877  001D2E  6A03               	clrf	??_get_full_ADC& (0+255),c
  1878  001D30  50C3               	movf	4035,w,c	;volatile
  1879  001D32  2403               	addwf	??_get_full_ADC,w,c
  1880  001D34  6E05               	movwf	get_full_ADC@result,c
  1881  001D36  0E00               	movlw	0
  1882  001D38  2004               	addwfc	??_get_full_ADC+1,w,c
  1883  001D3A  6E06               	movwf	get_full_ADC@result+1,c
  1884                           
  1885                           ;Lab6pB2.c: 168: return result;
  1886  001D3C  C005  F001         	movff	get_full_ADC@result,?_get_full_ADC
  1887  001D40  C006  F002         	movff	get_full_ADC@result+1,?_get_full_ADC+1
  1888  001D44  D000               	goto	l127
  1889  001D46                     l127:
  1890  001D46  0012               	return		;funcret
  1891  001D48                     __end_of_get_full_ADC:
  1892                           	opt stack 0
  1893                           tblptru	equ	0xFF8
  1894                           tblptrh	equ	0xFF7
  1895                           tblptrl	equ	0xFF6
  1896                           tablat	equ	0xFF5
  1897                           prodh	equ	0xFF4
  1898                           prodl	equ	0xFF3
  1899                           postinc0	equ	0xFEE
  1900                           postdec1	equ	0xFE5
  1901                           fsr1l	equ	0xFE1
  1902                           indf2	equ	0xFDF
  1903                           postinc2	equ	0xFDE
  1904                           postdec2	equ	0xFDD
  1905                           fsr2h	equ	0xFDA
  1906                           fsr2l	equ	0xFD9
  1907                           status	equ	0xFD8
  1908                           
  1909 ;; *************** function ___fttol *****************
  1910 ;; Defined at:
  1911 ;;		line 44 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\fttol.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  f1              3    0[COMRAM] float 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  lval            4   10[COMRAM] unsigned long 
  1916 ;;  exp1            1   14[COMRAM] unsigned char 
  1917 ;;  sign1           1    9[COMRAM] unsigned char 
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  4    0[COMRAM] long 
  1920 ;; Registers used:
  1921 ;;		wreg, status,2, status,0
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1927 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1930 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;Total ram usage:       15 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; This function calls:
  1934 ;;		Nothing
  1935 ;; This function is called by:
  1936 ;;		_main
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text8
  1941  0016E8                     __ptext8:
  1942                           	opt stack 0
  1943  0016E8                     ___fttol:
  1944                           	opt stack 30
  1945                           
  1946                           ;incstack = 0
  1947  0016E8  C003  F005         	movff	___fttol@f1+2,??___fttol
  1948  0016EC  6A06               	clrf	(??___fttol+1)& (0+255),c
  1949  0016EE  6A07               	clrf	(??___fttol+2)& (0+255),c
  1950  0016F0  3402               	rlcf	___fttol@f1+1,w,c
  1951  0016F2  3605               	rlcf	??___fttol& (0+255),f,c
  1952  0016F4  E301               	bnc	u1651
  1953  0016F6  8006               	bsf	(??___fttol+1)& (0+255),0,c
  1954  0016F8                     u1651:
  1955  0016F8  5005               	movf	??___fttol,w,c
  1956  0016FA  6E0F               	movwf	___fttol@exp1,c
  1957  0016FC  500F               	movf	___fttol@exp1,w,c
  1958  0016FE  A4D8               	btfss	status,2,c
  1959  001700  D002               	goto	l1866
  1960  001702  D039               	goto	l1890
  1961  001704  D063               	goto	l687
  1962  001706                     l1866:
  1963  001706  0E17               	movlw	23
  1964  001708  6E05               	movwf	??___fttol& (0+255),c
  1965  00170A  C001  F006         	movff	___fttol@f1,??___fttol+1
  1966  00170E  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  1967  001712  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  1968  001716  2805               	incf	??___fttol,w,c
  1969  001718  6E09               	movwf	(??___fttol+4)& (0+255),c
  1970  00171A  D004               	goto	u1670
  1971  00171C                     u1675:
  1972  00171C  90D8               	bcf	status,0,c
  1973  00171E  3208               	rrcf	??___fttol+3,f,c
  1974  001720  3207               	rrcf	??___fttol+2,f,c
  1975  001722  3206               	rrcf	??___fttol+1,f,c
  1976  001724                     u1670:
  1977  001724  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
  1978  001726  D7FA               	goto	u1675
  1979  001728  5006               	movf	??___fttol+1,w,c
  1980  00172A  6E0A               	movwf	___fttol@sign1,c
  1981  00172C  8E02               	bsf	___fttol@f1+1,7,c
  1982  00172E  0EFF               	movlw	255
  1983  001730  1601               	andwf	___fttol@f1,f,c
  1984  001732  0EFF               	movlw	255
  1985  001734  1602               	andwf	___fttol@f1+1,f,c
  1986  001736  0E00               	movlw	0
  1987  001738  1603               	andwf	___fttol@f1+2,f,c
  1988  00173A  5001               	movf	___fttol@f1,w,c
  1989  00173C  6E0B               	movwf	___fttol@lval,c
  1990  00173E  5002               	movf	___fttol@f1+1,w,c
  1991  001740  6E0C               	movwf	___fttol@lval+1,c
  1992  001742  5003               	movf	___fttol@f1+2,w,c
  1993  001744  6E0D               	movwf	___fttol@lval+2,c
  1994  001746  6A0E               	clrf	___fttol@lval+3,c
  1995  001748  0E8E               	movlw	142
  1996  00174A  5E0F               	subwf	___fttol@exp1,f,c
  1997  00174C  AE0F               	btfss	___fttol@exp1,7,c
  1998  00174E  D010               	goto	l1888
  1999  001750  500F               	movf	___fttol@exp1,w,c
  2000  001752  0A80               	xorlw	128
  2001  001754  0F8F               	addlw	143
  2002  001756  B0D8               	btfsc	status,0,c
  2003  001758  D003               	goto	l1884
  2004  00175A  D00D               	goto	l1890
  2005  00175C  D037               	goto	l687
  2006  00175E  D000               	goto	l1884
  2007  001760                     l1884:
  2008  001760  90D8               	bcf	status,0,c
  2009  001762  320E               	rrcf	___fttol@lval+3,f,c
  2010  001764  320D               	rrcf	___fttol@lval+2,f,c
  2011  001766  320C               	rrcf	___fttol@lval+1,f,c
  2012  001768  320B               	rrcf	___fttol@lval,f,c
  2013  00176A  3E0F               	incfsz	___fttol@exp1,f,c
  2014  00176C  D7F9               	goto	l1884
  2015  00176E  D019               	goto	l1898
  2016  001770                     l1888:
  2017  001770  0E17               	movlw	23
  2018  001772  640F               	cpfsgt	___fttol@exp1,c
  2019  001774  D011               	goto	l1896
  2020  001776                     l1890:
  2021  001776  0E00               	movlw	0
  2022  001778  6E01               	movwf	?___fttol,c
  2023  00177A  0E00               	movlw	0
  2024  00177C  6E02               	movwf	?___fttol+1,c
  2025  00177E  0E00               	movlw	0
  2026  001780  6E03               	movwf	?___fttol+2,c
  2027  001782  0E00               	movlw	0
  2028  001784  6E04               	movwf	?___fttol+3,c
  2029  001786  D022               	goto	l687
  2030  001788  D007               	goto	l1896
  2031  00178A                     l1894:
  2032  00178A  90D8               	bcf	status,0,c
  2033  00178C  360B               	rlcf	___fttol@lval,f,c
  2034  00178E  360C               	rlcf	___fttol@lval+1,f,c
  2035  001790  360D               	rlcf	___fttol@lval+2,f,c
  2036  001792  360E               	rlcf	___fttol@lval+3,f,c
  2037  001794  060F               	decf	___fttol@exp1,f,c
  2038  001796  D000               	goto	l1896
  2039  001798                     l1896:
  2040  001798  500F               	movf	___fttol@exp1,w,c
  2041  00179A  B4D8               	btfsc	status,2,c
  2042  00179C  D002               	goto	l1898
  2043  00179E  D7F5               	goto	l1894
  2044  0017A0  D000               	goto	l1898
  2045  0017A2                     l1898:
  2046  0017A2  500A               	movf	___fttol@sign1,w,c
  2047  0017A4  B4D8               	btfsc	status,2,c
  2048  0017A6  D009               	goto	l1902
  2049  0017A8  1E0E               	comf	___fttol@lval+3,f,c
  2050  0017AA  1E0D               	comf	___fttol@lval+2,f,c
  2051  0017AC  1E0C               	comf	___fttol@lval+1,f,c
  2052  0017AE  6C0B               	negf	___fttol@lval,c
  2053  0017B0  0E00               	movlw	0
  2054  0017B2  220C               	addwfc	___fttol@lval+1,f,c
  2055  0017B4  220D               	addwfc	___fttol@lval+2,f,c
  2056  0017B6  220E               	addwfc	___fttol@lval+3,f,c
  2057  0017B8  D000               	goto	l1902
  2058  0017BA                     l1902:
  2059  0017BA  C00B  F001         	movff	___fttol@lval,?___fttol
  2060  0017BE  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  2061  0017C2  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  2062  0017C6  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  2063  0017CA  D000               	goto	l687
  2064  0017CC                     l687:
  2065  0017CC  0012               	return		;funcret
  2066  0017CE                     __end_of___fttol:
  2067                           	opt stack 0
  2068                           tblptru	equ	0xFF8
  2069                           tblptrh	equ	0xFF7
  2070                           tblptrl	equ	0xFF6
  2071                           tablat	equ	0xFF5
  2072                           prodh	equ	0xFF4
  2073                           prodl	equ	0xFF3
  2074                           postinc0	equ	0xFEE
  2075                           postdec1	equ	0xFE5
  2076                           fsr1l	equ	0xFE1
  2077                           indf2	equ	0xFDF
  2078                           postinc2	equ	0xFDE
  2079                           postdec2	equ	0xFDD
  2080                           fsr2h	equ	0xFDA
  2081                           fsr2l	equ	0xFD9
  2082                           status	equ	0xFD8
  2083                           
  2084 ;; *************** function ___ftneg *****************
  2085 ;; Defined at:
  2086 ;;		line 15 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftneg.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;  f1              3    0[COMRAM] float 
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;		None
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  3    0[COMRAM] float 
  2093 ;; Registers used:
  2094 ;;		wreg, status,2, status,0
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2100 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2103 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2104 ;;Total ram usage:        3 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; This function calls:
  2107 ;;		Nothing
  2108 ;; This function is called by:
  2109 ;;		_main
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           	psect	text9
  2114  001D48                     __ptext9:
  2115                           	opt stack 0
  2116  001D48                     ___ftneg:
  2117                           	opt stack 30
  2118                           
  2119                           ;incstack = 0
  2120  001D48  5001               	movf	___ftneg@f1,w,c
  2121  001D4A  1002               	iorwf	___ftneg@f1+1,w,c
  2122  001D4C  1003               	iorwf	___ftneg@f1+2,w,c
  2123  001D4E  B4D8               	btfsc	status,2,c
  2124  001D50  D006               	goto	l676
  2125  001D52  0E00               	movlw	0
  2126  001D54  1A01               	xorwf	___ftneg@f1,f,c
  2127  001D56  0E00               	movlw	0
  2128  001D58  1A02               	xorwf	___ftneg@f1+1,f,c
  2129  001D5A  0E80               	movlw	128
  2130  001D5C  1A03               	xorwf	___ftneg@f1+2,f,c
  2131  001D5E                     l676:
  2132  001D5E  C001  F001         	movff	___ftneg@f1,?___ftneg
  2133  001D62  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  2134  001D66  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  2135  001D6A  0012               	return		;funcret
  2136  001D6C                     __end_of___ftneg:
  2137                           	opt stack 0
  2138                           tblptru	equ	0xFF8
  2139                           tblptrh	equ	0xFF7
  2140                           tblptrl	equ	0xFF6
  2141                           tablat	equ	0xFF5
  2142                           prodh	equ	0xFF4
  2143                           prodl	equ	0xFF3
  2144                           postinc0	equ	0xFEE
  2145                           postdec1	equ	0xFE5
  2146                           fsr1l	equ	0xFE1
  2147                           indf2	equ	0xFDF
  2148                           postinc2	equ	0xFDE
  2149                           postdec2	equ	0xFDD
  2150                           fsr2h	equ	0xFDA
  2151                           fsr2l	equ	0xFD9
  2152                           status	equ	0xFD8
  2153                           
  2154 ;; *************** function ___ftdiv *****************
  2155 ;; Defined at:
  2156 ;;		line 54 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  f1              3   12[COMRAM] float 
  2159 ;;  f2              3   15[COMRAM] float 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  f3              3   22[COMRAM] float 
  2162 ;;  sign            1   26[COMRAM] unsigned char 
  2163 ;;  exp             1   25[COMRAM] unsigned char 
  2164 ;;  cntr            1   21[COMRAM] unsigned char 
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  3   12[COMRAM] float 
  2167 ;; Registers used:
  2168 ;;		wreg, status,2, status,0, cstack
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2174 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;Total ram usage:       15 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; Hardware stack levels required when called:    1
  2181 ;; This function calls:
  2182 ;;		___ftpack
  2183 ;; This function is called by:
  2184 ;;		_main
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text10
  2189  0017CE                     __ptext10:
  2190                           	opt stack 0
  2191  0017CE                     ___ftdiv:
  2192                           	opt stack 29
  2193                           
  2194                           ;incstack = 0
  2195  0017CE  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
  2196  0017D2  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  2197  0017D4  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  2198  0017D6  340E               	rlcf	___ftdiv@f1+1,w,c
  2199  0017D8  3613               	rlcf	??___ftdiv& (0+255),f,c
  2200  0017DA  E301               	bnc	u1581
  2201  0017DC  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  2202  0017DE                     u1581:
  2203  0017DE  5013               	movf	??___ftdiv,w,c
  2204  0017E0  6E1A               	movwf	___ftdiv@exp,c
  2205  0017E2  501A               	movf	___ftdiv@exp,w,c
  2206  0017E4  A4D8               	btfss	status,2,c
  2207  0017E6  D002               	goto	l1804
  2208  0017E8  D00E               	goto	l1806
  2209  0017EA  D061               	goto	l651
  2210  0017EC                     l1804:
  2211  0017EC  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
  2212  0017F0  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  2213  0017F2  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  2214  0017F4  3411               	rlcf	___ftdiv@f2+1,w,c
  2215  0017F6  3613               	rlcf	??___ftdiv& (0+255),f,c
  2216  0017F8  E301               	bnc	u1601
  2217  0017FA  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  2218  0017FC                     u1601:
  2219  0017FC  5013               	movf	??___ftdiv,w,c
  2220  0017FE  6E1B               	movwf	___ftdiv@sign,c
  2221  001800  501B               	movf	___ftdiv@sign,w,c
  2222  001802  A4D8               	btfss	status,2,c
  2223  001804  D007               	goto	l1810
  2224  001806                     l1806:
  2225  001806  0E00               	movlw	0
  2226  001808  6E0D               	movwf	?___ftdiv,c
  2227  00180A  0E00               	movlw	0
  2228  00180C  6E0E               	movwf	?___ftdiv+1,c
  2229  00180E  0E00               	movlw	0
  2230  001810  6E0F               	movwf	?___ftdiv+2,c
  2231  001812  D04D               	goto	l651
  2232  001814                     l1810:
  2233  001814  0E00               	movlw	0
  2234  001816  6E17               	movwf	___ftdiv@f3,c
  2235  001818  0E00               	movlw	0
  2236  00181A  6E18               	movwf	___ftdiv@f3+1,c
  2237  00181C  0E00               	movlw	0
  2238  00181E  6E19               	movwf	___ftdiv@f3+2,c
  2239  001820  501B               	movf	___ftdiv@sign,w,c
  2240  001822  0F89               	addlw	137
  2241  001824  5E1A               	subwf	___ftdiv@exp,f,c
  2242  001826  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
  2243  00182A  5012               	movf	___ftdiv@f2+2,w,c
  2244  00182C  1A1B               	xorwf	___ftdiv@sign,f,c
  2245  00182E  0E80               	movlw	128
  2246  001830  161B               	andwf	___ftdiv@sign,f,c
  2247  001832  8E0E               	bsf	___ftdiv@f1+1,7,c
  2248  001834  0EFF               	movlw	255
  2249  001836  160D               	andwf	___ftdiv@f1,f,c
  2250  001838  0EFF               	movlw	255
  2251  00183A  160E               	andwf	___ftdiv@f1+1,f,c
  2252  00183C  0E00               	movlw	0
  2253  00183E  160F               	andwf	___ftdiv@f1+2,f,c
  2254  001840  8E11               	bsf	___ftdiv@f2+1,7,c
  2255  001842  0EFF               	movlw	255
  2256  001844  1610               	andwf	___ftdiv@f2,f,c
  2257  001846  0EFF               	movlw	255
  2258  001848  1611               	andwf	___ftdiv@f2+1,f,c
  2259  00184A  0E00               	movlw	0
  2260  00184C  1612               	andwf	___ftdiv@f2+2,f,c
  2261  00184E  0E18               	movlw	24
  2262  001850  6E16               	movwf	___ftdiv@cntr,c
  2263  001852  D000               	goto	l1830
  2264  001854                     l1830:
  2265  001854  90D8               	bcf	status,0,c
  2266  001856  3617               	rlcf	___ftdiv@f3,f,c
  2267  001858  3618               	rlcf	___ftdiv@f3+1,f,c
  2268  00185A  3619               	rlcf	___ftdiv@f3+2,f,c
  2269  00185C  5010               	movf	___ftdiv@f2,w,c
  2270  00185E  5C0D               	subwf	___ftdiv@f1,w,c
  2271  001860  5011               	movf	___ftdiv@f2+1,w,c
  2272  001862  580E               	subwfb	___ftdiv@f1+1,w,c
  2273  001864  5012               	movf	___ftdiv@f2+2,w,c
  2274  001866  580F               	subwfb	___ftdiv@f1+2,w,c
  2275  001868  A0D8               	btfss	status,0,c
  2276  00186A  D007               	goto	l654
  2277  00186C  5010               	movf	___ftdiv@f2,w,c
  2278  00186E  5E0D               	subwf	___ftdiv@f1,f,c
  2279  001870  5011               	movf	___ftdiv@f2+1,w,c
  2280  001872  5A0E               	subwfb	___ftdiv@f1+1,f,c
  2281  001874  5012               	movf	___ftdiv@f2+2,w,c
  2282  001876  5A0F               	subwfb	___ftdiv@f1+2,f,c
  2283  001878  8017               	bsf	___ftdiv@f3,0,c
  2284  00187A                     l654:
  2285  00187A  90D8               	bcf	status,0,c
  2286  00187C  360D               	rlcf	___ftdiv@f1,f,c
  2287  00187E  360E               	rlcf	___ftdiv@f1+1,f,c
  2288  001880  360F               	rlcf	___ftdiv@f1+2,f,c
  2289  001882  2E16               	decfsz	___ftdiv@cntr,f,c
  2290  001884  D7E7               	goto	l1830
  2291  001886  D000               	goto	l1840
  2292  001888                     l1840:
  2293  001888  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
  2294  00188C  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2295  001890  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2296  001894  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
  2297  001898  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
  2298  00189C  ECC7  F00C         	call	___ftpack	;wreg free
  2299  0018A0  C001  F00D         	movff	?___ftpack,?___ftdiv
  2300  0018A4  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
  2301  0018A8  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
  2302  0018AC  D000               	goto	l651
  2303  0018AE                     l651:
  2304  0018AE  0012               	return		;funcret
  2305  0018B0                     __end_of___ftdiv:
  2306                           	opt stack 0
  2307                           tblptru	equ	0xFF8
  2308                           tblptrh	equ	0xFF7
  2309                           tblptrl	equ	0xFF6
  2310                           tablat	equ	0xFF5
  2311                           prodh	equ	0xFF4
  2312                           prodl	equ	0xFF3
  2313                           postinc0	equ	0xFEE
  2314                           postdec1	equ	0xFE5
  2315                           fsr1l	equ	0xFE1
  2316                           indf2	equ	0xFDF
  2317                           postinc2	equ	0xFDE
  2318                           postdec2	equ	0xFDD
  2319                           fsr2h	equ	0xFDA
  2320                           fsr2l	equ	0xFD9
  2321                           status	equ	0xFD8
  2322                           
  2323 ;; *************** function ___ftadd *****************
  2324 ;; Defined at:
  2325 ;;		line 86 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftadd.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  f1              3    8[COMRAM] float 
  2328 ;;  f2              3   11[COMRAM] float 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  exp1            1   19[COMRAM] unsigned char 
  2331 ;;  exp2            1   18[COMRAM] unsigned char 
  2332 ;;  sign            1   17[COMRAM] unsigned char 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  3    8[COMRAM] float 
  2335 ;; Registers used:
  2336 ;;		wreg, status,2, status,0, cstack
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2342 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2344 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;Total ram usage:       12 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    1
  2349 ;; This function calls:
  2350 ;;		___ftpack
  2351 ;; This function is called by:
  2352 ;;		_main
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           	psect	text11
  2357  001524                     __ptext11:
  2358                           	opt stack 0
  2359  001524                     ___ftadd:
  2360                           	opt stack 29
  2361                           
  2362                           ;incstack = 0
  2363  001524  C00B  F00F         	movff	___ftadd@f1+2,??___ftadd
  2364  001528  6A10               	clrf	(??___ftadd+1)& (0+255),c
  2365  00152A  6A11               	clrf	(??___ftadd+2)& (0+255),c
  2366  00152C  340A               	rlcf	___ftadd@f1+1,w,c
  2367  00152E  360F               	rlcf	??___ftadd& (0+255),f,c
  2368  001530  E301               	bnc	u1371
  2369  001532  8010               	bsf	(??___ftadd+1)& (0+255),0,c
  2370  001534                     u1371:
  2371  001534  500F               	movf	??___ftadd,w,c
  2372  001536  6E14               	movwf	___ftadd@exp1,c
  2373  001538  C00E  F00F         	movff	___ftadd@f2+2,??___ftadd
  2374  00153C  6A10               	clrf	(??___ftadd+1)& (0+255),c
  2375  00153E  6A11               	clrf	(??___ftadd+2)& (0+255),c
  2376  001540  340D               	rlcf	___ftadd@f2+1,w,c
  2377  001542  360F               	rlcf	??___ftadd& (0+255),f,c
  2378  001544  E301               	bnc	u1381
  2379  001546  8010               	bsf	(??___ftadd+1)& (0+255),0,c
  2380  001548                     u1381:
  2381  001548  500F               	movf	??___ftadd,w,c
  2382  00154A  6E13               	movwf	___ftadd@exp2,c
  2383  00154C  5014               	movf	___ftadd@exp1,w,c
  2384  00154E  B4D8               	btfsc	status,2,c
  2385  001550  D00B               	goto	l619
  2386  001552  5013               	movf	___ftadd@exp2,w,c
  2387  001554  5C14               	subwf	___ftadd@exp1,w,c
  2388  001556  B0D8               	btfsc	status,0,c
  2389  001558  D00E               	goto	l1736
  2390  00155A  5014               	movf	___ftadd@exp1,w,c
  2391  00155C  0800               	sublw	0
  2392  00155E  2413               	addwf	___ftadd@exp2,w,c
  2393  001560  6E0F               	movwf	??___ftadd& (0+255),c
  2394  001562  0E18               	movlw	24
  2395  001564  640F               	cpfsgt	??___ftadd,c
  2396  001566  D007               	goto	l1736
  2397  001568                     l619:
  2398  001568  C00C  F009         	movff	___ftadd@f2,?___ftadd
  2399  00156C  C00D  F00A         	movff	___ftadd@f2+1,?___ftadd+1
  2400  001570  C00E  F00B         	movff	___ftadd@f2+2,?___ftadd+2
  2401  001574  D0B8               	goto	l620
  2402  001576                     l1736:
  2403  001576  5013               	movf	___ftadd@exp2,w,c
  2404  001578  B4D8               	btfsc	status,2,c
  2405  00157A  D00B               	goto	l623
  2406  00157C  5014               	movf	___ftadd@exp1,w,c
  2407  00157E  5C13               	subwf	___ftadd@exp2,w,c
  2408  001580  B0D8               	btfsc	status,0,c
  2409  001582  D00E               	goto	l1742
  2410  001584  5013               	movf	___ftadd@exp2,w,c
  2411  001586  0800               	sublw	0
  2412  001588  2414               	addwf	___ftadd@exp1,w,c
  2413  00158A  6E0F               	movwf	??___ftadd& (0+255),c
  2414  00158C  0E18               	movlw	24
  2415  00158E  640F               	cpfsgt	??___ftadd,c
  2416  001590  D007               	goto	l1742
  2417  001592                     l623:
  2418  001592  C009  F009         	movff	___ftadd@f1,?___ftadd
  2419  001596  C00A  F00A         	movff	___ftadd@f1+1,?___ftadd+1
  2420  00159A  C00B  F00B         	movff	___ftadd@f1+2,?___ftadd+2
  2421  00159E  D0A3               	goto	l620
  2422  0015A0                     l1742:
  2423  0015A0  0E06               	movlw	6
  2424  0015A2  6E12               	movwf	___ftadd@sign,c
  2425  0015A4  AE0B               	btfss	___ftadd@f1+2,7,c
  2426  0015A6  D002               	goto	l1748
  2427  0015A8  8E12               	bsf	___ftadd@sign,7,c
  2428  0015AA  D000               	goto	l1748
  2429  0015AC                     l1748:
  2430  0015AC  BE0E               	btfsc	___ftadd@f2+2,7,c
  2431  0015AE  8C12               	bsf	___ftadd@sign,6,c
  2432  0015B0  8E0A               	bsf	___ftadd@f1+1,7,c
  2433  0015B2  0EFF               	movlw	255
  2434  0015B4  1609               	andwf	___ftadd@f1,f,c
  2435  0015B6  0EFF               	movlw	255
  2436  0015B8  160A               	andwf	___ftadd@f1+1,f,c
  2437  0015BA  0E00               	movlw	0
  2438  0015BC  160B               	andwf	___ftadd@f1+2,f,c
  2439  0015BE  8E0D               	bsf	___ftadd@f2+1,7,c
  2440  0015C0  0EFF               	movlw	255
  2441  0015C2  160C               	andwf	___ftadd@f2,f,c
  2442  0015C4  0EFF               	movlw	255
  2443  0015C6  160D               	andwf	___ftadd@f2+1,f,c
  2444  0015C8  0E00               	movlw	0
  2445  0015CA  160E               	andwf	___ftadd@f2+2,f,c
  2446  0015CC  5013               	movf	___ftadd@exp2,w,c
  2447  0015CE  5C14               	subwf	___ftadd@exp1,w,c
  2448  0015D0  B0D8               	btfsc	status,0,c
  2449  0015D2  D01E               	goto	l1768
  2450  0015D4                     l1758:
  2451  0015D4  90D8               	bcf	status,0,c
  2452  0015D6  360C               	rlcf	___ftadd@f2,f,c
  2453  0015D8  360D               	rlcf	___ftadd@f2+1,f,c
  2454  0015DA  360E               	rlcf	___ftadd@f2+2,f,c
  2455  0015DC  0613               	decf	___ftadd@exp2,f,c
  2456  0015DE  5014               	movf	___ftadd@exp1,w,c
  2457  0015E0  1813               	xorwf	___ftadd@exp2,w,c
  2458  0015E2  B4D8               	btfsc	status,2,c
  2459  0015E4  D00F               	goto	l1766
  2460  0015E6  0612               	decf	___ftadd@sign,f,c
  2461  0015E8  C012  F00F         	movff	___ftadd@sign,??___ftadd
  2462  0015EC  0E07               	movlw	7
  2463  0015EE  160F               	andwf	??___ftadd,f,c
  2464  0015F0  B4D8               	btfsc	status,2,c
  2465  0015F2  D008               	goto	l1766
  2466  0015F4  D7EF               	goto	l1758
  2467  0015F6  D006               	goto	l1766
  2468  0015F8                     l1764:
  2469  0015F8  90D8               	bcf	status,0,c
  2470  0015FA  320B               	rrcf	___ftadd@f1+2,f,c
  2471  0015FC  320A               	rrcf	___ftadd@f1+1,f,c
  2472  0015FE  3209               	rrcf	___ftadd@f1,f,c
  2473  001600  2A14               	incf	___ftadd@exp1,f,c
  2474  001602  D000               	goto	l1766
  2475  001604                     l1766:
  2476  001604  5013               	movf	___ftadd@exp2,w,c
  2477  001606  1814               	xorwf	___ftadd@exp1,w,c
  2478  001608  B4D8               	btfsc	status,2,c
  2479  00160A  D024               	goto	l634
  2480  00160C  D7F5               	goto	l1764
  2481  00160E  D022               	goto	l634
  2482  001610                     l1768:
  2483  001610  5014               	movf	___ftadd@exp1,w,c
  2484  001612  5C13               	subwf	___ftadd@exp2,w,c
  2485  001614  B0D8               	btfsc	status,0,c
  2486  001616  D01E               	goto	l634
  2487  001618                     l1770:
  2488  001618  90D8               	bcf	status,0,c
  2489  00161A  3609               	rlcf	___ftadd@f1,f,c
  2490  00161C  360A               	rlcf	___ftadd@f1+1,f,c
  2491  00161E  360B               	rlcf	___ftadd@f1+2,f,c
  2492  001620  0614               	decf	___ftadd@exp1,f,c
  2493  001622  5014               	movf	___ftadd@exp1,w,c
  2494  001624  1813               	xorwf	___ftadd@exp2,w,c
  2495  001626  B4D8               	btfsc	status,2,c
  2496  001628  D00F               	goto	l1778
  2497  00162A  0612               	decf	___ftadd@sign,f,c
  2498  00162C  C012  F00F         	movff	___ftadd@sign,??___ftadd
  2499  001630  0E07               	movlw	7
  2500  001632  160F               	andwf	??___ftadd,f,c
  2501  001634  B4D8               	btfsc	status,2,c
  2502  001636  D008               	goto	l1778
  2503  001638  D7EF               	goto	l1770
  2504  00163A  D006               	goto	l1778
  2505  00163C                     l1776:
  2506  00163C  90D8               	bcf	status,0,c
  2507  00163E  320E               	rrcf	___ftadd@f2+2,f,c
  2508  001640  320D               	rrcf	___ftadd@f2+1,f,c
  2509  001642  320C               	rrcf	___ftadd@f2,f,c
  2510  001644  2A13               	incf	___ftadd@exp2,f,c
  2511  001646  D000               	goto	l1778
  2512  001648                     l1778:
  2513  001648  5013               	movf	___ftadd@exp2,w,c
  2514  00164A  1814               	xorwf	___ftadd@exp1,w,c
  2515  00164C  B4D8               	btfsc	status,2,c
  2516  00164E  D002               	goto	l634
  2517  001650  D7F5               	goto	l1776
  2518  001652  D000               	goto	l634
  2519  001654                     l634:
  2520  001654  AE12               	btfss	___ftadd@sign,7,c
  2521  001656  D00C               	goto	l643
  2522  001658  0EFF               	movlw	255
  2523  00165A  1A09               	xorwf	___ftadd@f1,f,c
  2524  00165C  0EFF               	movlw	255
  2525  00165E  1A0A               	xorwf	___ftadd@f1+1,f,c
  2526  001660  0EFF               	movlw	255
  2527  001662  1A0B               	xorwf	___ftadd@f1+2,f,c
  2528  001664  0E01               	movlw	1
  2529  001666  2609               	addwf	___ftadd@f1,f,c
  2530  001668  0E00               	movlw	0
  2531  00166A  220A               	addwfc	___ftadd@f1+1,f,c
  2532  00166C  0E00               	movlw	0
  2533  00166E  220B               	addwfc	___ftadd@f1+2,f,c
  2534  001670                     l643:
  2535  001670  AC12               	btfss	___ftadd@sign,6,c
  2536  001672  D00D               	goto	l1784
  2537  001674  0EFF               	movlw	255
  2538  001676  1A0C               	xorwf	___ftadd@f2,f,c
  2539  001678  0EFF               	movlw	255
  2540  00167A  1A0D               	xorwf	___ftadd@f2+1,f,c
  2541  00167C  0EFF               	movlw	255
  2542  00167E  1A0E               	xorwf	___ftadd@f2+2,f,c
  2543  001680  0E01               	movlw	1
  2544  001682  260C               	addwf	___ftadd@f2,f,c
  2545  001684  0E00               	movlw	0
  2546  001686  220D               	addwfc	___ftadd@f2+1,f,c
  2547  001688  0E00               	movlw	0
  2548  00168A  220E               	addwfc	___ftadd@f2+2,f,c
  2549  00168C  D000               	goto	l1784
  2550  00168E                     l1784:
  2551  00168E  0E00               	movlw	0
  2552  001690  6E12               	movwf	___ftadd@sign,c
  2553  001692  5009               	movf	___ftadd@f1,w,c
  2554  001694  260C               	addwf	___ftadd@f2,f,c
  2555  001696  500A               	movf	___ftadd@f1+1,w,c
  2556  001698  220D               	addwfc	___ftadd@f2+1,f,c
  2557  00169A  500B               	movf	___ftadd@f1+2,w,c
  2558  00169C  220E               	addwfc	___ftadd@f2+2,f,c
  2559  00169E  AE0E               	btfss	___ftadd@f2+2,7,c
  2560  0016A0  D00F               	goto	l1794
  2561  0016A2  0EFF               	movlw	255
  2562  0016A4  1A0C               	xorwf	___ftadd@f2,f,c
  2563  0016A6  0EFF               	movlw	255
  2564  0016A8  1A0D               	xorwf	___ftadd@f2+1,f,c
  2565  0016AA  0EFF               	movlw	255
  2566  0016AC  1A0E               	xorwf	___ftadd@f2+2,f,c
  2567  0016AE  0E01               	movlw	1
  2568  0016B0  260C               	addwf	___ftadd@f2,f,c
  2569  0016B2  0E00               	movlw	0
  2570  0016B4  220D               	addwfc	___ftadd@f2+1,f,c
  2571  0016B6  0E00               	movlw	0
  2572  0016B8  220E               	addwfc	___ftadd@f2+2,f,c
  2573  0016BA  0E01               	movlw	1
  2574  0016BC  6E12               	movwf	___ftadd@sign,c
  2575  0016BE  D000               	goto	l1794
  2576  0016C0                     l1794:
  2577  0016C0  C00C  F001         	movff	___ftadd@f2,___ftpack@arg
  2578  0016C4  C00D  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  2579  0016C8  C00E  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  2580  0016CC  C014  F004         	movff	___ftadd@exp1,___ftpack@exp
  2581  0016D0  C012  F005         	movff	___ftadd@sign,___ftpack@sign
  2582  0016D4  ECC7  F00C         	call	___ftpack	;wreg free
  2583  0016D8  C001  F009         	movff	?___ftpack,?___ftadd
  2584  0016DC  C002  F00A         	movff	?___ftpack+1,?___ftadd+1
  2585  0016E0  C003  F00B         	movff	?___ftpack+2,?___ftadd+2
  2586  0016E4  D000               	goto	l620
  2587  0016E6                     l620:
  2588  0016E6  0012               	return		;funcret
  2589  0016E8                     __end_of___ftadd:
  2590                           	opt stack 0
  2591                           tblptru	equ	0xFF8
  2592                           tblptrh	equ	0xFF7
  2593                           tblptrl	equ	0xFF6
  2594                           tablat	equ	0xFF5
  2595                           prodh	equ	0xFF4
  2596                           prodl	equ	0xFF3
  2597                           postinc0	equ	0xFEE
  2598                           postdec1	equ	0xFE5
  2599                           fsr1l	equ	0xFE1
  2600                           indf2	equ	0xFDF
  2601                           postinc2	equ	0xFDE
  2602                           postdec2	equ	0xFDD
  2603                           fsr2h	equ	0xFDA
  2604                           fsr2l	equ	0xFD9
  2605                           status	equ	0xFD8
  2606                           
  2607 ;; *************** function ___awtoft *****************
  2608 ;; Defined at:
  2609 ;;		line 32 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\awtoft.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;  c               2    8[COMRAM] int 
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;  sign            1   11[COMRAM] unsigned char 
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  3    8[COMRAM] float 
  2616 ;; Registers used:
  2617 ;;		wreg, status,2, status,0, cstack
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2623 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2624 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2626 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2627 ;;Total ram usage:        4 bytes
  2628 ;; Hardware stack levels used:    1
  2629 ;; Hardware stack levels required when called:    1
  2630 ;; This function calls:
  2631 ;;		___ftpack
  2632 ;; This function is called by:
  2633 ;;		_main
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text12
  2638  001CBC                     __ptext12:
  2639                           	opt stack 0
  2640  001CBC                     ___awtoft:
  2641                           	opt stack 29
  2642                           
  2643                           ;incstack = 0
  2644  001CBC  0E00               	movlw	0
  2645  001CBE  6E0C               	movwf	___awtoft@sign,c
  2646  001CC0  AE0A               	btfss	___awtoft@c+1,7,c
  2647  001CC2  D007               	goto	l1852
  2648  001CC4  6C09               	negf	___awtoft@c,c
  2649  001CC6  1E0A               	comf	___awtoft@c+1,f,c
  2650  001CC8  B0D8               	btfsc	status,0,c
  2651  001CCA  2A0A               	incf	___awtoft@c+1,f,c
  2652  001CCC  0E01               	movlw	1
  2653  001CCE  6E0C               	movwf	___awtoft@sign,c
  2654  001CD0  D000               	goto	l1852
  2655  001CD2                     l1852:
  2656  001CD2  C009  F001         	movff	___awtoft@c,___ftpack@arg
  2657  001CD6  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  2658  001CDA  6A03               	clrf	___ftpack@arg+2,c
  2659  001CDC  0E8E               	movlw	142
  2660  001CDE  6E04               	movwf	___ftpack@exp,c
  2661  001CE0  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  2662  001CE4  ECC7  F00C         	call	___ftpack	;wreg free
  2663  001CE8  C001  F009         	movff	?___ftpack,?___awtoft
  2664  001CEC  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  2665  001CF0  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  2666  001CF4  D000               	goto	l489
  2667  001CF6                     l489:
  2668  001CF6  0012               	return		;funcret
  2669  001CF8                     __end_of___awtoft:
  2670                           	opt stack 0
  2671                           tblptru	equ	0xFF8
  2672                           tblptrh	equ	0xFF7
  2673                           tblptrl	equ	0xFF6
  2674                           tablat	equ	0xFF5
  2675                           prodh	equ	0xFF4
  2676                           prodl	equ	0xFF3
  2677                           postinc0	equ	0xFEE
  2678                           postdec1	equ	0xFE5
  2679                           fsr1l	equ	0xFE1
  2680                           indf2	equ	0xFDF
  2681                           postinc2	equ	0xFDE
  2682                           postdec2	equ	0xFDD
  2683                           fsr2h	equ	0xFDA
  2684                           fsr2l	equ	0xFD9
  2685                           status	equ	0xFD8
  2686                           
  2687 ;; *************** function ___ftpack *****************
  2688 ;; Defined at:
  2689 ;;		line 62 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\float.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  arg             3    0[COMRAM] unsigned um
  2692 ;;  exp             1    3[COMRAM] unsigned char 
  2693 ;;  sign            1    4[COMRAM] unsigned char 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  3    0[COMRAM] float 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2, status,0
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2705 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;Total ram usage:        8 bytes
  2710 ;; Hardware stack levels used:    1
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		___awtoft
  2715 ;;		___ftadd
  2716 ;;		___ftdiv
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           	psect	text13
  2721  00198E                     __ptext13:
  2722                           	opt stack 0
  2723  00198E                     ___ftpack:
  2724                           	opt stack 29
  2725                           
  2726                           ;incstack = 0
  2727  00198E  5004               	movf	___ftpack@exp,w,c
  2728  001990  B4D8               	btfsc	status,2,c
  2729  001992  D005               	goto	l1510
  2730  001994  5001               	movf	___ftpack@arg,w,c
  2731  001996  1002               	iorwf	___ftpack@arg+1,w,c
  2732  001998  1003               	iorwf	___ftpack@arg+2,w,c
  2733  00199A  A4D8               	btfss	status,2,c
  2734  00199C  D00E               	goto	l1516
  2735  00199E                     l1510:
  2736  00199E  0E00               	movlw	0
  2737  0019A0  6E01               	movwf	?___ftpack,c
  2738  0019A2  0E00               	movlw	0
  2739  0019A4  6E02               	movwf	?___ftpack+1,c
  2740  0019A6  0E00               	movlw	0
  2741  0019A8  6E03               	movwf	?___ftpack+2,c
  2742  0019AA  D053               	goto	l579
  2743  0019AC  D006               	goto	l1516
  2744  0019AE                     l1514:
  2745  0019AE  2A04               	incf	___ftpack@exp,f,c
  2746  0019B0  90D8               	bcf	status,0,c
  2747  0019B2  3203               	rrcf	___ftpack@arg+2,f,c
  2748  0019B4  3202               	rrcf	___ftpack@arg+1,f,c
  2749  0019B6  3201               	rrcf	___ftpack@arg,f,c
  2750  0019B8  D000               	goto	l1516
  2751  0019BA                     l1516:
  2752  0019BA  0E00               	movlw	0
  2753  0019BC  1401               	andwf	___ftpack@arg,w,c
  2754  0019BE  6E06               	movwf	??___ftpack& (0+255),c
  2755  0019C0  0E00               	movlw	0
  2756  0019C2  1402               	andwf	___ftpack@arg+1,w,c
  2757  0019C4  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2758  0019C6  0EFE               	movlw	254
  2759  0019C8  1403               	andwf	___ftpack@arg+2,w,c
  2760  0019CA  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2761  0019CC  5006               	movf	??___ftpack,w,c
  2762  0019CE  1007               	iorwf	??___ftpack+1,w,c
  2763  0019D0  1008               	iorwf	??___ftpack+2,w,c
  2764  0019D2  B4D8               	btfsc	status,2,c
  2765  0019D4  D00E               	goto	l1522
  2766  0019D6  D7EB               	goto	l1514
  2767  0019D8  D00C               	goto	l1522
  2768  0019DA                     l1518:
  2769  0019DA  2A04               	incf	___ftpack@exp,f,c
  2770  0019DC  0E01               	movlw	1
  2771  0019DE  2601               	addwf	___ftpack@arg,f,c
  2772  0019E0  0E00               	movlw	0
  2773  0019E2  2202               	addwfc	___ftpack@arg+1,f,c
  2774  0019E4  0E00               	movlw	0
  2775  0019E6  2203               	addwfc	___ftpack@arg+2,f,c
  2776  0019E8  90D8               	bcf	status,0,c
  2777  0019EA  3203               	rrcf	___ftpack@arg+2,f,c
  2778  0019EC  3202               	rrcf	___ftpack@arg+1,f,c
  2779  0019EE  3201               	rrcf	___ftpack@arg,f,c
  2780  0019F0  D000               	goto	l1522
  2781  0019F2                     l1522:
  2782  0019F2  0E00               	movlw	0
  2783  0019F4  1401               	andwf	___ftpack@arg,w,c
  2784  0019F6  6E06               	movwf	??___ftpack& (0+255),c
  2785  0019F8  0E00               	movlw	0
  2786  0019FA  1402               	andwf	___ftpack@arg+1,w,c
  2787  0019FC  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2788  0019FE  0EFF               	movlw	255
  2789  001A00  1403               	andwf	___ftpack@arg+2,w,c
  2790  001A02  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2791  001A04  5006               	movf	??___ftpack,w,c
  2792  001A06  1007               	iorwf	??___ftpack+1,w,c
  2793  001A08  1008               	iorwf	??___ftpack+2,w,c
  2794  001A0A  B4D8               	btfsc	status,2,c
  2795  001A0C  D008               	goto	l1526
  2796  001A0E  D7E5               	goto	l1518
  2797  001A10  D006               	goto	l1526
  2798  001A12                     l1524:
  2799  001A12  0604               	decf	___ftpack@exp,f,c
  2800  001A14  90D8               	bcf	status,0,c
  2801  001A16  3601               	rlcf	___ftpack@arg,f,c
  2802  001A18  3602               	rlcf	___ftpack@arg+1,f,c
  2803  001A1A  3603               	rlcf	___ftpack@arg+2,f,c
  2804  001A1C  D000               	goto	l1526
  2805  001A1E                     l1526:
  2806  001A1E  BE02               	btfsc	___ftpack@arg+1,7,c
  2807  001A20  D004               	goto	l590
  2808  001A22  0E02               	movlw	2
  2809  001A24  6004               	cpfslt	___ftpack@exp,c
  2810  001A26  D7F5               	goto	l1524
  2811  001A28  D000               	goto	l590
  2812  001A2A                     l590:
  2813  001A2A  B004               	btfsc	___ftpack@exp,0,c
  2814  001A2C  D002               	goto	l1532
  2815  001A2E  9E02               	bcf	___ftpack@arg+1,7,c
  2816  001A30  D000               	goto	l1532
  2817  001A32                     l1532:
  2818  001A32  90D8               	bcf	status,0,c
  2819  001A34  3204               	rrcf	___ftpack@exp,f,c
  2820  001A36  5004               	movf	___ftpack@exp,w,c
  2821  001A38  1203               	iorwf	___ftpack@arg+2,f,c
  2822  001A3A  5005               	movf	___ftpack@sign,w,c
  2823  001A3C  B4D8               	btfsc	status,2,c
  2824  001A3E  D002               	goto	l1538
  2825  001A40  8E03               	bsf	___ftpack@arg+2,7,c
  2826  001A42  D000               	goto	l1538
  2827  001A44                     l1538:
  2828  001A44  C001  F001         	movff	___ftpack@arg,?___ftpack
  2829  001A48  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2830  001A4C  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2831  001A50  D000               	goto	l579
  2832  001A52                     l579:
  2833  001A52  0012               	return		;funcret
  2834  001A54                     __end_of___ftpack:
  2835                           	opt stack 0
  2836                           tblptru	equ	0xFF8
  2837                           tblptrh	equ	0xFF7
  2838                           tblptrl	equ	0xFF6
  2839                           tablat	equ	0xFF5
  2840                           prodh	equ	0xFF4
  2841                           prodl	equ	0xFF3
  2842                           postinc0	equ	0xFEE
  2843                           postdec1	equ	0xFE5
  2844                           fsr1l	equ	0xFE1
  2845                           indf2	equ	0xFDF
  2846                           postinc2	equ	0xFDE
  2847                           postdec2	equ	0xFDD
  2848                           fsr2h	equ	0xFDA
  2849                           fsr2l	equ	0xFD9
  2850                           status	equ	0xFD8
  2851                           
  2852 ;; *************** function ___almod *****************
  2853 ;; Defined at:
  2854 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\almod.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  dividend        4   14[COMRAM] long 
  2857 ;;  divisor         4   18[COMRAM] long 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  sign            1   23[COMRAM] unsigned char 
  2860 ;;  counter         1   22[COMRAM] unsigned char 
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  4   14[COMRAM] long 
  2863 ;; Registers used:
  2864 ;;		wreg, status,2, status,0
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2870 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2871 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2873 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2874 ;;Total ram usage:       10 bytes
  2875 ;; Hardware stack levels used:    1
  2876 ;; This function calls:
  2877 ;;		Nothing
  2878 ;; This function is called by:
  2879 ;;		_main
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           	psect	text14
  2884  001A54                     __ptext14:
  2885                           	opt stack 0
  2886  001A54                     ___almod:
  2887                           	opt stack 30
  2888                           
  2889                           ;incstack = 0
  2890  001A54  0E00               	movlw	0
  2891  001A56  6E18               	movwf	___almod@sign,c
  2892  001A58  AE12               	btfss	___almod@dividend+3,7,c
  2893  001A5A  D00B               	goto	l1700
  2894  001A5C  1E12               	comf	___almod@dividend+3,f,c
  2895  001A5E  1E11               	comf	___almod@dividend+2,f,c
  2896  001A60  1E10               	comf	___almod@dividend+1,f,c
  2897  001A62  6C0F               	negf	___almod@dividend,c
  2898  001A64  0E00               	movlw	0
  2899  001A66  2210               	addwfc	___almod@dividend+1,f,c
  2900  001A68  2211               	addwfc	___almod@dividend+2,f,c
  2901  001A6A  2212               	addwfc	___almod@dividend+3,f,c
  2902  001A6C  0E01               	movlw	1
  2903  001A6E  6E18               	movwf	___almod@sign,c
  2904  001A70  D000               	goto	l1700
  2905  001A72                     l1700:
  2906  001A72  AE16               	btfss	___almod@divisor+3,7,c
  2907  001A74  D009               	goto	l1704
  2908  001A76  1E16               	comf	___almod@divisor+3,f,c
  2909  001A78  1E15               	comf	___almod@divisor+2,f,c
  2910  001A7A  1E14               	comf	___almod@divisor+1,f,c
  2911  001A7C  6C13               	negf	___almod@divisor,c
  2912  001A7E  0E00               	movlw	0
  2913  001A80  2214               	addwfc	___almod@divisor+1,f,c
  2914  001A82  2215               	addwfc	___almod@divisor+2,f,c
  2915  001A84  2216               	addwfc	___almod@divisor+3,f,c
  2916  001A86  D000               	goto	l1704
  2917  001A88                     l1704:
  2918  001A88  5013               	movf	___almod@divisor,w,c
  2919  001A8A  1014               	iorwf	___almod@divisor+1,w,c
  2920  001A8C  1015               	iorwf	___almod@divisor+2,w,c
  2921  001A8E  1016               	iorwf	___almod@divisor+3,w,c
  2922  001A90  B4D8               	btfsc	status,2,c
  2923  001A92  D029               	goto	l1720
  2924  001A94  0E01               	movlw	1
  2925  001A96  6E17               	movwf	___almod@counter,c
  2926  001A98  D007               	goto	l1710
  2927  001A9A                     l1708:
  2928  001A9A  90D8               	bcf	status,0,c
  2929  001A9C  3613               	rlcf	___almod@divisor,f,c
  2930  001A9E  3614               	rlcf	___almod@divisor+1,f,c
  2931  001AA0  3615               	rlcf	___almod@divisor+2,f,c
  2932  001AA2  3616               	rlcf	___almod@divisor+3,f,c
  2933  001AA4  2A17               	incf	___almod@counter,f,c
  2934  001AA6  D000               	goto	l1710
  2935  001AA8                     l1710:
  2936  001AA8  BE16               	btfsc	___almod@divisor+3,7,c
  2937  001AAA  D002               	goto	l1712
  2938  001AAC  D7F6               	goto	l1708
  2939  001AAE  D000               	goto	l1712
  2940  001AB0                     l1712:
  2941  001AB0  5013               	movf	___almod@divisor,w,c
  2942  001AB2  5C0F               	subwf	___almod@dividend,w,c
  2943  001AB4  5014               	movf	___almod@divisor+1,w,c
  2944  001AB6  5810               	subwfb	___almod@dividend+1,w,c
  2945  001AB8  5015               	movf	___almod@divisor+2,w,c
  2946  001ABA  5811               	subwfb	___almod@dividend+2,w,c
  2947  001ABC  5016               	movf	___almod@divisor+3,w,c
  2948  001ABE  5812               	subwfb	___almod@dividend+3,w,c
  2949  001AC0  A0D8               	btfss	status,0,c
  2950  001AC2  D009               	goto	l1716
  2951  001AC4  5013               	movf	___almod@divisor,w,c
  2952  001AC6  5E0F               	subwf	___almod@dividend,f,c
  2953  001AC8  5014               	movf	___almod@divisor+1,w,c
  2954  001ACA  5A10               	subwfb	___almod@dividend+1,f,c
  2955  001ACC  5015               	movf	___almod@divisor+2,w,c
  2956  001ACE  5A11               	subwfb	___almod@dividend+2,f,c
  2957  001AD0  5016               	movf	___almod@divisor+3,w,c
  2958  001AD2  5A12               	subwfb	___almod@dividend+3,f,c
  2959  001AD4  D000               	goto	l1716
  2960  001AD6                     l1716:
  2961  001AD6  90D8               	bcf	status,0,c
  2962  001AD8  3216               	rrcf	___almod@divisor+3,f,c
  2963  001ADA  3215               	rrcf	___almod@divisor+2,f,c
  2964  001ADC  3214               	rrcf	___almod@divisor+1,f,c
  2965  001ADE  3213               	rrcf	___almod@divisor,f,c
  2966  001AE0  2E17               	decfsz	___almod@counter,f,c
  2967  001AE2  D7E6               	goto	l1712
  2968  001AE4  D000               	goto	l1720
  2969  001AE6                     l1720:
  2970  001AE6  5018               	movf	___almod@sign,w,c
  2971  001AE8  B4D8               	btfsc	status,2,c
  2972  001AEA  D009               	goto	l1724
  2973  001AEC  1E12               	comf	___almod@dividend+3,f,c
  2974  001AEE  1E11               	comf	___almod@dividend+2,f,c
  2975  001AF0  1E10               	comf	___almod@dividend+1,f,c
  2976  001AF2  6C0F               	negf	___almod@dividend,c
  2977  001AF4  0E00               	movlw	0
  2978  001AF6  2210               	addwfc	___almod@dividend+1,f,c
  2979  001AF8  2211               	addwfc	___almod@dividend+2,f,c
  2980  001AFA  2212               	addwfc	___almod@dividend+3,f,c
  2981  001AFC  D000               	goto	l1724
  2982  001AFE                     l1724:
  2983  001AFE  C00F  F00F         	movff	___almod@dividend,?___almod
  2984  001B02  C010  F010         	movff	___almod@dividend+1,?___almod+1
  2985  001B06  C011  F011         	movff	___almod@dividend+2,?___almod+2
  2986  001B0A  C012  F012         	movff	___almod@dividend+3,?___almod+3
  2987  001B0E  D000               	goto	l353
  2988  001B10                     l353:
  2989  001B10  0012               	return		;funcret
  2990  001B12                     __end_of___almod:
  2991                           	opt stack 0
  2992                           tblptru	equ	0xFF8
  2993                           tblptrh	equ	0xFF7
  2994                           tblptrl	equ	0xFF6
  2995                           tablat	equ	0xFF5
  2996                           prodh	equ	0xFF4
  2997                           prodl	equ	0xFF3
  2998                           postinc0	equ	0xFEE
  2999                           postdec1	equ	0xFE5
  3000                           fsr1l	equ	0xFE1
  3001                           indf2	equ	0xFDF
  3002                           postinc2	equ	0xFDE
  3003                           postdec2	equ	0xFDD
  3004                           fsr2h	equ	0xFDA
  3005                           fsr2l	equ	0xFD9
  3006                           status	equ	0xFD8
  3007                           
  3008 ;; *************** function ___aldiv *****************
  3009 ;; Defined at:
  3010 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\aldiv.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  dividend        4    0[COMRAM] long 
  3013 ;;  divisor         4    4[COMRAM] long 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;  quotient        4   10[COMRAM] long 
  3016 ;;  sign            1    9[COMRAM] unsigned char 
  3017 ;;  counter         1    8[COMRAM] unsigned char 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  4    0[COMRAM] long 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2, status,0
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3027 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;Total ram usage:       14 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_main
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text15
  3041  0018B0                     __ptext15:
  3042                           	opt stack 0
  3043  0018B0                     ___aldiv:
  3044                           	opt stack 30
  3045                           
  3046                           ;incstack = 0
  3047  0018B0  0E00               	movlw	0
  3048  0018B2  6E0A               	movwf	___aldiv@sign,c
  3049  0018B4  AE08               	btfss	___aldiv@divisor+3,7,c
  3050  0018B6  D00B               	goto	l1656
  3051  0018B8  1E08               	comf	___aldiv@divisor+3,f,c
  3052  0018BA  1E07               	comf	___aldiv@divisor+2,f,c
  3053  0018BC  1E06               	comf	___aldiv@divisor+1,f,c
  3054  0018BE  6C05               	negf	___aldiv@divisor,c
  3055  0018C0  0E00               	movlw	0
  3056  0018C2  2206               	addwfc	___aldiv@divisor+1,f,c
  3057  0018C4  2207               	addwfc	___aldiv@divisor+2,f,c
  3058  0018C6  2208               	addwfc	___aldiv@divisor+3,f,c
  3059  0018C8  0E01               	movlw	1
  3060  0018CA  6E0A               	movwf	___aldiv@sign,c
  3061  0018CC  D000               	goto	l1656
  3062  0018CE                     l1656:
  3063  0018CE  AE04               	btfss	___aldiv@dividend+3,7,c
  3064  0018D0  D00B               	goto	l1662
  3065  0018D2  1E04               	comf	___aldiv@dividend+3,f,c
  3066  0018D4  1E03               	comf	___aldiv@dividend+2,f,c
  3067  0018D6  1E02               	comf	___aldiv@dividend+1,f,c
  3068  0018D8  6C01               	negf	___aldiv@dividend,c
  3069  0018DA  0E00               	movlw	0
  3070  0018DC  2202               	addwfc	___aldiv@dividend+1,f,c
  3071  0018DE  2203               	addwfc	___aldiv@dividend+2,f,c
  3072  0018E0  2204               	addwfc	___aldiv@dividend+3,f,c
  3073  0018E2  0E01               	movlw	1
  3074  0018E4  1A0A               	xorwf	___aldiv@sign,f,c
  3075  0018E6  D000               	goto	l1662
  3076  0018E8                     l1662:
  3077  0018E8  0E00               	movlw	0
  3078  0018EA  6E0B               	movwf	___aldiv@quotient,c
  3079  0018EC  0E00               	movlw	0
  3080  0018EE  6E0C               	movwf	___aldiv@quotient+1,c
  3081  0018F0  0E00               	movlw	0
  3082  0018F2  6E0D               	movwf	___aldiv@quotient+2,c
  3083  0018F4  0E00               	movlw	0
  3084  0018F6  6E0E               	movwf	___aldiv@quotient+3,c
  3085  0018F8  5005               	movf	___aldiv@divisor,w,c
  3086  0018FA  1006               	iorwf	___aldiv@divisor+1,w,c
  3087  0018FC  1007               	iorwf	___aldiv@divisor+2,w,c
  3088  0018FE  1008               	iorwf	___aldiv@divisor+3,w,c
  3089  001900  B4D8               	btfsc	status,2,c
  3090  001902  D02F               	goto	l1684
  3091  001904  0E01               	movlw	1
  3092  001906  6E09               	movwf	___aldiv@counter,c
  3093  001908  D007               	goto	l1670
  3094  00190A                     l1668:
  3095  00190A  90D8               	bcf	status,0,c
  3096  00190C  3605               	rlcf	___aldiv@divisor,f,c
  3097  00190E  3606               	rlcf	___aldiv@divisor+1,f,c
  3098  001910  3607               	rlcf	___aldiv@divisor+2,f,c
  3099  001912  3608               	rlcf	___aldiv@divisor+3,f,c
  3100  001914  2A09               	incf	___aldiv@counter,f,c
  3101  001916  D000               	goto	l1670
  3102  001918                     l1670:
  3103  001918  BE08               	btfsc	___aldiv@divisor+3,7,c
  3104  00191A  D002               	goto	l1672
  3105  00191C  D7F6               	goto	l1668
  3106  00191E  D000               	goto	l1672
  3107  001920                     l1672:
  3108  001920  90D8               	bcf	status,0,c
  3109  001922  360B               	rlcf	___aldiv@quotient,f,c
  3110  001924  360C               	rlcf	___aldiv@quotient+1,f,c
  3111  001926  360D               	rlcf	___aldiv@quotient+2,f,c
  3112  001928  360E               	rlcf	___aldiv@quotient+3,f,c
  3113  00192A  5005               	movf	___aldiv@divisor,w,c
  3114  00192C  5C01               	subwf	___aldiv@dividend,w,c
  3115  00192E  5006               	movf	___aldiv@divisor+1,w,c
  3116  001930  5802               	subwfb	___aldiv@dividend+1,w,c
  3117  001932  5007               	movf	___aldiv@divisor+2,w,c
  3118  001934  5803               	subwfb	___aldiv@dividend+2,w,c
  3119  001936  5008               	movf	___aldiv@divisor+3,w,c
  3120  001938  5804               	subwfb	___aldiv@dividend+3,w,c
  3121  00193A  A0D8               	btfss	status,0,c
  3122  00193C  D00A               	goto	l1680
  3123  00193E  5005               	movf	___aldiv@divisor,w,c
  3124  001940  5E01               	subwf	___aldiv@dividend,f,c
  3125  001942  5006               	movf	___aldiv@divisor+1,w,c
  3126  001944  5A02               	subwfb	___aldiv@dividend+1,f,c
  3127  001946  5007               	movf	___aldiv@divisor+2,w,c
  3128  001948  5A03               	subwfb	___aldiv@dividend+2,f,c
  3129  00194A  5008               	movf	___aldiv@divisor+3,w,c
  3130  00194C  5A04               	subwfb	___aldiv@dividend+3,f,c
  3131  00194E  800B               	bsf	___aldiv@quotient,0,c
  3132  001950  D000               	goto	l1680
  3133  001952                     l1680:
  3134  001952  90D8               	bcf	status,0,c
  3135  001954  3208               	rrcf	___aldiv@divisor+3,f,c
  3136  001956  3207               	rrcf	___aldiv@divisor+2,f,c
  3137  001958  3206               	rrcf	___aldiv@divisor+1,f,c
  3138  00195A  3205               	rrcf	___aldiv@divisor,f,c
  3139  00195C  2E09               	decfsz	___aldiv@counter,f,c
  3140  00195E  D7E0               	goto	l1672
  3141  001960  D000               	goto	l1684
  3142  001962                     l1684:
  3143  001962  500A               	movf	___aldiv@sign,w,c
  3144  001964  B4D8               	btfsc	status,2,c
  3145  001966  D009               	goto	l1688
  3146  001968  1E0E               	comf	___aldiv@quotient+3,f,c
  3147  00196A  1E0D               	comf	___aldiv@quotient+2,f,c
  3148  00196C  1E0C               	comf	___aldiv@quotient+1,f,c
  3149  00196E  6C0B               	negf	___aldiv@quotient,c
  3150  001970  0E00               	movlw	0
  3151  001972  220C               	addwfc	___aldiv@quotient+1,f,c
  3152  001974  220D               	addwfc	___aldiv@quotient+2,f,c
  3153  001976  220E               	addwfc	___aldiv@quotient+3,f,c
  3154  001978  D000               	goto	l1688
  3155  00197A                     l1688:
  3156  00197A  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  3157  00197E  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  3158  001982  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  3159  001986  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  3160  00198A  D000               	goto	l340
  3161  00198C                     l340:
  3162  00198C  0012               	return		;funcret
  3163  00198E                     __end_of___aldiv:
  3164                           	opt stack 0
  3165                           tblptru	equ	0xFF8
  3166                           tblptrh	equ	0xFF7
  3167                           tblptrl	equ	0xFF6
  3168                           tablat	equ	0xFF5
  3169                           prodh	equ	0xFF4
  3170                           prodl	equ	0xFF3
  3171                           postinc0	equ	0xFEE
  3172                           postdec1	equ	0xFE5
  3173                           fsr1l	equ	0xFE1
  3174                           indf2	equ	0xFDF
  3175                           postinc2	equ	0xFDE
  3176                           postdec2	equ	0xFDD
  3177                           fsr2h	equ	0xFDA
  3178                           fsr2l	equ	0xFD9
  3179                           status	equ	0xFD8
  3180                           
  3181 ;; *************** function _WAIT_HALF_SEC *****************
  3182 ;; Defined at:
  3183 ;;		line 177 in file "Lab6pB2.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;		None
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;		None
  3188 ;; Return value:  Size  Location     Type
  3189 ;;		None               void
  3190 ;; Registers used:
  3191 ;;		wreg, status,2
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;Total ram usage:        0 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; This function calls:
  3204 ;;		Nothing
  3205 ;; This function is called by:
  3206 ;;		_main
  3207 ;;		_WAIT_1_SEC
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text16
  3212  001D6C                     __ptext16:
  3213                           	opt stack 0
  3214  001D6C                     _WAIT_HALF_SEC:
  3215                           	opt stack 30
  3216                           
  3217                           ;Lab6pB2.c: 179: T0CON = 0x02;
  3218                           
  3219                           ;incstack = 0
  3220  001D6C  0E02               	movlw	2
  3221  001D6E  6ED5               	movwf	4053,c	;volatile
  3222                           
  3223                           ;Lab6pB2.c: 180: TMR0L = 0xDB;
  3224  001D70  0EDB               	movlw	219
  3225  001D72  6ED6               	movwf	4054,c	;volatile
  3226                           
  3227                           ;Lab6pB2.c: 181: TMR0H = 0xB;
  3228  001D74  0E0B               	movlw	11
  3229  001D76  6ED7               	movwf	4055,c	;volatile
  3230                           
  3231                           ;Lab6pB2.c: 182: INTCONbits.TMR0IF = 0;
  3232  001D78  94F2               	bcf	intcon,2,c	;volatile
  3233                           
  3234                           ;Lab6pB2.c: 183: T0CONbits.TMR0ON = 1;
  3235  001D7A  8ED5               	bsf	4053,7,c	;volatile
  3236                           
  3237                           ;Lab6pB2.c: 184: while (INTCONbits.TMR0IF == 0);
  3238  001D7C  D000               	goto	l133
  3239  001D7E                     l133:
  3240  001D7E  A4F2               	btfss	intcon,2,c	;volatile
  3241  001D80  D7FE               	goto	l133
  3242                           
  3243                           ;Lab6pB2.c: 185: T0CONbits.TMR0ON = 0;
  3244  001D82  9ED5               	bcf	4053,7,c	;volatile
  3245  001D84  0012               	return		;funcret
  3246  001D86                     __end_of_WAIT_HALF_SEC:
  3247                           	opt stack 0
  3248                           tblptru	equ	0xFF8
  3249                           tblptrh	equ	0xFF7
  3250                           tblptrl	equ	0xFF6
  3251                           tablat	equ	0xFF5
  3252                           prodh	equ	0xFF4
  3253                           prodl	equ	0xFF3
  3254                           intcon	equ	0xFF2
  3255                           postinc0	equ	0xFEE
  3256                           postdec1	equ	0xFE5
  3257                           fsr1l	equ	0xFE1
  3258                           indf2	equ	0xFDF
  3259                           postinc2	equ	0xFDE
  3260                           postdec2	equ	0xFDD
  3261                           fsr2h	equ	0xFDA
  3262                           fsr2l	equ	0xFD9
  3263                           status	equ	0xFD8
  3264                           
  3265 ;; *************** function _Select_ADC_Channel *****************
  3266 ;; Defined at:
  3267 ;;		line 156 in file "Lab6pB2.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  channel         1    wreg     unsigned char 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;  channel         1    0[COMRAM] unsigned char 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;		None               void
  3274 ;; Registers used:
  3275 ;;		wreg, status,2, status,0, prodl, prodh
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;Total ram usage:        1 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; This function calls:
  3288 ;;		Nothing
  3289 ;; This function is called by:
  3290 ;;		_main
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text17
  3295  001E22                     __ptext17:
  3296                           	opt stack 0
  3297  001E22                     _Select_ADC_Channel:
  3298                           	opt stack 30
  3299                           
  3300                           ;incstack = 0
  3301                           ;Select_ADC_Channel@channel stored from wreg
  3302  001E22  6E01               	movwf	Select_ADC_Channel@channel,c
  3303                           
  3304                           ;Lab6pB2.c: 158: ADCON0 = channel * 4 + 1;
  3305  001E24  5001               	movf	Select_ADC_Channel@channel,w,c
  3306  001E26  0D04               	mullw	4
  3307  001E28  28F3               	incf	prodl,w,c
  3308  001E2A  6EC2               	movwf	4034,c	;volatile
  3309  001E2C  0012               	return		;funcret
  3310  001E2E                     __end_of_Select_ADC_Channel:
  3311                           	opt stack 0
  3312                           tblptru	equ	0xFF8
  3313                           tblptrh	equ	0xFF7
  3314                           tblptrl	equ	0xFF6
  3315                           tablat	equ	0xFF5
  3316                           prodh	equ	0xFF4
  3317                           prodl	equ	0xFF3
  3318                           intcon	equ	0xFF2
  3319                           postinc0	equ	0xFEE
  3320                           postdec1	equ	0xFE5
  3321                           fsr1l	equ	0xFE1
  3322                           indf2	equ	0xFDF
  3323                           postinc2	equ	0xFDE
  3324                           postdec2	equ	0xFDD
  3325                           fsr2h	equ	0xFDA
  3326                           fsr2l	equ	0xFD9
  3327                           status	equ	0xFD8
  3328                           
  3329 ;; *************** function _Init_TRIS *****************
  3330 ;; Defined at:
  3331 ;;		line 134 in file "Lab6pB2.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;		None
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;		None               void
  3338 ;; Registers used:
  3339 ;;		wreg, status,2
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;Total ram usage:        0 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_main
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           	psect	text18
  3359  001DB8                     __ptext18:
  3360                           	opt stack 0
  3361  001DB8                     _Init_TRIS:
  3362                           	opt stack 30
  3363                           
  3364                           ;Lab6pB2.c: 136: TRISA = 0x0F;
  3365                           
  3366                           ;incstack = 0
  3367  001DB8  0E0F               	movlw	15
  3368  001DBA  6E92               	movwf	3986,c	;volatile
  3369                           
  3370                           ;Lab6pB2.c: 137: TRISB = 0x00;
  3371  001DBC  0E00               	movlw	0
  3372  001DBE  6E93               	movwf	3987,c	;volatile
  3373                           
  3374                           ;Lab6pB2.c: 138: TRISC = 0x00;
  3375  001DC0  0E00               	movlw	0
  3376  001DC2  6E94               	movwf	3988,c	;volatile
  3377                           
  3378                           ;Lab6pB2.c: 139: TRISD = 0x00;
  3379  001DC4  0E00               	movlw	0
  3380  001DC6  6E95               	movwf	3989,c	;volatile
  3381                           
  3382                           ;Lab6pB2.c: 140: TRISE = 0x00;
  3383  001DC8  0E00               	movlw	0
  3384  001DCA  6E96               	movwf	3990,c	;volatile
  3385  001DCC  0012               	return		;funcret
  3386  001DCE                     __end_of_Init_TRIS:
  3387                           	opt stack 0
  3388                           tblptru	equ	0xFF8
  3389                           tblptrh	equ	0xFF7
  3390                           tblptrl	equ	0xFF6
  3391                           tablat	equ	0xFF5
  3392                           prodh	equ	0xFF4
  3393                           prodl	equ	0xFF3
  3394                           intcon	equ	0xFF2
  3395                           postinc0	equ	0xFEE
  3396                           postdec1	equ	0xFE5
  3397                           fsr1l	equ	0xFE1
  3398                           indf2	equ	0xFDF
  3399                           postinc2	equ	0xFDE
  3400                           postdec2	equ	0xFDD
  3401                           fsr2h	equ	0xFDA
  3402                           fsr2l	equ	0xFD9
  3403                           status	equ	0xFD8
  3404                           
  3405 ;; *************** function _Init_ADC *****************
  3406 ;; Defined at:
  3407 ;;		line 127 in file "Lab6pB2.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;		None
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;		None
  3412 ;; Return value:  Size  Location     Type
  3413 ;;		None               void
  3414 ;; Registers used:
  3415 ;;		wreg, status,2
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;Total ram usage:        0 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; This function calls:
  3428 ;;		Nothing
  3429 ;; This function is called by:
  3430 ;;		_main
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text19
  3435  001E14                     __ptext19:
  3436                           	opt stack 0
  3437  001E14                     _Init_ADC:
  3438                           	opt stack 30
  3439                           
  3440                           ;Lab6pB2.c: 129: ADCON0 = 0b00000001;
  3441                           
  3442                           ;incstack = 0
  3443  001E14  0E01               	movlw	1
  3444  001E16  6EC2               	movwf	4034,c	;volatile
  3445                           
  3446                           ;Lab6pB2.c: 130: ADCON1 = 0b00011011;
  3447  001E18  0E1B               	movlw	27
  3448  001E1A  6EC1               	movwf	4033,c	;volatile
  3449                           
  3450                           ;Lab6pB2.c: 131: ADCON2 = 0b11001001;
  3451  001E1C  0EC9               	movlw	201
  3452  001E1E  6EC0               	movwf	4032,c	;volatile
  3453  001E20  0012               	return		;funcret
  3454  001E22                     __end_of_Init_ADC:
  3455                           	opt stack 0
  3456                           tblptru	equ	0xFF8
  3457                           tblptrh	equ	0xFF7
  3458                           tblptrl	equ	0xFF6
  3459                           tablat	equ	0xFF5
  3460                           prodh	equ	0xFF4
  3461                           prodl	equ	0xFF3
  3462                           intcon	equ	0xFF2
  3463                           postinc0	equ	0xFEE
  3464                           postdec1	equ	0xFE5
  3465                           fsr1l	equ	0xFE1
  3466                           indf2	equ	0xFDF
  3467                           postinc2	equ	0xFDE
  3468                           postdec2	equ	0xFDD
  3469                           fsr2h	equ	0xFDA
  3470                           fsr2l	equ	0xFD9
  3471                           status	equ	0xFD8
  3472                           
  3473 ;; *************** function _Deactivate_Buzzer *****************
  3474 ;; Defined at:
  3475 ;;		line 197 in file "Lab6pB2.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;		None
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;		None
  3480 ;; Return value:  Size  Location     Type
  3481 ;;		None               void
  3482 ;; Registers used:
  3483 ;;		wreg, status,2
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3493 ;;Total ram usage:        0 bytes
  3494 ;; Hardware stack levels used:    1
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_main
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text20
  3503  001E2E                     __ptext20:
  3504                           	opt stack 0
  3505  001E2E                     _Deactivate_Buzzer:
  3506                           	opt stack 30
  3507                           
  3508                           ;Lab6pB2.c: 199: CCP2CON = 0x0;
  3509                           
  3510                           ;incstack = 0
  3511  001E2E  0E00               	movlw	0
  3512  001E30  6EBA               	movwf	4026,c	;volatile
  3513                           
  3514                           ;Lab6pB2.c: 200: PORTBbits.RB3 = 0;
  3515  001E32  9681               	bcf	3969,3,c	;volatile
  3516  001E34  0012               	return		;funcret
  3517  001E36                     __end_of_Deactivate_Buzzer:
  3518                           	opt stack 0
  3519                           tblptru	equ	0xFF8
  3520                           tblptrh	equ	0xFF7
  3521                           tblptrl	equ	0xFF6
  3522                           tablat	equ	0xFF5
  3523                           prodh	equ	0xFF4
  3524                           prodl	equ	0xFF3
  3525                           intcon	equ	0xFF2
  3526                           postinc0	equ	0xFEE
  3527                           postdec1	equ	0xFE5
  3528                           fsr1l	equ	0xFE1
  3529                           indf2	equ	0xFDF
  3530                           postinc2	equ	0xFDE
  3531                           postdec2	equ	0xFDD
  3532                           fsr2h	equ	0xFDA
  3533                           fsr2l	equ	0xFD9
  3534                           status	equ	0xFD8
  3535                           
  3536 ;; *************** function _D1_Yellow *****************
  3537 ;; Defined at:
  3538 ;;		line 244 in file "Lab6pB2.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;		None
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;		None
  3543 ;; Return value:  Size  Location     Type
  3544 ;;		None               void
  3545 ;; Registers used:
  3546 ;;		None
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3556 ;;Total ram usage:        0 bytes
  3557 ;; Hardware stack levels used:    1
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_main
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text21
  3566  001E36                     __ptext21:
  3567                           	opt stack 0
  3568  001E36                     _D1_Yellow:
  3569                           	opt stack 30
  3570                           
  3571                           ;Lab6pB2.c: 246: PORTBbits.RB4 = 1;
  3572                           
  3573                           ;incstack = 0
  3574  001E36  8881               	bsf	3969,4,c	;volatile
  3575                           
  3576                           ;Lab6pB2.c: 247: PORTBbits.RB5 = 1;
  3577  001E38  8A81               	bsf	3969,5,c	;volatile
  3578                           
  3579                           ;Lab6pB2.c: 248: PORTBbits.RB6 = 0;
  3580  001E3A  9C81               	bcf	3969,6,c	;volatile
  3581  001E3C  0012               	return		;funcret
  3582  001E3E                     __end_of_D1_Yellow:
  3583                           	opt stack 0
  3584                           tblptru	equ	0xFF8
  3585                           tblptrh	equ	0xFF7
  3586                           tblptrl	equ	0xFF6
  3587                           tablat	equ	0xFF5
  3588                           prodh	equ	0xFF4
  3589                           prodl	equ	0xFF3
  3590                           intcon	equ	0xFF2
  3591                           postinc0	equ	0xFEE
  3592                           postdec1	equ	0xFE5
  3593                           fsr1l	equ	0xFE1
  3594                           indf2	equ	0xFDF
  3595                           postinc2	equ	0xFDE
  3596                           postdec2	equ	0xFDD
  3597                           fsr2h	equ	0xFDA
  3598                           fsr2l	equ	0xFD9
  3599                           status	equ	0xFD8
  3600                           
  3601 ;; *************** function _BCD_Upper_Digit *****************
  3602 ;; Defined at:
  3603 ;;		line 204 in file "Lab6pB2.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  digit           1    wreg     unsigned char 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  digit           1    1[COMRAM] unsigned char 
  3608 ;;  Port_E          1    0[COMRAM] unsigned char 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;		None               void
  3611 ;; Registers used:
  3612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3619 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;Total ram usage:        2 bytes
  3623 ;; Hardware stack levels used:    1
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_main
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text22
  3632  001C7E                     __ptext22:
  3633                           	opt stack 0
  3634  001C7E                     _BCD_Upper_Digit:
  3635                           	opt stack 30
  3636                           
  3637                           ;incstack = 0
  3638                           ;BCD_Upper_Digit@digit stored from wreg
  3639  001C7E  6E02               	movwf	BCD_Upper_Digit@digit,c
  3640                           
  3641                           ;Lab6pB2.c: 206: PORTC = array[digit];
  3642  001C80  5002               	movf	BCD_Upper_Digit@digit,w,c
  3643  001C82  0D01               	mullw	1
  3644  001C84  0E3D               	movlw	low _array
  3645  001C86  24F3               	addwf	prodl,w,c
  3646  001C88  6ED9               	movwf	fsr2l,c
  3647  001C8A  0E00               	movlw	high _array
  3648  001C8C  20F4               	addwfc	prodh,w,c
  3649  001C8E  6EDA               	movwf	fsr2h,c
  3650  001C90  50DF               	movf	indf2,w,c
  3651  001C92  6E82               	movwf	3970,c	;volatile
  3652                           
  3653                           ;Lab6pB2.c: 207: char Port_E = array[digit] & 0x40;
  3654  001C94  5002               	movf	BCD_Upper_Digit@digit,w,c
  3655  001C96  0D01               	mullw	1
  3656  001C98  0E3D               	movlw	low _array
  3657  001C9A  24F3               	addwf	prodl,w,c
  3658  001C9C  6ED9               	movwf	fsr2l,c
  3659  001C9E  0E00               	movlw	high _array
  3660  001CA0  20F4               	addwfc	prodh,w,c
  3661  001CA2  6EDA               	movwf	fsr2h,c
  3662  001CA4  50DF               	movf	indf2,w,c
  3663  001CA6  0B40               	andlw	64
  3664  001CA8  6E01               	movwf	BCD_Upper_Digit@Port_E,c
  3665                           
  3666                           ;Lab6pB2.c: 208: if (Port_E == 0) PORTE = 0x00;
  3667  001CAA  5001               	movf	BCD_Upper_Digit@Port_E,w,c
  3668  001CAC  A4D8               	btfss	status,2,c
  3669  001CAE  D002               	goto	l1018
  3670  001CB0  0E00               	movlw	0
  3671  001CB2  D001               	goto	L3
  3672  001CB4                     l1018:
  3673                           
  3674                           ;Lab6pB2.c: 209: else PORTE = 0x01;
  3675  001CB4  0E01               	movlw	1
  3676  001CB6                     L3:
  3677  001CB6  6E84               	movwf	3972,c	;volatile
  3678  001CB8  D000               	goto	l147
  3679  001CBA                     l147:
  3680  001CBA  0012               	return		;funcret
  3681  001CBC                     __end_of_BCD_Upper_Digit:
  3682                           	opt stack 0
  3683                           tblptru	equ	0xFF8
  3684                           tblptrh	equ	0xFF7
  3685                           tblptrl	equ	0xFF6
  3686                           tablat	equ	0xFF5
  3687                           prodh	equ	0xFF4
  3688                           prodl	equ	0xFF3
  3689                           intcon	equ	0xFF2
  3690                           postinc0	equ	0xFEE
  3691                           postdec1	equ	0xFE5
  3692                           fsr1l	equ	0xFE1
  3693                           indf2	equ	0xFDF
  3694                           postinc2	equ	0xFDE
  3695                           postdec2	equ	0xFDD
  3696                           fsr2h	equ	0xFDA
  3697                           fsr2l	equ	0xFD9
  3698                           status	equ	0xFD8
  3699                           
  3700 ;; *************** function _BCD_Lower_Digit *****************
  3701 ;; Defined at:
  3702 ;;		line 212 in file "Lab6pB2.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;  digit           1    wreg     unsigned char 
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  digit           1    0[COMRAM] unsigned char 
  3707 ;; Return value:  Size  Location     Type
  3708 ;;		None               void
  3709 ;; Registers used:
  3710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;Total ram usage:        1 bytes
  3721 ;; Hardware stack levels used:    1
  3722 ;; This function calls:
  3723 ;;		Nothing
  3724 ;; This function is called by:
  3725 ;;		_main
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text23
  3730  001D86                     __ptext23:
  3731                           	opt stack 0
  3732  001D86                     _BCD_Lower_Digit:
  3733                           	opt stack 30
  3734                           
  3735                           ;incstack = 0
  3736                           ;BCD_Lower_Digit@digit stored from wreg
  3737  001D86  6E01               	movwf	BCD_Lower_Digit@digit,c
  3738                           
  3739                           ;Lab6pB2.c: 214: PORTD = array[digit];
  3740  001D88  5001               	movf	BCD_Lower_Digit@digit,w,c
  3741  001D8A  0D01               	mullw	1
  3742  001D8C  0E3D               	movlw	low _array
  3743  001D8E  24F3               	addwf	prodl,w,c
  3744  001D90  6ED9               	movwf	fsr2l,c
  3745  001D92  0E00               	movlw	high _array
  3746  001D94  20F4               	addwfc	prodh,w,c
  3747  001D96  6EDA               	movwf	fsr2h,c
  3748  001D98  50DF               	movf	indf2,w,c
  3749  001D9A  6E83               	movwf	3971,c	;volatile
  3750                           
  3751                           ;Lab6pB2.c: 215: PORTDbits.RD7 = 1;
  3752  001D9C  8E83               	bsf	3971,7,c	;volatile
  3753  001D9E  0012               	return		;funcret
  3754  001DA0                     __end_of_BCD_Lower_Digit:
  3755                           	opt stack 0
  3756                           tblptru	equ	0xFF8
  3757                           tblptrh	equ	0xFF7
  3758                           tblptrl	equ	0xFF6
  3759                           tablat	equ	0xFF5
  3760                           prodh	equ	0xFF4
  3761                           prodl	equ	0xFF3
  3762                           intcon	equ	0xFF2
  3763                           postinc0	equ	0xFEE
  3764                           postdec1	equ	0xFE5
  3765                           fsr1l	equ	0xFE1
  3766                           indf2	equ	0xFDF
  3767                           postinc2	equ	0xFDE
  3768                           postdec2	equ	0xFDD
  3769                           fsr2h	equ	0xFDA
  3770                           fsr2l	equ	0xFD9
  3771                           status	equ	0xFD8
  3772                           
  3773 ;; *************** function _BCD_DP *****************
  3774 ;; Defined at:
  3775 ;;		line 218 in file "Lab6pB2.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  dp              1    wreg     unsigned char 
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;  dp              1    1[COMRAM] unsigned char 
  3780 ;; Return value:  Size  Location     Type
  3781 ;;		None               void
  3782 ;; Registers used:
  3783 ;;		wreg, status,2, status,0
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3791 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3792 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;Total ram usage:        2 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; This function calls:
  3796 ;;		Nothing
  3797 ;; This function is called by:
  3798 ;;		_main
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           	psect	text24
  3803  001DA0                     __ptext24:
  3804                           	opt stack 0
  3805  001DA0                     _BCD_DP:
  3806                           	opt stack 30
  3807                           
  3808                           ;incstack = 0
  3809                           ;BCD_DP@dp stored from wreg
  3810  001DA0  6E02               	movwf	BCD_DP@dp,c
  3811                           
  3812                           ;Lab6pB2.c: 220: PORTDbits.RD7 = ~dp;
  3813  001DA2  5002               	movf	BCD_DP@dp,w,c
  3814  001DA4  0AFF               	xorlw	255
  3815  001DA6  6E01               	movwf	??_BCD_DP& (0+255),c
  3816  001DA8  3201               	rrcf	??_BCD_DP,f,c
  3817  001DAA  3201               	rrcf	??_BCD_DP,f,c
  3818  001DAC  5083               	movf	3971,w,c	;volatile
  3819  001DAE  1801               	xorwf	??_BCD_DP,w,c
  3820  001DB0  0B7F               	andlw	-129
  3821  001DB2  1801               	xorwf	??_BCD_DP,w,c
  3822  001DB4  6E83               	movwf	3971,c	;volatile
  3823  001DB6  0012               	return		;funcret
  3824  001DB8                     __end_of_BCD_DP:
  3825                           	opt stack 0
  3826                           tblptru	equ	0xFF8
  3827                           tblptrh	equ	0xFF7
  3828                           tblptrl	equ	0xFF6
  3829                           tablat	equ	0xFF5
  3830                           prodh	equ	0xFF4
  3831                           prodl	equ	0xFF3
  3832                           intcon	equ	0xFF2
  3833                           postinc0	equ	0xFEE
  3834                           postdec1	equ	0xFE5
  3835                           fsr1l	equ	0xFE1
  3836                           indf2	equ	0xFDF
  3837                           postinc2	equ	0xFDE
  3838                           postdec2	equ	0xFDD
  3839                           fsr2h	equ	0xFDA
  3840                           fsr2l	equ	0xFD9
  3841                           status	equ	0xFD8
  3842                           
  3843 ;; *************** function _Activate_Buzzer *****************
  3844 ;; Defined at:
  3845 ;;		line 189 in file "Lab6pB2.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;		None
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;		None
  3850 ;; Return value:  Size  Location     Type
  3851 ;;		None               void
  3852 ;; Registers used:
  3853 ;;		wreg, status,2
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;Total ram usage:        0 bytes
  3864 ;; Hardware stack levels used:    1
  3865 ;; This function calls:
  3866 ;;		Nothing
  3867 ;; This function is called by:
  3868 ;;		_main
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           	psect	text25
  3873  001DF4                     __ptext25:
  3874                           	opt stack 0
  3875  001DF4                     _Activate_Buzzer:
  3876                           	opt stack 30
  3877                           
  3878                           ;Lab6pB2.c: 191: PR2 = 0b11111001 ;
  3879                           
  3880                           ;incstack = 0
  3881  001DF4  0EF9               	movlw	249
  3882  001DF6  6ECB               	movwf	4043,c	;volatile
  3883                           
  3884                           ;Lab6pB2.c: 192: T2CON = 0b00000101 ;
  3885  001DF8  0E05               	movlw	5
  3886  001DFA  6ECA               	movwf	4042,c	;volatile
  3887                           
  3888                           ;Lab6pB2.c: 193: CCPR2L = 0b01001010 ;
  3889  001DFC  0E4A               	movlw	74
  3890  001DFE  6EBB               	movwf	4027,c	;volatile
  3891                           
  3892                           ;Lab6pB2.c: 194: CCP2CON = 0b00111100 ;
  3893  001E00  0E3C               	movlw	60
  3894  001E02  6EBA               	movwf	4026,c	;volatile
  3895  001E04  0012               	return		;funcret
  3896  001E06                     __end_of_Activate_Buzzer:
  3897                           	opt stack 0
  3898                           tblptru	equ	0xFF8
  3899                           tblptrh	equ	0xFF7
  3900                           tblptrl	equ	0xFF6
  3901                           tablat	equ	0xFF5
  3902                           prodh	equ	0xFF4
  3903                           prodl	equ	0xFF3
  3904                           intcon	equ	0xFF2
  3905                           postinc0	equ	0xFEE
  3906                           postdec1	equ	0xFE5
  3907                           fsr1l	equ	0xFE1
  3908                           indf2	equ	0xFDF
  3909                           postinc2	equ	0xFDE
  3910                           postdec2	equ	0xFDD
  3911                           fsr2h	equ	0xFDA
  3912                           fsr2l	equ	0xFD9
  3913                           status	equ	0xFD8
  3914                           tblptru	equ	0xFF8
  3915                           tblptrh	equ	0xFF7
  3916                           tblptrl	equ	0xFF6
  3917                           tablat	equ	0xFF5
  3918                           prodh	equ	0xFF4
  3919                           prodl	equ	0xFF3
  3920                           intcon	equ	0xFF2
  3921                           postinc0	equ	0xFEE
  3922                           postdec1	equ	0xFE5
  3923                           fsr1l	equ	0xFE1
  3924                           indf2	equ	0xFDF
  3925                           postinc2	equ	0xFDE
  3926                           postdec2	equ	0xFDD
  3927                           fsr2h	equ	0xFDA
  3928                           fsr2l	equ	0xFD9
  3929                           status	equ	0xFD8
  3930                           
  3931                           	psect	rparam
  3932  0000                     tblptru	equ	0xFF8
  3933                           tblptrh	equ	0xFF7
  3934                           tblptrl	equ	0xFF6
  3935                           tablat	equ	0xFF5
  3936                           prodh	equ	0xFF4
  3937                           prodl	equ	0xFF3
  3938                           intcon	equ	0xFF2
  3939                           postinc0	equ	0xFEE
  3940                           postdec1	equ	0xFE5
  3941                           fsr1l	equ	0xFE1
  3942                           indf2	equ	0xFDF
  3943                           postinc2	equ	0xFDE
  3944                           postdec2	equ	0xFDD
  3945                           fsr2h	equ	0xFDA
  3946                           fsr2l	equ	0xFD9
  3947                           status	equ	0xFD8


Data Sizes:
    Strings     26
    Constant    40
    Data        18
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     60      78
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_1(CODE[26]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___llmod
    ___llmod->___lldiv
    _init_UART->_OpenUSART
    ___ftdiv->___awtoft
    ___ftadd->___ftpack
    ___awtoft->___ftpack
    ___almod->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   11969
                                             40 COMRAM    20    20      0
                    _Activate_Buzzer
                             _BCD_DP
                    _BCD_Lower_Digit
                    _BCD_Upper_Digit
                          _D1_Yellow
                  _Deactivate_Buzzer
                           _Init_ADC
                          _Init_TRIS
                 _Select_ADC_Channel
                      _WAIT_HALF_SEC
                            ___aldiv
                            ___almod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftneg
                            ___fttol
                       _get_full_ADC
                          _init_UART
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              27    21      6    1089
                                             22 COMRAM    18    12      6
                            ___lldiv
                            ___llmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     287
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     290
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0     284
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _get_full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     316
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     109
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2797
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    3203
                                              8 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2186
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2031
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___almod                                             10     2      8     552
                                             14 COMRAM    10     2      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     940
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _WAIT_HALF_SEC                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Select_ADC_Channel                                   1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_TRIS                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Deactivate_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _D1_Yellow                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BCD_Upper_Digit                                      2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _BCD_Lower_Digit                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BCD_DP                                               2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Activate_Buzzer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Activate_Buzzer
   _BCD_DP
   _BCD_Lower_Digit
   _BCD_Upper_Digit
   _D1_Yellow
   _Deactivate_Buzzer
   _Init_ADC
   _Init_TRIS
   _Select_ADC_Channel
   _WAIT_HALF_SEC
   ___aldiv
   ___almod
     ___aldiv (ARG)
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftneg
   ___fttol
   _get_full_ADC
   _init_UART
     _OpenUSART
   _printf
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3C      4E       1       61.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4E      34        0.0%
DATA                 0      0      4E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Oct 18 14:00:25 2022

          main@R_ref_current 002E           __size_of_D1_Yellow 0008                 ___ftadd@exp1 0014  
               ___ftadd@exp2 0013                 ___ftadd@sign 0012                          l115 1E0A  
                        l124 1D26                          l133 1D7E                          l222 13B2  
                        l127 1D46                          l147 1CBA                          l235 1522  
                        l340 198C                          l263 1C54                          l264 1C56  
                        l353 1B10                          l265 1C60                          l266 1C62  
                        l259 1C3A                          l620 16E6                          l268 1C7C  
                        l623 1592                          l634 1654                          l643 1670  
                        l619 1568                          l651 18AE                          l590 1A2A  
                        l654 187A                          l726 1B8C                          l736 1BFC  
                        l489 1CF6                          l579 1A52                          l676 1D5E  
                        l687 17CC            main@R_ref_voltage 002B                          _PR2 000FCB  
          _Deactivate_Buzzer 1E2E                          prod 000FF3           ?_Deactivate_Buzzer 0001  
               __CFG_LVP$OFF 000000                 ___ftdiv@cntr 0016                 ___ftdiv@sign 001B  
               __CFG_WDT$OFF 000000                         l1018 1CB4                         l1510 199E  
                       l1600 137A                         l1522 19F2                         l1514 19AE  
                       l1610 13D2                         l1700 1A72                         l1532 1A32  
                       l1524 1A12                         l1516 19BA                         l1620 1410  
                       l1604 1384                         l1710 1AA8                         l1526 1A1E  
                       l1518 19DA                         l1470 1C32                         l1462 1C20  
                       l1550 1B42                         l1630 1450                         l1622 1414  
                       l1614 13F6                         l1712 1AB0                         l1720 1AE6  
                       l1704 1A88                         l1560 1B7C                         l1552 1B4A  
                       l1640 1474                         l1538 1A44                         l1810 1814  
                       l1482 1C4C                         l1474 1C3E                         l1466 1C2A  
                       l1570 1BBE                         l1634 1454                         l1626 1420  
                       l1724 1AFE                         l1716 1AD6                         l1708 1A9A  
                       l1804 17EC                         l1548 1B34                         l1572 1BC6  
                       l1644 14F2                         l1670 1918                         l1662 18E8  
                       l1742 15A0                         l1830 1854                         l1806 1806  
                       l1902 17BA                         l1638 1468                         l1646 1506  
                       l1680 1952                         l1672 1920                         l1656 18CE  
                       l1736 1576                         l1840 1888                         l1576 1BEC  
                       l1568 1BB0                         l1770 1618                         l1594 1362  
                       l1922 1066                         l1668 190A                         l1684 1962  
                       l1852 1CD2                         l1764 15F8                         l1748 15AC  
                       l1766 1604                         l1758 15D4                         l1598 1372  
                       l1950 12C6                         l1942 11FA                         l1688 197A  
                       l1784 168E                         l1776 163C                         l1768 1610  
                       l1944 1212                         l1936 1178                         l1794 16C0  
                       l1778 1648                         l1890 1776                         l1866 1706  
                       l1970 132C                         l1954 12E4                         l1884 1760  
                       l1972 1332                         l1964 130E                         l1894 178A  
                       l1966 1322                         l1896 1798                         l1888 1770  
                       l1898 17A2                         STR_1 1029                         u1601 17FC  
                       u1371 1534                         u1381 1548                         u1651 16F8  
                       u1581 17DE                         u1670 1724                         u1750 12DE  
                       u1760 12FC                         u1675 171C                         _TRMT 007D61  
        ??_Deactivate_Buzzer 0001                         _main 1044                 ___ftpack@arg 0001  
               ___ftpack@exp 0004               ??_get_full_ADC 0003                         fsr2h 000FDA  
                       fsr1l 000FE1                         indf2 000FDF                         fsr2l 000FD9  
                       prodh 000FF4                         prodl 000FF3                         start 0000  
               ___param_bank 000010                 ___fttol@exp1 000F                 ___fttol@lval 000B  
  __end_of_Deactivate_Buzzer 1E36              __end_of___aldiv 198E              __end_of___almod 1B12  
                      ?_main 0001              __end_of___ftadd 16E8              __end_of___ftdiv 18B0  
            __end_of___ftneg 1D6C              __end_of___lldiv 1B9E                        _T0CON 000FD5  
            __end_of___llmod 1C0E              __end_of___fttol 17CE                        _T2CON 000FCA  
                      _RCSTA 000FAB                        _TMR0H 000FD7                        _TMR0L 000FD6  
                      _SPBRG 000FAF                        _PORTB 000F81                        _PORTC 000F82  
                      _PORTD 000F83                        _PORTE 000F84                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                        _TXREG 000FAD                        _TXSTA 000FAC  
              ___awtoft@sign 000C              __end_of_dpowers 1029                        _array 003D  
              ___ftpack@sign 0005                        _putch 1E06                 main@num_step 0034  
             __CFG_BOREN$OFF 000000                        tablat 000FF5            __end_of_D1_Yellow 1E3E  
                      status 000FD8     __size_of_BCD_Upper_Digit 003E              __initialization 1CF8  
      __end_of_WAIT_HALF_SEC 1D86                 __end_of_main 1358             __end_of_Init_ADC 1E22  
          ??_BCD_Lower_Digit 0001                       ??_main 0029                ___fttol@sign1 000A  
              __activetblptr 000002                       _ADCON0 000FC2                       _ADCON1 000FC1  
                     _ADCON2 000FC0                       _BCD_DP 1DA0             ___llmod@dividend 000E  
                     _ADRESH 000FC4                       _ADRESL 000FC3                       _CCPR2L 000FBB  
           __end_of___awtoft 1CF8                       ?_putch 0001             __end_of___ftpack 1A54  
                     _OSCCON 000FD3           __size_of_Init_TRIS 0016                       _SPBRGH 000FB0  
         __size_of_OpenUSART 0070                    ??___aldiv 0009                    ??___almod 0017  
   __size_of_Activate_Buzzer 0012                    ??___ftadd 000F                    ??___ftdiv 0013  
                  ??___ftneg 0004                    ??___lldiv 0009                    ??___llmod 0016  
                  ??___fttol 0005   __size_of_Deactivate_Buzzer 0008                       _printf 1358  
       __end_of_get_full_ADC 1D48                 __pdataCOMRAM 003D                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
                     putch@c 0001                main@voltage_v 0036                   __accesstop 0080  
    __end_of__initialization 1D18                   ___ftadd@f1 0009                   ___ftadd@f2 000C  
              ___rparam_used 000001                   ___ftdiv@f1 000D                   ___ftdiv@f2 0010  
                 ___ftdiv@f3 0017                   ___ftneg@f1 0001                   ___awtoft@c 0009  
                 ___fttol@f1 0001               __pcstackCOMRAM 0001            ??_BCD_Upper_Digit 0001  
              __end_of_putch 1E14            __end_of_Init_TRIS 1DCE            __end_of_OpenUSART 1C7E  
                    ?_BCD_DP 0001                      ??_putch 0001                    ?_Init_ADC 0001  
         __size_of_init_UART 0014   __end_of_Select_ADC_Channel 1E2E           __CFG_CCP2MX$PORTBE 000000  
                    _CCP2CON 000FBA                    ?___awtoft 0009                    ?___ftpack 0001  
                    ?_printf 0017    Select_ADC_Channel@channel 0001            ??_Activate_Buzzer 0001  
            __size_of_BCD_DP 0018                   ??_Init_ADC 0001              _BCD_Lower_Digit 1D86  
                    __Hparam 0000                      __Lparam 0000                    _D1_Yellow 1E36  
                    ___aldiv 18B0                      ___almod 1A54                      ___ftadd 1524  
                    ___ftdiv 17CE                      ___ftneg 1D48                      ___lldiv 1B12  
                    ___llmod 1B9E                      ___fttol 16E8        __size_of_get_full_ADC 0026  
               __psmallconst 1000                      __pcinit 1CF8                   ??___awtoft 000C  
                 ??___ftpack 0006                      __ramtop 1000                      __ptext0 1044  
                    __ptext1 1358                      __ptext2 1E06                      __ptext3 1B9E  
                    __ptext4 1B12                      __ptext5 1DCE                      __ptext6 1C0E  
                    __ptext7 1D22                      __ptext8 16E8                      __ptext9 1D48  
            __size_of_printf 01CC            __end_of_init_UART 1DE2                    _T0CONbits 000FD5  
                    _dpowers 1001             ___aldiv@dividend 0001         end_of_initialization 1D18  
       BCD_Lower_Digit@digit 0001                __Lmediumconst 0000                 _get_full_ADC 1D22  
            ___lldiv@divisor 0005              ___lldiv@counter 000D                   ?_D1_Yellow 0001  
                  _RCSTAbits 000FAB                      printf@c 0028                      printf@f 0017  
           ___aldiv@quotient 000B                      postdec1 000FE5                      postdec2 000FDD  
                    postinc0 000FEE                      postinc2 000FDE                    _PORTBbits 000F81  
                  _PORTDbits 000F83                    _TRISCbits 000F94      __end_of_BCD_Lower_Digit 1DA0  
                 main@R_test 0039       __size_of_WAIT_HALF_SEC 001A               __end_of_BCD_DP 1DB8  
            _BCD_Upper_Digit 1C7E                  ___ftdiv@exp 001A                    _TXSTAbits 000FAC  
         get_full_ADC@result 0005                __pidataCOMRAM 1DE2               __end_of_printf 1524  
        start_initialization 1CF8             main@R_test_float 0031                    _Init_TRIS 1DB8  
                   ??_BCD_DP 0001                     BCD_DP@dp 0002                    _OpenUSART 1C0E  
            ___llmod@divisor 0012             __CFG_OSC$INTIO67 000000            __size_of_Init_ADC 000E  
            ___llmod@counter 0016                  ??_D1_Yellow 0001              _Activate_Buzzer 1DF4  
              _WAIT_HALF_SEC 1D6C           _Select_ADC_Channel 1E22                     ??_printf 001D  
          __size_of___awtoft 003C            __size_of___ftpack 00C6          ?_Select_ADC_Channel 0001  
                 ?_Init_TRIS 0001      __end_of_BCD_Upper_Digit 1CBC             ?_BCD_Lower_Digit 0001  
                 ?_OpenUSART 0001         ??_Select_ADC_Channel 0001               ?_WAIT_HALF_SEC 0001  
                   ?___aldiv 0001                     ?___almod 000F                     ?___ftadd 0009  
                   ?___ftdiv 000D                     ?___ftneg 0001                     ?___lldiv 0001  
                   ?___llmod 000E        BCD_Upper_Digit@Port_E 0001                     ?___fttol 0001  
           ___almod@dividend 000F                  __smallconst 1000                    _init_UART 1DCE  
                   _D2_array 0047               __size_of_putch 000E              ___aldiv@divisor 0005  
    __end_of_Activate_Buzzer 1E06              ___aldiv@counter 0009                     _PIE1bits 000F9D  
                   _PIR1bits 000F9E                   _ADCON0bits 000FC2                   printf@flag 0023  
                 printf@prec 001F                  ??_Init_TRIS 0001                   ?_init_UART 0001  
           ?_BCD_Upper_Digit 0001                    copy_data0 1D0C                     _Init_ADC 1E14  
                ??_OpenUSART 0003              OpenUSART@config 0003                     __Hrparam 0000  
            ??_WAIT_HALF_SEC 0001                     __Lrparam 0000             __size_of___aldiv 00DE  
           __size_of___almod 00BE             __size_of___ftadd 01C4             __size_of___ftdiv 00E2  
           __size_of___ftneg 0024             __size_of___lldiv 008C             __size_of___llmod 0070  
           __size_of___fttol 00E6                     ___awtoft 1CBC                     ___ftpack 198E  
                   __ptext10 17CE                     __ptext11 1524                     __ptext20 1E2E  
                   __ptext12 1CBC                     __ptext21 1E36                     __ptext13 198E  
                   __ptext22 1C7E                     __ptext14 1A54                     __ptext23 1D86  
                   __ptext15 18B0                     __ptext24 1DA0                     __ptext16 1D6C  
                   __ptext25 1DF4                     __ptext17 1E22                     __ptext18 1DB8  
                   __ptext19 1E14         BCD_Upper_Digit@digit 0002              ___almod@divisor 0013  
            ___almod@counter 0017             ?_Activate_Buzzer 0001                __size_of_main 0314  
                  printf@val 0024                   _INTCONbits 000FF2               OpenUSART@spbrg 0001  
                ??_init_UART 0004             ___lldiv@dividend 0001                     printf@ap 0021  
           ___lldiv@quotient 0009                 ___aldiv@sign 000A                 ___almod@sign 0018  
              ?_get_full_ADC 0001     __size_of_BCD_Lower_Digit 001A  __size_of_Select_ADC_Channel 000C  
