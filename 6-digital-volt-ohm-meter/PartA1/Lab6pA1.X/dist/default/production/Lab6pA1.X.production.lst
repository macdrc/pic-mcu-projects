

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Oct 18 16:40:36 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           	psect	idataCOMRAM
    47  002BCA                     __pidataCOMRAM:
    48                           	opt stack 0
    49                           
    50                           ;initializer for _array
    51  002BCA  40                 	db	64
    52  002BCB  79                 	db	121
    53  002BCC  24                 	db	36
    54  002BCD  30                 	db	48
    55  002BCE  19                 	db	25
    56  002BCF  12                 	db	18
    57  002BD0  02                 	db	2
    58  002BD1  78                 	db	120
    59  002BD2  00                 	db	0
    60  002BD3  10                 	db	16
    61                           
    62                           	psect	smallconst
    63  001000                     __psmallconst:
    64                           	opt stack 0
    65  001000  00                 	db	0
    66  001001                     _dpowers:
    67                           	opt stack 0
    68  001001  0001               	dw	1
    69  001003  0000               	dw	0
    70  001005  000A               	dw	10
    71  001007  0000               	dw	0
    72  001009  0064               	dw	100
    73  00100B  0000               	dw	0
    74  00100D  03E8               	dw	1000
    75  00100F  0000               	dw	0
    76  001011  2710               	dw	10000
    77  001013  0000               	dw	0
    78  001015  86A0               	dw	34464
    79  001017  0001               	dw	1
    80  001019  4240               	dw	16960
    81  00101B  000F               	dw	15
    82  00101D  9680               	dw	38528
    83  00101F  0098               	dw	152
    84  001021  E100               	dw	57600
    85  001023  05F5               	dw	1525
    86  001025  CA00               	dw	51712
    87  001027  3B9A               	dw	15258
    88  001029                     __end_of_dpowers:
    89                           	opt stack 0
    90  001029                     __npowers_:
    91                           	opt stack 0
    92  001029  00                 	db	0
    93  00102A  80                 	db	128
    94  00102B  3F                 	db	63
    95  00102C  CD                 	db	205
    96  00102D  CC                 	db	204
    97  00102E  3D                 	db	61
    98  00102F  D7                 	db	215
    99  001030  23                 	db	35
   100  001031  3C                 	db	60
   101  001032  12                 	db	18
   102  001033  83                 	db	131
   103  001034  3A                 	db	58
   104  001035  B7                 	db	183
   105  001036  D1                 	db	209
   106  001037  38                 	db	56
   107  001038  C6                 	db	198
   108  001039  27                 	db	39
   109  00103A  37                 	db	55
   110  00103B  38                 	db	56
   111  00103C  86                 	db	134
   112  00103D  35                 	db	53
   113  00103E  C0                 	db	192
   114  00103F  D6                 	db	214
   115  001040  33                 	db	51
   116  001041  CC                 	db	204
   117  001042  2B                 	db	43
   118  001043  32                 	db	50
   119  001044  70                 	db	112
   120  001045  89                 	db	137
   121  001046  30                 	db	48
   122  001047  E7                 	db	231
   123  001048  DB                 	db	219
   124  001049  2E                 	db	46
   125  00104A  E5                 	db	229
   126  00104B  3C                 	db	60
   127  00104C  1E                 	db	30
   128  00104D  42                 	db	66
   129  00104E  A2                 	db	162
   130  00104F  0D                 	db	13
   131  001050                     __end_of__npowers_:
   132                           	opt stack 0
   133  001050                     __powers_:
   134                           	opt stack 0
   135  001050  00                 	db	0
   136  001051  80                 	db	128
   137  001052  3F                 	db	63
   138  001053  00                 	db	0
   139  001054  20                 	db	32
   140  001055  41                 	db	65
   141  001056  00                 	db	0
   142  001057  C8                 	db	200
   143  001058  42                 	db	66
   144  001059  00                 	db	0
   145  00105A  7A                 	db	122
   146  00105B  44                 	db	68
   147  00105C  40                 	db	64
   148  00105D  1C                 	db	28
   149  00105E  46                 	db	70
   150  00105F  50                 	db	80
   151  001060  C3                 	db	195
   152  001061  47                 	db	71
   153  001062  24                 	db	36
   154  001063  74                 	db	116
   155  001064  49                 	db	73
   156  001065  97                 	db	151
   157  001066  18                 	db	24
   158  001067  4B                 	db	75
   159  001068  BC                 	db	188
   160  001069  BE                 	db	190
   161  00106A  4C                 	db	76
   162  00106B  6B                 	db	107
   163  00106C  6E                 	db	110
   164  00106D  4E                 	db	78
   165  00106E  03                 	db	3
   166  00106F  15                 	db	21
   167  001070  50                 	db	80
   168  001071  79                 	db	121
   169  001072  AD                 	db	173
   170  001073  60                 	db	96
   171  001074  F3                 	db	243
   172  001075  49                 	db	73
   173  001076  71                 	db	113
   174  001077                     __end_of__powers_:
   175                           	opt stack 0
   176  0000                     _ADCON0	set	4034
   177  0000                     _ADCON0bits	set	4034
   178  0000                     _ADCON1	set	4033
   179  0000                     _ADCON2	set	4032
   180  0000                     _ADRESH	set	4036
   181  0000                     _ADRESL	set	4035
   182  0000                     _OSCCON	set	4051
   183  0000                     _PIE1bits	set	3997
   184  0000                     _PIR1bits	set	3998
   185  0000                     _PORTC	set	3970
   186  0000                     _PORTD	set	3971
   187  0000                     _PORTDbits	set	3971
   188  0000                     _PORTEbits	set	3972
   189  0000                     _RCSTA	set	4011
   190  0000                     _RCSTAbits	set	4011
   191  0000                     _SPBRG	set	4015
   192  0000                     _SPBRGH	set	4016
   193  0000                     _TRISA	set	3986
   194  0000                     _TRISB	set	3987
   195  0000                     _TRISC	set	3988
   196  0000                     _TRISCbits	set	3988
   197  0000                     _TRISD	set	3989
   198  0000                     _TRISE	set	3990
   199  0000                     _TXREG	set	4013
   200  0000                     _TXSTA	set	4012
   201  0000                     _TXSTAbits	set	4012
   202  0000                     _TRMT	set	32097
   203  001077                     STR_1:
   204  001077  54                 	db	84	;'T'
   205  001078  68                 	db	104	;'h'
   206  001079  65                 	db	101	;'e'
   207  00107A  20                 	db	32
   208  00107B  76                 	db	118	;'v'
   209  00107C  6F                 	db	111	;'o'
   210  00107D  6C                 	db	108	;'l'
   211  00107E  74                 	db	116	;'t'
   212  00107F  61                 	db	97	;'a'
   213  001080  67                 	db	103	;'g'
   214  001081  65                 	db	101	;'e'
   215  001082  20                 	db	32
   216  001083  69                 	db	105	;'i'
   217  001084  73                 	db	115	;'s'
   218  001085  20                 	db	32
   219  001086  25                 	db	37
   220  001087  2E                 	db	46
   221  001088  33                 	db	51	;'3'
   222  001089  66                 	db	102	;'f'
   223  00108A  20                 	db	32
   224  00108B  0D                 	db	13
   225  00108C  0A                 	db	10
   226  00108D  00                 	db	0
   227                           
   228                           ; #config settings
   229  00108E  00                 	db	0	; dummy byte at the end
   230  0000                     
   231                           	psect	cinit
   232  002A66                     __pcinit:
   233                           	opt stack 0
   234  002A66                     start_initialization:
   235                           	opt stack 0
   236  002A66                     __initialization:
   237                           	opt stack 0
   238                           
   239                           ; Initialize objects allocated to COMRAM (10 bytes)
   240                           ; load TBLPTR registers with __pidataCOMRAM
   241  002A66  0ECA               	movlw	low __pidataCOMRAM
   242  002A68  6EF6               	movwf	tblptrl,c
   243  002A6A  0E2B               	movlw	high __pidataCOMRAM
   244  002A6C  6EF7               	movwf	tblptrh,c
   245  002A6E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   246  002A70  6EF8               	movwf	tblptru,c
   247  002A72  EE00  F06A         	lfsr	0,__pdataCOMRAM
   248  002A76  EE10 F00A          	lfsr	1,10
   249  002A7A                     copy_data0:
   250  002A7A  0009               	tblrd		*+
   251  002A7C  CFF5 FFEE          	movff	tablat,postinc0
   252  002A80  50E5               	movf	postdec1,w,c
   253  002A82  50E1               	movf	fsr1l,w,c
   254  002A84  E1FA               	bnz	copy_data0
   255  002A86                     end_of_initialization:
   256                           	opt stack 0
   257  002A86                     __end_of__initialization:
   258                           	opt stack 0
   259  002A86  0E00               	movlw	low (__Lmediumconst shr (0+16))
   260  002A88  6EF8               	movwf	tblptru,c
   261  002A8A  0100               	movlb	0
   262  002A8C  EFBC  F00F         	goto	_main	;jump to C main() function
   263                           tblptru	equ	0xFF8
   264                           tblptrh	equ	0xFF7
   265                           tblptrl	equ	0xFF6
   266                           tablat	equ	0xFF5
   267                           postinc0	equ	0xFEE
   268                           postdec1	equ	0xFE5
   269                           fsr1l	equ	0xFE1
   270                           
   271                           	psect	dataCOMRAM
   272  00006A                     __pdataCOMRAM:
   273                           	opt stack 0
   274  00006A                     _array:
   275                           	opt stack 0
   276  00006A                     	ds	10
   277                           tblptru	equ	0xFF8
   278                           tblptrh	equ	0xFF7
   279                           tblptrl	equ	0xFF6
   280                           tablat	equ	0xFF5
   281                           postinc0	equ	0xFEE
   282                           postdec1	equ	0xFE5
   283                           fsr1l	equ	0xFE1
   284                           
   285                           	psect	cstackCOMRAM
   286  000001                     __pcstackCOMRAM:
   287                           	opt stack 0
   288  000001                     ??_isdigit:
   289  000001                     ?_Get_Full_ADC:
   290                           	opt stack 0
   291  000001                     ?___awmod:
   292                           	opt stack 0
   293  000001                     ?___ftpack:
   294                           	opt stack 0
   295  000001                     ?__tdiv_to_l_:
   296                           	opt stack 0
   297  000001                     ?__div_to_l_:
   298                           	opt stack 0
   299  000001                     ?___lldiv:
   300                           	opt stack 0
   301  000001                     ?___llmod:
   302                           	opt stack 0
   303  000001                     putch@c:
   304                           	opt stack 0
   305  000001                     Select_ADC_Channel@channel:
   306                           	opt stack 0
   307  000001                     DO_DISPLAY_7SEG_LOWER@digit:
   308                           	opt stack 0
   309  000001                     DO_DISPLAY_7SEG_UPPER@t:
   310                           	opt stack 0
   311  000001                     WAIT_1_SEC@j:
   312                           	opt stack 0
   313  000001                     OpenUSART@spbrg:
   314                           	opt stack 0
   315  000001                     ___awmod@dividend:
   316                           	opt stack 0
   317  000001                     __div_to_l_@f1:
   318                           	opt stack 0
   319  000001                     ___ftpack@arg:
   320                           	opt stack 0
   321  000001                     __tdiv_to_l_@f1:
   322                           	opt stack 0
   323  000001                     ___ftge@ff1:
   324                           	opt stack 0
   325  000001                     ___lldiv@dividend:
   326                           	opt stack 0
   327  000001                     ___llmod@dividend:
   328                           	opt stack 0
   329                           
   330                           ; 4 bytes @ 0x0
   331  000001                     	ds	1
   332  000002                     DO_DISPLAY_7SEG_UPPER@digit:
   333                           	opt stack 0
   334  000002                     _isdigit$1075:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x1
   338  000002                     	ds	1
   339  000003                     ??_Get_Full_ADC:
   340  000003                     OpenUSART@config:
   341                           	opt stack 0
   342  000003                     isdigit@c:
   343                           	opt stack 0
   344  000003                     ___awmod@divisor:
   345                           	opt stack 0
   346                           
   347                           ; 2 bytes @ 0x2
   348  000003                     	ds	1
   349  000004                     ___ftpack@exp:
   350                           	opt stack 0
   351  000004                     __div_to_l_@f2:
   352                           	opt stack 0
   353  000004                     __tdiv_to_l_@f2:
   354                           	opt stack 0
   355  000004                     ___ftge@ff2:
   356                           	opt stack 0
   357                           
   358                           ; 3 bytes @ 0x3
   359  000004                     	ds	1
   360  000005                     ___awmod@counter:
   361                           	opt stack 0
   362  000005                     ___ftpack@sign:
   363                           	opt stack 0
   364  000005                     Get_Full_ADC@result:
   365                           	opt stack 0
   366  000005                     ___lldiv@divisor:
   367                           	opt stack 0
   368  000005                     ___llmod@divisor:
   369                           	opt stack 0
   370                           
   371                           ; 4 bytes @ 0x4
   372  000005                     	ds	1
   373  000006                     ??___ftpack:
   374  000006                     ___awmod@sign:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0x5
   378  000006                     	ds	1
   379  000007                     ??__tdiv_to_l_:
   380  000007                     ??___ftge:
   381  000007                     ?___awdiv:
   382                           	opt stack 0
   383  000007                     ___awdiv@dividend:
   384                           	opt stack 0
   385  000007                     __div_to_l_@quot:
   386                           	opt stack 0
   387                           
   388                           ; 4 bytes @ 0x6
   389  000007                     	ds	2
   390  000009                     ?___awtoft:
   391                           	opt stack 0
   392  000009                     ?___lbtoft:
   393                           	opt stack 0
   394  000009                     ?___lltoft:
   395                           	opt stack 0
   396  000009                     ___llmod@counter:
   397                           	opt stack 0
   398  000009                     ___awdiv@divisor:
   399                           	opt stack 0
   400  000009                     ___awtoft@c:
   401                           	opt stack 0
   402  000009                     ___lldiv@quotient:
   403                           	opt stack 0
   404  000009                     ___lltoft@c:
   405                           	opt stack 0
   406                           
   407                           ; 4 bytes @ 0x8
   408  000009                     	ds	1
   409  00000A                     __tdiv_to_l_@quot:
   410                           	opt stack 0
   411                           
   412                           ; 4 bytes @ 0x9
   413  00000A                     	ds	1
   414  00000B                     ___awdiv@counter:
   415                           	opt stack 0
   416  00000B                     __div_to_l_@cntr:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0xA
   420  00000B                     	ds	1
   421  00000C                     ___awdiv@sign:
   422                           	opt stack 0
   423  00000C                     ___awtoft@sign:
   424                           	opt stack 0
   425  00000C                     __div_to_l_@exp1:
   426                           	opt stack 0
   427  00000C                     ___lbtoft@c:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0xB
   431  00000C                     	ds	1
   432  00000D                     ??___lltoft:
   433  00000D                     ?___ftneg:
   434                           	opt stack 0
   435  00000D                     ___lldiv@counter:
   436                           	opt stack 0
   437  00000D                     ___awdiv@quotient:
   438                           	opt stack 0
   439  00000D                     ___ftneg@f1:
   440                           	opt stack 0
   441                           
   442                           ; 3 bytes @ 0xC
   443  00000D                     	ds	1
   444  00000E                     __tdiv_to_l_@cntr:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0xD
   448  00000E                     	ds	1
   449  00000F                     ?___wmul:
   450                           	opt stack 0
   451  00000F                     __tdiv_to_l_@exp1:
   452                           	opt stack 0
   453  00000F                     ___wmul@multiplier:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0xE
   457  00000F                     	ds	1
   458  000010                     ?___ftadd:
   459                           	opt stack 0
   460  000010                     ___ftadd@f1:
   461                           	opt stack 0
   462                           
   463                           ; 3 bytes @ 0xF
   464  000010                     	ds	1
   465  000011                     ___lltoft@exp:
   466                           	opt stack 0
   467  000011                     ___wmul@multiplicand:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x10
   471  000011                     	ds	2
   472  000013                     ___wmul@product:
   473                           	opt stack 0
   474  000013                     ___ftadd@f2:
   475                           	opt stack 0
   476                           
   477                           ; 3 bytes @ 0x12
   478  000013                     	ds	3
   479  000016                     ??___ftadd:
   480                           
   481                           ; 0 bytes @ 0x15
   482  000016                     	ds	3
   483  000019                     ___ftadd@sign:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x18
   487  000019                     	ds	1
   488  00001A                     ___ftadd@exp2:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x19
   492  00001A                     	ds	1
   493  00001B                     ___ftadd@exp1:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x1A
   497  00001B                     	ds	1
   498  00001C                     ?___ftmul:
   499                           	opt stack 0
   500  00001C                     ?___ftsub:
   501                           	opt stack 0
   502  00001C                     ___ftmul@f1:
   503                           	opt stack 0
   504  00001C                     ___ftsub@f1:
   505                           	opt stack 0
   506                           
   507                           ; 3 bytes @ 0x1B
   508  00001C                     	ds	3
   509  00001F                     ___ftmul@f2:
   510                           	opt stack 0
   511  00001F                     ___ftsub@f2:
   512                           	opt stack 0
   513                           
   514                           ; 3 bytes @ 0x1E
   515  00001F                     	ds	3
   516  000022                     ??___ftmul:
   517  000022                     
   518                           ; 0 bytes @ 0x21
   519  000022                     	ds	3
   520  000025                     ___ftmul@exp:
   521                           	opt stack 0
   522                           
   523                           ; 1 bytes @ 0x24
   524  000025                     	ds	1
   525  000026                     ___ftmul@f3_as_product:
   526                           	opt stack 0
   527                           
   528                           ; 3 bytes @ 0x25
   529  000026                     	ds	3
   530  000029                     ___ftmul@cntr:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x28
   534  000029                     	ds	1
   535  00002A                     ___ftmul@sign:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x29
   539  00002A                     	ds	1
   540  00002B                     ?___ftdiv:
   541                           	opt stack 0
   542  00002B                     ?_fround:
   543                           	opt stack 0
   544  00002B                     ?_scale:
   545                           	opt stack 0
   546  00002B                     ___ftdiv@f1:
   547                           	opt stack 0
   548                           
   549                           ; 3 bytes @ 0x2A
   550  00002B                     	ds	3
   551  00002E                     ___ftdiv@f2:
   552                           	opt stack 0
   553  00002E                     _fround$1318:
   554                           	opt stack 0
   555  00002E                     _scale$1319:
   556                           	opt stack 0
   557                           
   558                           ; 3 bytes @ 0x2D
   559  00002E                     	ds	3
   560  000031                     ??___ftdiv:
   561  000031                     scale@scl:
   562                           	opt stack 0
   563  000031                     _fround$1317:
   564                           	opt stack 0
   565                           
   566                           ; 3 bytes @ 0x30
   567  000031                     	ds	1
   568  000032                     ?___fttol:
   569                           	opt stack 0
   570  000032                     ___fttol@f1:
   571                           	opt stack 0
   572                           
   573                           ; 3 bytes @ 0x31
   574  000032                     	ds	2
   575  000034                     fround@prec:
   576                           	opt stack 0
   577  000034                     ___ftdiv@cntr:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0x33
   581  000034                     	ds	1
   582  000035                     ___ftdiv@f3:
   583                           	opt stack 0
   584                           
   585                           ; 3 bytes @ 0x34
   586  000035                     	ds	1
   587  000036                     ??___fttol:
   588                           
   589                           ; 0 bytes @ 0x35
   590  000036                     	ds	2
   591  000038                     ___ftdiv@exp:
   592                           	opt stack 0
   593                           
   594                           ; 1 bytes @ 0x37
   595  000038                     	ds	1
   596  000039                     ___ftdiv@sign:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0x38
   600  000039                     	ds	2
   601  00003B                     ___fttol@sign1:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x3A
   605  00003B                     	ds	1
   606  00003C                     ___fttol@lval:
   607                           	opt stack 0
   608                           
   609                           ; 4 bytes @ 0x3B
   610  00003C                     	ds	4
   611  000040                     ___fttol@exp1:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x3F
   615  000040                     	ds	1
   616  000041                     ?_printf:
   617                           	opt stack 0
   618  000041                     printf@f:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0x40
   622  000041                     	ds	5
   623  000046                     ??_printf:
   624                           
   625                           ; 0 bytes @ 0x45
   626  000046                     	ds	6
   627  00004C                     _printf$1320:
   628                           	opt stack 0
   629                           
   630                           ; 3 bytes @ 0x4B
   631  00004C                     	ds	3
   632  00004F                     printf@ap:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x4E
   636  00004F                     	ds	2
   637  000051                     printf@flag:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x50
   641  000051                     	ds	2
   642  000053                     printf@val:
   643                           	opt stack 0
   644                           
   645                           ; 4 bytes @ 0x52
   646  000053                     	ds	4
   647  000057                     printf@exp:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x56
   651  000057                     	ds	2
   652  000059                     printf@tmpval:
   653                           	opt stack 0
   654                           
   655                           ; 4 bytes @ 0x58
   656  000059                     	ds	4
   657  00005D                     printf@prec:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x5C
   661  00005D                     	ds	2
   662  00005F                     printf@fval:
   663                           	opt stack 0
   664                           
   665                           ; 3 bytes @ 0x5E
   666  00005F                     	ds	3
   667  000062                     printf@c:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x61
   671  000062                     	ds	1
   672  000063                     main@num_step:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x62
   676  000063                     	ds	2
   677  000065                     main@L:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x64
   681  000065                     	ds	1
   682  000066                     main@U:
   683                           	opt stack 0
   684                           
   685                           ; 1 bytes @ 0x65
   686  000066                     	ds	1
   687  000067                     main@voltage_input:
   688                           	opt stack 0
   689                           
   690                           ; 3 bytes @ 0x66
   691  000067                     	ds	3
   692                           tblptru	equ	0xFF8
   693                           tblptrh	equ	0xFF7
   694                           tblptrl	equ	0xFF6
   695                           tablat	equ	0xFF5
   696                           postinc0	equ	0xFEE
   697                           postdec1	equ	0xFE5
   698                           fsr1l	equ	0xFE1
   699                           
   700 ;;
   701 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   702 ;;
   703 ;; *************** function _main *****************
   704 ;; Defined at:
   705 ;;		line 89 in file "Lab6pA1.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;		None
   708 ;; Auto vars:     Size  Location     Type
   709 ;;  voltage_inpu    3  102[COMRAM] float 
   710 ;;  num_step        2   98[COMRAM] int 
   711 ;;  U               1  101[COMRAM] unsigned char 
   712 ;;  L               1  100[COMRAM] unsigned char 
   713 ;; Return value:  Size  Location     Type
   714 ;;		None               void
   715 ;; Registers used:
   716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   726 ;;Total ram usage:        7 bytes
   727 ;; Hardware stack levels required when called:    4
   728 ;; This function calls:
   729 ;;		_DO_DISPLAY_7SEG_LOWER
   730 ;;		_DO_DISPLAY_7SEG_UPPER
   731 ;;		_Get_Full_ADC
   732 ;;		_Init_ADC
   733 ;;		_Init_TRIS
   734 ;;		_Init_UART
   735 ;;		_Select_ADC_Channel
   736 ;;		_WAIT_1_SEC
   737 ;;		___awtoft
   738 ;;		___ftadd
   739 ;;		___ftdiv
   740 ;;		___ftmul
   741 ;;		___ftneg
   742 ;;		___fttol
   743 ;;		___lbtoft
   744 ;;		_printf
   745 ;; This function is called by:
   746 ;;		Startup code after reset
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           	psect	text0
   751  001F78                     __ptext0:
   752                           	opt stack 0
   753  001F78                     _main:
   754                           	opt stack 27
   755                           
   756                           ;Lab6pA1.c: 91: int num_step;
   757                           ;Lab6pA1.c: 92: float voltage_input;
   758                           ;Lab6pA1.c: 93: char U;
   759                           ;Lab6pA1.c: 94: char L;
   760                           ;Lab6pA1.c: 95: Init_UART();
   761                           
   762                           ;incstack = 0
   763  001F78  ECCE  F015         	call	_Init_UART	;wreg free
   764                           
   765                           ;Lab6pA1.c: 96: Init_ADC();
   766  001F7C  ECEA  F015         	call	_Init_ADC	;wreg free
   767                           
   768                           ;Lab6pA1.c: 97: Init_TRIS();
   769  001F80  ECC3  F015         	call	_Init_TRIS	;wreg free
   770  001F84  D000               	goto	l2638
   771  001F86                     l2638:
   772                           
   773                           ;Lab6pA1.c: 99: {
   774                           ;Lab6pA1.c: 100: Select_ADC_Channel(0);
   775  001F86  0E00               	movlw	0
   776  001F88  ECDF  F015         	call	_Select_ADC_Channel
   777                           
   778                           ;Lab6pA1.c: 101: num_step = Get_Full_ADC();
   779  001F8C  EC6F  F015         	call	_Get_Full_ADC	;wreg free
   780  001F90  C001  F063         	movff	?_Get_Full_ADC,main@num_step
   781  001F94  C002  F064         	movff	?_Get_Full_ADC+1,main@num_step+1
   782                           
   783                           ;Lab6pA1.c: 102: voltage_input = (num_step * 4.0)/1000;
   784  001F98  0E00               	movlw	0
   785  001F9A  6E1F               	movwf	___ftmul@f2,c
   786  001F9C  0E80               	movlw	128
   787  001F9E  6E20               	movwf	___ftmul@f2+1,c
   788  001FA0  0E40               	movlw	64
   789  001FA2  6E21               	movwf	___ftmul@f2+2,c
   790  001FA4  C063  F009         	movff	main@num_step,___awtoft@c
   791  001FA8  C064  F00A         	movff	main@num_step+1,___awtoft@c+1
   792  001FAC  EC15  F015         	call	___awtoft	;wreg free
   793  001FB0  C009  F01C         	movff	?___awtoft,___ftmul@f1
   794  001FB4  C00A  F01D         	movff	?___awtoft+1,___ftmul@f1+1
   795  001FB8  C00B  F01E         	movff	?___awtoft+2,___ftmul@f1+2
   796  001FBC  EC54  F011         	call	___ftmul	;wreg free
   797  001FC0  C01C  F02B         	movff	?___ftmul,___ftdiv@f1
   798  001FC4  C01D  F02C         	movff	?___ftmul+1,___ftdiv@f1+1
   799  001FC8  C01E  F02D         	movff	?___ftmul+2,___ftdiv@f1+2
   800  001FCC  0E00               	movlw	0
   801  001FCE  6E2E               	movwf	___ftdiv@f2,c
   802  001FD0  0E7A               	movlw	122
   803  001FD2  6E2F               	movwf	___ftdiv@f2+1,c
   804  001FD4  0E44               	movlw	68
   805  001FD6  6E30               	movwf	___ftdiv@f2+2,c
   806  001FD8  EC43  F012         	call	___ftdiv	;wreg free
   807  001FDC  C02B  F067         	movff	?___ftdiv,main@voltage_input
   808  001FE0  C02C  F068         	movff	?___ftdiv+1,main@voltage_input+1
   809  001FE4  C02D  F069         	movff	?___ftdiv+2,main@voltage_input+2
   810                           
   811                           ;Lab6pA1.c: 103: U = (int) voltage_input;
   812  001FE8  C067  F032         	movff	main@voltage_input,___fttol@f1
   813  001FEC  C068  F033         	movff	main@voltage_input+1,___fttol@f1+1
   814  001FF0  C069  F034         	movff	main@voltage_input+2,___fttol@f1+2
   815  001FF4  ECD0  F011         	call	___fttol	;wreg free
   816  001FF8  5032               	movf	?___fttol,w,c
   817  001FFA  6E66               	movwf	main@U,c
   818                           
   819                           ;Lab6pA1.c: 104: L = (int) ((voltage_input - U)*10);
   820  001FFC  0E00               	movlw	0
   821  001FFE  6E1F               	movwf	___ftmul@f2,c
   822  002000  0E20               	movlw	32
   823  002002  6E20               	movwf	___ftmul@f2+1,c
   824  002004  0E41               	movlw	65
   825  002006  6E21               	movwf	___ftmul@f2+2,c
   826  002008  C067  F013         	movff	main@voltage_input,___ftadd@f2
   827  00200C  C068  F014         	movff	main@voltage_input+1,___ftadd@f2+1
   828  002010  C069  F015         	movff	main@voltage_input+2,___ftadd@f2+2
   829  002014  5066               	movf	main@U,w,c
   830  002016  EC5C  F015         	call	___lbtoft
   831  00201A  C009  F00D         	movff	?___lbtoft,___ftneg@f1
   832  00201E  C00A  F00E         	movff	?___lbtoft+1,___ftneg@f1+1
   833  002022  C00B  F00F         	movff	?___lbtoft+2,___ftneg@f1+2
   834  002026  EC82  F015         	call	___ftneg	;wreg free
   835  00202A  C00D  F010         	movff	?___ftneg,___ftadd@f1
   836  00202E  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
   837  002032  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
   838  002036  ECDA  F00E         	call	___ftadd	;wreg free
   839  00203A  C010  F01C         	movff	?___ftadd,___ftmul@f1
   840  00203E  C011  F01D         	movff	?___ftadd+1,___ftmul@f1+1
   841  002042  C012  F01E         	movff	?___ftadd+2,___ftmul@f1+2
   842  002046  EC54  F011         	call	___ftmul	;wreg free
   843  00204A  C01C  F032         	movff	?___ftmul,___fttol@f1
   844  00204E  C01D  F033         	movff	?___ftmul+1,___fttol@f1+1
   845  002052  C01E  F034         	movff	?___ftmul+2,___fttol@f1+2
   846  002056  ECD0  F011         	call	___fttol	;wreg free
   847  00205A  5032               	movf	?___fttol,w,c
   848  00205C  6E65               	movwf	main@L,c
   849                           
   850                           ;Lab6pA1.c: 105: printf("The voltage is %.3f \r\n", voltage_input);
   851  00205E  0E77               	movlw	low STR_1
   852  002060  6E41               	movwf	printf@f,c
   853  002062  0E10               	movlw	high STR_1
   854  002064  6E42               	movwf	printf@f+1,c
   855  002066  C067  F043         	movff	main@voltage_input,?_printf+2
   856  00206A  C068  F044         	movff	main@voltage_input+1,?_printf+3
   857  00206E  C069  F045         	movff	main@voltage_input+2,?_printf+4
   858  002072  EC48  F008         	call	_printf	;wreg free
   859                           
   860                           ;Lab6pA1.c: 106: DO_DISPLAY_7SEG_UPPER(U);
   861  002076  5066               	movf	main@U,w,c
   862  002078  ECF6  F014         	call	_DO_DISPLAY_7SEG_UPPER
   863                           
   864                           ;Lab6pA1.c: 107: DO_DISPLAY_7SEG_LOWER(L);
   865  00207C  5065               	movf	main@L,w,c
   866  00207E  ECB7  F015         	call	_DO_DISPLAY_7SEG_LOWER
   867                           
   868                           ;Lab6pA1.c: 108: PORTDbits.RD7 = 0;
   869  002082  9E83               	bcf	3971,7,c	;volatile
   870                           
   871                           ;Lab6pA1.c: 109: WAIT_1_SEC();
   872  002084  EC94  F015         	call	_WAIT_1_SEC	;wreg free
   873  002088  D77E               	goto	l2638
   874  00208A  EF00  F000         	goto	start
   875  00208E                     __end_of_main:
   876                           	opt stack 0
   877                           tblptru	equ	0xFF8
   878                           tblptrh	equ	0xFF7
   879                           tblptrl	equ	0xFF6
   880                           tablat	equ	0xFF5
   881                           postinc0	equ	0xFEE
   882                           postdec1	equ	0xFE5
   883                           fsr1l	equ	0xFE1
   884                           
   885 ;; *************** function _printf *****************
   886 ;; Defined at:
   887 ;;		line 464 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\doprnt.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;  f               2   64[COMRAM] PTR const unsigned char 
   890 ;;		 -> STR_1(23), 
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  tmpval          4   88[COMRAM] struct .
   893 ;;  val             4   82[COMRAM] unsigned long 
   894 ;;  fval            3   94[COMRAM] unsigned long 
   895 ;;  cp              3    0        PTR const unsigned char 
   896 ;;  prec            2   92[COMRAM] int 
   897 ;;  exp             2   86[COMRAM] int 
   898 ;;  flag            2   80[COMRAM] unsigned short 
   899 ;;  ap              2   78[COMRAM] PTR void [1]
   900 ;;		 -> ?_printf(2), 
   901 ;;  len             2    0        unsigned int 
   902 ;;  width           2    0        int 
   903 ;;  c               1   97[COMRAM] char 
   904 ;;  d               1    0        unsigned char 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  2   64[COMRAM] int 
   907 ;; Registers used:
   908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   914 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   917 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   918 ;;Total ram usage:       34 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; Hardware stack levels required when called:    3
   921 ;; This function calls:
   922 ;;		___awdiv
   923 ;;		___ftadd
   924 ;;		___ftge
   925 ;;		___ftmul
   926 ;;		___ftneg
   927 ;;		___ftsub
   928 ;;		___fttol
   929 ;;		___lldiv
   930 ;;		___llmod
   931 ;;		___lltoft
   932 ;;		___wmul
   933 ;;		__div_to_l_
   934 ;;		__tdiv_to_l_
   935 ;;		_fround
   936 ;;		_isdigit
   937 ;;		_putch
   938 ;;		_scale
   939 ;; This function is called by:
   940 ;;		_main
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           	psect	text1
   945  001090                     __ptext1:
   946                           	opt stack 0
   947  001090                     _printf:
   948                           	opt stack 27
   949                           
   950                           ;doprnt.c: 466: va_list ap;
   951                           ;doprnt.c: 499: signed char c;
   952                           ;doprnt.c: 501: int width;
   953                           ;doprnt.c: 504: int prec;
   954                           ;doprnt.c: 508: unsigned short flag;
   955                           ;doprnt.c: 515: char d;
   956                           ;doprnt.c: 516: double fval;
   957                           ;doprnt.c: 517: int exp;
   958                           ;doprnt.c: 523: union {
   959                           ;doprnt.c: 524: unsigned long vd;
   960                           ;doprnt.c: 525: double integ;
   961                           ;doprnt.c: 526: } tmpval;
   962                           ;doprnt.c: 528: unsigned long val;
   963                           ;doprnt.c: 529: unsigned len;
   964                           ;doprnt.c: 530: const char * cp;
   965                           ;doprnt.c: 533: *ap = __va_start();
   966                           
   967                           ;incstack = 0
   968  001090  0E43               	movlw	low (?_printf+2)
   969  001092  6E4F               	movwf	printf@ap,c
   970  001094  0E00               	movlw	high (?_printf+2)
   971  001096  6E50               	movwf	printf@ap+1,c
   972                           
   973                           ;doprnt.c: 536: while(c = *f++) {
   974  001098  D36C               	goto	l2572
   975  00109A                     l2392:
   976                           
   977                           ;doprnt.c: 538: if(c != '%')
   978  00109A  0E25               	movlw	37
   979  00109C  1862               	xorwf	printf@c,w,c
   980  00109E  B4D8               	btfsc	status,2,c
   981  0010A0  D004               	goto	l2396
   982                           
   983                           ;doprnt.c: 540: {
   984                           ;doprnt.c: 541: (putch(c) );
   985  0010A2  5062               	movf	printf@c,w,c
   986  0010A4  ECD8  F015         	call	_putch
   987                           
   988                           ;doprnt.c: 542: continue;
   989  0010A8  D364               	goto	l2572
   990  0010AA                     l2396:
   991                           
   992                           ;doprnt.c: 543: }
   993                           ;doprnt.c: 548: flag = 0;
   994  0010AA  0E00               	movlw	0
   995  0010AC  6E52               	movwf	printf@flag+1,c
   996  0010AE  0E00               	movlw	0
   997  0010B0  6E51               	movwf	printf@flag,c
   998                           
   999                           ;doprnt.c: 611: if(*f == '.') {
  1000  0010B2  C041  FFF6         	movff	printf@f,tblptrl
  1001  0010B6  C042  FFF7         	movff	printf@f+1,tblptrh
  1002  0010BA                     	if	0	;tblptru may be non-zero
  1003  0010BA                     	endif
  1004  0010BA                     	if	0	;tblptru may be non-zero
  1005  0010BA                     	endif
  1006  0010BA  0008               	tblrd		*
  1007  0010BC  50F5               	movf	tablat,w,c
  1008  0010BE  0A2E               	xorlw	46
  1009  0010C0  A4D8               	btfss	status,2,c
  1010  0010C2  D030               	goto	l2410
  1011                           
  1012                           ;doprnt.c: 612: flag |= 0x4000;
  1013  0010C4  8C52               	bsf	printf@flag+1,6,c
  1014                           
  1015                           ;doprnt.c: 613: f++;
  1016  0010C6  4A41               	infsnz	printf@f,f,c
  1017  0010C8  2A42               	incf	printf@f+1,f,c
  1018                           
  1019                           ;doprnt.c: 620: {
  1020                           ;doprnt.c: 621: prec = 0;
  1021  0010CA  0E00               	movlw	0
  1022  0010CC  6E5E               	movwf	printf@prec+1,c
  1023  0010CE  0E00               	movlw	0
  1024  0010D0  6E5D               	movwf	printf@prec,c
  1025                           
  1026                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  1027  0010D2  D01C               	goto	l2408
  1028  0010D4                     l2404:
  1029                           
  1030                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  1031  0010D4  C05D  F00F         	movff	printf@prec,___wmul@multiplier
  1032  0010D8  C05E  F010         	movff	printf@prec+1,___wmul@multiplier+1
  1033  0010DC  0E00               	movlw	0
  1034  0010DE  6E12               	movwf	___wmul@multiplicand+1,c
  1035  0010E0  0E0A               	movlw	10
  1036  0010E2  6E11               	movwf	___wmul@multiplicand,c
  1037  0010E4  EC48  F015         	call	___wmul	;wreg free
  1038  0010E8  C041  FFF6         	movff	printf@f,tblptrl
  1039  0010EC  C042  FFF7         	movff	printf@f+1,tblptrh
  1040  0010F0                     	if	0	;tblptru may be non-zero
  1041  0010F0                     	endif
  1042  0010F0                     	if	0	;tblptru may be non-zero
  1043  0010F0                     	endif
  1044  0010F0  0008               	tblrd		*
  1045  0010F2  50F5               	movf	tablat,w,c
  1046  0010F4  260F               	addwf	?___wmul,f,c
  1047  0010F6  0E00               	movlw	0
  1048  0010F8  2210               	addwfc	?___wmul+1,f,c
  1049  0010FA  0ED0               	movlw	208
  1050  0010FC  240F               	addwf	?___wmul,w,c
  1051  0010FE  6E5D               	movwf	printf@prec,c
  1052  001100  0EFF               	movlw	255
  1053  001102  2010               	addwfc	?___wmul+1,w,c
  1054  001104  6E5E               	movwf	printf@prec+1,c
  1055  001106  4A41               	infsnz	printf@f,f,c
  1056  001108  2A42               	incf	printf@f+1,f,c
  1057  00110A  D000               	goto	l2408
  1058  00110C                     l2408:
  1059  00110C  C041  FFF6         	movff	printf@f,tblptrl
  1060  001110  C042  FFF7         	movff	printf@f+1,tblptrh
  1061  001114                     	if	0	;tblptru may be non-zero
  1062  001114                     	endif
  1063  001114                     	if	0	;tblptru may be non-zero
  1064  001114                     	endif
  1065  001114  0008               	tblrd		*
  1066  001116  50F5               	movf	tablat,w,c
  1067  001118  ECA6  F015         	call	_isdigit
  1068  00111C  A0D8               	btfss	status,0,c
  1069  00111E  D00D               	goto	l2418
  1070  001120  D7D9               	goto	l2404
  1071                           
  1072                           ;doprnt.c: 624: }
  1073                           ;doprnt.c: 625: } else {
  1074  001122  D00B               	goto	l2418
  1075  001124                     l2410:
  1076                           
  1077                           ;doprnt.c: 626: prec = 0;
  1078  001124  0E00               	movlw	0
  1079  001126  6E5E               	movwf	printf@prec+1,c
  1080  001128  0E00               	movlw	0
  1081  00112A  6E5D               	movwf	printf@prec,c
  1082                           
  1083                           ;doprnt.c: 628: flag |= 0x1000;
  1084  00112C  8852               	bsf	printf@flag+1,4,c
  1085                           
  1086                           ;doprnt.c: 630: }
  1087                           ;doprnt.c: 635: switch(c = *f++) {
  1088  00112E  D005               	goto	l2418
  1089                           
  1090                           ;doprnt.c: 638: goto alldone;
  1091                           
  1092                           ;doprnt.c: 637: case 0:
  1093  001130  D32E               	goto	l180
  1094  001132                     l2414:
  1095                           
  1096                           ;doprnt.c: 663: flag |= 0x400;
  1097  001132  8452               	bsf	printf@flag+1,2,c
  1098                           
  1099                           ;doprnt.c: 664: break;
  1100  001134  D013               	goto	l2420
  1101                           
  1102                           ;doprnt.c: 813: continue;
  1103                           
  1104                           ;doprnt.c: 802: default:
  1105  001136  D31D               	goto	l2572
  1106                           
  1107                           ;doprnt.c: 822: }
  1108  001138  D011               	goto	l2420
  1109  00113A                     l2418:
  1110  00113A  C041  FFF6         	movff	printf@f,tblptrl
  1111  00113E  C042  FFF7         	movff	printf@f+1,tblptrh
  1112  001142  4A41               	infsnz	printf@f,f,c
  1113  001144  2A42               	incf	printf@f+1,f,c
  1114  001146                     	if	0	;tblptru may be non-zero
  1115  001146                     	endif
  1116  001146                     	if	0	;tblptru may be non-zero
  1117  001146                     	endif
  1118  001146  0008               	tblrd		*
  1119  001148  CFF5 F062          	movff	tablat,printf@c
  1120  00114C  5062               	movf	printf@c,w,c
  1121                           
  1122                           ; Switch size 1, requested type "space"
  1123                           ; Number of cases is 2, Range of values is 0 to 102
  1124                           ; switch strategies available:
  1125                           ; Name         Instructions Cycles
  1126                           ; simple_byte            7     4 (average)
  1127                           ;	Chosen strategy is simple_byte
  1128  00114E  0A00               	xorlw	0	; case 0
  1129  001150  B4D8               	btfsc	status,2,c
  1130  001152  D31D               	goto	l180
  1131  001154  0A66               	xorlw	102	; case 102
  1132  001156  B4D8               	btfsc	status,2,c
  1133  001158  D7EC               	goto	l2414
  1134  00115A  D30B               	goto	l2572
  1135  00115C                     l2420:
  1136                           
  1137                           ;doprnt.c: 825: if(flag & (0x700)) {
  1138  00115C  0E07               	movlw	7
  1139  00115E  1452               	andwf	printf@flag+1,w,c
  1140  001160  B4D8               	btfsc	status,2,c
  1141  001162  D2CD               	goto	l2554
  1142                           
  1143                           ;doprnt.c: 827: if(flag & 0x1000)
  1144  001164  A852               	btfss	printf@flag+1,4,c
  1145  001166  D005               	goto	l2426
  1146                           
  1147                           ;doprnt.c: 829: prec = 6;
  1148  001168  0E00               	movlw	0
  1149  00116A  6E5E               	movwf	printf@prec+1,c
  1150  00116C  0E06               	movlw	6
  1151  00116E  6E5D               	movwf	printf@prec,c
  1152  001170  D000               	goto	l2426
  1153  001172                     l2426:
  1154                           
  1155                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1156  001172  C04F  FFD9         	movff	printf@ap,fsr2l
  1157  001176  C050  FFDA         	movff	printf@ap+1,fsr2h
  1158  00117A  CFDE F05F          	movff	postinc2,printf@fval
  1159  00117E  CFDE F060          	movff	postinc2,printf@fval+1
  1160  001182  CFDD F061          	movff	postdec2,printf@fval+2
  1161  001186  0E03               	movlw	3
  1162  001188  264F               	addwf	printf@ap,f,c
  1163  00118A  0E00               	movlw	0
  1164  00118C  2250               	addwfc	printf@ap+1,f,c
  1165                           
  1166                           ;doprnt.c: 831: if(fval < 0.0) {
  1167  00118E  AE61               	btfss	printf@fval+2,7,c
  1168  001190  D011               	goto	l2436
  1169                           
  1170                           ;doprnt.c: 832: fval = -fval;
  1171  001192  C05F  F00D         	movff	printf@fval,___ftneg@f1
  1172  001196  C060  F00E         	movff	printf@fval+1,___ftneg@f1+1
  1173  00119A  C061  F00F         	movff	printf@fval+2,___ftneg@f1+2
  1174  00119E  EC82  F015         	call	___ftneg	;wreg free
  1175  0011A2  C00D  F05F         	movff	?___ftneg,printf@fval
  1176  0011A6  C00E  F060         	movff	?___ftneg+1,printf@fval+1
  1177  0011AA  C00F  F061         	movff	?___ftneg+2,printf@fval+2
  1178                           
  1179                           ;doprnt.c: 833: flag |= 0x03;
  1180  0011AE  0E03               	movlw	3
  1181  0011B0  1251               	iorwf	printf@flag,f,c
  1182  0011B2  D000               	goto	l2436
  1183  0011B4                     l2436:
  1184                           
  1185                           ;doprnt.c: 834: }
  1186                           ;doprnt.c: 835: exp = 0;
  1187  0011B4  0E00               	movlw	0
  1188  0011B6  6E58               	movwf	printf@exp+1,c
  1189  0011B8  0E00               	movlw	0
  1190  0011BA  6E57               	movwf	printf@exp,c
  1191                           
  1192                           ;doprnt.c: 836: if( fval!=0) {
  1193  0011BC  505F               	movf	printf@fval,w,c
  1194  0011BE  1060               	iorwf	printf@fval+1,w,c
  1195  0011C0  1061               	iorwf	printf@fval+2,w,c
  1196  0011C2  B4D8               	btfsc	status,2,c
  1197  0011C4  D085               	goto	l2464
  1198                           
  1199                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1200  0011C6  0E82               	movlw	130
  1201  0011C8  6E46               	movwf	??_printf& (0+255),c
  1202  0011CA  0EFF               	movlw	255
  1203  0011CC  6E47               	movwf	(??_printf+1)& (0+255),c
  1204  0011CE  C05F  F048         	movff	printf@fval,??_printf+2
  1205  0011D2  C060  F049         	movff	printf@fval+1,??_printf+3
  1206  0011D6  C061  F04A         	movff	printf@fval+2,??_printf+4
  1207  0011DA  C062  F04B         	movff	printf@fval+3,??_printf+5
  1208  0011DE  0E10               	movlw	16
  1209  0011E0  D005               	goto	u2580
  1210  0011E2                     u2585:
  1211  0011E2  90D8               	bcf	status,0,c
  1212  0011E4  324B               	rrcf	??_printf+5,f,c
  1213  0011E6  324A               	rrcf	??_printf+4,f,c
  1214  0011E8  3249               	rrcf	??_printf+3,f,c
  1215  0011EA  3248               	rrcf	??_printf+2,f,c
  1216  0011EC                     u2580:
  1217  0011EC  2EE8               	decfsz	wreg,f,c
  1218  0011EE  D7F9               	goto	u2585
  1219  0011F0  5048               	movf	??_printf+2,w,c
  1220  0011F2  2446               	addwf	??_printf,w,c
  1221  0011F4  6E57               	movwf	printf@exp,c
  1222  0011F6  0E00               	movlw	0
  1223  0011F8  2047               	addwfc	??_printf+1,w,c
  1224  0011FA  6E58               	movwf	printf@exp+1,c
  1225                           
  1226                           ;doprnt.c: 838: exp--;
  1227  0011FC  0657               	decf	printf@exp,f,c
  1228  0011FE  A0D8               	btfss	status,0,c
  1229  001200  0658               	decf	printf@exp+1,f,c
  1230                           
  1231                           ;doprnt.c: 839: exp *= 3;
  1232  001202  C057  F00F         	movff	printf@exp,___wmul@multiplier
  1233  001206  C058  F010         	movff	printf@exp+1,___wmul@multiplier+1
  1234  00120A  0E00               	movlw	0
  1235  00120C  6E12               	movwf	___wmul@multiplicand+1,c
  1236  00120E  0E03               	movlw	3
  1237  001210  6E11               	movwf	___wmul@multiplicand,c
  1238  001212  EC48  F015         	call	___wmul	;wreg free
  1239  001216  C00F  F057         	movff	?___wmul,printf@exp
  1240  00121A  C010  F058         	movff	?___wmul+1,printf@exp+1
  1241                           
  1242                           ;doprnt.c: 840: exp /= 10;
  1243  00121E  C057  F007         	movff	printf@exp,___awdiv@dividend
  1244  001222  C058  F008         	movff	printf@exp+1,___awdiv@dividend+1
  1245  001226  0E00               	movlw	0
  1246  001228  6E0A               	movwf	___awdiv@divisor+1,c
  1247  00122A  0E0A               	movlw	10
  1248  00122C  6E09               	movwf	___awdiv@divisor,c
  1249  00122E  EC17  F013         	call	___awdiv	;wreg free
  1250  001232  C007  F057         	movff	?___awdiv,printf@exp
  1251  001236  C008  F058         	movff	?___awdiv+1,printf@exp+1
  1252                           
  1253                           ;doprnt.c: 841: if(exp < 0)
  1254  00123A  AE58               	btfss	printf@exp+1,7,c
  1255  00123C  D004               	goto	l2452
  1256                           
  1257                           ;doprnt.c: 842: exp--;
  1258  00123E  0657               	decf	printf@exp,f,c
  1259  001240  A0D8               	btfss	status,0,c
  1260  001242  0658               	decf	printf@exp+1,f,c
  1261  001244  D000               	goto	l2452
  1262  001246                     l2452:
  1263                           
  1264                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1265  001246  5057               	movf	printf@exp,w,c
  1266  001248  0800               	sublw	0
  1267  00124A  ECC8  F00B         	call	_scale
  1268  00124E  C02B  F059         	movff	?_scale,printf@tmpval
  1269  001252  C02C  F05A         	movff	?_scale+1,printf@tmpval+1
  1270  001256  C02D  F05B         	movff	?_scale+2,printf@tmpval+2
  1271                           
  1272                           ;doprnt.c: 847: tmpval.integ *= fval;
  1273  00125A  C059  F01C         	movff	printf@tmpval,___ftmul@f1
  1274  00125E  C05A  F01D         	movff	printf@tmpval+1,___ftmul@f1+1
  1275  001262  C05B  F01E         	movff	printf@tmpval+2,___ftmul@f1+2
  1276  001266  C05F  F01F         	movff	printf@fval,___ftmul@f2
  1277  00126A  C060  F020         	movff	printf@fval+1,___ftmul@f2+1
  1278  00126E  C061  F021         	movff	printf@fval+2,___ftmul@f2+2
  1279  001272  EC54  F011         	call	___ftmul	;wreg free
  1280  001276  C01C  F059         	movff	?___ftmul,printf@tmpval
  1281  00127A  C01D  F05A         	movff	?___ftmul+1,printf@tmpval+1
  1282  00127E  C01E  F05B         	movff	?___ftmul+2,printf@tmpval+2
  1283                           
  1284                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1285  001282  C059  F001         	movff	printf@tmpval,___ftge@ff1
  1286  001286  C05A  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1287  00128A  C05B  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1288  00128E  0E00               	movlw	0
  1289  001290  6E04               	movwf	___ftge@ff2,c
  1290  001292  0E80               	movlw	128
  1291  001294  6E05               	movwf	___ftge@ff2+1,c
  1292  001296  0E3F               	movlw	63
  1293  001298  6E06               	movwf	___ftge@ff2+2,c
  1294  00129A  EC62  F013         	call	___ftge	;wreg free
  1295  00129E  B0D8               	btfsc	status,0,c
  1296  0012A0  D004               	goto	l2460
  1297                           
  1298                           ;doprnt.c: 849: exp--;
  1299  0012A2  0657               	decf	printf@exp,f,c
  1300  0012A4  A0D8               	btfss	status,0,c
  1301  0012A6  0658               	decf	printf@exp+1,f,c
  1302  0012A8  D013               	goto	l2464
  1303  0012AA                     l2460:
  1304                           
  1305                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1306  0012AA  C059  F001         	movff	printf@tmpval,___ftge@ff1
  1307  0012AE  C05A  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1308  0012B2  C05B  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1309  0012B6  0E00               	movlw	0
  1310  0012B8  6E04               	movwf	___ftge@ff2,c
  1311  0012BA  0E20               	movlw	32
  1312  0012BC  6E05               	movwf	___ftge@ff2+1,c
  1313  0012BE  0E41               	movlw	65
  1314  0012C0  6E06               	movwf	___ftge@ff2+2,c
  1315  0012C2  EC62  F013         	call	___ftge	;wreg free
  1316  0012C6  A0D8               	btfss	status,0,c
  1317  0012C8  D003               	goto	l2464
  1318                           
  1319                           ;doprnt.c: 851: exp++;
  1320  0012CA  4A57               	infsnz	printf@exp,f,c
  1321  0012CC  2A58               	incf	printf@exp+1,f,c
  1322  0012CE  D000               	goto	l2464
  1323  0012D0                     l2464:
  1324                           
  1325                           ;doprnt.c: 852: }
  1326                           ;doprnt.c: 1112: if(prec <= 12)
  1327  0012D0  BE5E               	btfsc	printf@prec+1,7,c
  1328  0012D2  D006               	goto	l2466
  1329  0012D4  505E               	movf	printf@prec+1,w,c
  1330  0012D6  E11C               	bnz	l2468
  1331  0012D8  0E0D               	movlw	13
  1332  0012DA  5C5D               	subwf	printf@prec,w,c
  1333  0012DC  B0D8               	btfsc	status,0,c
  1334  0012DE  D018               	goto	l2468
  1335  0012E0                     l2466:
  1336                           
  1337                           ;doprnt.c: 1113: fval += fround(prec);
  1338  0012E0  C05F  F010         	movff	printf@fval,___ftadd@f1
  1339  0012E4  C060  F011         	movff	printf@fval+1,___ftadd@f1+1
  1340  0012E8  C061  F012         	movff	printf@fval+2,___ftadd@f1+2
  1341  0012EC  505D               	movf	printf@prec,w,c
  1342  0012EE  ECB8  F00D         	call	_fround
  1343  0012F2  C02B  F013         	movff	?_fround,___ftadd@f2
  1344  0012F6  C02C  F014         	movff	?_fround+1,___ftadd@f2+1
  1345  0012FA  C02D  F015         	movff	?_fround+2,___ftadd@f2+2
  1346  0012FE  ECDA  F00E         	call	___ftadd	;wreg free
  1347  001302  C010  F05F         	movff	?___ftadd,printf@fval
  1348  001306  C011  F060         	movff	?___ftadd+1,printf@fval+1
  1349  00130A  C012  F061         	movff	?___ftadd+2,printf@fval+2
  1350  00130E  D000               	goto	l2468
  1351  001310                     l2468:
  1352                           
  1353                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1354  001310  BE58               	btfsc	printf@exp+1,7,c
  1355  001312  D006               	goto	l2470
  1356  001314  5058               	movf	printf@exp+1,w,c
  1357  001316  E120               	bnz	l2476
  1358  001318  0E0A               	movlw	10
  1359  00131A  5C57               	subwf	printf@exp,w,c
  1360  00131C  B0D8               	btfsc	status,0,c
  1361  00131E  D01C               	goto	l2476
  1362  001320                     l2470:
  1363  001320  505F               	movf	printf@fval,w,c
  1364  001322  1060               	iorwf	printf@fval+1,w,c
  1365  001324  1061               	iorwf	printf@fval+2,w,c
  1366  001326  B4D8               	btfsc	status,2,c
  1367  001328  D06D               	goto	l2490
  1368  00132A  C05F  F032         	movff	printf@fval,___fttol@f1
  1369  00132E  C060  F033         	movff	printf@fval+1,___fttol@f1+1
  1370  001332  C061  F034         	movff	printf@fval+2,___fttol@f1+2
  1371  001336  ECD0  F011         	call	___fttol	;wreg free
  1372  00133A  5032               	movf	?___fttol,w,c
  1373  00133C  1033               	iorwf	?___fttol+1,w,c
  1374  00133E  1034               	iorwf	?___fttol+2,w,c
  1375  001340  1035               	iorwf	?___fttol+3,w,c
  1376  001342  B4D8               	btfsc	status,2,c
  1377  001344  BE58               	btfsc	printf@exp+1,7,c
  1378  001346  D05E               	goto	l2490
  1379  001348  5058               	movf	printf@exp+1,w,c
  1380  00134A  E106               	bnz	l2476
  1381  00134C  0E02               	movlw	2
  1382  00134E  5C57               	subwf	printf@exp,w,c
  1383  001350  B0D8               	btfsc	status,0,c
  1384  001352  D002               	goto	l2476
  1385  001354  D057               	goto	l2490
  1386  001356  D000               	goto	l2476
  1387  001358                     l2476:
  1388                           
  1389                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1390  001358  C059  F001         	movff	printf@tmpval,___ftge@ff1
  1391  00135C  C05A  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1392  001360  C05B  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1393  001364  0E70               	movlw	112
  1394  001366  6E04               	movwf	___ftge@ff2,c
  1395  001368  0E89               	movlw	137
  1396  00136A  6E05               	movwf	___ftge@ff2+1,c
  1397  00136C  0E40               	movlw	64
  1398  00136E  6E06               	movwf	___ftge@ff2+2,c
  1399  001370  EC62  F013         	call	___ftge	;wreg free
  1400  001374  B0D8               	btfsc	status,0,c
  1401  001376  D002               	goto	l2480
  1402                           
  1403                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1404  001378  0EF7               	movlw	247
  1405  00137A  D001               	goto	L1
  1406  00137C                     l2480:
  1407                           
  1408                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1409  00137C  0EF8               	movlw	248
  1410  00137E                     L1:
  1411  00137E  2657               	addwf	printf@exp,f,c
  1412  001380  0EFF               	movlw	255
  1413  001382  2258               	addwfc	printf@exp+1,f,c
  1414  001384  D000               	goto	l2482
  1415  001386                     l2482:
  1416                           
  1417                           ;doprnt.c: 1124: }
  1418                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1419  001386  5057               	movf	printf@exp,w,c
  1420  001388  ECC8  F00B         	call	_scale
  1421  00138C  C02B  F059         	movff	?_scale,printf@tmpval
  1422  001390  C02C  F05A         	movff	?_scale+1,printf@tmpval+1
  1423  001394  C02D  F05B         	movff	?_scale+2,printf@tmpval+2
  1424                           
  1425                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1426  001398  D017               	goto	l2486
  1427  00139A  C05F  F001         	movff	printf@fval,__div_to_l_@f1
  1428  00139E  C060  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  1429  0013A2  C061  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  1430  0013A6  C059  F004         	movff	printf@tmpval,__div_to_l_@f2
  1431  0013AA  C05A  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  1432  0013AE  C05B  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  1433  0013B2  ECCF  F010         	call	__div_to_l_	;wreg free
  1434  0013B6  C001  F053         	movff	?__div_to_l_,printf@val
  1435  0013BA  C002  F054         	movff	?__div_to_l_+1,printf@val+1
  1436  0013BE  C003  F055         	movff	?__div_to_l_+2,printf@val+2
  1437  0013C2  C004  F056         	movff	?__div_to_l_+3,printf@val+3
  1438  0013C6  D017               	goto	l2488
  1439  0013C8                     l2486:
  1440  0013C8  C05F  F001         	movff	printf@fval,__tdiv_to_l_@f1
  1441  0013CC  C060  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1442  0013D0  C061  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1443  0013D4  C059  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  1444  0013D8  C05A  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1445  0013DC  C05B  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1446  0013E0  EC47  F010         	call	__tdiv_to_l_	;wreg free
  1447  0013E4  C001  F053         	movff	?__tdiv_to_l_,printf@val
  1448  0013E8  C002  F054         	movff	?__tdiv_to_l_+1,printf@val+1
  1449  0013EC  C003  F055         	movff	?__tdiv_to_l_+2,printf@val+2
  1450  0013F0  C004  F056         	movff	?__tdiv_to_l_+3,printf@val+3
  1451  0013F4  D000               	goto	l2488
  1452  0013F6                     l2488:
  1453                           
  1454                           ;doprnt.c: 1129: fval = 0.0;
  1455  0013F6  0E00               	movlw	0
  1456  0013F8  6E5F               	movwf	printf@fval,c
  1457  0013FA  0E00               	movlw	0
  1458  0013FC  6E60               	movwf	printf@fval+1,c
  1459  0013FE  0E00               	movlw	0
  1460  001400  6E61               	movwf	printf@fval+2,c
  1461                           
  1462                           ;doprnt.c: 1130: } else {
  1463  001402  D033               	goto	l2494
  1464  001404                     l2490:
  1465                           
  1466                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1467  001404  C05F  F032         	movff	printf@fval,___fttol@f1
  1468  001408  C060  F033         	movff	printf@fval+1,___fttol@f1+1
  1469  00140C  C061  F034         	movff	printf@fval+2,___fttol@f1+2
  1470  001410  ECD0  F011         	call	___fttol	;wreg free
  1471  001414  C032  F053         	movff	?___fttol,printf@val
  1472  001418  C033  F054         	movff	?___fttol+1,printf@val+1
  1473  00141C  C034  F055         	movff	?___fttol+2,printf@val+2
  1474  001420  C035  F056         	movff	?___fttol+3,printf@val+3
  1475                           
  1476                           ;doprnt.c: 1132: fval -= (double)val;
  1477  001424  C05F  F01C         	movff	printf@fval,___ftsub@f1
  1478  001428  C060  F01D         	movff	printf@fval+1,___ftsub@f1+1
  1479  00142C  C061  F01E         	movff	printf@fval+2,___ftsub@f1+2
  1480  001430  C053  F009         	movff	printf@val,___lltoft@c
  1481  001434  C054  F00A         	movff	printf@val+1,___lltoft@c+1
  1482  001438  C055  F00B         	movff	printf@val+2,___lltoft@c+2
  1483  00143C  C056  F00C         	movff	printf@val+3,___lltoft@c+3
  1484  001440  ECA4  F014         	call	___lltoft	;wreg free
  1485  001444  C009  F01F         	movff	?___lltoft,___ftsub@f2
  1486  001448  C00A  F020         	movff	?___lltoft+1,___ftsub@f2+1
  1487  00144C  C00B  F021         	movff	?___lltoft+2,___ftsub@f2+2
  1488  001450  ECD4  F014         	call	___ftsub	;wreg free
  1489  001454  C01C  F05F         	movff	?___ftsub,printf@fval
  1490  001458  C01D  F060         	movff	?___ftsub+1,printf@fval+1
  1491  00145C  C01E  F061         	movff	?___ftsub+2,printf@fval+2
  1492                           
  1493                           ;doprnt.c: 1133: exp = 0;
  1494  001460  0E00               	movlw	0
  1495  001462  6E58               	movwf	printf@exp+1,c
  1496  001464  0E00               	movlw	0
  1497  001466  6E57               	movwf	printf@exp,c
  1498  001468  D000               	goto	l2494
  1499  00146A                     l2494:
  1500                           
  1501                           ;doprnt.c: 1134: }
  1502                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1503  00146A  0E01               	movlw	1
  1504  00146C  6E62               	movwf	printf@c,c
  1505  00146E                     l2496:
  1506  00146E  0E0A               	movlw	10
  1507  001470  1862               	xorwf	printf@c,w,c
  1508  001472  B4D8               	btfsc	status,2,c
  1509  001474  D01C               	goto	l2508
  1510  001476  D001               	goto	l2500
  1511  001478  D01A               	goto	l2508
  1512  00147A                     l2500:
  1513                           
  1514                           ;doprnt.c: 1137: if(val < dpowers[c])
  1515  00147A  5062               	movf	printf@c,w,c
  1516  00147C  0D04               	mullw	4
  1517  00147E  0E01               	movlw	low _dpowers
  1518  001480  24F3               	addwf	prodl,w,c
  1519  001482  6EF6               	movwf	tblptrl,c
  1520  001484  0E10               	movlw	high _dpowers
  1521  001486  20F4               	addwfc	prodh,w,c
  1522  001488  6EF7               	movwf	tblptrh,c
  1523  00148A                     	if	0	;There are less than 3 active tblptr bytes
  1524  00148A                     	endif
  1525  00148A  0009               	tblrd		*+
  1526  00148C  50F5               	movf	tablat,w,c
  1527  00148E  5C53               	subwf	printf@val,w,c
  1528  001490  0009               	tblrd		*+
  1529  001492  50F5               	movf	tablat,w,c
  1530  001494  5854               	subwfb	printf@val+1,w,c
  1531  001496  0009               	tblrd		*+
  1532  001498  50F5               	movf	tablat,w,c
  1533  00149A  5855               	subwfb	printf@val+2,w,c
  1534  00149C  0009               	tblrd		*+
  1535  00149E  50F5               	movf	tablat,w,c
  1536  0014A0  5856               	subwfb	printf@val+3,w,c
  1537  0014A2  A0D8               	btfss	status,0,c
  1538  0014A4  D004               	goto	l2508
  1539  0014A6  D001               	goto	l2504
  1540                           
  1541                           ;doprnt.c: 1138: break;
  1542  0014A8  D002               	goto	l2508
  1543  0014AA                     l2504:
  1544  0014AA  2A62               	incf	printf@c,f,c
  1545  0014AC  D7E0               	goto	l2496
  1546  0014AE                     l2508:
  1547                           
  1548                           ;doprnt.c: 1175: {
  1549                           ;doprnt.c: 1188: if(flag & 0x03)
  1550  0014AE  0E03               	movlw	3
  1551  0014B0  1451               	andwf	printf@flag,w,c
  1552  0014B2  6E46               	movwf	??_printf& (0+255),c
  1553  0014B4  0E00               	movlw	0
  1554  0014B6  1452               	andwf	printf@flag+1,w,c
  1555  0014B8  6E47               	movwf	(??_printf+1)& (0+255),c
  1556  0014BA  5046               	movf	??_printf,w,c
  1557  0014BC  1047               	iorwf	??_printf+1,w,c
  1558  0014BE  B4D8               	btfsc	status,2,c
  1559  0014C0  D049               	goto	l2518
  1560                           
  1561                           ;doprnt.c: 1190: (putch('-') );
  1562  0014C2  0E2D               	movlw	45
  1563  0014C4  ECD8  F015         	call	_putch
  1564                           
  1565                           ;doprnt.c: 1195: }
  1566                           ;doprnt.c: 1196: while(c--) {
  1567  0014C8  D045               	goto	l2518
  1568  0014CA                     l2512:
  1569                           
  1570                           ;doprnt.c: 1200: {
  1571                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1572  0014CA  C053  F001         	movff	printf@val,___lldiv@dividend
  1573  0014CE  C054  F002         	movff	printf@val+1,___lldiv@dividend+1
  1574  0014D2  C055  F003         	movff	printf@val+2,___lldiv@dividend+2
  1575  0014D6  C056  F004         	movff	printf@val+3,___lldiv@dividend+3
  1576  0014DA  5062               	movf	printf@c,w,c
  1577  0014DC  0D04               	mullw	4
  1578  0014DE  0E01               	movlw	low _dpowers
  1579  0014E0  24F3               	addwf	prodl,w,c
  1580  0014E2  6EF6               	movwf	tblptrl,c
  1581  0014E4  0E10               	movlw	high _dpowers
  1582  0014E6  20F4               	addwfc	prodh,w,c
  1583  0014E8  6EF7               	movwf	tblptrh,c
  1584  0014EA                     	if	0	;There are less than 3 active tblptr bytes
  1585  0014EA                     	endif
  1586  0014EA  0009               	tblrd		*+
  1587  0014EC  CFF5 F005          	movff	tablat,___lldiv@divisor
  1588  0014F0  0009               	tblrd		*+
  1589  0014F2  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1590  0014F6  0009               	tblrd		*+
  1591  0014F8  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1592  0014FC  000A               	tblrd		*-
  1593  0014FE  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1594  001502  ECAD  F013         	call	___lldiv	;wreg free
  1595  001506  C001  F059         	movff	?___lldiv,printf@tmpval
  1596  00150A  C002  F05A         	movff	?___lldiv+1,printf@tmpval+1
  1597  00150E  C003  F05B         	movff	?___lldiv+2,printf@tmpval+2
  1598  001512  C004  F05C         	movff	?___lldiv+3,printf@tmpval+3
  1599                           
  1600                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1601  001516  C059  F001         	movff	printf@tmpval,___llmod@dividend
  1602  00151A  C05A  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  1603  00151E  C05B  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  1604  001522  C05C  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  1605  001526  0E0A               	movlw	10
  1606  001528  6E05               	movwf	___llmod@divisor,c
  1607  00152A  0E00               	movlw	0
  1608  00152C  6E06               	movwf	___llmod@divisor+1,c
  1609  00152E  0E00               	movlw	0
  1610  001530  6E07               	movwf	___llmod@divisor+2,c
  1611  001532  0E00               	movlw	0
  1612  001534  6E08               	movwf	___llmod@divisor+3,c
  1613  001536  EC34  F014         	call	___llmod	;wreg free
  1614  00153A  C001  F059         	movff	?___llmod,printf@tmpval
  1615  00153E  C002  F05A         	movff	?___llmod+1,printf@tmpval+1
  1616  001542  C003  F05B         	movff	?___llmod+2,printf@tmpval+2
  1617  001546  C004  F05C         	movff	?___llmod+3,printf@tmpval+3
  1618                           
  1619                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  1620  00154A  5059               	movf	printf@tmpval,w,c
  1621  00154C  0F30               	addlw	48
  1622  00154E  ECD8  F015         	call	_putch
  1623  001552  D000               	goto	l2518
  1624  001554                     l2518:
  1625  001554  0662               	decf	printf@c,f,c
  1626  001556  2862               	incf	printf@c,w,c
  1627  001558  B4D8               	btfsc	status,2,c
  1628  00155A  D009               	goto	l2524
  1629  00155C  D7B6               	goto	l2512
  1630                           
  1631                           ;doprnt.c: 1204: }
  1632                           ;doprnt.c: 1206: }
  1633                           ;doprnt.c: 1207: while(exp > 0) {
  1634  00155E  D007               	goto	l2524
  1635  001560                     l2520:
  1636                           
  1637                           ;doprnt.c: 1208: (putch('0') );
  1638  001560  0E30               	movlw	48
  1639  001562  ECD8  F015         	call	_putch
  1640                           
  1641                           ;doprnt.c: 1209: exp--;
  1642  001566  0657               	decf	printf@exp,f,c
  1643  001568  A0D8               	btfss	status,0,c
  1644  00156A  0658               	decf	printf@exp+1,f,c
  1645  00156C  D000               	goto	l2524
  1646  00156E                     l2524:
  1647  00156E  BE58               	btfsc	printf@exp+1,7,c
  1648  001570  D005               	goto	l2526
  1649  001572  5058               	movf	printf@exp+1,w,c
  1650  001574  E1F5               	bnz	l2520
  1651  001576  0457               	decf	printf@exp,w,c
  1652  001578  B0D8               	btfsc	status,0,c
  1653  00157A  D7F2               	goto	l2520
  1654  00157C                     l2526:
  1655                           
  1656                           ;doprnt.c: 1210: }
  1657                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  1658  00157C  BE5E               	btfsc	printf@prec+1,7,c
  1659  00157E  D009               	goto	l165
  1660  001580  505E               	movf	printf@prec+1,w,c
  1661  001582  E104               	bnz	u2740
  1662  001584  0E09               	movlw	9
  1663  001586  5C5D               	subwf	printf@prec,w,c
  1664  001588  A0D8               	btfss	status,0,c
  1665  00158A  D003               	goto	l165
  1666  00158C                     u2740:
  1667                           
  1668                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  1669  00158C  0E08               	movlw	8
  1670  00158E  6E62               	movwf	printf@c,c
  1671  001590  D003               	goto	l2530
  1672  001592                     l165:
  1673                           
  1674                           ;doprnt.c: 1213: else
  1675                           ;doprnt.c: 1214: c = prec;
  1676  001592  C05D  F062         	movff	printf@prec,printf@c
  1677  001596  D000               	goto	l2530
  1678  001598                     l2530:
  1679                           
  1680                           ;doprnt.c: 1215: prec -= c;
  1681  001598  5062               	movf	printf@c,w,c
  1682  00159A  5E5D               	subwf	printf@prec,f,c
  1683  00159C  0E00               	movlw	0
  1684  00159E  BE62               	btfsc	printf@c,7,c
  1685  0015A0  0EFF               	movlw	255
  1686  0015A2  5A5E               	subwfb	printf@prec+1,f,c
  1687                           
  1688                           ;doprnt.c: 1219: if(c)
  1689  0015A4  5062               	movf	printf@c,w,c
  1690  0015A6  B4D8               	btfsc	status,2,c
  1691  0015A8  D004               	goto	l2536
  1692                           
  1693                           ;doprnt.c: 1221: (putch('.') );
  1694  0015AA  0E2E               	movlw	46
  1695  0015AC  ECD8  F015         	call	_putch
  1696  0015B0  D000               	goto	l2536
  1697  0015B2                     l2536:
  1698                           
  1699                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1700  0015B2  5062               	movf	printf@c,w,c
  1701  0015B4  ECC8  F00B         	call	_scale
  1702  0015B8  C02B  F04C         	movff	?_scale,_printf$1320
  1703  0015BC  C02C  F04D         	movff	?_scale+1,_printf$1320+1
  1704  0015C0  C02D  F04E         	movff	?_scale+2,_printf$1320+2
  1705                           
  1706                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1707  0015C4  C05F  F01F         	movff	printf@fval,___ftmul@f2
  1708  0015C8  C060  F020         	movff	printf@fval+1,___ftmul@f2+1
  1709  0015CC  C061  F021         	movff	printf@fval+2,___ftmul@f2+2
  1710  0015D0  C04C  F01C         	movff	_printf$1320,___ftmul@f1
  1711  0015D4  C04D  F01D         	movff	_printf$1320+1,___ftmul@f1+1
  1712  0015D8  C04E  F01E         	movff	_printf$1320+2,___ftmul@f1+2
  1713  0015DC  EC54  F011         	call	___ftmul	;wreg free
  1714  0015E0  C01C  F032         	movff	?___ftmul,___fttol@f1
  1715  0015E4  C01D  F033         	movff	?___ftmul+1,___fttol@f1+1
  1716  0015E8  C01E  F034         	movff	?___ftmul+2,___fttol@f1+2
  1717  0015EC  ECD0  F011         	call	___fttol	;wreg free
  1718  0015F0  C032  F053         	movff	?___fttol,printf@val
  1719  0015F4  C033  F054         	movff	?___fttol+1,printf@val+1
  1720  0015F8  C034  F055         	movff	?___fttol+2,printf@val+2
  1721  0015FC  C035  F056         	movff	?___fttol+3,printf@val+3
  1722                           
  1723                           ;doprnt.c: 1228: while(c--) {
  1724  001600  D06B               	goto	l2546
  1725  001602                     l2540:
  1726                           
  1727                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  1728  001602  C053  F001         	movff	printf@val,___lldiv@dividend
  1729  001606  C054  F002         	movff	printf@val+1,___lldiv@dividend+1
  1730  00160A  C055  F003         	movff	printf@val+2,___lldiv@dividend+2
  1731  00160E  C056  F004         	movff	printf@val+3,___lldiv@dividend+3
  1732  001612  5062               	movf	printf@c,w,c
  1733  001614  0D04               	mullw	4
  1734  001616  0E01               	movlw	low _dpowers
  1735  001618  24F3               	addwf	prodl,w,c
  1736  00161A  6EF6               	movwf	tblptrl,c
  1737  00161C  0E10               	movlw	high _dpowers
  1738  00161E  20F4               	addwfc	prodh,w,c
  1739  001620  6EF7               	movwf	tblptrh,c
  1740  001622                     	if	0	;There are less than 3 active tblptr bytes
  1741  001622                     	endif
  1742  001622  0009               	tblrd		*+
  1743  001624  CFF5 F005          	movff	tablat,___lldiv@divisor
  1744  001628  0009               	tblrd		*+
  1745  00162A  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1746  00162E  0009               	tblrd		*+
  1747  001630  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1748  001634  000A               	tblrd		*-
  1749  001636  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1750  00163A  ECAD  F013         	call	___lldiv	;wreg free
  1751  00163E  C001  F059         	movff	?___lldiv,printf@tmpval
  1752  001642  C002  F05A         	movff	?___lldiv+1,printf@tmpval+1
  1753  001646  C003  F05B         	movff	?___lldiv+2,printf@tmpval+2
  1754  00164A  C004  F05C         	movff	?___lldiv+3,printf@tmpval+3
  1755                           
  1756                           ;doprnt.c: 1230: tmpval.vd %= 10;
  1757  00164E  C059  F001         	movff	printf@tmpval,___llmod@dividend
  1758  001652  C05A  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  1759  001656  C05B  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  1760  00165A  C05C  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  1761  00165E  0E0A               	movlw	10
  1762  001660  6E05               	movwf	___llmod@divisor,c
  1763  001662  0E00               	movlw	0
  1764  001664  6E06               	movwf	___llmod@divisor+1,c
  1765  001666  0E00               	movlw	0
  1766  001668  6E07               	movwf	___llmod@divisor+2,c
  1767  00166A  0E00               	movlw	0
  1768  00166C  6E08               	movwf	___llmod@divisor+3,c
  1769  00166E  EC34  F014         	call	___llmod	;wreg free
  1770  001672  C001  F059         	movff	?___llmod,printf@tmpval
  1771  001676  C002  F05A         	movff	?___llmod+1,printf@tmpval+1
  1772  00167A  C003  F05B         	movff	?___llmod+2,printf@tmpval+2
  1773  00167E  C004  F05C         	movff	?___llmod+3,printf@tmpval+3
  1774                           
  1775                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  1776  001682  5059               	movf	printf@tmpval,w,c
  1777  001684  0F30               	addlw	48
  1778  001686  ECD8  F015         	call	_putch
  1779                           
  1780                           ;doprnt.c: 1232: val %= dpowers[c];
  1781  00168A  C053  F001         	movff	printf@val,___llmod@dividend
  1782  00168E  C054  F002         	movff	printf@val+1,___llmod@dividend+1
  1783  001692  C055  F003         	movff	printf@val+2,___llmod@dividend+2
  1784  001696  C056  F004         	movff	printf@val+3,___llmod@dividend+3
  1785  00169A  5062               	movf	printf@c,w,c
  1786  00169C  0D04               	mullw	4
  1787  00169E  0E01               	movlw	low _dpowers
  1788  0016A0  24F3               	addwf	prodl,w,c
  1789  0016A2  6EF6               	movwf	tblptrl,c
  1790  0016A4  0E10               	movlw	high _dpowers
  1791  0016A6  20F4               	addwfc	prodh,w,c
  1792  0016A8  6EF7               	movwf	tblptrh,c
  1793  0016AA                     	if	0	;There are less than 3 active tblptr bytes
  1794  0016AA                     	endif
  1795  0016AA  0009               	tblrd		*+
  1796  0016AC  CFF5 F005          	movff	tablat,___llmod@divisor
  1797  0016B0  0009               	tblrd		*+
  1798  0016B2  CFF5 F006          	movff	tablat,___llmod@divisor+1
  1799  0016B6  0009               	tblrd		*+
  1800  0016B8  CFF5 F007          	movff	tablat,___llmod@divisor+2
  1801  0016BC  000A               	tblrd		*-
  1802  0016BE  CFF5 F008          	movff	tablat,___llmod@divisor+3
  1803  0016C2  EC34  F014         	call	___llmod	;wreg free
  1804  0016C6  C001  F053         	movff	?___llmod,printf@val
  1805  0016CA  C002  F054         	movff	?___llmod+1,printf@val+1
  1806  0016CE  C003  F055         	movff	?___llmod+2,printf@val+2
  1807  0016D2  C004  F056         	movff	?___llmod+3,printf@val+3
  1808  0016D6  D000               	goto	l2546
  1809  0016D8                     l2546:
  1810  0016D8  0662               	decf	printf@c,f,c
  1811  0016DA  2862               	incf	printf@c,w,c
  1812  0016DC  B4D8               	btfsc	status,2,c
  1813  0016DE  D009               	goto	l2552
  1814  0016E0  D790               	goto	l2540
  1815                           
  1816                           ;doprnt.c: 1233: }
  1817                           ;doprnt.c: 1235: while(prec) {
  1818  0016E2  D007               	goto	l2552
  1819  0016E4                     l2548:
  1820                           
  1821                           ;doprnt.c: 1236: (putch('0') );
  1822  0016E4  0E30               	movlw	48
  1823  0016E6  ECD8  F015         	call	_putch
  1824                           
  1825                           ;doprnt.c: 1237: prec--;
  1826  0016EA  065D               	decf	printf@prec,f,c
  1827  0016EC  A0D8               	btfss	status,0,c
  1828  0016EE  065E               	decf	printf@prec+1,f,c
  1829  0016F0  D000               	goto	l2552
  1830  0016F2                     l2552:
  1831  0016F2  505D               	movf	printf@prec,w,c
  1832  0016F4  105E               	iorwf	printf@prec+1,w,c
  1833  0016F6  B4D8               	btfsc	status,2,c
  1834  0016F8  D03C               	goto	l2572
  1835  0016FA  D7F4               	goto	l2548
  1836                           
  1837                           ;doprnt.c: 1238: }
  1838                           ;doprnt.c: 1245: continue;
  1839  0016FC  D03A               	goto	l2572
  1840  0016FE                     l2554:
  1841                           
  1842                           ;doprnt.c: 1246: }
  1843                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  1844  0016FE  505D               	movf	printf@prec,w,c
  1845  001700  105E               	iorwf	printf@prec+1,w,c
  1846  001702  A4D8               	btfss	status,2,c
  1847  001704  D009               	goto	l2560
  1848  001706  5053               	movf	printf@val,w,c
  1849  001708  1054               	iorwf	printf@val+1,w,c
  1850  00170A  1055               	iorwf	printf@val+2,w,c
  1851  00170C  1056               	iorwf	printf@val+3,w,c
  1852  00170E  A4D8               	btfss	status,2,c
  1853  001710  D003               	goto	l2560
  1854                           
  1855                           ;doprnt.c: 1291: prec++;
  1856  001712  4A5D               	infsnz	printf@prec,f,c
  1857  001714  2A5E               	incf	printf@prec+1,f,c
  1858  001716  D000               	goto	l2560
  1859  001718                     l2560:
  1860                           
  1861                           ;doprnt.c: 1339: if(c < prec)
  1862  001718  0E80               	movlw	128
  1863  00171A  BE62               	btfsc	printf@c,7,c
  1864  00171C  0E7F               	movlw	127
  1865  00171E  6E46               	movwf	??_printf& (0+255),c
  1866  001720  505D               	movf	printf@prec,w,c
  1867  001722  5C62               	subwf	printf@c,w,c
  1868  001724  505E               	movf	printf@prec+1,w,c
  1869  001726  0A80               	xorlw	128
  1870  001728  5846               	subwfb	??_printf& (0+255),w,c
  1871  00172A  B0D8               	btfsc	status,0,c
  1872  00172C  D003               	goto	l2564
  1873                           
  1874                           ;doprnt.c: 1340: c = prec;
  1875  00172E  C05D  F062         	movff	printf@prec,printf@c
  1876  001732  D011               	goto	l2568
  1877  001734                     l2564:
  1878                           
  1879                           ;doprnt.c: 1341: else if(prec < c)
  1880  001734  505E               	movf	printf@prec+1,w,c
  1881  001736  0A80               	xorlw	128
  1882  001738  6E46               	movwf	??_printf& (0+255),c
  1883  00173A  5062               	movf	printf@c,w,c
  1884  00173C  5C5D               	subwf	printf@prec,w,c
  1885  00173E  0E80               	movlw	128
  1886  001740  BE62               	btfsc	printf@c,7,c
  1887  001742  0E7F               	movlw	127
  1888  001744  5846               	subwfb	??_printf& (0+255),w,c
  1889  001746  B0D8               	btfsc	status,0,c
  1890  001748  D006               	goto	l2568
  1891                           
  1892                           ;doprnt.c: 1342: prec = c;
  1893  00174A  5062               	movf	printf@c,w,c
  1894  00174C  6E5D               	movwf	printf@prec,c
  1895  00174E  6A5E               	clrf	printf@prec+1,c
  1896  001750  BE5D               	btfsc	printf@prec,7,c
  1897  001752  065E               	decf	printf@prec+1,f,c
  1898  001754  D000               	goto	l2568
  1899  001756                     l2568:
  1900                           
  1901                           ;doprnt.c: 1422: {
  1902                           ;doprnt.c: 1438: if(flag & 0x03)
  1903  001756  0E03               	movlw	3
  1904  001758  1451               	andwf	printf@flag,w,c
  1905  00175A  6E46               	movwf	??_printf& (0+255),c
  1906  00175C  0E00               	movlw	0
  1907  00175E  1452               	andwf	printf@flag+1,w,c
  1908  001760  6E47               	movwf	(??_printf+1)& (0+255),c
  1909  001762  5046               	movf	??_printf,w,c
  1910  001764  1047               	iorwf	??_printf+1,w,c
  1911  001766  B4D8               	btfsc	status,2,c
  1912  001768  D004               	goto	l2572
  1913                           
  1914                           ;doprnt.c: 1439: (putch('-') );
  1915  00176A  0E2D               	movlw	45
  1916  00176C  ECD8  F015         	call	_putch
  1917  001770  D000               	goto	l2572
  1918  001772                     l2572:
  1919  001772  C041  FFF6         	movff	printf@f,tblptrl
  1920  001776  C042  FFF7         	movff	printf@f+1,tblptrh
  1921  00177A  4A41               	infsnz	printf@f,f,c
  1922  00177C  2A42               	incf	printf@f+1,f,c
  1923  00177E                     	if	0	;tblptru may be non-zero
  1924  00177E                     	endif
  1925  00177E                     	if	0	;tblptru may be non-zero
  1926  00177E                     	endif
  1927  00177E  0008               	tblrd		*
  1928  001780  CFF5 F062          	movff	tablat,printf@c
  1929  001784  5062               	movf	printf@c,w,c
  1930  001786  B4D8               	btfsc	status,2,c
  1931  001788  D002               	goto	l180
  1932  00178A  D487               	goto	l2392
  1933  00178C  D000               	goto	l180
  1934  00178E                     l180:
  1935  00178E  0012               	return		;funcret
  1936  001790                     __end_of_printf:
  1937                           	opt stack 0
  1938                           tblptru	equ	0xFF8
  1939                           tblptrh	equ	0xFF7
  1940                           tblptrl	equ	0xFF6
  1941                           tablat	equ	0xFF5
  1942                           prodh	equ	0xFF4
  1943                           prodl	equ	0xFF3
  1944                           postinc0	equ	0xFEE
  1945                           wreg	equ	0xFE8
  1946                           postdec1	equ	0xFE5
  1947                           fsr1l	equ	0xFE1
  1948                           postinc2	equ	0xFDE
  1949                           postdec2	equ	0xFDD
  1950                           fsr2h	equ	0xFDA
  1951                           fsr2l	equ	0xFD9
  1952                           status	equ	0xFD8
  1953                           
  1954 ;; *************** function _scale *****************
  1955 ;; Defined at:
  1956 ;;		line 425 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  scl             1    wreg     char 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;  scl             1   48[COMRAM] char 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  3   42[COMRAM] char 
  1963 ;; Registers used:
  1964 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1970 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1973 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;Total ram usage:        7 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; Hardware stack levels required when called:    2
  1977 ;; This function calls:
  1978 ;;		___awdiv
  1979 ;;		___awmod
  1980 ;;		___ftmul
  1981 ;;		___wmul
  1982 ;; This function is called by:
  1983 ;;		_printf
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text2
  1988  001790                     __ptext2:
  1989                           	opt stack 0
  1990  001790                     _scale:
  1991                           	opt stack 27
  1992                           
  1993                           ;incstack = 0
  1994                           ;scale@scl stored from wreg
  1995  001790  6E31               	movwf	scale@scl,c
  1996                           
  1997                           ;doprnt.c: 428: if(scl < 0) {
  1998  001792  AE31               	btfss	scale@scl,7,c
  1999  001794  D0EF               	goto	l2108
  2000                           
  2001                           ;doprnt.c: 429: scl = -scl;
  2002  001796  6C31               	negf	scale@scl,c
  2003                           
  2004                           ;doprnt.c: 430: if(scl>=110)
  2005  001798  5031               	movf	scale@scl,w,c
  2006  00179A  0A80               	xorlw	128
  2007  00179C  0F12               	addlw	-238
  2008  00179E  A0D8               	btfss	status,0,c
  2009  0017A0  D08D               	goto	l2098
  2010                           
  2011                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2012  0017A2  0E00               	movlw	0
  2013  0017A4  6E12               	movwf	___wmul@multiplicand+1,c
  2014  0017A6  0E03               	movlw	3
  2015  0017A8  6E11               	movwf	___wmul@multiplicand,c
  2016  0017AA  0E00               	movlw	0
  2017  0017AC  6E0A               	movwf	___awdiv@divisor+1,c
  2018  0017AE  0E0A               	movlw	10
  2019  0017B0  6E09               	movwf	___awdiv@divisor,c
  2020  0017B2  0E00               	movlw	0
  2021  0017B4  6E04               	movwf	___awmod@divisor+1,c
  2022  0017B6  0E64               	movlw	100
  2023  0017B8  6E03               	movwf	___awmod@divisor,c
  2024  0017BA  5031               	movf	scale@scl,w,c
  2025  0017BC  6E01               	movwf	___awmod@dividend,c
  2026  0017BE  6A02               	clrf	___awmod@dividend+1,c
  2027  0017C0  BE01               	btfsc	___awmod@dividend,7,c
  2028  0017C2  0602               	decf	___awmod@dividend+1,f,c
  2029  0017C4  ECF3  F013         	call	___awmod	;wreg free
  2030  0017C8  C001  F007         	movff	?___awmod,___awdiv@dividend
  2031  0017CC  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2032  0017D0  EC17  F013         	call	___awdiv	;wreg free
  2033  0017D4  0E09               	movlw	9
  2034  0017D6  2407               	addwf	?___awdiv,w,c
  2035  0017D8  6E0F               	movwf	___wmul@multiplier,c
  2036  0017DA  0E00               	movlw	0
  2037  0017DC  2008               	addwfc	?___awdiv+1,w,c
  2038  0017DE  6E10               	movwf	___wmul@multiplier+1,c
  2039  0017E0  EC48  F015         	call	___wmul	;wreg free
  2040  0017E4  0E29               	movlw	low __npowers_
  2041  0017E6  240F               	addwf	?___wmul,w,c
  2042  0017E8  6EF6               	movwf	tblptrl,c
  2043  0017EA  0E10               	movlw	high __npowers_
  2044  0017EC  2010               	addwfc	?___wmul+1,w,c
  2045  0017EE  6EF7               	movwf	tblptrh,c
  2046  0017F0                     	if	0	;There are less than 3 active tblptr bytes
  2047  0017F0                     	endif
  2048  0017F0  0009               	tblrd		*+
  2049  0017F2  CFF5 F01F          	movff	tablat,___ftmul@f2
  2050  0017F6  0009               	tblrd		*+
  2051  0017F8  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2052  0017FC  000A               	tblrd		*-
  2053  0017FE  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2054  001802  0E00               	movlw	0
  2055  001804  6E0A               	movwf	___awdiv@divisor+1,c
  2056  001806  0E64               	movlw	100
  2057  001808  6E09               	movwf	___awdiv@divisor,c
  2058  00180A  5031               	movf	scale@scl,w,c
  2059  00180C  6E07               	movwf	___awdiv@dividend,c
  2060  00180E  6A08               	clrf	___awdiv@dividend+1,c
  2061  001810  BE07               	btfsc	___awdiv@dividend,7,c
  2062  001812  0608               	decf	___awdiv@dividend+1,f,c
  2063  001814  EC17  F013         	call	___awdiv	;wreg free
  2064  001818  0E12               	movlw	18
  2065  00181A  2407               	addwf	?___awdiv,w,c
  2066  00181C  6E0F               	movwf	___wmul@multiplier,c
  2067  00181E  0E00               	movlw	0
  2068  001820  2008               	addwfc	?___awdiv+1,w,c
  2069  001822  6E10               	movwf	___wmul@multiplier+1,c
  2070  001824  0E00               	movlw	0
  2071  001826  6E12               	movwf	___wmul@multiplicand+1,c
  2072  001828  0E03               	movlw	3
  2073  00182A  6E11               	movwf	___wmul@multiplicand,c
  2074  00182C  EC48  F015         	call	___wmul	;wreg free
  2075  001830  0E29               	movlw	low __npowers_
  2076  001832  240F               	addwf	?___wmul,w,c
  2077  001834  6EF6               	movwf	tblptrl,c
  2078  001836  0E10               	movlw	high __npowers_
  2079  001838  2010               	addwfc	?___wmul+1,w,c
  2080  00183A  6EF7               	movwf	tblptrh,c
  2081  00183C                     	if	0	;There are less than 3 active tblptr bytes
  2082  00183C                     	endif
  2083  00183C  0009               	tblrd		*+
  2084  00183E  CFF5 F01C          	movff	tablat,___ftmul@f1
  2085  001842  0009               	tblrd		*+
  2086  001844  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2087  001848  000A               	tblrd		*-
  2088  00184A  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2089  00184E  EC54  F011         	call	___ftmul	;wreg free
  2090  001852  C01C  F02E         	movff	?___ftmul,_scale$1319
  2091  001856  C01D  F02F         	movff	?___ftmul+1,_scale$1319+1
  2092  00185A  C01E  F030         	movff	?___ftmul+2,_scale$1319+2
  2093                           
  2094                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2095  00185E  C02E  F01C         	movff	_scale$1319,___ftmul@f1
  2096  001862  C02F  F01D         	movff	_scale$1319+1,___ftmul@f1+1
  2097  001866  C030  F01E         	movff	_scale$1319+2,___ftmul@f1+2
  2098  00186A  0E00               	movlw	0
  2099  00186C  6E12               	movwf	___wmul@multiplicand+1,c
  2100  00186E  0E03               	movlw	3
  2101  001870  6E11               	movwf	___wmul@multiplicand,c
  2102  001872  0E00               	movlw	0
  2103  001874  6E04               	movwf	___awmod@divisor+1,c
  2104  001876  0E0A               	movlw	10
  2105  001878  6E03               	movwf	___awmod@divisor,c
  2106  00187A  5031               	movf	scale@scl,w,c
  2107  00187C  6E01               	movwf	___awmod@dividend,c
  2108  00187E  6A02               	clrf	___awmod@dividend+1,c
  2109  001880  BE01               	btfsc	___awmod@dividend,7,c
  2110  001882  0602               	decf	___awmod@dividend+1,f,c
  2111  001884  ECF3  F013         	call	___awmod	;wreg free
  2112  001888  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2113  00188C  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2114  001890  EC48  F015         	call	___wmul	;wreg free
  2115  001894  0E29               	movlw	low __npowers_
  2116  001896  240F               	addwf	?___wmul,w,c
  2117  001898  6EF6               	movwf	tblptrl,c
  2118  00189A  0E10               	movlw	high __npowers_
  2119  00189C  2010               	addwfc	?___wmul+1,w,c
  2120  00189E  6EF7               	movwf	tblptrh,c
  2121  0018A0                     	if	0	;There are less than 3 active tblptr bytes
  2122  0018A0                     	endif
  2123  0018A0  0009               	tblrd		*+
  2124  0018A2  CFF5 F01F          	movff	tablat,___ftmul@f2
  2125  0018A6  0009               	tblrd		*+
  2126  0018A8  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2127  0018AC  000A               	tblrd		*-
  2128  0018AE  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2129  0018B2  EC54  F011         	call	___ftmul	;wreg free
  2130  0018B6  D141               	goto	L5
  2131  0018B8  D15A               	goto	l114
  2132  0018BA  D054               	goto	l2104
  2133  0018BC                     l2098:
  2134                           
  2135                           ;doprnt.c: 432: else if(scl > 10)
  2136  0018BC  5031               	movf	scale@scl,w,c
  2137  0018BE  0A80               	xorlw	128
  2138  0018C0  0F75               	addlw	-139
  2139  0018C2  A0D8               	btfss	status,0,c
  2140  0018C4  D04F               	goto	l2104
  2141                           
  2142                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2143  0018C6  0E00               	movlw	0
  2144  0018C8  6E0A               	movwf	___awdiv@divisor+1,c
  2145  0018CA  0E0A               	movlw	10
  2146  0018CC  6E09               	movwf	___awdiv@divisor,c
  2147  0018CE  5031               	movf	scale@scl,w,c
  2148  0018D0  6E07               	movwf	___awdiv@dividend,c
  2149  0018D2  6A08               	clrf	___awdiv@dividend+1,c
  2150  0018D4  BE07               	btfsc	___awdiv@dividend,7,c
  2151  0018D6  0608               	decf	___awdiv@dividend+1,f,c
  2152  0018D8  EC17  F013         	call	___awdiv	;wreg free
  2153  0018DC  0E09               	movlw	9
  2154  0018DE  2407               	addwf	?___awdiv,w,c
  2155  0018E0  6E0F               	movwf	___wmul@multiplier,c
  2156  0018E2  0E00               	movlw	0
  2157  0018E4  2008               	addwfc	?___awdiv+1,w,c
  2158  0018E6  6E10               	movwf	___wmul@multiplier+1,c
  2159  0018E8  0E00               	movlw	0
  2160  0018EA  6E12               	movwf	___wmul@multiplicand+1,c
  2161  0018EC  0E03               	movlw	3
  2162  0018EE  6E11               	movwf	___wmul@multiplicand,c
  2163  0018F0  EC48  F015         	call	___wmul	;wreg free
  2164  0018F4  0E29               	movlw	low __npowers_
  2165  0018F6  240F               	addwf	?___wmul,w,c
  2166  0018F8  6EF6               	movwf	tblptrl,c
  2167  0018FA  0E10               	movlw	high __npowers_
  2168  0018FC  2010               	addwfc	?___wmul+1,w,c
  2169  0018FE  6EF7               	movwf	tblptrh,c
  2170  001900                     	if	0	;There are less than 3 active tblptr bytes
  2171  001900                     	endif
  2172  001900  0009               	tblrd		*+
  2173  001902  CFF5 F01C          	movff	tablat,___ftmul@f1
  2174  001906  0009               	tblrd		*+
  2175  001908  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2176  00190C  000A               	tblrd		*-
  2177  00190E  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2178  001912  0E00               	movlw	0
  2179  001914  6E12               	movwf	___wmul@multiplicand+1,c
  2180  001916  0E03               	movlw	3
  2181  001918  6E11               	movwf	___wmul@multiplicand,c
  2182  00191A  0E00               	movlw	0
  2183  00191C  6E04               	movwf	___awmod@divisor+1,c
  2184  00191E  0E0A               	movlw	10
  2185  001920  6E03               	movwf	___awmod@divisor,c
  2186  001922  5031               	movf	scale@scl,w,c
  2187  001924  6E01               	movwf	___awmod@dividend,c
  2188  001926  6A02               	clrf	___awmod@dividend+1,c
  2189  001928  BE01               	btfsc	___awmod@dividend,7,c
  2190  00192A  0602               	decf	___awmod@dividend+1,f,c
  2191  00192C  ECF3  F013         	call	___awmod	;wreg free
  2192  001930  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2193  001934  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2194  001938  EC48  F015         	call	___wmul	;wreg free
  2195  00193C  0E29               	movlw	low __npowers_
  2196  00193E  240F               	addwf	?___wmul,w,c
  2197  001940  6EF6               	movwf	tblptrl,c
  2198  001942  0E10               	movlw	high __npowers_
  2199  001944  2010               	addwfc	?___wmul+1,w,c
  2200  001946  6EF7               	movwf	tblptrh,c
  2201  001948                     	if	0	;There are less than 3 active tblptr bytes
  2202  001948                     	endif
  2203  001948  0009               	tblrd		*+
  2204  00194A  CFF5 F01F          	movff	tablat,___ftmul@f2
  2205  00194E  0009               	tblrd		*+
  2206  001950  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2207  001954  000A               	tblrd		*-
  2208  001956  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2209  00195A  EC54  F011         	call	___ftmul	;wreg free
  2210  00195E  D0ED               	goto	L5
  2211  001960  D106               	goto	l114
  2212  001962  D000               	goto	l2104
  2213  001964                     l2104:
  2214                           
  2215                           ;doprnt.c: 434: return _npowers_[scl];
  2216  001964  5031               	movf	scale@scl,w,c
  2217  001966  0D03               	mullw	3
  2218  001968  0E29               	movlw	low __npowers_
  2219  00196A  24F3               	addwf	prodl,w,c
  2220  00196C  6EF6               	movwf	tblptrl,c
  2221  00196E  0E10               	movlw	high __npowers_
  2222  001970  D0F2               	goto	L4
  2223  001972  D0FD               	goto	l114
  2224  001974                     l2108:
  2225                           
  2226                           ;doprnt.c: 435: }
  2227                           ;doprnt.c: 436: if(scl>=110)
  2228  001974  5031               	movf	scale@scl,w,c
  2229  001976  0A80               	xorlw	128
  2230  001978  0F12               	addlw	-238
  2231  00197A  A0D8               	btfss	status,0,c
  2232  00197C  D08D               	goto	l2116
  2233                           
  2234                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2235  00197E  0E00               	movlw	0
  2236  001980  6E12               	movwf	___wmul@multiplicand+1,c
  2237  001982  0E03               	movlw	3
  2238  001984  6E11               	movwf	___wmul@multiplicand,c
  2239  001986  0E00               	movlw	0
  2240  001988  6E0A               	movwf	___awdiv@divisor+1,c
  2241  00198A  0E0A               	movlw	10
  2242  00198C  6E09               	movwf	___awdiv@divisor,c
  2243  00198E  0E00               	movlw	0
  2244  001990  6E04               	movwf	___awmod@divisor+1,c
  2245  001992  0E64               	movlw	100
  2246  001994  6E03               	movwf	___awmod@divisor,c
  2247  001996  5031               	movf	scale@scl,w,c
  2248  001998  6E01               	movwf	___awmod@dividend,c
  2249  00199A  6A02               	clrf	___awmod@dividend+1,c
  2250  00199C  BE01               	btfsc	___awmod@dividend,7,c
  2251  00199E  0602               	decf	___awmod@dividend+1,f,c
  2252  0019A0  ECF3  F013         	call	___awmod	;wreg free
  2253  0019A4  C001  F007         	movff	?___awmod,___awdiv@dividend
  2254  0019A8  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2255  0019AC  EC17  F013         	call	___awdiv	;wreg free
  2256  0019B0  0E09               	movlw	9
  2257  0019B2  2407               	addwf	?___awdiv,w,c
  2258  0019B4  6E0F               	movwf	___wmul@multiplier,c
  2259  0019B6  0E00               	movlw	0
  2260  0019B8  2008               	addwfc	?___awdiv+1,w,c
  2261  0019BA  6E10               	movwf	___wmul@multiplier+1,c
  2262  0019BC  EC48  F015         	call	___wmul	;wreg free
  2263  0019C0  0E50               	movlw	low __powers_
  2264  0019C2  240F               	addwf	?___wmul,w,c
  2265  0019C4  6EF6               	movwf	tblptrl,c
  2266  0019C6  0E10               	movlw	high __powers_
  2267  0019C8  2010               	addwfc	?___wmul+1,w,c
  2268  0019CA  6EF7               	movwf	tblptrh,c
  2269  0019CC                     	if	0	;There are less than 3 active tblptr bytes
  2270  0019CC                     	endif
  2271  0019CC  0009               	tblrd		*+
  2272  0019CE  CFF5 F01F          	movff	tablat,___ftmul@f2
  2273  0019D2  0009               	tblrd		*+
  2274  0019D4  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2275  0019D8  000A               	tblrd		*-
  2276  0019DA  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2277  0019DE  0E00               	movlw	0
  2278  0019E0  6E0A               	movwf	___awdiv@divisor+1,c
  2279  0019E2  0E64               	movlw	100
  2280  0019E4  6E09               	movwf	___awdiv@divisor,c
  2281  0019E6  5031               	movf	scale@scl,w,c
  2282  0019E8  6E07               	movwf	___awdiv@dividend,c
  2283  0019EA  6A08               	clrf	___awdiv@dividend+1,c
  2284  0019EC  BE07               	btfsc	___awdiv@dividend,7,c
  2285  0019EE  0608               	decf	___awdiv@dividend+1,f,c
  2286  0019F0  EC17  F013         	call	___awdiv	;wreg free
  2287  0019F4  0E12               	movlw	18
  2288  0019F6  2407               	addwf	?___awdiv,w,c
  2289  0019F8  6E0F               	movwf	___wmul@multiplier,c
  2290  0019FA  0E00               	movlw	0
  2291  0019FC  2008               	addwfc	?___awdiv+1,w,c
  2292  0019FE  6E10               	movwf	___wmul@multiplier+1,c
  2293  001A00  0E00               	movlw	0
  2294  001A02  6E12               	movwf	___wmul@multiplicand+1,c
  2295  001A04  0E03               	movlw	3
  2296  001A06  6E11               	movwf	___wmul@multiplicand,c
  2297  001A08  EC48  F015         	call	___wmul	;wreg free
  2298  001A0C  0E50               	movlw	low __powers_
  2299  001A0E  240F               	addwf	?___wmul,w,c
  2300  001A10  6EF6               	movwf	tblptrl,c
  2301  001A12  0E10               	movlw	high __powers_
  2302  001A14  2010               	addwfc	?___wmul+1,w,c
  2303  001A16  6EF7               	movwf	tblptrh,c
  2304  001A18                     	if	0	;There are less than 3 active tblptr bytes
  2305  001A18                     	endif
  2306  001A18  0009               	tblrd		*+
  2307  001A1A  CFF5 F01C          	movff	tablat,___ftmul@f1
  2308  001A1E  0009               	tblrd		*+
  2309  001A20  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2310  001A24  000A               	tblrd		*-
  2311  001A26  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2312  001A2A  EC54  F011         	call	___ftmul	;wreg free
  2313  001A2E  C01C  F02E         	movff	?___ftmul,_scale$1319
  2314  001A32  C01D  F02F         	movff	?___ftmul+1,_scale$1319+1
  2315  001A36  C01E  F030         	movff	?___ftmul+2,_scale$1319+2
  2316                           
  2317                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2318  001A3A  C02E  F01C         	movff	_scale$1319,___ftmul@f1
  2319  001A3E  C02F  F01D         	movff	_scale$1319+1,___ftmul@f1+1
  2320  001A42  C030  F01E         	movff	_scale$1319+2,___ftmul@f1+2
  2321  001A46  0E00               	movlw	0
  2322  001A48  6E12               	movwf	___wmul@multiplicand+1,c
  2323  001A4A  0E03               	movlw	3
  2324  001A4C  6E11               	movwf	___wmul@multiplicand,c
  2325  001A4E  0E00               	movlw	0
  2326  001A50  6E04               	movwf	___awmod@divisor+1,c
  2327  001A52  0E0A               	movlw	10
  2328  001A54  6E03               	movwf	___awmod@divisor,c
  2329  001A56  5031               	movf	scale@scl,w,c
  2330  001A58  6E01               	movwf	___awmod@dividend,c
  2331  001A5A  6A02               	clrf	___awmod@dividend+1,c
  2332  001A5C  BE01               	btfsc	___awmod@dividend,7,c
  2333  001A5E  0602               	decf	___awmod@dividend+1,f,c
  2334  001A60  ECF3  F013         	call	___awmod	;wreg free
  2335  001A64  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2336  001A68  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2337  001A6C  EC48  F015         	call	___wmul	;wreg free
  2338  001A70  0E50               	movlw	low __powers_
  2339  001A72  240F               	addwf	?___wmul,w,c
  2340  001A74  6EF6               	movwf	tblptrl,c
  2341  001A76  0E10               	movlw	high __powers_
  2342  001A78  2010               	addwfc	?___wmul+1,w,c
  2343  001A7A  6EF7               	movwf	tblptrh,c
  2344  001A7C                     	if	0	;There are less than 3 active tblptr bytes
  2345  001A7C                     	endif
  2346  001A7C  0009               	tblrd		*+
  2347  001A7E  CFF5 F01F          	movff	tablat,___ftmul@f2
  2348  001A82  0009               	tblrd		*+
  2349  001A84  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2350  001A88  000A               	tblrd		*-
  2351  001A8A  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2352  001A8E  EC54  F011         	call	___ftmul	;wreg free
  2353  001A92  D053               	goto	L5
  2354  001A94  D06C               	goto	l114
  2355  001A96  D059               	goto	l2122
  2356  001A98                     l2116:
  2357                           
  2358                           ;doprnt.c: 438: else if(scl > 10)
  2359  001A98  5031               	movf	scale@scl,w,c
  2360  001A9A  0A80               	xorlw	128
  2361  001A9C  0F75               	addlw	-139
  2362  001A9E  A0D8               	btfss	status,0,c
  2363  001AA0  D054               	goto	l2122
  2364                           
  2365                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2366  001AA2  0E00               	movlw	0
  2367  001AA4  6E0A               	movwf	___awdiv@divisor+1,c
  2368  001AA6  0E0A               	movlw	10
  2369  001AA8  6E09               	movwf	___awdiv@divisor,c
  2370  001AAA  5031               	movf	scale@scl,w,c
  2371  001AAC  6E07               	movwf	___awdiv@dividend,c
  2372  001AAE  6A08               	clrf	___awdiv@dividend+1,c
  2373  001AB0  BE07               	btfsc	___awdiv@dividend,7,c
  2374  001AB2  0608               	decf	___awdiv@dividend+1,f,c
  2375  001AB4  EC17  F013         	call	___awdiv	;wreg free
  2376  001AB8  0E09               	movlw	9
  2377  001ABA  2407               	addwf	?___awdiv,w,c
  2378  001ABC  6E0F               	movwf	___wmul@multiplier,c
  2379  001ABE  0E00               	movlw	0
  2380  001AC0  2008               	addwfc	?___awdiv+1,w,c
  2381  001AC2  6E10               	movwf	___wmul@multiplier+1,c
  2382  001AC4  0E00               	movlw	0
  2383  001AC6  6E12               	movwf	___wmul@multiplicand+1,c
  2384  001AC8  0E03               	movlw	3
  2385  001ACA  6E11               	movwf	___wmul@multiplicand,c
  2386  001ACC  EC48  F015         	call	___wmul	;wreg free
  2387  001AD0  0E50               	movlw	low __powers_
  2388  001AD2  240F               	addwf	?___wmul,w,c
  2389  001AD4  6EF6               	movwf	tblptrl,c
  2390  001AD6  0E10               	movlw	high __powers_
  2391  001AD8  2010               	addwfc	?___wmul+1,w,c
  2392  001ADA  6EF7               	movwf	tblptrh,c
  2393  001ADC                     	if	0	;There are less than 3 active tblptr bytes
  2394  001ADC                     	endif
  2395  001ADC  0009               	tblrd		*+
  2396  001ADE  CFF5 F01C          	movff	tablat,___ftmul@f1
  2397  001AE2  0009               	tblrd		*+
  2398  001AE4  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2399  001AE8  000A               	tblrd		*-
  2400  001AEA  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2401  001AEE  0E00               	movlw	0
  2402  001AF0  6E12               	movwf	___wmul@multiplicand+1,c
  2403  001AF2  0E03               	movlw	3
  2404  001AF4  6E11               	movwf	___wmul@multiplicand,c
  2405  001AF6  0E00               	movlw	0
  2406  001AF8  6E04               	movwf	___awmod@divisor+1,c
  2407  001AFA  0E0A               	movlw	10
  2408  001AFC  6E03               	movwf	___awmod@divisor,c
  2409  001AFE  5031               	movf	scale@scl,w,c
  2410  001B00  6E01               	movwf	___awmod@dividend,c
  2411  001B02  6A02               	clrf	___awmod@dividend+1,c
  2412  001B04  BE01               	btfsc	___awmod@dividend,7,c
  2413  001B06  0602               	decf	___awmod@dividend+1,f,c
  2414  001B08  ECF3  F013         	call	___awmod	;wreg free
  2415  001B0C  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2416  001B10  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2417  001B14  EC48  F015         	call	___wmul	;wreg free
  2418  001B18  0E50               	movlw	low __powers_
  2419  001B1A  240F               	addwf	?___wmul,w,c
  2420  001B1C  6EF6               	movwf	tblptrl,c
  2421  001B1E  0E10               	movlw	high __powers_
  2422  001B20  2010               	addwfc	?___wmul+1,w,c
  2423  001B22  6EF7               	movwf	tblptrh,c
  2424  001B24                     	if	0	;There are less than 3 active tblptr bytes
  2425  001B24                     	endif
  2426  001B24  0009               	tblrd		*+
  2427  001B26  CFF5 F01F          	movff	tablat,___ftmul@f2
  2428  001B2A  0009               	tblrd		*+
  2429  001B2C  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2430  001B30  000A               	tblrd		*-
  2431  001B32  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2432  001B36  EC54  F011         	call	___ftmul	;wreg free
  2433  001B3A                     L5:
  2434  001B3A  C01C  F02B         	movff	?___ftmul,?_scale
  2435  001B3E  C01D  F02C         	movff	?___ftmul+1,?_scale+1
  2436  001B42  C01E  F02D         	movff	?___ftmul+2,?_scale+2
  2437  001B46  D013               	goto	l114
  2438  001B48  D000               	goto	l2122
  2439  001B4A                     l2122:
  2440                           
  2441                           ;doprnt.c: 440: return _powers_[scl];
  2442  001B4A  5031               	movf	scale@scl,w,c
  2443  001B4C  0D03               	mullw	3
  2444  001B4E  0E50               	movlw	low __powers_
  2445  001B50  24F3               	addwf	prodl,w,c
  2446  001B52  6EF6               	movwf	tblptrl,c
  2447  001B54  0E10               	movlw	high __powers_
  2448  001B56                     L4:
  2449  001B56  20F4               	addwfc	prodh,w,c
  2450  001B58  6EF7               	movwf	tblptrh,c
  2451  001B5A                     	if	0	;There are less than 3 active tblptr bytes
  2452  001B5A                     	endif
  2453  001B5A  0009               	tblrd		*+
  2454  001B5C  CFF5 F02B          	movff	tablat,?_scale
  2455  001B60  0009               	tblrd		*+
  2456  001B62  CFF5 F02C          	movff	tablat,?_scale+1
  2457  001B66  000A               	tblrd		*-
  2458  001B68  CFF5 F02D          	movff	tablat,?_scale+2
  2459  001B6C  D000               	goto	l114
  2460  001B6E                     l114:
  2461  001B6E  0012               	return		;funcret
  2462  001B70                     __end_of_scale:
  2463                           	opt stack 0
  2464                           tblptru	equ	0xFF8
  2465                           tblptrh	equ	0xFF7
  2466                           tblptrl	equ	0xFF6
  2467                           tablat	equ	0xFF5
  2468                           prodh	equ	0xFF4
  2469                           prodl	equ	0xFF3
  2470                           postinc0	equ	0xFEE
  2471                           wreg	equ	0xFE8
  2472                           postdec1	equ	0xFE5
  2473                           fsr1l	equ	0xFE1
  2474                           postinc2	equ	0xFDE
  2475                           postdec2	equ	0xFDD
  2476                           fsr2h	equ	0xFDA
  2477                           fsr2l	equ	0xFD9
  2478                           status	equ	0xFD8
  2479                           
  2480 ;; *************** function _putch *****************
  2481 ;; Defined at:
  2482 ;;		line 29 in file "Lab6pA1.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  c               1    wreg     unsigned char 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  c               1    0[COMRAM] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;		None               void
  2489 ;; Registers used:
  2490 ;;		wreg
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;Total ram usage:        1 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_printf
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text3
  2510  002BB0                     __ptext3:
  2511                           	opt stack 0
  2512  002BB0                     _putch:
  2513                           	opt stack 29
  2514                           
  2515                           ;incstack = 0
  2516                           ;putch@c stored from wreg
  2517  002BB0  6E01               	movwf	putch@c,c
  2518                           
  2519                           ;Lab6pA1.c: 31: while (!TRMT);
  2520  002BB2  D000               	goto	l45
  2521  002BB4                     l45:
  2522  002BB4  A2AC               	btfss	4012,1,c	;volatile
  2523  002BB6  D7FE               	goto	l45
  2524                           
  2525                           ;Lab6pA1.c: 32: TXREG = c;
  2526  002BB8  C001  FFAD         	movff	putch@c,4013	;volatile
  2527  002BBC  0012               	return		;funcret
  2528  002BBE                     __end_of_putch:
  2529                           	opt stack 0
  2530                           tblptru	equ	0xFF8
  2531                           tblptrh	equ	0xFF7
  2532                           tblptrl	equ	0xFF6
  2533                           tablat	equ	0xFF5
  2534                           prodh	equ	0xFF4
  2535                           prodl	equ	0xFF3
  2536                           postinc0	equ	0xFEE
  2537                           wreg	equ	0xFE8
  2538                           postdec1	equ	0xFE5
  2539                           fsr1l	equ	0xFE1
  2540                           postinc2	equ	0xFDE
  2541                           postdec2	equ	0xFDD
  2542                           fsr2h	equ	0xFDA
  2543                           fsr2l	equ	0xFD9
  2544                           status	equ	0xFD8
  2545                           
  2546 ;; *************** function _isdigit *****************
  2547 ;; Defined at:
  2548 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\isdigit.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  c               1    wreg     unsigned char 
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  c               1    2[COMRAM] unsigned char 
  2553 ;; Return value:  Size  Location     Type
  2554 ;;		None               void
  2555 ;; Registers used:
  2556 ;;		wreg, status,2, status,0
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;Total ram usage:        3 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_printf
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text4
  2576  002B4C                     __ptext4:
  2577                           	opt stack 0
  2578  002B4C                     _isdigit:
  2579                           	opt stack 29
  2580                           
  2581                           ;incstack = 0
  2582                           ;isdigit@c stored from wreg
  2583  002B4C  6E03               	movwf	isdigit@c,c
  2584  002B4E  0E00               	movlw	0
  2585  002B50  6E02               	movwf	_isdigit$1075,c
  2586  002B52  0E3A               	movlw	58
  2587  002B54  6003               	cpfslt	isdigit@c,c
  2588  002B56  D006               	goto	l2134
  2589  002B58  0E2F               	movlw	47
  2590  002B5A  6403               	cpfsgt	isdigit@c,c
  2591  002B5C  D003               	goto	l2134
  2592  002B5E  0E01               	movlw	1
  2593  002B60  6E02               	movwf	_isdigit$1075,c
  2594  002B62  D000               	goto	l2134
  2595  002B64                     l2134:
  2596  002B64  C002  F001         	movff	_isdigit$1075,??_isdigit
  2597  002B68  3001               	rrcf	??_isdigit,w,c
  2598  002B6A  D000               	goto	l681
  2599  002B6C                     l681:
  2600  002B6C  0012               	return		;funcret
  2601  002B6E                     __end_of_isdigit:
  2602                           	opt stack 0
  2603                           tblptru	equ	0xFF8
  2604                           tblptrh	equ	0xFF7
  2605                           tblptrl	equ	0xFF6
  2606                           tablat	equ	0xFF5
  2607                           prodh	equ	0xFF4
  2608                           prodl	equ	0xFF3
  2609                           postinc0	equ	0xFEE
  2610                           wreg	equ	0xFE8
  2611                           postdec1	equ	0xFE5
  2612                           fsr1l	equ	0xFE1
  2613                           postinc2	equ	0xFDE
  2614                           postdec2	equ	0xFDD
  2615                           fsr2h	equ	0xFDA
  2616                           fsr2l	equ	0xFD9
  2617                           status	equ	0xFD8
  2618                           
  2619 ;; *************** function _fround *****************
  2620 ;; Defined at:
  2621 ;;		line 409 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  prec            1    wreg     unsigned char 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;  prec            1   51[COMRAM] unsigned char 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  3   42[COMRAM] unsigned char 
  2628 ;; Registers used:
  2629 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2635 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2639 ;;Total ram usage:       10 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    2
  2642 ;; This function calls:
  2643 ;;		___awdiv
  2644 ;;		___awmod
  2645 ;;		___ftmul
  2646 ;;		___wmul
  2647 ;; This function is called by:
  2648 ;;		_printf
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           	psect	text5
  2653  001B70                     __ptext5:
  2654                           	opt stack 0
  2655  001B70                     _fround:
  2656                           	opt stack 27
  2657                           
  2658                           ;incstack = 0
  2659                           ;fround@prec stored from wreg
  2660  001B70  6E34               	movwf	fround@prec,c
  2661                           
  2662                           ;doprnt.c: 413: if(prec>=110)
  2663  001B72  0E6D               	movlw	109
  2664  001B74  6434               	cpfsgt	fround@prec,c
  2665  001B76  D09B               	goto	l2076
  2666                           
  2667                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2668  001B78  0E00               	movlw	0
  2669  001B7A  6E12               	movwf	___wmul@multiplicand+1,c
  2670  001B7C  0E03               	movlw	3
  2671  001B7E  6E11               	movwf	___wmul@multiplicand,c
  2672  001B80  0E00               	movlw	0
  2673  001B82  6E0A               	movwf	___awdiv@divisor+1,c
  2674  001B84  0E0A               	movlw	10
  2675  001B86  6E09               	movwf	___awdiv@divisor,c
  2676  001B88  0E00               	movlw	0
  2677  001B8A  6E04               	movwf	___awmod@divisor+1,c
  2678  001B8C  0E64               	movlw	100
  2679  001B8E  6E03               	movwf	___awmod@divisor,c
  2680  001B90  C034  F001         	movff	fround@prec,___awmod@dividend
  2681  001B94  6A02               	clrf	___awmod@dividend+1,c
  2682  001B96  ECF3  F013         	call	___awmod	;wreg free
  2683  001B9A  C001  F007         	movff	?___awmod,___awdiv@dividend
  2684  001B9E  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2685  001BA2  EC17  F013         	call	___awdiv	;wreg free
  2686  001BA6  0E09               	movlw	9
  2687  001BA8  2407               	addwf	?___awdiv,w,c
  2688  001BAA  6E0F               	movwf	___wmul@multiplier,c
  2689  001BAC  0E00               	movlw	0
  2690  001BAE  2008               	addwfc	?___awdiv+1,w,c
  2691  001BB0  6E10               	movwf	___wmul@multiplier+1,c
  2692  001BB2  EC48  F015         	call	___wmul	;wreg free
  2693  001BB6  0E29               	movlw	low __npowers_
  2694  001BB8  240F               	addwf	?___wmul,w,c
  2695  001BBA  6EF6               	movwf	tblptrl,c
  2696  001BBC  0E10               	movlw	high __npowers_
  2697  001BBE  2010               	addwfc	?___wmul+1,w,c
  2698  001BC0  6EF7               	movwf	tblptrh,c
  2699  001BC2                     	if	0	;There are less than 3 active tblptr bytes
  2700  001BC2                     	endif
  2701  001BC2  0009               	tblrd		*+
  2702  001BC4  CFF5 F01F          	movff	tablat,___ftmul@f2
  2703  001BC8  0009               	tblrd		*+
  2704  001BCA  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2705  001BCE  000A               	tblrd		*-
  2706  001BD0  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2707  001BD4  0E00               	movlw	0
  2708  001BD6  6E0A               	movwf	___awdiv@divisor+1,c
  2709  001BD8  0E64               	movlw	100
  2710  001BDA  6E09               	movwf	___awdiv@divisor,c
  2711  001BDC  C034  F007         	movff	fround@prec,___awdiv@dividend
  2712  001BE0  6A08               	clrf	___awdiv@dividend+1,c
  2713  001BE2  EC17  F013         	call	___awdiv	;wreg free
  2714  001BE6  0E12               	movlw	18
  2715  001BE8  2407               	addwf	?___awdiv,w,c
  2716  001BEA  6E0F               	movwf	___wmul@multiplier,c
  2717  001BEC  0E00               	movlw	0
  2718  001BEE  2008               	addwfc	?___awdiv+1,w,c
  2719  001BF0  6E10               	movwf	___wmul@multiplier+1,c
  2720  001BF2  0E00               	movlw	0
  2721  001BF4  6E12               	movwf	___wmul@multiplicand+1,c
  2722  001BF6  0E03               	movlw	3
  2723  001BF8  6E11               	movwf	___wmul@multiplicand,c
  2724  001BFA  EC48  F015         	call	___wmul	;wreg free
  2725  001BFE  0E29               	movlw	low __npowers_
  2726  001C00  240F               	addwf	?___wmul,w,c
  2727  001C02  6EF6               	movwf	tblptrl,c
  2728  001C04  0E10               	movlw	high __npowers_
  2729  001C06  2010               	addwfc	?___wmul+1,w,c
  2730  001C08  6EF7               	movwf	tblptrh,c
  2731  001C0A                     	if	0	;There are less than 3 active tblptr bytes
  2732  001C0A                     	endif
  2733  001C0A  0009               	tblrd		*+
  2734  001C0C  CFF5 F01C          	movff	tablat,___ftmul@f1
  2735  001C10  0009               	tblrd		*+
  2736  001C12  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2737  001C16  000A               	tblrd		*-
  2738  001C18  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2739  001C1C  EC54  F011         	call	___ftmul	;wreg free
  2740  001C20  C01C  F031         	movff	?___ftmul,_fround$1317
  2741  001C24  C01D  F032         	movff	?___ftmul+1,_fround$1317+1
  2742  001C28  C01E  F033         	movff	?___ftmul+2,_fround$1317+2
  2743                           
  2744                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2745  001C2C  0E00               	movlw	0
  2746  001C2E  6E12               	movwf	___wmul@multiplicand+1,c
  2747  001C30  0E03               	movlw	3
  2748  001C32  6E11               	movwf	___wmul@multiplicand,c
  2749  001C34  0E00               	movlw	0
  2750  001C36  6E04               	movwf	___awmod@divisor+1,c
  2751  001C38  0E0A               	movlw	10
  2752  001C3A  6E03               	movwf	___awmod@divisor,c
  2753  001C3C  C034  F001         	movff	fround@prec,___awmod@dividend
  2754  001C40  6A02               	clrf	___awmod@dividend+1,c
  2755  001C42  ECF3  F013         	call	___awmod	;wreg free
  2756  001C46  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2757  001C4A  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2758  001C4E  EC48  F015         	call	___wmul	;wreg free
  2759  001C52  0E29               	movlw	low __npowers_
  2760  001C54  240F               	addwf	?___wmul,w,c
  2761  001C56  6EF6               	movwf	tblptrl,c
  2762  001C58  0E10               	movlw	high __npowers_
  2763  001C5A  2010               	addwfc	?___wmul+1,w,c
  2764  001C5C  6EF7               	movwf	tblptrh,c
  2765  001C5E                     	if	0	;There are less than 3 active tblptr bytes
  2766  001C5E                     	endif
  2767  001C5E  0009               	tblrd		*+
  2768  001C60  CFF5 F01F          	movff	tablat,___ftmul@f2
  2769  001C64  0009               	tblrd		*+
  2770  001C66  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2771  001C6A  000A               	tblrd		*-
  2772  001C6C  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2773  001C70  C031  F01C         	movff	_fround$1317,___ftmul@f1
  2774  001C74  C032  F01D         	movff	_fround$1317+1,___ftmul@f1+1
  2775  001C78  C033  F01E         	movff	_fround$1317+2,___ftmul@f1+2
  2776  001C7C  EC54  F011         	call	___ftmul	;wreg free
  2777  001C80  C01C  F02E         	movff	?___ftmul,_fround$1318
  2778  001C84  C01D  F02F         	movff	?___ftmul+1,_fround$1318+1
  2779  001C88  C01E  F030         	movff	?___ftmul+2,_fround$1318+2
  2780                           
  2781                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2782  001C8C  C02E  F01C         	movff	_fround$1318,___ftmul@f1
  2783  001C90  C02F  F01D         	movff	_fround$1318+1,___ftmul@f1+1
  2784  001C94  C030  F01E         	movff	_fround$1318+2,___ftmul@f1+2
  2785  001C98  0E00               	movlw	0
  2786  001C9A  6E1F               	movwf	___ftmul@f2,c
  2787  001C9C  0E00               	movlw	0
  2788  001C9E  6E20               	movwf	___ftmul@f2+1,c
  2789  001CA0  0E3F               	movlw	63
  2790  001CA2  6E21               	movwf	___ftmul@f2+2,c
  2791  001CA4  EC54  F011         	call	___ftmul	;wreg free
  2792  001CA8  D07D               	goto	L7
  2793  001CAA  D083               	goto	l107
  2794  001CAC  D062               	goto	l2084
  2795  001CAE                     l2076:
  2796                           
  2797                           ;doprnt.c: 415: else if(prec > 10)
  2798  001CAE  0E0A               	movlw	10
  2799  001CB0  6434               	cpfsgt	fround@prec,c
  2800  001CB2  D05F               	goto	l2084
  2801                           
  2802                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2803  001CB4  0E00               	movlw	0
  2804  001CB6  6E12               	movwf	___wmul@multiplicand+1,c
  2805  001CB8  0E03               	movlw	3
  2806  001CBA  6E11               	movwf	___wmul@multiplicand,c
  2807  001CBC  0E00               	movlw	0
  2808  001CBE  6E04               	movwf	___awmod@divisor+1,c
  2809  001CC0  0E0A               	movlw	10
  2810  001CC2  6E03               	movwf	___awmod@divisor,c
  2811  001CC4  C034  F001         	movff	fround@prec,___awmod@dividend
  2812  001CC8  6A02               	clrf	___awmod@dividend+1,c
  2813  001CCA  ECF3  F013         	call	___awmod	;wreg free
  2814  001CCE  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2815  001CD2  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2816  001CD6  EC48  F015         	call	___wmul	;wreg free
  2817  001CDA  0E29               	movlw	low __npowers_
  2818  001CDC  240F               	addwf	?___wmul,w,c
  2819  001CDE  6EF6               	movwf	tblptrl,c
  2820  001CE0  0E10               	movlw	high __npowers_
  2821  001CE2  2010               	addwfc	?___wmul+1,w,c
  2822  001CE4  6EF7               	movwf	tblptrh,c
  2823  001CE6                     	if	0	;There are less than 3 active tblptr bytes
  2824  001CE6                     	endif
  2825  001CE6  0009               	tblrd		*+
  2826  001CE8  CFF5 F01F          	movff	tablat,___ftmul@f2
  2827  001CEC  0009               	tblrd		*+
  2828  001CEE  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2829  001CF2  000A               	tblrd		*-
  2830  001CF4  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2831  001CF8  0E00               	movlw	0
  2832  001CFA  6E0A               	movwf	___awdiv@divisor+1,c
  2833  001CFC  0E0A               	movlw	10
  2834  001CFE  6E09               	movwf	___awdiv@divisor,c
  2835  001D00  C034  F007         	movff	fround@prec,___awdiv@dividend
  2836  001D04  6A08               	clrf	___awdiv@dividend+1,c
  2837  001D06  EC17  F013         	call	___awdiv	;wreg free
  2838  001D0A  0E09               	movlw	9
  2839  001D0C  2407               	addwf	?___awdiv,w,c
  2840  001D0E  6E0F               	movwf	___wmul@multiplier,c
  2841  001D10  0E00               	movlw	0
  2842  001D12  2008               	addwfc	?___awdiv+1,w,c
  2843  001D14  6E10               	movwf	___wmul@multiplier+1,c
  2844  001D16  0E00               	movlw	0
  2845  001D18  6E12               	movwf	___wmul@multiplicand+1,c
  2846  001D1A  0E03               	movlw	3
  2847  001D1C  6E11               	movwf	___wmul@multiplicand,c
  2848  001D1E  EC48  F015         	call	___wmul	;wreg free
  2849  001D22  0E29               	movlw	low __npowers_
  2850  001D24  240F               	addwf	?___wmul,w,c
  2851  001D26  6EF6               	movwf	tblptrl,c
  2852  001D28  0E10               	movlw	high __npowers_
  2853  001D2A  2010               	addwfc	?___wmul+1,w,c
  2854  001D2C  6EF7               	movwf	tblptrh,c
  2855  001D2E                     	if	0	;There are less than 3 active tblptr bytes
  2856  001D2E                     	endif
  2857  001D2E  0009               	tblrd		*+
  2858  001D30  CFF5 F01C          	movff	tablat,___ftmul@f1
  2859  001D34  0009               	tblrd		*+
  2860  001D36  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2861  001D3A  000A               	tblrd		*-
  2862  001D3C  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2863  001D40  EC54  F011         	call	___ftmul	;wreg free
  2864  001D44  C01C  F031         	movff	?___ftmul,_fround$1317
  2865  001D48  C01D  F032         	movff	?___ftmul+1,_fround$1317+1
  2866  001D4C  C01E  F033         	movff	?___ftmul+2,_fround$1317+2
  2867                           
  2868                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2869  001D50  C031  F01C         	movff	_fround$1317,___ftmul@f1
  2870  001D54  C032  F01D         	movff	_fround$1317+1,___ftmul@f1+1
  2871  001D58  C033  F01E         	movff	_fround$1317+2,___ftmul@f1+2
  2872  001D5C  0E00               	movlw	0
  2873  001D5E  6E1F               	movwf	___ftmul@f2,c
  2874  001D60  0E00               	movlw	0
  2875  001D62  6E20               	movwf	___ftmul@f2+1,c
  2876  001D64  0E3F               	movlw	63
  2877  001D66  6E21               	movwf	___ftmul@f2+2,c
  2878  001D68  EC54  F011         	call	___ftmul	;wreg free
  2879  001D6C  D01B               	goto	L7
  2880  001D6E  D021               	goto	l107
  2881  001D70  D000               	goto	l2084
  2882  001D72                     l2084:
  2883                           
  2884                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  2885  001D72  5034               	movf	fround@prec,w,c
  2886  001D74  0D03               	mullw	3
  2887  001D76  0E29               	movlw	low __npowers_
  2888  001D78  24F3               	addwf	prodl,w,c
  2889  001D7A  6EF6               	movwf	tblptrl,c
  2890  001D7C  0E10               	movlw	high __npowers_
  2891  001D7E  20F4               	addwfc	prodh,w,c
  2892  001D80  6EF7               	movwf	tblptrh,c
  2893  001D82                     	if	0	;There are less than 3 active tblptr bytes
  2894  001D82                     	endif
  2895  001D82  0009               	tblrd		*+
  2896  001D84  CFF5 F01C          	movff	tablat,___ftmul@f1
  2897  001D88  0009               	tblrd		*+
  2898  001D8A  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2899  001D8E  000A               	tblrd		*-
  2900  001D90  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2901  001D94  0E00               	movlw	0
  2902  001D96  6E1F               	movwf	___ftmul@f2,c
  2903  001D98  0E00               	movlw	0
  2904  001D9A  6E20               	movwf	___ftmul@f2+1,c
  2905  001D9C  0E3F               	movlw	63
  2906  001D9E  6E21               	movwf	___ftmul@f2+2,c
  2907  001DA0  EC54  F011         	call	___ftmul	;wreg free
  2908  001DA4                     L7:
  2909  001DA4  C01C  F02B         	movff	?___ftmul,?_fround
  2910  001DA8  C01D  F02C         	movff	?___ftmul+1,?_fround+1
  2911  001DAC  C01E  F02D         	movff	?___ftmul+2,?_fround+2
  2912  001DB0  D000               	goto	l107
  2913  001DB2                     l107:
  2914  001DB2  0012               	return		;funcret
  2915  001DB4                     __end_of_fround:
  2916                           	opt stack 0
  2917                           tblptru	equ	0xFF8
  2918                           tblptrh	equ	0xFF7
  2919                           tblptrl	equ	0xFF6
  2920                           tablat	equ	0xFF5
  2921                           prodh	equ	0xFF4
  2922                           prodl	equ	0xFF3
  2923                           postinc0	equ	0xFEE
  2924                           wreg	equ	0xFE8
  2925                           postdec1	equ	0xFE5
  2926                           fsr1l	equ	0xFE1
  2927                           postinc2	equ	0xFDE
  2928                           postdec2	equ	0xFDD
  2929                           fsr2h	equ	0xFDA
  2930                           fsr2l	equ	0xFD9
  2931                           status	equ	0xFD8
  2932                           
  2933 ;; *************** function ___wmul *****************
  2934 ;; Defined at:
  2935 ;;		line 15 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\Umul16.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;  multiplier      2   14[COMRAM] unsigned int 
  2938 ;;  multiplicand    2   16[COMRAM] unsigned int 
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  product         2   18[COMRAM] unsigned int 
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  2   14[COMRAM] unsigned int 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2, status,0, prodl, prodh
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2950 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2951 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2953 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2954 ;;Total ram usage:        6 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_fround
  2960 ;;		_scale
  2961 ;;		_printf
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           	psect	text6
  2966  002A90                     __ptext6:
  2967                           	opt stack 0
  2968  002A90                     ___wmul:
  2969                           	opt stack 28
  2970                           
  2971                           ;incstack = 0
  2972  002A90  500F               	movf	___wmul@multiplier,w,c
  2973  002A92  0211               	mulwf	___wmul@multiplicand,c
  2974  002A94  CFF3 F013          	movff	prodl,___wmul@product
  2975  002A98  CFF4 F014          	movff	prodh,___wmul@product+1
  2976  002A9C  500F               	movf	___wmul@multiplier,w,c
  2977  002A9E  0212               	mulwf	___wmul@multiplicand+1,c
  2978  002AA0  50F3               	movf	prodl,w,c
  2979  002AA2  2614               	addwf	___wmul@product+1,f,c
  2980  002AA4  5010               	movf	___wmul@multiplier+1,w,c
  2981  002AA6  0211               	mulwf	___wmul@multiplicand,c
  2982  002AA8  50F3               	movf	prodl,w,c
  2983  002AAA  2614               	addwf	___wmul@product+1,f,c
  2984  002AAC  C013  F00F         	movff	___wmul@product,?___wmul
  2985  002AB0  C014  F010         	movff	___wmul@product+1,?___wmul+1
  2986  002AB4  D000               	goto	l216
  2987  002AB6                     l216:
  2988  002AB6  0012               	return		;funcret
  2989  002AB8                     __end_of___wmul:
  2990                           	opt stack 0
  2991                           tblptru	equ	0xFF8
  2992                           tblptrh	equ	0xFF7
  2993                           tblptrl	equ	0xFF6
  2994                           tablat	equ	0xFF5
  2995                           prodh	equ	0xFF4
  2996                           prodl	equ	0xFF3
  2997                           postinc0	equ	0xFEE
  2998                           wreg	equ	0xFE8
  2999                           postdec1	equ	0xFE5
  3000                           fsr1l	equ	0xFE1
  3001                           postinc2	equ	0xFDE
  3002                           postdec2	equ	0xFDD
  3003                           fsr2h	equ	0xFDA
  3004                           fsr2l	equ	0xFD9
  3005                           status	equ	0xFD8
  3006                           
  3007 ;; *************** function ___ftmul *****************
  3008 ;; Defined at:
  3009 ;;		line 62 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftmul.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  f1              3   27[COMRAM] float 
  3012 ;;  f2              3   30[COMRAM] float 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  f3_as_produc    3   37[COMRAM] unsigned um
  3015 ;;  sign            1   41[COMRAM] unsigned char 
  3016 ;;  cntr            1   40[COMRAM] unsigned char 
  3017 ;;  exp             1   36[COMRAM] unsigned char 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  3   27[COMRAM] float 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2, status,0, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3027 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;Total ram usage:       15 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:    1
  3034 ;; This function calls:
  3035 ;;		___ftpack
  3036 ;; This function is called by:
  3037 ;;		_main
  3038 ;;		_fround
  3039 ;;		_scale
  3040 ;;		_printf
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           	psect	text7
  3045  0022A8                     __ptext7:
  3046                           	opt stack 0
  3047  0022A8                     ___ftmul:
  3048                           	opt stack 27
  3049                           
  3050                           ;incstack = 0
  3051  0022A8  C01E  F022         	movff	___ftmul@f1+2,??___ftmul
  3052  0022AC  6A23               	clrf	(??___ftmul+1)& (0+255),c
  3053  0022AE  6A24               	clrf	(??___ftmul+2)& (0+255),c
  3054  0022B0  341D               	rlcf	___ftmul@f1+1,w,c
  3055  0022B2  3622               	rlcf	??___ftmul& (0+255),f,c
  3056  0022B4  E301               	bnc	u1761
  3057  0022B6  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  3058  0022B8                     u1761:
  3059  0022B8  5022               	movf	??___ftmul,w,c
  3060  0022BA  6E25               	movwf	___ftmul@exp,c
  3061  0022BC  5025               	movf	___ftmul@exp,w,c
  3062  0022BE  A4D8               	btfss	status,2,c
  3063  0022C0  D002               	goto	l1890
  3064  0022C2  D00E               	goto	l1892
  3065  0022C4  D06C               	goto	l645
  3066  0022C6                     l1890:
  3067  0022C6  C021  F022         	movff	___ftmul@f2+2,??___ftmul
  3068  0022CA  6A23               	clrf	(??___ftmul+1)& (0+255),c
  3069  0022CC  6A24               	clrf	(??___ftmul+2)& (0+255),c
  3070  0022CE  3420               	rlcf	___ftmul@f2+1,w,c
  3071  0022D0  3622               	rlcf	??___ftmul& (0+255),f,c
  3072  0022D2  E301               	bnc	u1781
  3073  0022D4  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  3074  0022D6                     u1781:
  3075  0022D6  5022               	movf	??___ftmul,w,c
  3076  0022D8  6E2A               	movwf	___ftmul@sign,c
  3077  0022DA  502A               	movf	___ftmul@sign,w,c
  3078  0022DC  A4D8               	btfss	status,2,c
  3079  0022DE  D007               	goto	l1896
  3080  0022E0                     l1892:
  3081  0022E0  0E00               	movlw	0
  3082  0022E2  6E1C               	movwf	?___ftmul,c
  3083  0022E4  0E00               	movlw	0
  3084  0022E6  6E1D               	movwf	?___ftmul+1,c
  3085  0022E8  0E00               	movlw	0
  3086  0022EA  6E1E               	movwf	?___ftmul+2,c
  3087  0022EC  D058               	goto	l645
  3088  0022EE                     l1896:
  3089  0022EE  502A               	movf	___ftmul@sign,w,c
  3090  0022F0  0F7B               	addlw	123
  3091  0022F2  2625               	addwf	___ftmul@exp,f,c
  3092  0022F4  C01E  F02A         	movff	___ftmul@f1+2,___ftmul@sign
  3093  0022F8  5021               	movf	___ftmul@f2+2,w,c
  3094  0022FA  1A2A               	xorwf	___ftmul@sign,f,c
  3095  0022FC  0E80               	movlw	128
  3096  0022FE  162A               	andwf	___ftmul@sign,f,c
  3097  002300  8E1D               	bsf	___ftmul@f1+1,7,c
  3098  002302  8E20               	bsf	___ftmul@f2+1,7,c
  3099  002304  0EFF               	movlw	255
  3100  002306  161F               	andwf	___ftmul@f2,f,c
  3101  002308  0EFF               	movlw	255
  3102  00230A  1620               	andwf	___ftmul@f2+1,f,c
  3103  00230C  0E00               	movlw	0
  3104  00230E  1621               	andwf	___ftmul@f2+2,f,c
  3105  002310  0E00               	movlw	0
  3106  002312  6E26               	movwf	___ftmul@f3_as_product,c
  3107  002314  0E00               	movlw	0
  3108  002316  6E27               	movwf	___ftmul@f3_as_product+1,c
  3109  002318  0E00               	movlw	0
  3110  00231A  6E28               	movwf	___ftmul@f3_as_product+2,c
  3111  00231C  0E07               	movlw	7
  3112  00231E  6E29               	movwf	___ftmul@cntr,c
  3113  002320  D000               	goto	l1910
  3114  002322                     l1910:
  3115  002322  A01C               	btfss	___ftmul@f1,0,c
  3116  002324  D007               	goto	l1914
  3117  002326  501F               	movf	___ftmul@f2,w,c
  3118  002328  2626               	addwf	___ftmul@f3_as_product,f,c
  3119  00232A  5020               	movf	___ftmul@f2+1,w,c
  3120  00232C  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  3121  00232E  5021               	movf	___ftmul@f2+2,w,c
  3122  002330  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  3123  002332  D000               	goto	l1914
  3124  002334                     l1914:
  3125  002334  90D8               	bcf	status,0,c
  3126  002336  321E               	rrcf	___ftmul@f1+2,f,c
  3127  002338  321D               	rrcf	___ftmul@f1+1,f,c
  3128  00233A  321C               	rrcf	___ftmul@f1,f,c
  3129  00233C  90D8               	bcf	status,0,c
  3130  00233E  361F               	rlcf	___ftmul@f2,f,c
  3131  002340  3620               	rlcf	___ftmul@f2+1,f,c
  3132  002342  3621               	rlcf	___ftmul@f2+2,f,c
  3133  002344  2E29               	decfsz	___ftmul@cntr,f,c
  3134  002346  D7ED               	goto	l1910
  3135  002348  D000               	goto	l1918
  3136  00234A                     l1918:
  3137  00234A  0E09               	movlw	9
  3138  00234C  6E29               	movwf	___ftmul@cntr,c
  3139  00234E  D000               	goto	l1920
  3140  002350                     l1920:
  3141  002350  A01C               	btfss	___ftmul@f1,0,c
  3142  002352  D007               	goto	l1924
  3143  002354  501F               	movf	___ftmul@f2,w,c
  3144  002356  2626               	addwf	___ftmul@f3_as_product,f,c
  3145  002358  5020               	movf	___ftmul@f2+1,w,c
  3146  00235A  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  3147  00235C  5021               	movf	___ftmul@f2+2,w,c
  3148  00235E  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  3149  002360  D000               	goto	l1924
  3150  002362                     l1924:
  3151  002362  90D8               	bcf	status,0,c
  3152  002364  321E               	rrcf	___ftmul@f1+2,f,c
  3153  002366  321D               	rrcf	___ftmul@f1+1,f,c
  3154  002368  321C               	rrcf	___ftmul@f1,f,c
  3155  00236A  90D8               	bcf	status,0,c
  3156  00236C  3228               	rrcf	___ftmul@f3_as_product+2,f,c
  3157  00236E  3227               	rrcf	___ftmul@f3_as_product+1,f,c
  3158  002370  3226               	rrcf	___ftmul@f3_as_product,f,c
  3159  002372  2E29               	decfsz	___ftmul@cntr,f,c
  3160  002374  D7ED               	goto	l1920
  3161  002376  D000               	goto	l1928
  3162  002378                     l1928:
  3163  002378  C026  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3164  00237C  C027  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3165  002380  C028  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3166  002384  C025  F004         	movff	___ftmul@exp,___ftpack@exp
  3167  002388  C02A  F005         	movff	___ftmul@sign,___ftpack@sign
  3168  00238C  ECB4  F012         	call	___ftpack	;wreg free
  3169  002390  C001  F01C         	movff	?___ftpack,?___ftmul
  3170  002394  C002  F01D         	movff	?___ftpack+1,?___ftmul+1
  3171  002398  C003  F01E         	movff	?___ftpack+2,?___ftmul+2
  3172  00239C  D000               	goto	l645
  3173  00239E                     l645:
  3174  00239E  0012               	return		;funcret
  3175  0023A0                     __end_of___ftmul:
  3176                           	opt stack 0
  3177                           tblptru	equ	0xFF8
  3178                           tblptrh	equ	0xFF7
  3179                           tblptrl	equ	0xFF6
  3180                           tablat	equ	0xFF5
  3181                           prodh	equ	0xFF4
  3182                           prodl	equ	0xFF3
  3183                           postinc0	equ	0xFEE
  3184                           wreg	equ	0xFE8
  3185                           postdec1	equ	0xFE5
  3186                           fsr1l	equ	0xFE1
  3187                           postinc2	equ	0xFDE
  3188                           postdec2	equ	0xFDD
  3189                           fsr2h	equ	0xFDA
  3190                           fsr2l	equ	0xFD9
  3191                           status	equ	0xFD8
  3192                           
  3193 ;; *************** function ___awmod *****************
  3194 ;; Defined at:
  3195 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\awmod.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  dividend        2    0[COMRAM] int 
  3198 ;;  divisor         2    2[COMRAM] int 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  sign            1    5[COMRAM] unsigned char 
  3201 ;;  counter         1    4[COMRAM] unsigned char 
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  2    0[COMRAM] int 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3211 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;Total ram usage:        6 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_fround
  3221 ;;		_scale
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           	psect	text8
  3226  0027E6                     __ptext8:
  3227                           	opt stack 0
  3228  0027E6                     ___awmod:
  3229                           	opt stack 28
  3230                           
  3231                           ;incstack = 0
  3232  0027E6  0E00               	movlw	0
  3233  0027E8  6E06               	movwf	___awmod@sign,c
  3234  0027EA  AE02               	btfss	___awmod@dividend+1,7,c
  3235  0027EC  D007               	goto	l1984
  3236  0027EE  6C01               	negf	___awmod@dividend,c
  3237  0027F0  1E02               	comf	___awmod@dividend+1,f,c
  3238  0027F2  B0D8               	btfsc	status,0,c
  3239  0027F4  2A02               	incf	___awmod@dividend+1,f,c
  3240  0027F6  0E01               	movlw	1
  3241  0027F8  6E06               	movwf	___awmod@sign,c
  3242  0027FA  D000               	goto	l1984
  3243  0027FC                     l1984:
  3244  0027FC  AE04               	btfss	___awmod@divisor+1,7,c
  3245  0027FE  D005               	goto	l1988
  3246  002800  6C03               	negf	___awmod@divisor,c
  3247  002802  1E04               	comf	___awmod@divisor+1,f,c
  3248  002804  B0D8               	btfsc	status,0,c
  3249  002806  2A04               	incf	___awmod@divisor+1,f,c
  3250  002808  D000               	goto	l1988
  3251  00280A                     l1988:
  3252  00280A  5003               	movf	___awmod@divisor,w,c
  3253  00280C  1004               	iorwf	___awmod@divisor+1,w,c
  3254  00280E  B4D8               	btfsc	status,2,c
  3255  002810  D01D               	goto	l2004
  3256  002812  0E01               	movlw	1
  3257  002814  6E05               	movwf	___awmod@counter,c
  3258  002816  D005               	goto	l1994
  3259  002818                     l1992:
  3260  002818  90D8               	bcf	status,0,c
  3261  00281A  3603               	rlcf	___awmod@divisor,f,c
  3262  00281C  3604               	rlcf	___awmod@divisor+1,f,c
  3263  00281E  2A05               	incf	___awmod@counter,f,c
  3264  002820  D000               	goto	l1994
  3265  002822                     l1994:
  3266  002822  BE04               	btfsc	___awmod@divisor+1,7,c
  3267  002824  D002               	goto	l1996
  3268  002826  D7F8               	goto	l1992
  3269  002828  D000               	goto	l1996
  3270  00282A                     l1996:
  3271  00282A  5003               	movf	___awmod@divisor,w,c
  3272  00282C  5C01               	subwf	___awmod@dividend,w,c
  3273  00282E  5004               	movf	___awmod@divisor+1,w,c
  3274  002830  5802               	subwfb	___awmod@dividend+1,w,c
  3275  002832  A0D8               	btfss	status,0,c
  3276  002834  D005               	goto	l2000
  3277  002836  5003               	movf	___awmod@divisor,w,c
  3278  002838  5E01               	subwf	___awmod@dividend,f,c
  3279  00283A  5004               	movf	___awmod@divisor+1,w,c
  3280  00283C  5A02               	subwfb	___awmod@dividend+1,f,c
  3281  00283E  D000               	goto	l2000
  3282  002840                     l2000:
  3283  002840  90D8               	bcf	status,0,c
  3284  002842  3204               	rrcf	___awmod@divisor+1,f,c
  3285  002844  3203               	rrcf	___awmod@divisor,f,c
  3286  002846  2E05               	decfsz	___awmod@counter,f,c
  3287  002848  D7F0               	goto	l1996
  3288  00284A  D000               	goto	l2004
  3289  00284C                     l2004:
  3290  00284C  5006               	movf	___awmod@sign,w,c
  3291  00284E  B4D8               	btfsc	status,2,c
  3292  002850  D005               	goto	l2008
  3293  002852  6C01               	negf	___awmod@dividend,c
  3294  002854  1E02               	comf	___awmod@dividend+1,f,c
  3295  002856  B0D8               	btfsc	status,0,c
  3296  002858  2A02               	incf	___awmod@dividend+1,f,c
  3297  00285A  D000               	goto	l2008
  3298  00285C                     l2008:
  3299  00285C  C001  F001         	movff	___awmod@dividend,?___awmod
  3300  002860  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3301  002864  D000               	goto	l422
  3302  002866                     l422:
  3303  002866  0012               	return		;funcret
  3304  002868                     __end_of___awmod:
  3305                           	opt stack 0
  3306                           tblptru	equ	0xFF8
  3307                           tblptrh	equ	0xFF7
  3308                           tblptrl	equ	0xFF6
  3309                           tablat	equ	0xFF5
  3310                           prodh	equ	0xFF4
  3311                           prodl	equ	0xFF3
  3312                           postinc0	equ	0xFEE
  3313                           wreg	equ	0xFE8
  3314                           postdec1	equ	0xFE5
  3315                           fsr1l	equ	0xFE1
  3316                           postinc2	equ	0xFDE
  3317                           postdec2	equ	0xFDD
  3318                           fsr2h	equ	0xFDA
  3319                           fsr2l	equ	0xFD9
  3320                           status	equ	0xFD8
  3321                           
  3322 ;; *************** function ___awdiv *****************
  3323 ;; Defined at:
  3324 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  dividend        2    6[COMRAM] int 
  3327 ;;  divisor         2    8[COMRAM] int 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;  quotient        2   12[COMRAM] int 
  3330 ;;  sign            1   11[COMRAM] unsigned char 
  3331 ;;  counter         1   10[COMRAM] unsigned char 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  2    6[COMRAM] int 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, status,0
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3341 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3345 ;;Total ram usage:        8 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_fround
  3351 ;;		_scale
  3352 ;;		_printf
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           	psect	text9
  3357  00262E                     __ptext9:
  3358                           	opt stack 0
  3359  00262E                     ___awdiv:
  3360                           	opt stack 28
  3361                           
  3362                           ;incstack = 0
  3363  00262E  0E00               	movlw	0
  3364  002630  6E0C               	movwf	___awdiv@sign,c
  3365  002632  AE0A               	btfss	___awdiv@divisor+1,7,c
  3366  002634  D007               	goto	l1940
  3367  002636  6C09               	negf	___awdiv@divisor,c
  3368  002638  1E0A               	comf	___awdiv@divisor+1,f,c
  3369  00263A  B0D8               	btfsc	status,0,c
  3370  00263C  2A0A               	incf	___awdiv@divisor+1,f,c
  3371  00263E  0E01               	movlw	1
  3372  002640  6E0C               	movwf	___awdiv@sign,c
  3373  002642  D000               	goto	l1940
  3374  002644                     l1940:
  3375  002644  AE08               	btfss	___awdiv@dividend+1,7,c
  3376  002646  D007               	goto	l1946
  3377  002648  6C07               	negf	___awdiv@dividend,c
  3378  00264A  1E08               	comf	___awdiv@dividend+1,f,c
  3379  00264C  B0D8               	btfsc	status,0,c
  3380  00264E  2A08               	incf	___awdiv@dividend+1,f,c
  3381  002650  0E01               	movlw	1
  3382  002652  1A0C               	xorwf	___awdiv@sign,f,c
  3383  002654  D000               	goto	l1946
  3384  002656                     l1946:
  3385  002656  0E00               	movlw	0
  3386  002658  6E0E               	movwf	___awdiv@quotient+1,c
  3387  00265A  0E00               	movlw	0
  3388  00265C  6E0D               	movwf	___awdiv@quotient,c
  3389  00265E  5009               	movf	___awdiv@divisor,w,c
  3390  002660  100A               	iorwf	___awdiv@divisor+1,w,c
  3391  002662  B4D8               	btfsc	status,2,c
  3392  002664  D021               	goto	l1968
  3393  002666  0E01               	movlw	1
  3394  002668  6E0B               	movwf	___awdiv@counter,c
  3395  00266A  D005               	goto	l1954
  3396  00266C                     l1952:
  3397  00266C  90D8               	bcf	status,0,c
  3398  00266E  3609               	rlcf	___awdiv@divisor,f,c
  3399  002670  360A               	rlcf	___awdiv@divisor+1,f,c
  3400  002672  2A0B               	incf	___awdiv@counter,f,c
  3401  002674  D000               	goto	l1954
  3402  002676                     l1954:
  3403  002676  BE0A               	btfsc	___awdiv@divisor+1,7,c
  3404  002678  D002               	goto	l1956
  3405  00267A  D7F8               	goto	l1952
  3406  00267C  D000               	goto	l1956
  3407  00267E                     l1956:
  3408  00267E  90D8               	bcf	status,0,c
  3409  002680  360D               	rlcf	___awdiv@quotient,f,c
  3410  002682  360E               	rlcf	___awdiv@quotient+1,f,c
  3411  002684  5009               	movf	___awdiv@divisor,w,c
  3412  002686  5C07               	subwf	___awdiv@dividend,w,c
  3413  002688  500A               	movf	___awdiv@divisor+1,w,c
  3414  00268A  5808               	subwfb	___awdiv@dividend+1,w,c
  3415  00268C  A0D8               	btfss	status,0,c
  3416  00268E  D006               	goto	l1964
  3417  002690  5009               	movf	___awdiv@divisor,w,c
  3418  002692  5E07               	subwf	___awdiv@dividend,f,c
  3419  002694  500A               	movf	___awdiv@divisor+1,w,c
  3420  002696  5A08               	subwfb	___awdiv@dividend+1,f,c
  3421  002698  800D               	bsf	___awdiv@quotient,0,c
  3422  00269A  D000               	goto	l1964
  3423  00269C                     l1964:
  3424  00269C  90D8               	bcf	status,0,c
  3425  00269E  320A               	rrcf	___awdiv@divisor+1,f,c
  3426  0026A0  3209               	rrcf	___awdiv@divisor,f,c
  3427  0026A2  2E0B               	decfsz	___awdiv@counter,f,c
  3428  0026A4  D7EC               	goto	l1956
  3429  0026A6  D000               	goto	l1968
  3430  0026A8                     l1968:
  3431  0026A8  500C               	movf	___awdiv@sign,w,c
  3432  0026AA  B4D8               	btfsc	status,2,c
  3433  0026AC  D005               	goto	l1972
  3434  0026AE  6C0D               	negf	___awdiv@quotient,c
  3435  0026B0  1E0E               	comf	___awdiv@quotient+1,f,c
  3436  0026B2  B0D8               	btfsc	status,0,c
  3437  0026B4  2A0E               	incf	___awdiv@quotient+1,f,c
  3438  0026B6  D000               	goto	l1972
  3439  0026B8                     l1972:
  3440  0026B8  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3441  0026BC  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3442  0026C0  D000               	goto	l409
  3443  0026C2                     l409:
  3444  0026C2  0012               	return		;funcret
  3445  0026C4                     __end_of___awdiv:
  3446                           	opt stack 0
  3447                           tblptru	equ	0xFF8
  3448                           tblptrh	equ	0xFF7
  3449                           tblptrl	equ	0xFF6
  3450                           tablat	equ	0xFF5
  3451                           prodh	equ	0xFF4
  3452                           prodl	equ	0xFF3
  3453                           postinc0	equ	0xFEE
  3454                           wreg	equ	0xFE8
  3455                           postdec1	equ	0xFE5
  3456                           fsr1l	equ	0xFE1
  3457                           postinc2	equ	0xFDE
  3458                           postdec2	equ	0xFDD
  3459                           fsr2h	equ	0xFDA
  3460                           fsr2l	equ	0xFD9
  3461                           status	equ	0xFD8
  3462                           
  3463 ;; *************** function __tdiv_to_l_ *****************
  3464 ;; Defined at:
  3465 ;;		line 60 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftdivl.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;  f1              3    0[COMRAM] float 
  3468 ;;  f2              3    3[COMRAM] float 
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;  quot            4    9[COMRAM] unsigned long 
  3471 ;;  exp1            1   14[COMRAM] unsigned char 
  3472 ;;  cntr            1   13[COMRAM] unsigned char 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  4    0[COMRAM] unsigned long 
  3475 ;; Registers used:
  3476 ;;		wreg, status,2, status,0
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3482 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;Total ram usage:       15 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; This function calls:
  3489 ;;		Nothing
  3490 ;; This function is called by:
  3491 ;;		_printf
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text10
  3496  00208E                     __ptext10:
  3497                           	opt stack 0
  3498  00208E                     __tdiv_to_l_:
  3499                           	opt stack 29
  3500                           
  3501                           ;incstack = 0
  3502  00208E  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3503  002092  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3504  002094  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3505  002096  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3506  002098  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3507  00209A  E301               	bnc	u2141
  3508  00209C  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3509  00209E                     u2141:
  3510  00209E  5007               	movf	??__tdiv_to_l_,w,c
  3511  0020A0  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3512  0020A2  500F               	movf	__tdiv_to_l_@exp1,w,c
  3513  0020A4  A4D8               	btfss	status,2,c
  3514  0020A6  D002               	goto	l2144
  3515  0020A8  D05D               	goto	l2186
  3516  0020AA  D078               	goto	l621
  3517  0020AC                     l2144:
  3518  0020AC  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3519  0020B0  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3520  0020B2  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3521  0020B4  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3522  0020B6  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3523  0020B8  E301               	bnc	u2161
  3524  0020BA  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3525  0020BC                     u2161:
  3526  0020BC  5007               	movf	??__tdiv_to_l_,w,c
  3527  0020BE  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3528  0020C0  500E               	movf	__tdiv_to_l_@cntr,w,c
  3529  0020C2  A4D8               	btfss	status,2,c
  3530  0020C4  D002               	goto	l2150
  3531  0020C6  D04E               	goto	l2186
  3532  0020C8  D069               	goto	l621
  3533  0020CA                     l2150:
  3534  0020CA  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3535  0020CC  0EFF               	movlw	255
  3536  0020CE  1601               	andwf	__tdiv_to_l_@f1,f,c
  3537  0020D0  0EFF               	movlw	255
  3538  0020D2  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3539  0020D4  0E00               	movlw	0
  3540  0020D6  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3541  0020D8  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3542  0020DA  0EFF               	movlw	255
  3543  0020DC  1604               	andwf	__tdiv_to_l_@f2,f,c
  3544  0020DE  0EFF               	movlw	255
  3545  0020E0  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3546  0020E2  0E00               	movlw	0
  3547  0020E4  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3548  0020E6  0E00               	movlw	0
  3549  0020E8  6E0A               	movwf	__tdiv_to_l_@quot,c
  3550  0020EA  0E00               	movlw	0
  3551  0020EC  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  3552  0020EE  0E00               	movlw	0
  3553  0020F0  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  3554  0020F2  0E00               	movlw	0
  3555  0020F4  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  3556  0020F6  0E7F               	movlw	127
  3557  0020F8  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3558  0020FA  500E               	movf	__tdiv_to_l_@cntr,w,c
  3559  0020FC  0F98               	addlw	152
  3560  0020FE  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3561  002100  0E18               	movlw	24
  3562  002102  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3563  002104                     l623:
  3564  002104  90D8               	bcf	status,0,c
  3565  002106  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3566  002108  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3567  00210A  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3568  00210C  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3569  00210E  5004               	movf	__tdiv_to_l_@f2,w,c
  3570  002110  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3571  002112  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3572  002114  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3573  002116  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3574  002118  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3575  00211A  A0D8               	btfss	status,0,c
  3576  00211C  D007               	goto	l624
  3577  00211E  5004               	movf	__tdiv_to_l_@f2,w,c
  3578  002120  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3579  002122  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3580  002124  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3581  002126  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3582  002128  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3583  00212A  800A               	bsf	__tdiv_to_l_@quot,0,c
  3584  00212C                     l624:
  3585  00212C  90D8               	bcf	status,0,c
  3586  00212E  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3587  002130  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3588  002132  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3589  002134  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  3590  002136  D7E6               	goto	l623
  3591  002138  D000               	goto	l2172
  3592  00213A                     l2172:
  3593  00213A  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  3594  00213C  D010               	goto	l2184
  3595  00213E  500F               	movf	__tdiv_to_l_@exp1,w,c
  3596  002140  0A80               	xorlw	128
  3597  002142  0F97               	addlw	151
  3598  002144  B0D8               	btfsc	status,0,c
  3599  002146  D003               	goto	l2180
  3600  002148  D00D               	goto	l2186
  3601  00214A  D028               	goto	l621
  3602  00214C  D000               	goto	l2180
  3603  00214E                     l2180:
  3604  00214E  90D8               	bcf	status,0,c
  3605  002150  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  3606  002152  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  3607  002154  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  3608  002156  320A               	rrcf	__tdiv_to_l_@quot,f,c
  3609  002158  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  3610  00215A  D7F9               	goto	l2180
  3611  00215C  D017               	goto	l630
  3612  00215E                     l2184:
  3613  00215E  0E17               	movlw	23
  3614  002160  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  3615  002162  D011               	goto	l2192
  3616  002164                     l2186:
  3617  002164  0E00               	movlw	0
  3618  002166  6E01               	movwf	?__tdiv_to_l_,c
  3619  002168  0E00               	movlw	0
  3620  00216A  6E02               	movwf	?__tdiv_to_l_+1,c
  3621  00216C  0E00               	movlw	0
  3622  00216E  6E03               	movwf	?__tdiv_to_l_+2,c
  3623  002170  0E00               	movlw	0
  3624  002172  6E04               	movwf	?__tdiv_to_l_+3,c
  3625  002174  D013               	goto	l621
  3626  002176  D007               	goto	l2192
  3627  002178                     l2190:
  3628  002178  90D8               	bcf	status,0,c
  3629  00217A  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3630  00217C  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3631  00217E  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3632  002180  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3633  002182  060F               	decf	__tdiv_to_l_@exp1,f,c
  3634  002184  D000               	goto	l2192
  3635  002186                     l2192:
  3636  002186  500F               	movf	__tdiv_to_l_@exp1,w,c
  3637  002188  A4D8               	btfss	status,2,c
  3638  00218A  D7F6               	goto	l2190
  3639  00218C                     l630:
  3640  00218C  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3641  002190  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3642  002194  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3643  002198  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3644  00219C                     l621:
  3645  00219C  0012               	return		;funcret
  3646  00219E                     __end_of__tdiv_to_l_:
  3647                           	opt stack 0
  3648                           tblptru	equ	0xFF8
  3649                           tblptrh	equ	0xFF7
  3650                           tblptrl	equ	0xFF6
  3651                           tablat	equ	0xFF5
  3652                           prodh	equ	0xFF4
  3653                           prodl	equ	0xFF3
  3654                           postinc0	equ	0xFEE
  3655                           wreg	equ	0xFE8
  3656                           postdec1	equ	0xFE5
  3657                           fsr1l	equ	0xFE1
  3658                           postinc2	equ	0xFDE
  3659                           postdec2	equ	0xFDD
  3660                           fsr2h	equ	0xFDA
  3661                           fsr2l	equ	0xFD9
  3662                           status	equ	0xFD8
  3663                           
  3664 ;; *************** function __div_to_l_ *****************
  3665 ;; Defined at:
  3666 ;;		line 60 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\fldivl.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;  f1              3    0[COMRAM] unsigned long 
  3669 ;;  f2              3    3[COMRAM] unsigned long 
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;  quot            4    6[COMRAM] unsigned long 
  3672 ;;  exp1            1   11[COMRAM] unsigned char 
  3673 ;;  cntr            1   10[COMRAM] unsigned char 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  4    0[COMRAM] unsigned long 
  3676 ;; Registers used:
  3677 ;;		wreg, status,2, status,0
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3683 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3684 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;Total ram usage:       12 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; This function calls:
  3690 ;;		Nothing
  3691 ;; This function is called by:
  3692 ;;		_printf
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           	psect	text11
  3697  00219E                     __ptext11:
  3698                           	opt stack 0
  3699  00219E                     __div_to_l_:
  3700                           	opt stack 29
  3701                           
  3702                           ;incstack = 0
  3703  00219E  3403               	rlcf	__div_to_l_@f1+2,w,c
  3704  0021A0  3404               	rlcf	__div_to_l_@f1+3,w,c
  3705  0021A2  6E0C               	movwf	__div_to_l_@exp1,c
  3706  0021A4  500C               	movf	__div_to_l_@exp1,w,c
  3707  0021A6  A4D8               	btfss	status,2,c
  3708  0021A8  D002               	goto	l2200
  3709  0021AA  D061               	goto	l2246
  3710  0021AC  D07C               	goto	l500
  3711  0021AE                     l2200:
  3712  0021AE  3406               	rlcf	__div_to_l_@f2+2,w,c
  3713  0021B0  3407               	rlcf	__div_to_l_@f2+3,w,c
  3714  0021B2  6E0B               	movwf	__div_to_l_@cntr,c
  3715  0021B4  500B               	movf	__div_to_l_@cntr,w,c
  3716  0021B6  A4D8               	btfss	status,2,c
  3717  0021B8  D002               	goto	l2206
  3718  0021BA  D059               	goto	l2246
  3719  0021BC  D074               	goto	l500
  3720  0021BE                     l2206:
  3721  0021BE  8E03               	bsf	__div_to_l_@f1+2,7,c
  3722  0021C0  0EFF               	movlw	255
  3723  0021C2  1601               	andwf	__div_to_l_@f1,f,c
  3724  0021C4  0EFF               	movlw	255
  3725  0021C6  1602               	andwf	__div_to_l_@f1+1,f,c
  3726  0021C8  0EFF               	movlw	255
  3727  0021CA  1603               	andwf	__div_to_l_@f1+2,f,c
  3728  0021CC  0E00               	movlw	0
  3729  0021CE  1604               	andwf	__div_to_l_@f1+3,f,c
  3730  0021D0  8E06               	bsf	__div_to_l_@f2+2,7,c
  3731  0021D2  0EFF               	movlw	255
  3732  0021D4  1604               	andwf	__div_to_l_@f2,f,c
  3733  0021D6  0EFF               	movlw	255
  3734  0021D8  1605               	andwf	__div_to_l_@f2+1,f,c
  3735  0021DA  0EFF               	movlw	255
  3736  0021DC  1606               	andwf	__div_to_l_@f2+2,f,c
  3737  0021DE  0E00               	movlw	0
  3738  0021E0  1607               	andwf	__div_to_l_@f2+3,f,c
  3739  0021E2  0E00               	movlw	0
  3740  0021E4  6E07               	movwf	__div_to_l_@quot,c
  3741  0021E6  0E00               	movlw	0
  3742  0021E8  6E08               	movwf	__div_to_l_@quot+1,c
  3743  0021EA  0E00               	movlw	0
  3744  0021EC  6E09               	movwf	__div_to_l_@quot+2,c
  3745  0021EE  0E00               	movlw	0
  3746  0021F0  6E0A               	movwf	__div_to_l_@quot+3,c
  3747  0021F2  0E7F               	movlw	127
  3748  0021F4  5E0C               	subwf	__div_to_l_@exp1,f,c
  3749  0021F6  500B               	movf	__div_to_l_@cntr,w,c
  3750  0021F8  0FA0               	addlw	160
  3751  0021FA  5E0C               	subwf	__div_to_l_@exp1,f,c
  3752  0021FC  0E20               	movlw	32
  3753  0021FE  6E0B               	movwf	__div_to_l_@cntr,c
  3754  002200  D000               	goto	l2220
  3755  002202                     l2220:
  3756  002202  90D8               	bcf	status,0,c
  3757  002204  3607               	rlcf	__div_to_l_@quot,f,c
  3758  002206  3608               	rlcf	__div_to_l_@quot+1,f,c
  3759  002208  3609               	rlcf	__div_to_l_@quot+2,f,c
  3760  00220A  360A               	rlcf	__div_to_l_@quot+3,f,c
  3761  00220C  5004               	movf	__div_to_l_@f2,w,c
  3762  00220E  5C01               	subwf	__div_to_l_@f1,w,c
  3763  002210  5005               	movf	__div_to_l_@f2+1,w,c
  3764  002212  5802               	subwfb	__div_to_l_@f1+1,w,c
  3765  002214  5006               	movf	__div_to_l_@f2+2,w,c
  3766  002216  5803               	subwfb	__div_to_l_@f1+2,w,c
  3767  002218  5007               	movf	__div_to_l_@f2+3,w,c
  3768  00221A  5804               	subwfb	__div_to_l_@f1+3,w,c
  3769  00221C  A0D8               	btfss	status,0,c
  3770  00221E  D00A               	goto	l2228
  3771  002220  5004               	movf	__div_to_l_@f2,w,c
  3772  002222  5E01               	subwf	__div_to_l_@f1,f,c
  3773  002224  5005               	movf	__div_to_l_@f2+1,w,c
  3774  002226  5A02               	subwfb	__div_to_l_@f1+1,f,c
  3775  002228  5006               	movf	__div_to_l_@f2+2,w,c
  3776  00222A  5A03               	subwfb	__div_to_l_@f1+2,f,c
  3777  00222C  5007               	movf	__div_to_l_@f2+3,w,c
  3778  00222E  5A04               	subwfb	__div_to_l_@f1+3,f,c
  3779  002230  8007               	bsf	__div_to_l_@quot,0,c
  3780  002232  D000               	goto	l2228
  3781  002234                     l2228:
  3782  002234  90D8               	bcf	status,0,c
  3783  002236  3601               	rlcf	__div_to_l_@f1,f,c
  3784  002238  3602               	rlcf	__div_to_l_@f1+1,f,c
  3785  00223A  3603               	rlcf	__div_to_l_@f1+2,f,c
  3786  00223C  3604               	rlcf	__div_to_l_@f1+3,f,c
  3787  00223E  2E0B               	decfsz	__div_to_l_@cntr,f,c
  3788  002240  D7E0               	goto	l2220
  3789  002242  D000               	goto	l2232
  3790  002244                     l2232:
  3791  002244  AE0C               	btfss	__div_to_l_@exp1,7,c
  3792  002246  D010               	goto	l2244
  3793  002248  500C               	movf	__div_to_l_@exp1,w,c
  3794  00224A  0A80               	xorlw	128
  3795  00224C  0F9F               	addlw	159
  3796  00224E  B0D8               	btfsc	status,0,c
  3797  002250  D003               	goto	l2240
  3798  002252  D00D               	goto	l2246
  3799  002254  D028               	goto	l500
  3800  002256  D000               	goto	l2240
  3801  002258                     l2240:
  3802  002258  90D8               	bcf	status,0,c
  3803  00225A  320A               	rrcf	__div_to_l_@quot+3,f,c
  3804  00225C  3209               	rrcf	__div_to_l_@quot+2,f,c
  3805  00225E  3208               	rrcf	__div_to_l_@quot+1,f,c
  3806  002260  3207               	rrcf	__div_to_l_@quot,f,c
  3807  002262  3E0C               	incfsz	__div_to_l_@exp1,f,c
  3808  002264  D7F9               	goto	l2240
  3809  002266  D017               	goto	l509
  3810  002268                     l2244:
  3811  002268  0E1F               	movlw	31
  3812  00226A  640C               	cpfsgt	__div_to_l_@exp1,c
  3813  00226C  D011               	goto	l2252
  3814  00226E                     l2246:
  3815  00226E  0E00               	movlw	0
  3816  002270  6E01               	movwf	?__div_to_l_,c
  3817  002272  0E00               	movlw	0
  3818  002274  6E02               	movwf	?__div_to_l_+1,c
  3819  002276  0E00               	movlw	0
  3820  002278  6E03               	movwf	?__div_to_l_+2,c
  3821  00227A  0E00               	movlw	0
  3822  00227C  6E04               	movwf	?__div_to_l_+3,c
  3823  00227E  D013               	goto	l500
  3824  002280  D007               	goto	l2252
  3825  002282                     l2250:
  3826  002282  90D8               	bcf	status,0,c
  3827  002284  3607               	rlcf	__div_to_l_@quot,f,c
  3828  002286  3608               	rlcf	__div_to_l_@quot+1,f,c
  3829  002288  3609               	rlcf	__div_to_l_@quot+2,f,c
  3830  00228A  360A               	rlcf	__div_to_l_@quot+3,f,c
  3831  00228C  060C               	decf	__div_to_l_@exp1,f,c
  3832  00228E  D000               	goto	l2252
  3833  002290                     l2252:
  3834  002290  500C               	movf	__div_to_l_@exp1,w,c
  3835  002292  A4D8               	btfss	status,2,c
  3836  002294  D7F6               	goto	l2250
  3837  002296                     l509:
  3838  002296  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  3839  00229A  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  3840  00229E  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  3841  0022A2  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  3842  0022A6                     l500:
  3843  0022A6  0012               	return		;funcret
  3844  0022A8                     __end_of__div_to_l_:
  3845                           	opt stack 0
  3846                           tblptru	equ	0xFF8
  3847                           tblptrh	equ	0xFF7
  3848                           tblptrl	equ	0xFF6
  3849                           tablat	equ	0xFF5
  3850                           prodh	equ	0xFF4
  3851                           prodl	equ	0xFF3
  3852                           postinc0	equ	0xFEE
  3853                           wreg	equ	0xFE8
  3854                           postdec1	equ	0xFE5
  3855                           fsr1l	equ	0xFE1
  3856                           postinc2	equ	0xFDE
  3857                           postdec2	equ	0xFDD
  3858                           fsr2h	equ	0xFDA
  3859                           fsr2l	equ	0xFD9
  3860                           status	equ	0xFD8
  3861                           
  3862 ;; *************** function ___lltoft *****************
  3863 ;; Defined at:
  3864 ;;		line 35 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\lltoft.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  c               4    8[COMRAM] unsigned long 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;  exp             1   16[COMRAM] unsigned char 
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  3    8[COMRAM] float 
  3871 ;; Registers used:
  3872 ;;		wreg, status,2, status,0, cstack
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3878 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3881 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3882 ;;Total ram usage:        9 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; Hardware stack levels required when called:    1
  3885 ;; This function calls:
  3886 ;;		___ftpack
  3887 ;; This function is called by:
  3888 ;;		_printf
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text12
  3893  002948                     __ptext12:
  3894                           	opt stack 0
  3895  002948                     ___lltoft:
  3896                           	opt stack 28
  3897                           
  3898                           ;incstack = 0
  3899  002948  0E8E               	movlw	142
  3900  00294A  6E11               	movwf	___lltoft@exp,c
  3901  00294C  D007               	goto	l2372
  3902  00294E                     l2370:
  3903  00294E  90D8               	bcf	status,0,c
  3904  002950  320C               	rrcf	___lltoft@c+3,f,c
  3905  002952  320B               	rrcf	___lltoft@c+2,f,c
  3906  002954  320A               	rrcf	___lltoft@c+1,f,c
  3907  002956  3209               	rrcf	___lltoft@c,f,c
  3908  002958  2A11               	incf	___lltoft@exp,f,c
  3909  00295A  D000               	goto	l2372
  3910  00295C                     l2372:
  3911  00295C  0E00               	movlw	0
  3912  00295E  1409               	andwf	___lltoft@c,w,c
  3913  002960  6E0D               	movwf	??___lltoft& (0+255),c
  3914  002962  0E00               	movlw	0
  3915  002964  140A               	andwf	___lltoft@c+1,w,c
  3916  002966  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  3917  002968  0E00               	movlw	0
  3918  00296A  140B               	andwf	___lltoft@c+2,w,c
  3919  00296C  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  3920  00296E  0EFF               	movlw	255
  3921  002970  140C               	andwf	___lltoft@c+3,w,c
  3922  002972  6E10               	movwf	(??___lltoft+3)& (0+255),c
  3923  002974  500D               	movf	??___lltoft,w,c
  3924  002976  100E               	iorwf	??___lltoft+1,w,c
  3925  002978  100F               	iorwf	??___lltoft+2,w,c
  3926  00297A  1010               	iorwf	??___lltoft+3,w,c
  3927  00297C  A4D8               	btfss	status,2,c
  3928  00297E  D7E7               	goto	l2370
  3929  002980  C009  F001         	movff	___lltoft@c,___ftpack@arg
  3930  002984  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  3931  002988  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  3932  00298C  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  3933  002990  0E00               	movlw	0
  3934  002992  6E05               	movwf	___ftpack@sign,c
  3935  002994  ECB4  F012         	call	___ftpack	;wreg free
  3936  002998  C001  F009         	movff	?___ftpack,?___lltoft
  3937  00299C  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  3938  0029A0  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  3939  0029A4  D000               	goto	l740
  3940  0029A6                     l740:
  3941  0029A6  0012               	return		;funcret
  3942  0029A8                     __end_of___lltoft:
  3943                           	opt stack 0
  3944                           tblptru	equ	0xFF8
  3945                           tblptrh	equ	0xFF7
  3946                           tblptrl	equ	0xFF6
  3947                           tablat	equ	0xFF5
  3948                           prodh	equ	0xFF4
  3949                           prodl	equ	0xFF3
  3950                           postinc0	equ	0xFEE
  3951                           wreg	equ	0xFE8
  3952                           postdec1	equ	0xFE5
  3953                           fsr1l	equ	0xFE1
  3954                           postinc2	equ	0xFDE
  3955                           postdec2	equ	0xFDD
  3956                           fsr2h	equ	0xFDA
  3957                           fsr2l	equ	0xFD9
  3958                           status	equ	0xFD8
  3959                           
  3960 ;; *************** function ___llmod *****************
  3961 ;; Defined at:
  3962 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\llmod.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  dividend        4    0[COMRAM] unsigned long 
  3965 ;;  divisor         4    4[COMRAM] unsigned long 
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;  counter         1    8[COMRAM] unsigned char 
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  4    0[COMRAM] unsigned long 
  3970 ;; Registers used:
  3971 ;;		wreg, status,2, status,0
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3977 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3978 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3980 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3981 ;;Total ram usage:        9 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; This function calls:
  3984 ;;		Nothing
  3985 ;; This function is called by:
  3986 ;;		_printf
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text13
  3991  002868                     __ptext13:
  3992                           	opt stack 0
  3993  002868                     ___llmod:
  3994                           	opt stack 29
  3995                           
  3996                           ;incstack = 0
  3997  002868  5005               	movf	___llmod@divisor,w,c
  3998  00286A  1006               	iorwf	___llmod@divisor+1,w,c
  3999  00286C  1007               	iorwf	___llmod@divisor+2,w,c
  4000  00286E  1008               	iorwf	___llmod@divisor+3,w,c
  4001  002870  B4D8               	btfsc	status,2,c
  4002  002872  D029               	goto	l720
  4003  002874  0E01               	movlw	1
  4004  002876  6E09               	movwf	___llmod@counter,c
  4005  002878  D007               	goto	l2358
  4006  00287A                     l2356:
  4007  00287A  90D8               	bcf	status,0,c
  4008  00287C  3605               	rlcf	___llmod@divisor,f,c
  4009  00287E  3606               	rlcf	___llmod@divisor+1,f,c
  4010  002880  3607               	rlcf	___llmod@divisor+2,f,c
  4011  002882  3608               	rlcf	___llmod@divisor+3,f,c
  4012  002884  2A09               	incf	___llmod@counter,f,c
  4013  002886  D000               	goto	l2358
  4014  002888                     l2358:
  4015  002888  BE08               	btfsc	___llmod@divisor+3,7,c
  4016  00288A  D002               	goto	l2360
  4017  00288C  D7F6               	goto	l2356
  4018  00288E  D000               	goto	l2360
  4019  002890                     l2360:
  4020  002890  5005               	movf	___llmod@divisor,w,c
  4021  002892  5C01               	subwf	___llmod@dividend,w,c
  4022  002894  5006               	movf	___llmod@divisor+1,w,c
  4023  002896  5802               	subwfb	___llmod@dividend+1,w,c
  4024  002898  5007               	movf	___llmod@divisor+2,w,c
  4025  00289A  5803               	subwfb	___llmod@dividend+2,w,c
  4026  00289C  5008               	movf	___llmod@divisor+3,w,c
  4027  00289E  5804               	subwfb	___llmod@dividend+3,w,c
  4028  0028A0  A0D8               	btfss	status,0,c
  4029  0028A2  D009               	goto	l2364
  4030  0028A4  5005               	movf	___llmod@divisor,w,c
  4031  0028A6  5E01               	subwf	___llmod@dividend,f,c
  4032  0028A8  5006               	movf	___llmod@divisor+1,w,c
  4033  0028AA  5A02               	subwfb	___llmod@dividend+1,f,c
  4034  0028AC  5007               	movf	___llmod@divisor+2,w,c
  4035  0028AE  5A03               	subwfb	___llmod@dividend+2,f,c
  4036  0028B0  5008               	movf	___llmod@divisor+3,w,c
  4037  0028B2  5A04               	subwfb	___llmod@dividend+3,f,c
  4038  0028B4  D000               	goto	l2364
  4039  0028B6                     l2364:
  4040  0028B6  90D8               	bcf	status,0,c
  4041  0028B8  3208               	rrcf	___llmod@divisor+3,f,c
  4042  0028BA  3207               	rrcf	___llmod@divisor+2,f,c
  4043  0028BC  3206               	rrcf	___llmod@divisor+1,f,c
  4044  0028BE  3205               	rrcf	___llmod@divisor,f,c
  4045  0028C0  2E09               	decfsz	___llmod@counter,f,c
  4046  0028C2  D7E6               	goto	l2360
  4047  0028C4  D000               	goto	l720
  4048  0028C6                     l720:
  4049  0028C6  C001  F001         	movff	___llmod@dividend,?___llmod
  4050  0028CA  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4051  0028CE  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4052  0028D2  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4053  0028D6  0012               	return		;funcret
  4054  0028D8                     __end_of___llmod:
  4055                           	opt stack 0
  4056                           tblptru	equ	0xFF8
  4057                           tblptrh	equ	0xFF7
  4058                           tblptrl	equ	0xFF6
  4059                           tablat	equ	0xFF5
  4060                           prodh	equ	0xFF4
  4061                           prodl	equ	0xFF3
  4062                           postinc0	equ	0xFEE
  4063                           wreg	equ	0xFE8
  4064                           postdec1	equ	0xFE5
  4065                           fsr1l	equ	0xFE1
  4066                           postinc2	equ	0xFDE
  4067                           postdec2	equ	0xFDD
  4068                           fsr2h	equ	0xFDA
  4069                           fsr2l	equ	0xFD9
  4070                           status	equ	0xFD8
  4071                           
  4072 ;; *************** function ___lldiv *****************
  4073 ;; Defined at:
  4074 ;;		line 8 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;  dividend        4    0[COMRAM] unsigned long 
  4077 ;;  divisor         4    4[COMRAM] unsigned long 
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;  quotient        4    8[COMRAM] unsigned long 
  4080 ;;  counter         1   12[COMRAM] unsigned char 
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  4    0[COMRAM] unsigned long 
  4083 ;; Registers used:
  4084 ;;		wreg, status,2, status,0
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4090 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4091 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4093 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4094 ;;Total ram usage:       13 bytes
  4095 ;; Hardware stack levels used:    1
  4096 ;; This function calls:
  4097 ;;		Nothing
  4098 ;; This function is called by:
  4099 ;;		_printf
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           	psect	text14
  4104  00275A                     __ptext14:
  4105                           	opt stack 0
  4106  00275A                     ___lldiv:
  4107                           	opt stack 29
  4108                           
  4109                           ;incstack = 0
  4110  00275A  0E00               	movlw	0
  4111  00275C  6E09               	movwf	___lldiv@quotient,c
  4112  00275E  0E00               	movlw	0
  4113  002760  6E0A               	movwf	___lldiv@quotient+1,c
  4114  002762  0E00               	movlw	0
  4115  002764  6E0B               	movwf	___lldiv@quotient+2,c
  4116  002766  0E00               	movlw	0
  4117  002768  6E0C               	movwf	___lldiv@quotient+3,c
  4118  00276A  5005               	movf	___lldiv@divisor,w,c
  4119  00276C  1006               	iorwf	___lldiv@divisor+1,w,c
  4120  00276E  1007               	iorwf	___lldiv@divisor+2,w,c
  4121  002770  1008               	iorwf	___lldiv@divisor+3,w,c
  4122  002772  B4D8               	btfsc	status,2,c
  4123  002774  D02F               	goto	l710
  4124  002776  0E01               	movlw	1
  4125  002778  6E0D               	movwf	___lldiv@counter,c
  4126  00277A  D007               	goto	l2338
  4127  00277C                     l2336:
  4128  00277C  90D8               	bcf	status,0,c
  4129  00277E  3605               	rlcf	___lldiv@divisor,f,c
  4130  002780  3606               	rlcf	___lldiv@divisor+1,f,c
  4131  002782  3607               	rlcf	___lldiv@divisor+2,f,c
  4132  002784  3608               	rlcf	___lldiv@divisor+3,f,c
  4133  002786  2A0D               	incf	___lldiv@counter,f,c
  4134  002788  D000               	goto	l2338
  4135  00278A                     l2338:
  4136  00278A  BE08               	btfsc	___lldiv@divisor+3,7,c
  4137  00278C  D002               	goto	l2340
  4138  00278E  D7F6               	goto	l2336
  4139  002790  D000               	goto	l2340
  4140  002792                     l2340:
  4141  002792  90D8               	bcf	status,0,c
  4142  002794  3609               	rlcf	___lldiv@quotient,f,c
  4143  002796  360A               	rlcf	___lldiv@quotient+1,f,c
  4144  002798  360B               	rlcf	___lldiv@quotient+2,f,c
  4145  00279A  360C               	rlcf	___lldiv@quotient+3,f,c
  4146  00279C  5005               	movf	___lldiv@divisor,w,c
  4147  00279E  5C01               	subwf	___lldiv@dividend,w,c
  4148  0027A0  5006               	movf	___lldiv@divisor+1,w,c
  4149  0027A2  5802               	subwfb	___lldiv@dividend+1,w,c
  4150  0027A4  5007               	movf	___lldiv@divisor+2,w,c
  4151  0027A6  5803               	subwfb	___lldiv@dividend+2,w,c
  4152  0027A8  5008               	movf	___lldiv@divisor+3,w,c
  4153  0027AA  5804               	subwfb	___lldiv@dividend+3,w,c
  4154  0027AC  A0D8               	btfss	status,0,c
  4155  0027AE  D00A               	goto	l2348
  4156  0027B0  5005               	movf	___lldiv@divisor,w,c
  4157  0027B2  5E01               	subwf	___lldiv@dividend,f,c
  4158  0027B4  5006               	movf	___lldiv@divisor+1,w,c
  4159  0027B6  5A02               	subwfb	___lldiv@dividend+1,f,c
  4160  0027B8  5007               	movf	___lldiv@divisor+2,w,c
  4161  0027BA  5A03               	subwfb	___lldiv@dividend+2,f,c
  4162  0027BC  5008               	movf	___lldiv@divisor+3,w,c
  4163  0027BE  5A04               	subwfb	___lldiv@dividend+3,f,c
  4164  0027C0  8009               	bsf	___lldiv@quotient,0,c
  4165  0027C2  D000               	goto	l2348
  4166  0027C4                     l2348:
  4167  0027C4  90D8               	bcf	status,0,c
  4168  0027C6  3208               	rrcf	___lldiv@divisor+3,f,c
  4169  0027C8  3207               	rrcf	___lldiv@divisor+2,f,c
  4170  0027CA  3206               	rrcf	___lldiv@divisor+1,f,c
  4171  0027CC  3205               	rrcf	___lldiv@divisor,f,c
  4172  0027CE  2E0D               	decfsz	___lldiv@counter,f,c
  4173  0027D0  D7E0               	goto	l2340
  4174  0027D2  D000               	goto	l710
  4175  0027D4                     l710:
  4176  0027D4  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4177  0027D8  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4178  0027DC  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4179  0027E0  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4180  0027E4  0012               	return		;funcret
  4181  0027E6                     __end_of___lldiv:
  4182                           	opt stack 0
  4183                           tblptru	equ	0xFF8
  4184                           tblptrh	equ	0xFF7
  4185                           tblptrl	equ	0xFF6
  4186                           tablat	equ	0xFF5
  4187                           prodh	equ	0xFF4
  4188                           prodl	equ	0xFF3
  4189                           postinc0	equ	0xFEE
  4190                           wreg	equ	0xFE8
  4191                           postdec1	equ	0xFE5
  4192                           fsr1l	equ	0xFE1
  4193                           postinc2	equ	0xFDE
  4194                           postdec2	equ	0xFDD
  4195                           fsr2h	equ	0xFDA
  4196                           fsr2l	equ	0xFD9
  4197                           status	equ	0xFD8
  4198                           
  4199 ;; *************** function ___fttol *****************
  4200 ;; Defined at:
  4201 ;;		line 44 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\fttol.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  f1              3   49[COMRAM] float 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  lval            4   59[COMRAM] unsigned long 
  4206 ;;  exp1            1   63[COMRAM] unsigned char 
  4207 ;;  sign1           1   58[COMRAM] unsigned char 
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  4   49[COMRAM] long 
  4210 ;; Registers used:
  4211 ;;		wreg, status,2, status,0
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4217 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4218 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4219 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4220 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4221 ;;Total ram usage:       15 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; This function calls:
  4224 ;;		Nothing
  4225 ;; This function is called by:
  4226 ;;		_main
  4227 ;;		_printf
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text15
  4232  0023A0                     __ptext15:
  4233                           	opt stack 0
  4234  0023A0                     ___fttol:
  4235                           	opt stack 29
  4236                           
  4237                           ;incstack = 0
  4238  0023A0  C034  F036         	movff	___fttol@f1+2,??___fttol
  4239  0023A4  6A37               	clrf	(??___fttol+1)& (0+255),c
  4240  0023A6  6A38               	clrf	(??___fttol+2)& (0+255),c
  4241  0023A8  3433               	rlcf	___fttol@f1+1,w,c
  4242  0023AA  3636               	rlcf	??___fttol& (0+255),f,c
  4243  0023AC  E301               	bnc	u2351
  4244  0023AE  8037               	bsf	(??___fttol+1)& (0+255),0,c
  4245  0023B0                     u2351:
  4246  0023B0  5036               	movf	??___fttol,w,c
  4247  0023B2  6E40               	movwf	___fttol@exp1,c
  4248  0023B4  5040               	movf	___fttol@exp1,w,c
  4249  0023B6  A4D8               	btfss	status,2,c
  4250  0023B8  D002               	goto	l2290
  4251  0023BA  D039               	goto	l2314
  4252  0023BC  D063               	goto	l666
  4253  0023BE                     l2290:
  4254  0023BE  0E17               	movlw	23
  4255  0023C0  6E36               	movwf	??___fttol& (0+255),c
  4256  0023C2  C032  F037         	movff	___fttol@f1,??___fttol+1
  4257  0023C6  C033  F038         	movff	___fttol@f1+1,??___fttol+2
  4258  0023CA  C034  F039         	movff	___fttol@f1+2,??___fttol+3
  4259  0023CE  2836               	incf	??___fttol,w,c
  4260  0023D0  6E3A               	movwf	(??___fttol+4)& (0+255),c
  4261  0023D2  D004               	goto	u2370
  4262  0023D4                     u2375:
  4263  0023D4  90D8               	bcf	status,0,c
  4264  0023D6  3239               	rrcf	??___fttol+3,f,c
  4265  0023D8  3238               	rrcf	??___fttol+2,f,c
  4266  0023DA  3237               	rrcf	??___fttol+1,f,c
  4267  0023DC                     u2370:
  4268  0023DC  2E3A               	decfsz	(??___fttol+4)& (0+255),f,c
  4269  0023DE  D7FA               	goto	u2375
  4270  0023E0  5037               	movf	??___fttol+1,w,c
  4271  0023E2  6E3B               	movwf	___fttol@sign1,c
  4272  0023E4  8E33               	bsf	___fttol@f1+1,7,c
  4273  0023E6  0EFF               	movlw	255
  4274  0023E8  1632               	andwf	___fttol@f1,f,c
  4275  0023EA  0EFF               	movlw	255
  4276  0023EC  1633               	andwf	___fttol@f1+1,f,c
  4277  0023EE  0E00               	movlw	0
  4278  0023F0  1634               	andwf	___fttol@f1+2,f,c
  4279  0023F2  5032               	movf	___fttol@f1,w,c
  4280  0023F4  6E3C               	movwf	___fttol@lval,c
  4281  0023F6  5033               	movf	___fttol@f1+1,w,c
  4282  0023F8  6E3D               	movwf	___fttol@lval+1,c
  4283  0023FA  5034               	movf	___fttol@f1+2,w,c
  4284  0023FC  6E3E               	movwf	___fttol@lval+2,c
  4285  0023FE  6A3F               	clrf	___fttol@lval+3,c
  4286  002400  0E8E               	movlw	142
  4287  002402  5E40               	subwf	___fttol@exp1,f,c
  4288  002404  AE40               	btfss	___fttol@exp1,7,c
  4289  002406  D010               	goto	l2312
  4290  002408  5040               	movf	___fttol@exp1,w,c
  4291  00240A  0A80               	xorlw	128
  4292  00240C  0F8F               	addlw	143
  4293  00240E  B0D8               	btfsc	status,0,c
  4294  002410  D003               	goto	l2308
  4295  002412  D00D               	goto	l2314
  4296  002414  D037               	goto	l666
  4297  002416  D000               	goto	l2308
  4298  002418                     l2308:
  4299  002418  90D8               	bcf	status,0,c
  4300  00241A  323F               	rrcf	___fttol@lval+3,f,c
  4301  00241C  323E               	rrcf	___fttol@lval+2,f,c
  4302  00241E  323D               	rrcf	___fttol@lval+1,f,c
  4303  002420  323C               	rrcf	___fttol@lval,f,c
  4304  002422  3E40               	incfsz	___fttol@exp1,f,c
  4305  002424  D7F9               	goto	l2308
  4306  002426  D019               	goto	l2322
  4307  002428                     l2312:
  4308  002428  0E17               	movlw	23
  4309  00242A  6440               	cpfsgt	___fttol@exp1,c
  4310  00242C  D011               	goto	l2320
  4311  00242E                     l2314:
  4312  00242E  0E00               	movlw	0
  4313  002430  6E32               	movwf	?___fttol,c
  4314  002432  0E00               	movlw	0
  4315  002434  6E33               	movwf	?___fttol+1,c
  4316  002436  0E00               	movlw	0
  4317  002438  6E34               	movwf	?___fttol+2,c
  4318  00243A  0E00               	movlw	0
  4319  00243C  6E35               	movwf	?___fttol+3,c
  4320  00243E  D022               	goto	l666
  4321  002440  D007               	goto	l2320
  4322  002442                     l2318:
  4323  002442  90D8               	bcf	status,0,c
  4324  002444  363C               	rlcf	___fttol@lval,f,c
  4325  002446  363D               	rlcf	___fttol@lval+1,f,c
  4326  002448  363E               	rlcf	___fttol@lval+2,f,c
  4327  00244A  363F               	rlcf	___fttol@lval+3,f,c
  4328  00244C  0640               	decf	___fttol@exp1,f,c
  4329  00244E  D000               	goto	l2320
  4330  002450                     l2320:
  4331  002450  5040               	movf	___fttol@exp1,w,c
  4332  002452  B4D8               	btfsc	status,2,c
  4333  002454  D002               	goto	l2322
  4334  002456  D7F5               	goto	l2318
  4335  002458  D000               	goto	l2322
  4336  00245A                     l2322:
  4337  00245A  503B               	movf	___fttol@sign1,w,c
  4338  00245C  B4D8               	btfsc	status,2,c
  4339  00245E  D009               	goto	l2326
  4340  002460  1E3F               	comf	___fttol@lval+3,f,c
  4341  002462  1E3E               	comf	___fttol@lval+2,f,c
  4342  002464  1E3D               	comf	___fttol@lval+1,f,c
  4343  002466  6C3C               	negf	___fttol@lval,c
  4344  002468  0E00               	movlw	0
  4345  00246A  223D               	addwfc	___fttol@lval+1,f,c
  4346  00246C  223E               	addwfc	___fttol@lval+2,f,c
  4347  00246E  223F               	addwfc	___fttol@lval+3,f,c
  4348  002470  D000               	goto	l2326
  4349  002472                     l2326:
  4350  002472  C03C  F032         	movff	___fttol@lval,?___fttol
  4351  002476  C03D  F033         	movff	___fttol@lval+1,?___fttol+1
  4352  00247A  C03E  F034         	movff	___fttol@lval+2,?___fttol+2
  4353  00247E  C03F  F035         	movff	___fttol@lval+3,?___fttol+3
  4354  002482  D000               	goto	l666
  4355  002484                     l666:
  4356  002484  0012               	return		;funcret
  4357  002486                     __end_of___fttol:
  4358                           	opt stack 0
  4359                           tblptru	equ	0xFF8
  4360                           tblptrh	equ	0xFF7
  4361                           tblptrl	equ	0xFF6
  4362                           tablat	equ	0xFF5
  4363                           prodh	equ	0xFF4
  4364                           prodl	equ	0xFF3
  4365                           postinc0	equ	0xFEE
  4366                           wreg	equ	0xFE8
  4367                           postdec1	equ	0xFE5
  4368                           fsr1l	equ	0xFE1
  4369                           postinc2	equ	0xFDE
  4370                           postdec2	equ	0xFDD
  4371                           fsr2h	equ	0xFDA
  4372                           fsr2l	equ	0xFD9
  4373                           status	equ	0xFD8
  4374                           
  4375 ;; *************** function ___ftsub *****************
  4376 ;; Defined at:
  4377 ;;		line 20 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftsub.c"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;  f1              3   27[COMRAM] float 
  4380 ;;  f2              3   30[COMRAM] float 
  4381 ;; Auto vars:     Size  Location     Type
  4382 ;;		None
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  3   27[COMRAM] float 
  4385 ;; Registers used:
  4386 ;;		wreg, status,2, status,0, cstack
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4392 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4395 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4396 ;;Total ram usage:        6 bytes
  4397 ;; Hardware stack levels used:    1
  4398 ;; Hardware stack levels required when called:    2
  4399 ;; This function calls:
  4400 ;;		___ftadd
  4401 ;; This function is called by:
  4402 ;;		_printf
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406                           	psect	text16
  4407  0029A8                     __ptext16:
  4408                           	opt stack 0
  4409  0029A8                     ___ftsub:
  4410                           	opt stack 27
  4411                           
  4412                           ;incstack = 0
  4413  0029A8  501F               	movf	___ftsub@f2,w,c
  4414  0029AA  1020               	iorwf	___ftsub@f2+1,w,c
  4415  0029AC  1021               	iorwf	___ftsub@f2+2,w,c
  4416  0029AE  B4D8               	btfsc	status,2,c
  4417  0029B0  D007               	goto	l2258
  4418  0029B2  0E00               	movlw	0
  4419  0029B4  1A1F               	xorwf	___ftsub@f2,f,c
  4420  0029B6  0E00               	movlw	0
  4421  0029B8  1A20               	xorwf	___ftsub@f2+1,f,c
  4422  0029BA  0E80               	movlw	128
  4423  0029BC  1A21               	xorwf	___ftsub@f2+2,f,c
  4424  0029BE  D000               	goto	l2258
  4425  0029C0                     l2258:
  4426  0029C0  C01C  F010         	movff	___ftsub@f1,___ftadd@f1
  4427  0029C4  C01D  F011         	movff	___ftsub@f1+1,___ftadd@f1+1
  4428  0029C8  C01E  F012         	movff	___ftsub@f1+2,___ftadd@f1+2
  4429  0029CC  C01F  F013         	movff	___ftsub@f2,___ftadd@f2
  4430  0029D0  C020  F014         	movff	___ftsub@f2+1,___ftadd@f2+1
  4431  0029D4  C021  F015         	movff	___ftsub@f2+2,___ftadd@f2+2
  4432  0029D8  ECDA  F00E         	call	___ftadd	;wreg free
  4433  0029DC  C010  F01C         	movff	?___ftadd,?___ftsub
  4434  0029E0  C011  F01D         	movff	?___ftadd+1,?___ftsub+1
  4435  0029E4  C012  F01E         	movff	?___ftadd+2,?___ftsub+2
  4436  0029E8  D000               	goto	l662
  4437  0029EA                     l662:
  4438  0029EA  0012               	return		;funcret
  4439  0029EC                     __end_of___ftsub:
  4440                           	opt stack 0
  4441                           tblptru	equ	0xFF8
  4442                           tblptrh	equ	0xFF7
  4443                           tblptrl	equ	0xFF6
  4444                           tablat	equ	0xFF5
  4445                           prodh	equ	0xFF4
  4446                           prodl	equ	0xFF3
  4447                           postinc0	equ	0xFEE
  4448                           wreg	equ	0xFE8
  4449                           postdec1	equ	0xFE5
  4450                           fsr1l	equ	0xFE1
  4451                           postinc2	equ	0xFDE
  4452                           postdec2	equ	0xFDD
  4453                           fsr2h	equ	0xFDA
  4454                           fsr2l	equ	0xFD9
  4455                           status	equ	0xFD8
  4456                           
  4457 ;; *************** function ___ftadd *****************
  4458 ;; Defined at:
  4459 ;;		line 86 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftadd.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  f1              3   15[COMRAM] float 
  4462 ;;  f2              3   18[COMRAM] float 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  exp1            1   26[COMRAM] unsigned char 
  4465 ;;  exp2            1   25[COMRAM] unsigned char 
  4466 ;;  sign            1   24[COMRAM] unsigned char 
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  3   15[COMRAM] float 
  4469 ;; Registers used:
  4470 ;;		wreg, status,2, status,0, cstack
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4476 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4480 ;;Total ram usage:       12 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; Hardware stack levels required when called:    1
  4483 ;; This function calls:
  4484 ;;		___ftpack
  4485 ;; This function is called by:
  4486 ;;		_main
  4487 ;;		_printf
  4488 ;;		___ftsub
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text17
  4493  001DB4                     __ptext17:
  4494                           	opt stack 0
  4495  001DB4                     ___ftadd:
  4496                           	opt stack 27
  4497                           
  4498                           ;incstack = 0
  4499  001DB4  C012  F016         	movff	___ftadd@f1+2,??___ftadd
  4500  001DB8  6A17               	clrf	(??___ftadd+1)& (0+255),c
  4501  001DBA  6A18               	clrf	(??___ftadd+2)& (0+255),c
  4502  001DBC  3411               	rlcf	___ftadd@f1+1,w,c
  4503  001DBE  3616               	rlcf	??___ftadd& (0+255),f,c
  4504  001DC0  E301               	bnc	u1551
  4505  001DC2  8017               	bsf	(??___ftadd+1)& (0+255),0,c
  4506  001DC4                     u1551:
  4507  001DC4  5016               	movf	??___ftadd,w,c
  4508  001DC6  6E1B               	movwf	___ftadd@exp1,c
  4509  001DC8  C015  F016         	movff	___ftadd@f2+2,??___ftadd
  4510  001DCC  6A17               	clrf	(??___ftadd+1)& (0+255),c
  4511  001DCE  6A18               	clrf	(??___ftadd+2)& (0+255),c
  4512  001DD0  3414               	rlcf	___ftadd@f2+1,w,c
  4513  001DD2  3616               	rlcf	??___ftadd& (0+255),f,c
  4514  001DD4  E301               	bnc	u1561
  4515  001DD6  8017               	bsf	(??___ftadd+1)& (0+255),0,c
  4516  001DD8                     u1561:
  4517  001DD8  5016               	movf	??___ftadd,w,c
  4518  001DDA  6E1A               	movwf	___ftadd@exp2,c
  4519  001DDC  501B               	movf	___ftadd@exp1,w,c
  4520  001DDE  B4D8               	btfsc	status,2,c
  4521  001DE0  D00B               	goto	l581
  4522  001DE2  501A               	movf	___ftadd@exp2,w,c
  4523  001DE4  5C1B               	subwf	___ftadd@exp1,w,c
  4524  001DE6  B0D8               	btfsc	status,0,c
  4525  001DE8  D00E               	goto	l1822
  4526  001DEA  501B               	movf	___ftadd@exp1,w,c
  4527  001DEC  0800               	sublw	0
  4528  001DEE  241A               	addwf	___ftadd@exp2,w,c
  4529  001DF0  6E16               	movwf	??___ftadd& (0+255),c
  4530  001DF2  0E18               	movlw	24
  4531  001DF4  6416               	cpfsgt	??___ftadd,c
  4532  001DF6  D007               	goto	l1822
  4533  001DF8                     l581:
  4534  001DF8  C013  F010         	movff	___ftadd@f2,?___ftadd
  4535  001DFC  C014  F011         	movff	___ftadd@f2+1,?___ftadd+1
  4536  001E00  C015  F012         	movff	___ftadd@f2+2,?___ftadd+2
  4537  001E04  D0B8               	goto	l582
  4538  001E06                     l1822:
  4539  001E06  501A               	movf	___ftadd@exp2,w,c
  4540  001E08  B4D8               	btfsc	status,2,c
  4541  001E0A  D00B               	goto	l585
  4542  001E0C  501B               	movf	___ftadd@exp1,w,c
  4543  001E0E  5C1A               	subwf	___ftadd@exp2,w,c
  4544  001E10  B0D8               	btfsc	status,0,c
  4545  001E12  D00E               	goto	l1828
  4546  001E14  501A               	movf	___ftadd@exp2,w,c
  4547  001E16  0800               	sublw	0
  4548  001E18  241B               	addwf	___ftadd@exp1,w,c
  4549  001E1A  6E16               	movwf	??___ftadd& (0+255),c
  4550  001E1C  0E18               	movlw	24
  4551  001E1E  6416               	cpfsgt	??___ftadd,c
  4552  001E20  D007               	goto	l1828
  4553  001E22                     l585:
  4554  001E22  C010  F010         	movff	___ftadd@f1,?___ftadd
  4555  001E26  C011  F011         	movff	___ftadd@f1+1,?___ftadd+1
  4556  001E2A  C012  F012         	movff	___ftadd@f1+2,?___ftadd+2
  4557  001E2E  D0A3               	goto	l582
  4558  001E30                     l1828:
  4559  001E30  0E06               	movlw	6
  4560  001E32  6E19               	movwf	___ftadd@sign,c
  4561  001E34  AE12               	btfss	___ftadd@f1+2,7,c
  4562  001E36  D002               	goto	l1834
  4563  001E38  8E19               	bsf	___ftadd@sign,7,c
  4564  001E3A  D000               	goto	l1834
  4565  001E3C                     l1834:
  4566  001E3C  BE15               	btfsc	___ftadd@f2+2,7,c
  4567  001E3E  8C19               	bsf	___ftadd@sign,6,c
  4568  001E40  8E11               	bsf	___ftadd@f1+1,7,c
  4569  001E42  0EFF               	movlw	255
  4570  001E44  1610               	andwf	___ftadd@f1,f,c
  4571  001E46  0EFF               	movlw	255
  4572  001E48  1611               	andwf	___ftadd@f1+1,f,c
  4573  001E4A  0E00               	movlw	0
  4574  001E4C  1612               	andwf	___ftadd@f1+2,f,c
  4575  001E4E  8E14               	bsf	___ftadd@f2+1,7,c
  4576  001E50  0EFF               	movlw	255
  4577  001E52  1613               	andwf	___ftadd@f2,f,c
  4578  001E54  0EFF               	movlw	255
  4579  001E56  1614               	andwf	___ftadd@f2+1,f,c
  4580  001E58  0E00               	movlw	0
  4581  001E5A  1615               	andwf	___ftadd@f2+2,f,c
  4582  001E5C  501A               	movf	___ftadd@exp2,w,c
  4583  001E5E  5C1B               	subwf	___ftadd@exp1,w,c
  4584  001E60  B0D8               	btfsc	status,0,c
  4585  001E62  D01E               	goto	l1854
  4586  001E64                     l1844:
  4587  001E64  90D8               	bcf	status,0,c
  4588  001E66  3613               	rlcf	___ftadd@f2,f,c
  4589  001E68  3614               	rlcf	___ftadd@f2+1,f,c
  4590  001E6A  3615               	rlcf	___ftadd@f2+2,f,c
  4591  001E6C  061A               	decf	___ftadd@exp2,f,c
  4592  001E6E  501B               	movf	___ftadd@exp1,w,c
  4593  001E70  181A               	xorwf	___ftadd@exp2,w,c
  4594  001E72  B4D8               	btfsc	status,2,c
  4595  001E74  D00F               	goto	l1852
  4596  001E76  0619               	decf	___ftadd@sign,f,c
  4597  001E78  C019  F016         	movff	___ftadd@sign,??___ftadd
  4598  001E7C  0E07               	movlw	7
  4599  001E7E  1616               	andwf	??___ftadd,f,c
  4600  001E80  B4D8               	btfsc	status,2,c
  4601  001E82  D008               	goto	l1852
  4602  001E84  D7EF               	goto	l1844
  4603  001E86  D006               	goto	l1852
  4604  001E88                     l1850:
  4605  001E88  90D8               	bcf	status,0,c
  4606  001E8A  3212               	rrcf	___ftadd@f1+2,f,c
  4607  001E8C  3211               	rrcf	___ftadd@f1+1,f,c
  4608  001E8E  3210               	rrcf	___ftadd@f1,f,c
  4609  001E90  2A1B               	incf	___ftadd@exp1,f,c
  4610  001E92  D000               	goto	l1852
  4611  001E94                     l1852:
  4612  001E94  501A               	movf	___ftadd@exp2,w,c
  4613  001E96  181B               	xorwf	___ftadd@exp1,w,c
  4614  001E98  B4D8               	btfsc	status,2,c
  4615  001E9A  D024               	goto	l596
  4616  001E9C  D7F5               	goto	l1850
  4617  001E9E  D022               	goto	l596
  4618  001EA0                     l1854:
  4619  001EA0  501B               	movf	___ftadd@exp1,w,c
  4620  001EA2  5C1A               	subwf	___ftadd@exp2,w,c
  4621  001EA4  B0D8               	btfsc	status,0,c
  4622  001EA6  D01E               	goto	l596
  4623  001EA8                     l1856:
  4624  001EA8  90D8               	bcf	status,0,c
  4625  001EAA  3610               	rlcf	___ftadd@f1,f,c
  4626  001EAC  3611               	rlcf	___ftadd@f1+1,f,c
  4627  001EAE  3612               	rlcf	___ftadd@f1+2,f,c
  4628  001EB0  061B               	decf	___ftadd@exp1,f,c
  4629  001EB2  501B               	movf	___ftadd@exp1,w,c
  4630  001EB4  181A               	xorwf	___ftadd@exp2,w,c
  4631  001EB6  B4D8               	btfsc	status,2,c
  4632  001EB8  D00F               	goto	l1864
  4633  001EBA  0619               	decf	___ftadd@sign,f,c
  4634  001EBC  C019  F016         	movff	___ftadd@sign,??___ftadd
  4635  001EC0  0E07               	movlw	7
  4636  001EC2  1616               	andwf	??___ftadd,f,c
  4637  001EC4  B4D8               	btfsc	status,2,c
  4638  001EC6  D008               	goto	l1864
  4639  001EC8  D7EF               	goto	l1856
  4640  001ECA  D006               	goto	l1864
  4641  001ECC                     l1862:
  4642  001ECC  90D8               	bcf	status,0,c
  4643  001ECE  3215               	rrcf	___ftadd@f2+2,f,c
  4644  001ED0  3214               	rrcf	___ftadd@f2+1,f,c
  4645  001ED2  3213               	rrcf	___ftadd@f2,f,c
  4646  001ED4  2A1A               	incf	___ftadd@exp2,f,c
  4647  001ED6  D000               	goto	l1864
  4648  001ED8                     l1864:
  4649  001ED8  501A               	movf	___ftadd@exp2,w,c
  4650  001EDA  181B               	xorwf	___ftadd@exp1,w,c
  4651  001EDC  B4D8               	btfsc	status,2,c
  4652  001EDE  D002               	goto	l596
  4653  001EE0  D7F5               	goto	l1862
  4654  001EE2  D000               	goto	l596
  4655  001EE4                     l596:
  4656  001EE4  AE19               	btfss	___ftadd@sign,7,c
  4657  001EE6  D00C               	goto	l605
  4658  001EE8  0EFF               	movlw	255
  4659  001EEA  1A10               	xorwf	___ftadd@f1,f,c
  4660  001EEC  0EFF               	movlw	255
  4661  001EEE  1A11               	xorwf	___ftadd@f1+1,f,c
  4662  001EF0  0EFF               	movlw	255
  4663  001EF2  1A12               	xorwf	___ftadd@f1+2,f,c
  4664  001EF4  0E01               	movlw	1
  4665  001EF6  2610               	addwf	___ftadd@f1,f,c
  4666  001EF8  0E00               	movlw	0
  4667  001EFA  2211               	addwfc	___ftadd@f1+1,f,c
  4668  001EFC  0E00               	movlw	0
  4669  001EFE  2212               	addwfc	___ftadd@f1+2,f,c
  4670  001F00                     l605:
  4671  001F00  AC19               	btfss	___ftadd@sign,6,c
  4672  001F02  D00D               	goto	l1870
  4673  001F04  0EFF               	movlw	255
  4674  001F06  1A13               	xorwf	___ftadd@f2,f,c
  4675  001F08  0EFF               	movlw	255
  4676  001F0A  1A14               	xorwf	___ftadd@f2+1,f,c
  4677  001F0C  0EFF               	movlw	255
  4678  001F0E  1A15               	xorwf	___ftadd@f2+2,f,c
  4679  001F10  0E01               	movlw	1
  4680  001F12  2613               	addwf	___ftadd@f2,f,c
  4681  001F14  0E00               	movlw	0
  4682  001F16  2214               	addwfc	___ftadd@f2+1,f,c
  4683  001F18  0E00               	movlw	0
  4684  001F1A  2215               	addwfc	___ftadd@f2+2,f,c
  4685  001F1C  D000               	goto	l1870
  4686  001F1E                     l1870:
  4687  001F1E  0E00               	movlw	0
  4688  001F20  6E19               	movwf	___ftadd@sign,c
  4689  001F22  5010               	movf	___ftadd@f1,w,c
  4690  001F24  2613               	addwf	___ftadd@f2,f,c
  4691  001F26  5011               	movf	___ftadd@f1+1,w,c
  4692  001F28  2214               	addwfc	___ftadd@f2+1,f,c
  4693  001F2A  5012               	movf	___ftadd@f1+2,w,c
  4694  001F2C  2215               	addwfc	___ftadd@f2+2,f,c
  4695  001F2E  AE15               	btfss	___ftadd@f2+2,7,c
  4696  001F30  D00F               	goto	l1880
  4697  001F32  0EFF               	movlw	255
  4698  001F34  1A13               	xorwf	___ftadd@f2,f,c
  4699  001F36  0EFF               	movlw	255
  4700  001F38  1A14               	xorwf	___ftadd@f2+1,f,c
  4701  001F3A  0EFF               	movlw	255
  4702  001F3C  1A15               	xorwf	___ftadd@f2+2,f,c
  4703  001F3E  0E01               	movlw	1
  4704  001F40  2613               	addwf	___ftadd@f2,f,c
  4705  001F42  0E00               	movlw	0
  4706  001F44  2214               	addwfc	___ftadd@f2+1,f,c
  4707  001F46  0E00               	movlw	0
  4708  001F48  2215               	addwfc	___ftadd@f2+2,f,c
  4709  001F4A  0E01               	movlw	1
  4710  001F4C  6E19               	movwf	___ftadd@sign,c
  4711  001F4E  D000               	goto	l1880
  4712  001F50                     l1880:
  4713  001F50  C013  F001         	movff	___ftadd@f2,___ftpack@arg
  4714  001F54  C014  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4715  001F58  C015  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4716  001F5C  C01B  F004         	movff	___ftadd@exp1,___ftpack@exp
  4717  001F60  C019  F005         	movff	___ftadd@sign,___ftpack@sign
  4718  001F64  ECB4  F012         	call	___ftpack	;wreg free
  4719  001F68  C001  F010         	movff	?___ftpack,?___ftadd
  4720  001F6C  C002  F011         	movff	?___ftpack+1,?___ftadd+1
  4721  001F70  C003  F012         	movff	?___ftpack+2,?___ftadd+2
  4722  001F74  D000               	goto	l582
  4723  001F76                     l582:
  4724  001F76  0012               	return		;funcret
  4725  001F78                     __end_of___ftadd:
  4726                           	opt stack 0
  4727                           tblptru	equ	0xFF8
  4728                           tblptrh	equ	0xFF7
  4729                           tblptrl	equ	0xFF6
  4730                           tablat	equ	0xFF5
  4731                           prodh	equ	0xFF4
  4732                           prodl	equ	0xFF3
  4733                           postinc0	equ	0xFEE
  4734                           wreg	equ	0xFE8
  4735                           postdec1	equ	0xFE5
  4736                           fsr1l	equ	0xFE1
  4737                           postinc2	equ	0xFDE
  4738                           postdec2	equ	0xFDD
  4739                           fsr2h	equ	0xFDA
  4740                           fsr2l	equ	0xFD9
  4741                           status	equ	0xFD8
  4742                           
  4743 ;; *************** function ___ftneg *****************
  4744 ;; Defined at:
  4745 ;;		line 15 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftneg.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;  f1              3   12[COMRAM] float 
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;		None
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  3   12[COMRAM] float 
  4752 ;; Registers used:
  4753 ;;		wreg, status,2, status,0
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4759 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4762 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4763 ;;Total ram usage:        3 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; This function calls:
  4766 ;;		Nothing
  4767 ;; This function is called by:
  4768 ;;		_main
  4769 ;;		_printf
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           	psect	text18
  4774  002B04                     __ptext18:
  4775                           	opt stack 0
  4776  002B04                     ___ftneg:
  4777                           	opt stack 29
  4778                           
  4779                           ;incstack = 0
  4780  002B04  500D               	movf	___ftneg@f1,w,c
  4781  002B06  100E               	iorwf	___ftneg@f1+1,w,c
  4782  002B08  100F               	iorwf	___ftneg@f1+2,w,c
  4783  002B0A  B4D8               	btfsc	status,2,c
  4784  002B0C  D006               	goto	l655
  4785  002B0E  0E00               	movlw	0
  4786  002B10  1A0D               	xorwf	___ftneg@f1,f,c
  4787  002B12  0E00               	movlw	0
  4788  002B14  1A0E               	xorwf	___ftneg@f1+1,f,c
  4789  002B16  0E80               	movlw	128
  4790  002B18  1A0F               	xorwf	___ftneg@f1+2,f,c
  4791  002B1A                     l655:
  4792  002B1A  C00D  F00D         	movff	___ftneg@f1,?___ftneg
  4793  002B1E  C00E  F00E         	movff	___ftneg@f1+1,?___ftneg+1
  4794  002B22  C00F  F00F         	movff	___ftneg@f1+2,?___ftneg+2
  4795  002B26  0012               	return		;funcret
  4796  002B28                     __end_of___ftneg:
  4797                           	opt stack 0
  4798                           tblptru	equ	0xFF8
  4799                           tblptrh	equ	0xFF7
  4800                           tblptrl	equ	0xFF6
  4801                           tablat	equ	0xFF5
  4802                           prodh	equ	0xFF4
  4803                           prodl	equ	0xFF3
  4804                           postinc0	equ	0xFEE
  4805                           wreg	equ	0xFE8
  4806                           postdec1	equ	0xFE5
  4807                           fsr1l	equ	0xFE1
  4808                           postinc2	equ	0xFDE
  4809                           postdec2	equ	0xFDD
  4810                           fsr2h	equ	0xFDA
  4811                           fsr2l	equ	0xFD9
  4812                           status	equ	0xFD8
  4813                           
  4814 ;; *************** function ___ftge *****************
  4815 ;; Defined at:
  4816 ;;		line 4 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftge.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;  ff1             3    0[COMRAM] float 
  4819 ;;  ff2             3    3[COMRAM] float 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;		None
  4822 ;; Return value:  Size  Location     Type
  4823 ;;		None               void
  4824 ;; Registers used:
  4825 ;;		wreg, status,2, status,0
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4831 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4833 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4835 ;;Total ram usage:        9 bytes
  4836 ;; Hardware stack levels used:    1
  4837 ;; This function calls:
  4838 ;;		Nothing
  4839 ;; This function is called by:
  4840 ;;		_printf
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           	psect	text19
  4845  0026C4                     __ptext19:
  4846                           	opt stack 0
  4847  0026C4                     ___ftge:
  4848                           	opt stack 29
  4849                           
  4850                           ;incstack = 0
  4851  0026C4  AE03               	btfss	___ftge@ff1+2,7,c
  4852  0026C6  D017               	goto	l2266
  4853  0026C8  C001  F007         	movff	___ftge@ff1,??___ftge
  4854  0026CC  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  4855  0026D0  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  4856  0026D4  1E07               	comf	??___ftge,f,c
  4857  0026D6  1E08               	comf	??___ftge+1,f,c
  4858  0026D8  1E09               	comf	??___ftge+2,f,c
  4859  0026DA  2A07               	incf	??___ftge,f,c
  4860  0026DC  0E00               	movlw	0
  4861  0026DE  2208               	addwfc	??___ftge+1,f,c
  4862  0026E0  2209               	addwfc	??___ftge+2,f,c
  4863  0026E2  0E00               	movlw	0
  4864  0026E4  2407               	addwf	??___ftge,w,c
  4865  0026E6  6E01               	movwf	___ftge@ff1,c
  4866  0026E8  0E00               	movlw	0
  4867  0026EA  2008               	addwfc	??___ftge+1,w,c
  4868  0026EC  6E02               	movwf	___ftge@ff1+1,c
  4869  0026EE  0E80               	movlw	128
  4870  0026F0  2009               	addwfc	??___ftge+2,w,c
  4871  0026F2  6E03               	movwf	___ftge@ff1+2,c
  4872  0026F4  D000               	goto	l2266
  4873  0026F6                     l2266:
  4874  0026F6  AE06               	btfss	___ftge@ff2+2,7,c
  4875  0026F8  D017               	goto	l2270
  4876  0026FA  C004  F007         	movff	___ftge@ff2,??___ftge
  4877  0026FE  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  4878  002702  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  4879  002706  1E07               	comf	??___ftge,f,c
  4880  002708  1E08               	comf	??___ftge+1,f,c
  4881  00270A  1E09               	comf	??___ftge+2,f,c
  4882  00270C  2A07               	incf	??___ftge,f,c
  4883  00270E  0E00               	movlw	0
  4884  002710  2208               	addwfc	??___ftge+1,f,c
  4885  002712  2209               	addwfc	??___ftge+2,f,c
  4886  002714  0E00               	movlw	0
  4887  002716  2407               	addwf	??___ftge,w,c
  4888  002718  6E04               	movwf	___ftge@ff2,c
  4889  00271A  0E00               	movlw	0
  4890  00271C  2008               	addwfc	??___ftge+1,w,c
  4891  00271E  6E05               	movwf	___ftge@ff2+1,c
  4892  002720  0E80               	movlw	128
  4893  002722  2009               	addwfc	??___ftge+2,w,c
  4894  002724  6E06               	movwf	___ftge@ff2+2,c
  4895  002726  D000               	goto	l2270
  4896  002728                     l2270:
  4897  002728  0E00               	movlw	0
  4898  00272A  1A01               	xorwf	___ftge@ff1,f,c
  4899  00272C  0E00               	movlw	0
  4900  00272E  1A02               	xorwf	___ftge@ff1+1,f,c
  4901  002730  0E80               	movlw	128
  4902  002732  1A03               	xorwf	___ftge@ff1+2,f,c
  4903  002734  0E00               	movlw	0
  4904  002736  1A04               	xorwf	___ftge@ff2,f,c
  4905  002738  0E00               	movlw	0
  4906  00273A  1A05               	xorwf	___ftge@ff2+1,f,c
  4907  00273C  0E80               	movlw	128
  4908  00273E  1A06               	xorwf	___ftge@ff2+2,f,c
  4909  002740  5004               	movf	___ftge@ff2,w,c
  4910  002742  5C01               	subwf	___ftge@ff1,w,c
  4911  002744  5005               	movf	___ftge@ff2+1,w,c
  4912  002746  5802               	subwfb	___ftge@ff1+1,w,c
  4913  002748  5006               	movf	___ftge@ff2+2,w,c
  4914  00274A  5803               	subwfb	___ftge@ff1+2,w,c
  4915  00274C  B0D8               	btfsc	status,0,c
  4916  00274E  D002               	goto	l2276
  4917  002750  90D8               	bcf	status,0,c
  4918  002752  D002               	goto	l639
  4919  002754                     l2276:
  4920  002754  80D8               	bsf	status,0,c
  4921  002756  D000               	goto	l639
  4922  002758                     l639:
  4923  002758  0012               	return		;funcret
  4924  00275A                     __end_of___ftge:
  4925                           	opt stack 0
  4926                           tblptru	equ	0xFF8
  4927                           tblptrh	equ	0xFF7
  4928                           tblptrl	equ	0xFF6
  4929                           tablat	equ	0xFF5
  4930                           prodh	equ	0xFF4
  4931                           prodl	equ	0xFF3
  4932                           postinc0	equ	0xFEE
  4933                           wreg	equ	0xFE8
  4934                           postdec1	equ	0xFE5
  4935                           fsr1l	equ	0xFE1
  4936                           postinc2	equ	0xFDE
  4937                           postdec2	equ	0xFDD
  4938                           fsr2h	equ	0xFDA
  4939                           fsr2l	equ	0xFD9
  4940                           status	equ	0xFD8
  4941                           
  4942 ;; *************** function ___lbtoft *****************
  4943 ;; Defined at:
  4944 ;;		line 27 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\lbtoft.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;  c               1    wreg     unsigned char 
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;  c               1   11[COMRAM] unsigned char 
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  3    8[COMRAM] float 
  4951 ;; Registers used:
  4952 ;;		wreg, status,2, status,0, cstack
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4958 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4959 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4961 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4962 ;;Total ram usage:        4 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; Hardware stack levels required when called:    1
  4965 ;; This function calls:
  4966 ;;		___ftpack
  4967 ;; This function is called by:
  4968 ;;		_main
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           	psect	text20
  4973  002AB8                     __ptext20:
  4974                           	opt stack 0
  4975  002AB8                     ___lbtoft:
  4976                           	opt stack 29
  4977                           
  4978                           ;incstack = 0
  4979                           ;___lbtoft@c stored from wreg
  4980  002AB8  6E0C               	movwf	___lbtoft@c,c
  4981  002ABA  500C               	movf	___lbtoft@c,w,c
  4982  002ABC  6E01               	movwf	___ftpack@arg,c
  4983  002ABE  6A02               	clrf	___ftpack@arg+1,c
  4984  002AC0  6A03               	clrf	___ftpack@arg+2,c
  4985  002AC2  0E8E               	movlw	142
  4986  002AC4  6E04               	movwf	___ftpack@exp,c
  4987  002AC6  0E00               	movlw	0
  4988  002AC8  6E05               	movwf	___ftpack@sign,c
  4989  002ACA  ECB4  F012         	call	___ftpack	;wreg free
  4990  002ACE  C001  F009         	movff	?___ftpack,?___lbtoft
  4991  002AD2  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  4992  002AD6  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  4993  002ADA  D000               	goto	l707
  4994  002ADC                     l707:
  4995  002ADC  0012               	return		;funcret
  4996  002ADE                     __end_of___lbtoft:
  4997                           	opt stack 0
  4998                           tblptru	equ	0xFF8
  4999                           tblptrh	equ	0xFF7
  5000                           tblptrl	equ	0xFF6
  5001                           tablat	equ	0xFF5
  5002                           prodh	equ	0xFF4
  5003                           prodl	equ	0xFF3
  5004                           postinc0	equ	0xFEE
  5005                           wreg	equ	0xFE8
  5006                           postdec1	equ	0xFE5
  5007                           fsr1l	equ	0xFE1
  5008                           postinc2	equ	0xFDE
  5009                           postdec2	equ	0xFDD
  5010                           fsr2h	equ	0xFDA
  5011                           fsr2l	equ	0xFD9
  5012                           status	equ	0xFD8
  5013                           
  5014 ;; *************** function ___ftdiv *****************
  5015 ;; Defined at:
  5016 ;;		line 54 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;  f1              3   42[COMRAM] float 
  5019 ;;  f2              3   45[COMRAM] float 
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;  f3              3   52[COMRAM] float 
  5022 ;;  sign            1   56[COMRAM] unsigned char 
  5023 ;;  exp             1   55[COMRAM] unsigned char 
  5024 ;;  cntr            1   51[COMRAM] unsigned char 
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  3   42[COMRAM] float 
  5027 ;; Registers used:
  5028 ;;		wreg, status,2, status,0, cstack
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5034 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5035 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5036 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5037 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5038 ;;Total ram usage:       15 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; Hardware stack levels required when called:    1
  5041 ;; This function calls:
  5042 ;;		___ftpack
  5043 ;; This function is called by:
  5044 ;;		_main
  5045 ;; This function uses a non-reentrant model
  5046 ;;
  5047                           
  5048                           	psect	text21
  5049  002486                     __ptext21:
  5050                           	opt stack 0
  5051  002486                     ___ftdiv:
  5052                           	opt stack 29
  5053                           
  5054                           ;incstack = 0
  5055  002486  C02D  F031         	movff	___ftdiv@f1+2,??___ftdiv
  5056  00248A  6A32               	clrf	(??___ftdiv+1)& (0+255),c
  5057  00248C  6A33               	clrf	(??___ftdiv+2)& (0+255),c
  5058  00248E  342C               	rlcf	___ftdiv@f1+1,w,c
  5059  002490  3631               	rlcf	??___ftdiv& (0+255),f,c
  5060  002492  E301               	bnc	u2841
  5061  002494  8032               	bsf	(??___ftdiv+1)& (0+255),0,c
  5062  002496                     u2841:
  5063  002496  5031               	movf	??___ftdiv,w,c
  5064  002498  6E38               	movwf	___ftdiv@exp,c
  5065  00249A  5038               	movf	___ftdiv@exp,w,c
  5066  00249C  A4D8               	btfss	status,2,c
  5067  00249E  D002               	goto	l2580
  5068  0024A0  D00E               	goto	l2582
  5069  0024A2  D061               	goto	l613
  5070  0024A4                     l2580:
  5071  0024A4  C030  F031         	movff	___ftdiv@f2+2,??___ftdiv
  5072  0024A8  6A32               	clrf	(??___ftdiv+1)& (0+255),c
  5073  0024AA  6A33               	clrf	(??___ftdiv+2)& (0+255),c
  5074  0024AC  342F               	rlcf	___ftdiv@f2+1,w,c
  5075  0024AE  3631               	rlcf	??___ftdiv& (0+255),f,c
  5076  0024B0  E301               	bnc	u2861
  5077  0024B2  8032               	bsf	(??___ftdiv+1)& (0+255),0,c
  5078  0024B4                     u2861:
  5079  0024B4  5031               	movf	??___ftdiv,w,c
  5080  0024B6  6E39               	movwf	___ftdiv@sign,c
  5081  0024B8  5039               	movf	___ftdiv@sign,w,c
  5082  0024BA  A4D8               	btfss	status,2,c
  5083  0024BC  D007               	goto	l2586
  5084  0024BE                     l2582:
  5085  0024BE  0E00               	movlw	0
  5086  0024C0  6E2B               	movwf	?___ftdiv,c
  5087  0024C2  0E00               	movlw	0
  5088  0024C4  6E2C               	movwf	?___ftdiv+1,c
  5089  0024C6  0E00               	movlw	0
  5090  0024C8  6E2D               	movwf	?___ftdiv+2,c
  5091  0024CA  D04D               	goto	l613
  5092  0024CC                     l2586:
  5093  0024CC  0E00               	movlw	0
  5094  0024CE  6E35               	movwf	___ftdiv@f3,c
  5095  0024D0  0E00               	movlw	0
  5096  0024D2  6E36               	movwf	___ftdiv@f3+1,c
  5097  0024D4  0E00               	movlw	0
  5098  0024D6  6E37               	movwf	___ftdiv@f3+2,c
  5099  0024D8  5039               	movf	___ftdiv@sign,w,c
  5100  0024DA  0F89               	addlw	137
  5101  0024DC  5E38               	subwf	___ftdiv@exp,f,c
  5102  0024DE  C02D  F039         	movff	___ftdiv@f1+2,___ftdiv@sign
  5103  0024E2  5030               	movf	___ftdiv@f2+2,w,c
  5104  0024E4  1A39               	xorwf	___ftdiv@sign,f,c
  5105  0024E6  0E80               	movlw	128
  5106  0024E8  1639               	andwf	___ftdiv@sign,f,c
  5107  0024EA  8E2C               	bsf	___ftdiv@f1+1,7,c
  5108  0024EC  0EFF               	movlw	255
  5109  0024EE  162B               	andwf	___ftdiv@f1,f,c
  5110  0024F0  0EFF               	movlw	255
  5111  0024F2  162C               	andwf	___ftdiv@f1+1,f,c
  5112  0024F4  0E00               	movlw	0
  5113  0024F6  162D               	andwf	___ftdiv@f1+2,f,c
  5114  0024F8  8E2F               	bsf	___ftdiv@f2+1,7,c
  5115  0024FA  0EFF               	movlw	255
  5116  0024FC  162E               	andwf	___ftdiv@f2,f,c
  5117  0024FE  0EFF               	movlw	255
  5118  002500  162F               	andwf	___ftdiv@f2+1,f,c
  5119  002502  0E00               	movlw	0
  5120  002504  1630               	andwf	___ftdiv@f2+2,f,c
  5121  002506  0E18               	movlw	24
  5122  002508  6E34               	movwf	___ftdiv@cntr,c
  5123  00250A  D000               	goto	l2606
  5124  00250C                     l2606:
  5125  00250C  90D8               	bcf	status,0,c
  5126  00250E  3635               	rlcf	___ftdiv@f3,f,c
  5127  002510  3636               	rlcf	___ftdiv@f3+1,f,c
  5128  002512  3637               	rlcf	___ftdiv@f3+2,f,c
  5129  002514  502E               	movf	___ftdiv@f2,w,c
  5130  002516  5C2B               	subwf	___ftdiv@f1,w,c
  5131  002518  502F               	movf	___ftdiv@f2+1,w,c
  5132  00251A  582C               	subwfb	___ftdiv@f1+1,w,c
  5133  00251C  5030               	movf	___ftdiv@f2+2,w,c
  5134  00251E  582D               	subwfb	___ftdiv@f1+2,w,c
  5135  002520  A0D8               	btfss	status,0,c
  5136  002522  D007               	goto	l616
  5137  002524  502E               	movf	___ftdiv@f2,w,c
  5138  002526  5E2B               	subwf	___ftdiv@f1,f,c
  5139  002528  502F               	movf	___ftdiv@f2+1,w,c
  5140  00252A  5A2C               	subwfb	___ftdiv@f1+1,f,c
  5141  00252C  5030               	movf	___ftdiv@f2+2,w,c
  5142  00252E  5A2D               	subwfb	___ftdiv@f1+2,f,c
  5143  002530  8035               	bsf	___ftdiv@f3,0,c
  5144  002532                     l616:
  5145  002532  90D8               	bcf	status,0,c
  5146  002534  362B               	rlcf	___ftdiv@f1,f,c
  5147  002536  362C               	rlcf	___ftdiv@f1+1,f,c
  5148  002538  362D               	rlcf	___ftdiv@f1+2,f,c
  5149  00253A  2E34               	decfsz	___ftdiv@cntr,f,c
  5150  00253C  D7E7               	goto	l2606
  5151  00253E  D000               	goto	l2616
  5152  002540                     l2616:
  5153  002540  C035  F001         	movff	___ftdiv@f3,___ftpack@arg
  5154  002544  C036  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5155  002548  C037  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5156  00254C  C038  F004         	movff	___ftdiv@exp,___ftpack@exp
  5157  002550  C039  F005         	movff	___ftdiv@sign,___ftpack@sign
  5158  002554  ECB4  F012         	call	___ftpack	;wreg free
  5159  002558  C001  F02B         	movff	?___ftpack,?___ftdiv
  5160  00255C  C002  F02C         	movff	?___ftpack+1,?___ftdiv+1
  5161  002560  C003  F02D         	movff	?___ftpack+2,?___ftdiv+2
  5162  002564  D000               	goto	l613
  5163  002566                     l613:
  5164  002566  0012               	return		;funcret
  5165  002568                     __end_of___ftdiv:
  5166                           	opt stack 0
  5167                           tblptru	equ	0xFF8
  5168                           tblptrh	equ	0xFF7
  5169                           tblptrl	equ	0xFF6
  5170                           tablat	equ	0xFF5
  5171                           prodh	equ	0xFF4
  5172                           prodl	equ	0xFF3
  5173                           postinc0	equ	0xFEE
  5174                           wreg	equ	0xFE8
  5175                           postdec1	equ	0xFE5
  5176                           fsr1l	equ	0xFE1
  5177                           postinc2	equ	0xFDE
  5178                           postdec2	equ	0xFDD
  5179                           fsr2h	equ	0xFDA
  5180                           fsr2l	equ	0xFD9
  5181                           status	equ	0xFD8
  5182                           
  5183 ;; *************** function ___awtoft *****************
  5184 ;; Defined at:
  5185 ;;		line 32 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\awtoft.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;  c               2    8[COMRAM] int 
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  sign            1   11[COMRAM] unsigned char 
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  3    8[COMRAM] float 
  5192 ;; Registers used:
  5193 ;;		wreg, status,2, status,0, cstack
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5199 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5200 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5202 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5203 ;;Total ram usage:        4 bytes
  5204 ;; Hardware stack levels used:    1
  5205 ;; Hardware stack levels required when called:    1
  5206 ;; This function calls:
  5207 ;;		___ftpack
  5208 ;; This function is called by:
  5209 ;;		_main
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           	psect	text22
  5214  002A2A                     __ptext22:
  5215                           	opt stack 0
  5216  002A2A                     ___awtoft:
  5217                           	opt stack 29
  5218                           
  5219                           ;incstack = 0
  5220  002A2A  0E00               	movlw	0
  5221  002A2C  6E0C               	movwf	___awtoft@sign,c
  5222  002A2E  AE0A               	btfss	___awtoft@c+1,7,c
  5223  002A30  D007               	goto	l2628
  5224  002A32  6C09               	negf	___awtoft@c,c
  5225  002A34  1E0A               	comf	___awtoft@c+1,f,c
  5226  002A36  B0D8               	btfsc	status,0,c
  5227  002A38  2A0A               	incf	___awtoft@c+1,f,c
  5228  002A3A  0E01               	movlw	1
  5229  002A3C  6E0C               	movwf	___awtoft@sign,c
  5230  002A3E  D000               	goto	l2628
  5231  002A40                     l2628:
  5232  002A40  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5233  002A44  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5234  002A48  6A03               	clrf	___ftpack@arg+2,c
  5235  002A4A  0E8E               	movlw	142
  5236  002A4C  6E04               	movwf	___ftpack@exp,c
  5237  002A4E  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5238  002A52  ECB4  F012         	call	___ftpack	;wreg free
  5239  002A56  C001  F009         	movff	?___ftpack,?___awtoft
  5240  002A5A  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5241  002A5E  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5242  002A62  D000               	goto	l434
  5243  002A64                     l434:
  5244  002A64  0012               	return		;funcret
  5245  002A66                     __end_of___awtoft:
  5246                           	opt stack 0
  5247                           tblptru	equ	0xFF8
  5248                           tblptrh	equ	0xFF7
  5249                           tblptrl	equ	0xFF6
  5250                           tablat	equ	0xFF5
  5251                           prodh	equ	0xFF4
  5252                           prodl	equ	0xFF3
  5253                           postinc0	equ	0xFEE
  5254                           wreg	equ	0xFE8
  5255                           postdec1	equ	0xFE5
  5256                           fsr1l	equ	0xFE1
  5257                           postinc2	equ	0xFDE
  5258                           postdec2	equ	0xFDD
  5259                           fsr2h	equ	0xFDA
  5260                           fsr2l	equ	0xFD9
  5261                           status	equ	0xFD8
  5262                           
  5263 ;; *************** function ___ftpack *****************
  5264 ;; Defined at:
  5265 ;;		line 62 in file "C:\My Programs\Microchip\xc8\v1.34\sources\common\float.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;  arg             3    0[COMRAM] unsigned um
  5268 ;;  exp             1    3[COMRAM] unsigned char 
  5269 ;;  sign            1    4[COMRAM] unsigned char 
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;		None
  5272 ;; Return value:  Size  Location     Type
  5273 ;;                  3    0[COMRAM] float 
  5274 ;; Registers used:
  5275 ;;		wreg, status,2, status,0
  5276 ;; Tracked objects:
  5277 ;;		On entry : 0/0
  5278 ;;		On exit  : 0/0
  5279 ;;		Unchanged: 0/0
  5280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5281 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5283 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5284 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5285 ;;Total ram usage:        8 bytes
  5286 ;; Hardware stack levels used:    1
  5287 ;; This function calls:
  5288 ;;		Nothing
  5289 ;; This function is called by:
  5290 ;;		___awtoft
  5291 ;;		___ftadd
  5292 ;;		___ftdiv
  5293 ;;		___ftmul
  5294 ;;		___lbtoft
  5295 ;;		___lltoft
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299                           	psect	text23
  5300  002568                     __ptext23:
  5301                           	opt stack 0
  5302  002568                     ___ftpack:
  5303                           	opt stack 27
  5304                           
  5305                           ;incstack = 0
  5306  002568  5004               	movf	___ftpack@exp,w,c
  5307  00256A  B4D8               	btfsc	status,2,c
  5308  00256C  D005               	goto	l1776
  5309  00256E  5001               	movf	___ftpack@arg,w,c
  5310  002570  1002               	iorwf	___ftpack@arg+1,w,c
  5311  002572  1003               	iorwf	___ftpack@arg+2,w,c
  5312  002574  A4D8               	btfss	status,2,c
  5313  002576  D00E               	goto	l1782
  5314  002578                     l1776:
  5315  002578  0E00               	movlw	0
  5316  00257A  6E01               	movwf	?___ftpack,c
  5317  00257C  0E00               	movlw	0
  5318  00257E  6E02               	movwf	?___ftpack+1,c
  5319  002580  0E00               	movlw	0
  5320  002582  6E03               	movwf	?___ftpack+2,c
  5321  002584  D053               	goto	l541
  5322  002586  D006               	goto	l1782
  5323  002588                     l1780:
  5324  002588  2A04               	incf	___ftpack@exp,f,c
  5325  00258A  90D8               	bcf	status,0,c
  5326  00258C  3203               	rrcf	___ftpack@arg+2,f,c
  5327  00258E  3202               	rrcf	___ftpack@arg+1,f,c
  5328  002590  3201               	rrcf	___ftpack@arg,f,c
  5329  002592  D000               	goto	l1782
  5330  002594                     l1782:
  5331  002594  0E00               	movlw	0
  5332  002596  1401               	andwf	___ftpack@arg,w,c
  5333  002598  6E06               	movwf	??___ftpack& (0+255),c
  5334  00259A  0E00               	movlw	0
  5335  00259C  1402               	andwf	___ftpack@arg+1,w,c
  5336  00259E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5337  0025A0  0EFE               	movlw	254
  5338  0025A2  1403               	andwf	___ftpack@arg+2,w,c
  5339  0025A4  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5340  0025A6  5006               	movf	??___ftpack,w,c
  5341  0025A8  1007               	iorwf	??___ftpack+1,w,c
  5342  0025AA  1008               	iorwf	??___ftpack+2,w,c
  5343  0025AC  B4D8               	btfsc	status,2,c
  5344  0025AE  D00E               	goto	l1788
  5345  0025B0  D7EB               	goto	l1780
  5346  0025B2  D00C               	goto	l1788
  5347  0025B4                     l1784:
  5348  0025B4  2A04               	incf	___ftpack@exp,f,c
  5349  0025B6  0E01               	movlw	1
  5350  0025B8  2601               	addwf	___ftpack@arg,f,c
  5351  0025BA  0E00               	movlw	0
  5352  0025BC  2202               	addwfc	___ftpack@arg+1,f,c
  5353  0025BE  0E00               	movlw	0
  5354  0025C0  2203               	addwfc	___ftpack@arg+2,f,c
  5355  0025C2  90D8               	bcf	status,0,c
  5356  0025C4  3203               	rrcf	___ftpack@arg+2,f,c
  5357  0025C6  3202               	rrcf	___ftpack@arg+1,f,c
  5358  0025C8  3201               	rrcf	___ftpack@arg,f,c
  5359  0025CA  D000               	goto	l1788
  5360  0025CC                     l1788:
  5361  0025CC  0E00               	movlw	0
  5362  0025CE  1401               	andwf	___ftpack@arg,w,c
  5363  0025D0  6E06               	movwf	??___ftpack& (0+255),c
  5364  0025D2  0E00               	movlw	0
  5365  0025D4  1402               	andwf	___ftpack@arg+1,w,c
  5366  0025D6  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5367  0025D8  0EFF               	movlw	255
  5368  0025DA  1403               	andwf	___ftpack@arg+2,w,c
  5369  0025DC  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5370  0025DE  5006               	movf	??___ftpack,w,c
  5371  0025E0  1007               	iorwf	??___ftpack+1,w,c
  5372  0025E2  1008               	iorwf	??___ftpack+2,w,c
  5373  0025E4  B4D8               	btfsc	status,2,c
  5374  0025E6  D008               	goto	l1792
  5375  0025E8  D7E5               	goto	l1784
  5376  0025EA  D006               	goto	l1792
  5377  0025EC                     l1790:
  5378  0025EC  0604               	decf	___ftpack@exp,f,c
  5379  0025EE  90D8               	bcf	status,0,c
  5380  0025F0  3601               	rlcf	___ftpack@arg,f,c
  5381  0025F2  3602               	rlcf	___ftpack@arg+1,f,c
  5382  0025F4  3603               	rlcf	___ftpack@arg+2,f,c
  5383  0025F6  D000               	goto	l1792
  5384  0025F8                     l1792:
  5385  0025F8  BE02               	btfsc	___ftpack@arg+1,7,c
  5386  0025FA  D004               	goto	l552
  5387  0025FC  0E02               	movlw	2
  5388  0025FE  6004               	cpfslt	___ftpack@exp,c
  5389  002600  D7F5               	goto	l1790
  5390  002602  D000               	goto	l552
  5391  002604                     l552:
  5392  002604  B004               	btfsc	___ftpack@exp,0,c
  5393  002606  D002               	goto	l1798
  5394  002608  9E02               	bcf	___ftpack@arg+1,7,c
  5395  00260A  D000               	goto	l1798
  5396  00260C                     l1798:
  5397  00260C  90D8               	bcf	status,0,c
  5398  00260E  3204               	rrcf	___ftpack@exp,f,c
  5399  002610  5004               	movf	___ftpack@exp,w,c
  5400  002612  1203               	iorwf	___ftpack@arg+2,f,c
  5401  002614  5005               	movf	___ftpack@sign,w,c
  5402  002616  B4D8               	btfsc	status,2,c
  5403  002618  D002               	goto	l1804
  5404  00261A  8E03               	bsf	___ftpack@arg+2,7,c
  5405  00261C  D000               	goto	l1804
  5406  00261E                     l1804:
  5407  00261E  C001  F001         	movff	___ftpack@arg,?___ftpack
  5408  002622  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5409  002626  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5410  00262A  D000               	goto	l541
  5411  00262C                     l541:
  5412  00262C  0012               	return		;funcret
  5413  00262E                     __end_of___ftpack:
  5414                           	opt stack 0
  5415                           tblptru	equ	0xFF8
  5416                           tblptrh	equ	0xFF7
  5417                           tblptrl	equ	0xFF6
  5418                           tablat	equ	0xFF5
  5419                           prodh	equ	0xFF4
  5420                           prodl	equ	0xFF3
  5421                           postinc0	equ	0xFEE
  5422                           wreg	equ	0xFE8
  5423                           postdec1	equ	0xFE5
  5424                           fsr1l	equ	0xFE1
  5425                           postinc2	equ	0xFDE
  5426                           postdec2	equ	0xFDD
  5427                           fsr2h	equ	0xFDA
  5428                           fsr2l	equ	0xFD9
  5429                           status	equ	0xFD8
  5430                           
  5431 ;; *************** function _WAIT_1_SEC *****************
  5432 ;; Defined at:
  5433 ;;		line 35 in file "Lab6pA1.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;		None
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;  j               2    0[COMRAM] int 
  5438 ;; Return value:  Size  Location     Type
  5439 ;;		None               void
  5440 ;; Registers used:
  5441 ;;		wreg, status,2, status,0
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5448 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5450 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5451 ;;Total ram usage:        2 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; This function calls:
  5454 ;;		Nothing
  5455 ;; This function is called by:
  5456 ;;		_main
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460                           	psect	text24
  5461  002B28                     __ptext24:
  5462                           	opt stack 0
  5463  002B28                     _WAIT_1_SEC:
  5464                           	opt stack 30
  5465                           
  5466                           ;Lab6pA1.c: 37: for (int j=0;j<17000;j++);
  5467                           
  5468                           ;incstack = 0
  5469  002B28  0E00               	movlw	0
  5470  002B2A  6E02               	movwf	WAIT_1_SEC@j+1,c
  5471  002B2C  0E00               	movlw	0
  5472  002B2E  6E01               	movwf	WAIT_1_SEC@j,c
  5473  002B30                     l1466:
  5474  002B30  BE02               	btfsc	WAIT_1_SEC@j+1,7,c
  5475  002B32  D008               	goto	l1470
  5476  002B34  0E68               	movlw	104
  5477  002B36  5C01               	subwf	WAIT_1_SEC@j,w,c
  5478  002B38  0E42               	movlw	66
  5479  002B3A  5802               	subwfb	WAIT_1_SEC@j+1,w,c
  5480  002B3C  B0D8               	btfsc	status,0,c
  5481  002B3E  D005               	goto	l53
  5482  002B40  D001               	goto	l1470
  5483  002B42  D003               	goto	l53
  5484  002B44                     l1470:
  5485  002B44  4A01               	infsnz	WAIT_1_SEC@j,f,c
  5486  002B46  2A02               	incf	WAIT_1_SEC@j+1,f,c
  5487  002B48  D7F3               	goto	l1466
  5488  002B4A                     l53:
  5489  002B4A  0012               	return		;funcret
  5490  002B4C                     __end_of_WAIT_1_SEC:
  5491                           	opt stack 0
  5492                           tblptru	equ	0xFF8
  5493                           tblptrh	equ	0xFF7
  5494                           tblptrl	equ	0xFF6
  5495                           tablat	equ	0xFF5
  5496                           prodh	equ	0xFF4
  5497                           prodl	equ	0xFF3
  5498                           postinc0	equ	0xFEE
  5499                           wreg	equ	0xFE8
  5500                           postdec1	equ	0xFE5
  5501                           fsr1l	equ	0xFE1
  5502                           postinc2	equ	0xFDE
  5503                           postdec2	equ	0xFDD
  5504                           fsr2h	equ	0xFDA
  5505                           fsr2l	equ	0xFD9
  5506                           status	equ	0xFD8
  5507                           
  5508 ;; *************** function _Select_ADC_Channel *****************
  5509 ;; Defined at:
  5510 ;;		line 40 in file "Lab6pA1.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  channel         1    wreg     unsigned char 
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;  channel         1    0[COMRAM] unsigned char 
  5515 ;; Return value:  Size  Location     Type
  5516 ;;		None               void
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0, prodl, prodh
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5525 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5527 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5528 ;;Total ram usage:        1 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; This function calls:
  5531 ;;		Nothing
  5532 ;; This function is called by:
  5533 ;;		_main
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           	psect	text25
  5538  002BBE                     __ptext25:
  5539                           	opt stack 0
  5540  002BBE                     _Select_ADC_Channel:
  5541                           	opt stack 30
  5542                           
  5543                           ;incstack = 0
  5544                           ;Select_ADC_Channel@channel stored from wreg
  5545  002BBE  6E01               	movwf	Select_ADC_Channel@channel,c
  5546                           
  5547                           ;Lab6pA1.c: 42: ADCON0 = channel * 4 + 1;
  5548  002BC0  5001               	movf	Select_ADC_Channel@channel,w,c
  5549  002BC2  0D04               	mullw	4
  5550  002BC4  28F3               	incf	prodl,w,c
  5551  002BC6  6EC2               	movwf	4034,c	;volatile
  5552  002BC8  0012               	return		;funcret
  5553  002BCA                     __end_of_Select_ADC_Channel:
  5554                           	opt stack 0
  5555                           tblptru	equ	0xFF8
  5556                           tblptrh	equ	0xFF7
  5557                           tblptrl	equ	0xFF6
  5558                           tablat	equ	0xFF5
  5559                           prodh	equ	0xFF4
  5560                           prodl	equ	0xFF3
  5561                           postinc0	equ	0xFEE
  5562                           wreg	equ	0xFE8
  5563                           postdec1	equ	0xFE5
  5564                           fsr1l	equ	0xFE1
  5565                           postinc2	equ	0xFDE
  5566                           postdec2	equ	0xFDD
  5567                           fsr2h	equ	0xFDA
  5568                           fsr2l	equ	0xFD9
  5569                           status	equ	0xFD8
  5570                           
  5571 ;; *************** function _Init_UART *****************
  5572 ;; Defined at:
  5573 ;;		line 64 in file "Lab6pA1.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;		None
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;		None
  5578 ;; Return value:  Size  Location     Type
  5579 ;;		None               void
  5580 ;; Registers used:
  5581 ;;		wreg, status,2, cstack
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5591 ;;Total ram usage:        0 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; Hardware stack levels required when called:    1
  5594 ;; This function calls:
  5595 ;;		_OpenUSART
  5596 ;; This function is called by:
  5597 ;;		_main
  5598 ;; This function uses a non-reentrant model
  5599 ;;
  5600                           
  5601                           	psect	text26
  5602  002B9C                     __ptext26:
  5603                           	opt stack 0
  5604  002B9C                     _Init_UART:
  5605                           	opt stack 29
  5606                           
  5607                           ;Lab6pA1.c: 66: OpenUSART (0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b1111111
      +                          1 & 0b11111111, 25);
  5608                           
  5609                           ;incstack = 0
  5610  002B9C  0E00               	movlw	0
  5611  002B9E  6E02               	movwf	OpenUSART@spbrg+1,c
  5612  002BA0  0E19               	movlw	25
  5613  002BA2  6E01               	movwf	OpenUSART@spbrg,c
  5614  002BA4  0E3C               	movlw	60
  5615  002BA6  EC6C  F014         	call	_OpenUSART
  5616                           
  5617                           ;Lab6pA1.c: 67: OSCCON = 0x60;
  5618  002BAA  0E60               	movlw	96
  5619  002BAC  6ED3               	movwf	4051,c	;volatile
  5620  002BAE  0012               	return		;funcret
  5621  002BB0                     __end_of_Init_UART:
  5622                           	opt stack 0
  5623                           tblptru	equ	0xFF8
  5624                           tblptrh	equ	0xFF7
  5625                           tblptrl	equ	0xFF6
  5626                           tablat	equ	0xFF5
  5627                           prodh	equ	0xFF4
  5628                           prodl	equ	0xFF3
  5629                           postinc0	equ	0xFEE
  5630                           wreg	equ	0xFE8
  5631                           postdec1	equ	0xFE5
  5632                           fsr1l	equ	0xFE1
  5633                           postinc2	equ	0xFDE
  5634                           postdec2	equ	0xFDD
  5635                           fsr2h	equ	0xFDA
  5636                           fsr2l	equ	0xFD9
  5637                           status	equ	0xFD8
  5638                           
  5639 ;; *************** function _OpenUSART *****************
  5640 ;; Defined at:
  5641 ;;		line 73 in file "C:\My Programs\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  config          1    wreg     unsigned char 
  5644 ;;  spbrg           2    0[COMRAM] unsigned int 
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;  config          1    2[COMRAM] unsigned char 
  5647 ;; Return value:  Size  Location     Type
  5648 ;;		None               void
  5649 ;; Registers used:
  5650 ;;		wreg, status,2
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5657 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5659 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5660 ;;Total ram usage:        3 bytes
  5661 ;; Hardware stack levels used:    1
  5662 ;; This function calls:
  5663 ;;		Nothing
  5664 ;; This function is called by:
  5665 ;;		_Init_UART
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           	psect	text27
  5670  0028D8                     __ptext27:
  5671                           	opt stack 0
  5672  0028D8                     _OpenUSART:
  5673                           	opt stack 29
  5674                           
  5675                           ;incstack = 0
  5676                           ;OpenUSART@config stored from wreg
  5677  0028D8  6E03               	movwf	OpenUSART@config,c
  5678  0028DA  0E00               	movlw	0
  5679  0028DC  6EAC               	movwf	4012,c	;volatile
  5680  0028DE  0E00               	movlw	0
  5681  0028E0  6EAB               	movwf	4011,c	;volatile
  5682  0028E2  A003               	btfss	OpenUSART@config,0,c
  5683  0028E4  D002               	goto	l2022
  5684  0028E6  88AC               	bsf	4012,4,c	;volatile
  5685  0028E8  D000               	goto	l2022
  5686  0028EA                     l2022:
  5687  0028EA  A203               	btfss	OpenUSART@config,1,c
  5688  0028EC  D003               	goto	l2026
  5689  0028EE  8CAC               	bsf	4012,6,c	;volatile
  5690  0028F0  8CAB               	bsf	4011,6,c	;volatile
  5691  0028F2  D000               	goto	l2026
  5692  0028F4                     l2026:
  5693  0028F4  A403               	btfss	OpenUSART@config,2,c
  5694  0028F6  D002               	goto	l2030
  5695  0028F8  8EAC               	bsf	4012,7,c	;volatile
  5696  0028FA  D000               	goto	l2030
  5697  0028FC                     l2030:
  5698  0028FC  A603               	btfss	OpenUSART@config,3,c
  5699  0028FE  D002               	goto	l204
  5700  002900  88AB               	bsf	4011,4,c	;volatile
  5701  002902  D002               	goto	l2034
  5702  002904                     l204:
  5703  002904  8AAB               	bsf	4011,5,c	;volatile
  5704  002906  D000               	goto	l2034
  5705  002908                     l2034:
  5706  002908  B803               	btfsc	OpenUSART@config,4,c
  5707  00290A  84AC               	bsf	4012,2,c	;volatile
  5708  00290C  989E               	bcf	3998,4,c	;volatile
  5709  00290E  AA03               	btfss	OpenUSART@config,5,c
  5710  002910  D002               	goto	l2042
  5711  002912  86AB               	bsf	4011,3,c	;volatile
  5712  002914  D000               	goto	l2042
  5713  002916                     l2042:
  5714  002916  AC03               	btfss	OpenUSART@config,6,c
  5715  002918  D002               	goto	l208
  5716  00291A  8A9D               	bsf	3997,5,c	;volatile
  5717  00291C  D001               	goto	l209
  5718  00291E                     l208:
  5719  00291E  9A9D               	bcf	3997,5,c	;volatile
  5720  002920                     l209:
  5721  002920  9A9E               	bcf	3998,5,c	;volatile
  5722  002922  AE03               	btfss	OpenUSART@config,7,c
  5723  002924  D002               	goto	l210
  5724  002926  889D               	bsf	3997,4,c	;volatile
  5725  002928  D001               	goto	l211
  5726  00292A                     l210:
  5727  00292A  989D               	bcf	3997,4,c	;volatile
  5728  00292C                     l211:
  5729  00292C  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5730  002930  5002               	movf	OpenUSART@spbrg+1,w,c
  5731  002932  6EB0               	movwf	4016,c	;volatile
  5732  002934  8AAC               	bsf	4012,5,c	;volatile
  5733  002936  8EAB               	bsf	4011,7,c	;volatile
  5734  002938  9C94               	bcf	3988,6,c	;volatile
  5735  00293A  8E94               	bsf	3988,7,c	;volatile
  5736  00293C  B8AC               	btfsc	4012,4,c	;volatile
  5737  00293E  BEAC               	btfsc	4012,7,c	;volatile
  5738  002940  D002               	goto	l213
  5739  002942  8C94               	bsf	3988,6,c	;volatile
  5740  002944  D000               	goto	l213
  5741  002946                     l213:
  5742  002946  0012               	return		;funcret
  5743  002948                     __end_of_OpenUSART:
  5744                           	opt stack 0
  5745                           tblptru	equ	0xFF8
  5746                           tblptrh	equ	0xFF7
  5747                           tblptrl	equ	0xFF6
  5748                           tablat	equ	0xFF5
  5749                           prodh	equ	0xFF4
  5750                           prodl	equ	0xFF3
  5751                           postinc0	equ	0xFEE
  5752                           wreg	equ	0xFE8
  5753                           postdec1	equ	0xFE5
  5754                           fsr1l	equ	0xFE1
  5755                           postinc2	equ	0xFDE
  5756                           postdec2	equ	0xFDD
  5757                           fsr2h	equ	0xFDA
  5758                           fsr2l	equ	0xFD9
  5759                           status	equ	0xFD8
  5760                           
  5761 ;; *************** function _Init_TRIS *****************
  5762 ;; Defined at:
  5763 ;;		line 80 in file "Lab6pA1.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;		None
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;		None
  5768 ;; Return value:  Size  Location     Type
  5769 ;;		None               void
  5770 ;; Registers used:
  5771 ;;		wreg, status,2
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5781 ;;Total ram usage:        0 bytes
  5782 ;; Hardware stack levels used:    1
  5783 ;; This function calls:
  5784 ;;		Nothing
  5785 ;; This function is called by:
  5786 ;;		_main
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text28
  5791  002B86                     __ptext28:
  5792                           	opt stack 0
  5793  002B86                     _Init_TRIS:
  5794                           	opt stack 30
  5795                           
  5796                           ;Lab6pA1.c: 82: TRISA = 0x3F;
  5797                           
  5798                           ;incstack = 0
  5799  002B86  0E3F               	movlw	63
  5800  002B88  6E92               	movwf	3986,c	;volatile
  5801                           
  5802                           ;Lab6pA1.c: 83: TRISB = 0x00;
  5803  002B8A  0E00               	movlw	0
  5804  002B8C  6E93               	movwf	3987,c	;volatile
  5805                           
  5806                           ;Lab6pA1.c: 84: TRISC = 0x00;
  5807  002B8E  0E00               	movlw	0
  5808  002B90  6E94               	movwf	3988,c	;volatile
  5809                           
  5810                           ;Lab6pA1.c: 85: TRISD = 0x00;
  5811  002B92  0E00               	movlw	0
  5812  002B94  6E95               	movwf	3989,c	;volatile
  5813                           
  5814                           ;Lab6pA1.c: 86: TRISE = 0x00;
  5815  002B96  0E00               	movlw	0
  5816  002B98  6E96               	movwf	3990,c	;volatile
  5817  002B9A  0012               	return		;funcret
  5818  002B9C                     __end_of_Init_TRIS:
  5819                           	opt stack 0
  5820                           tblptru	equ	0xFF8
  5821                           tblptrh	equ	0xFF7
  5822                           tblptrl	equ	0xFF6
  5823                           tablat	equ	0xFF5
  5824                           prodh	equ	0xFF4
  5825                           prodl	equ	0xFF3
  5826                           postinc0	equ	0xFEE
  5827                           wreg	equ	0xFE8
  5828                           postdec1	equ	0xFE5
  5829                           fsr1l	equ	0xFE1
  5830                           postinc2	equ	0xFDE
  5831                           postdec2	equ	0xFDD
  5832                           fsr2h	equ	0xFDA
  5833                           fsr2l	equ	0xFD9
  5834                           status	equ	0xFD8
  5835                           
  5836 ;; *************** function _Init_ADC *****************
  5837 ;; Defined at:
  5838 ;;		line 45 in file "Lab6pA1.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;		None
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;		None
  5843 ;; Return value:  Size  Location     Type
  5844 ;;		None               void
  5845 ;; Registers used:
  5846 ;;		wreg, status,2
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5856 ;;Total ram usage:        0 bytes
  5857 ;; Hardware stack levels used:    1
  5858 ;; This function calls:
  5859 ;;		Nothing
  5860 ;; This function is called by:
  5861 ;;		_main
  5862 ;; This function uses a non-reentrant model
  5863 ;;
  5864                           
  5865                           	psect	text29
  5866  002BD4                     __ptext29:
  5867                           	opt stack 0
  5868  002BD4                     _Init_ADC:
  5869                           	opt stack 30
  5870                           
  5871                           ;Lab6pA1.c: 47: ADCON1=0x1A;
  5872                           
  5873                           ;incstack = 0
  5874  002BD4  0E1A               	movlw	26
  5875  002BD6  6EC1               	movwf	4033,c	;volatile
  5876                           
  5877                           ;Lab6pA1.c: 48: ADCON2=0xA9;
  5878  002BD8  0EA9               	movlw	169
  5879  002BDA  6EC0               	movwf	4032,c	;volatile
  5880  002BDC  0012               	return		;funcret
  5881  002BDE                     __end_of_Init_ADC:
  5882                           	opt stack 0
  5883                           tblptru	equ	0xFF8
  5884                           tblptrh	equ	0xFF7
  5885                           tblptrl	equ	0xFF6
  5886                           tablat	equ	0xFF5
  5887                           prodh	equ	0xFF4
  5888                           prodl	equ	0xFF3
  5889                           postinc0	equ	0xFEE
  5890                           wreg	equ	0xFE8
  5891                           postdec1	equ	0xFE5
  5892                           fsr1l	equ	0xFE1
  5893                           postinc2	equ	0xFDE
  5894                           postdec2	equ	0xFDD
  5895                           fsr2h	equ	0xFDA
  5896                           fsr2l	equ	0xFD9
  5897                           status	equ	0xFD8
  5898                           
  5899 ;; *************** function _Get_Full_ADC *****************
  5900 ;; Defined at:
  5901 ;;		line 70 in file "Lab6pA1.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;		None
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;  result          2    4[COMRAM] int 
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  2    0[COMRAM] unsigned int 
  5908 ;; Registers used:
  5909 ;;		wreg, status,2, status,0
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5915 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5916 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5918 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5919 ;;Total ram usage:        6 bytes
  5920 ;; Hardware stack levels used:    1
  5921 ;; This function calls:
  5922 ;;		Nothing
  5923 ;; This function is called by:
  5924 ;;		_main
  5925 ;; This function uses a non-reentrant model
  5926 ;;
  5927                           
  5928                           	psect	text30
  5929  002ADE                     __ptext30:
  5930                           	opt stack 0
  5931  002ADE                     _Get_Full_ADC:
  5932                           	opt stack 30
  5933                           
  5934                           ;Lab6pA1.c: 72: int result;
  5935                           ;Lab6pA1.c: 73: ADCON0bits.GO=1;
  5936                           
  5937                           ;incstack = 0
  5938  002ADE  82C2               	bsf	4034,1,c	;volatile
  5939                           
  5940                           ;Lab6pA1.c: 74: while(ADCON0bits.DONE==1);
  5941  002AE0  D000               	goto	l73
  5942  002AE2                     l73:
  5943  002AE2  B2C2               	btfsc	4034,1,c	;volatile
  5944  002AE4  D7FE               	goto	l73
  5945                           
  5946                           ;Lab6pA1.c: 75: result = (ADRESH * 0x100) + ADRESL;
  5947  002AE6  50C4               	movf	4036,w,c	;volatile
  5948  002AE8  6E04               	movwf	(??_Get_Full_ADC+1)& (0+255),c
  5949  002AEA  6A03               	clrf	??_Get_Full_ADC& (0+255),c
  5950  002AEC  50C3               	movf	4035,w,c	;volatile
  5951  002AEE  2403               	addwf	??_Get_Full_ADC,w,c
  5952  002AF0  6E05               	movwf	Get_Full_ADC@result,c
  5953  002AF2  0E00               	movlw	0
  5954  002AF4  2004               	addwfc	??_Get_Full_ADC+1,w,c
  5955  002AF6  6E06               	movwf	Get_Full_ADC@result+1,c
  5956                           
  5957                           ;Lab6pA1.c: 77: return result;
  5958  002AF8  C005  F001         	movff	Get_Full_ADC@result,?_Get_Full_ADC
  5959  002AFC  C006  F002         	movff	Get_Full_ADC@result+1,?_Get_Full_ADC+1
  5960  002B00  D000               	goto	l76
  5961  002B02                     l76:
  5962  002B02  0012               	return		;funcret
  5963  002B04                     __end_of_Get_Full_ADC:
  5964                           	opt stack 0
  5965                           tblptru	equ	0xFF8
  5966                           tblptrh	equ	0xFF7
  5967                           tblptrl	equ	0xFF6
  5968                           tablat	equ	0xFF5
  5969                           prodh	equ	0xFF4
  5970                           prodl	equ	0xFF3
  5971                           postinc0	equ	0xFEE
  5972                           wreg	equ	0xFE8
  5973                           postdec1	equ	0xFE5
  5974                           fsr1l	equ	0xFE1
  5975                           postinc2	equ	0xFDE
  5976                           postdec2	equ	0xFDD
  5977                           fsr2h	equ	0xFDA
  5978                           fsr2l	equ	0xFD9
  5979                           status	equ	0xFD8
  5980                           
  5981 ;; *************** function _DO_DISPLAY_7SEG_UPPER *****************
  5982 ;; Defined at:
  5983 ;;		line 56 in file "Lab6pA1.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;  digit           1    wreg     unsigned char 
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;  digit           1    1[COMRAM] unsigned char 
  5988 ;;  t               1    0[COMRAM] unsigned char 
  5989 ;; Return value:  Size  Location     Type
  5990 ;;		None               void
  5991 ;; Registers used:
  5992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5993 ;; Tracked objects:
  5994 ;;		On entry : 0/0
  5995 ;;		On exit  : 0/0
  5996 ;;		Unchanged: 0/0
  5997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5999 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6001 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6002 ;;Total ram usage:        2 bytes
  6003 ;; Hardware stack levels used:    1
  6004 ;; This function calls:
  6005 ;;		Nothing
  6006 ;; This function is called by:
  6007 ;;		_main
  6008 ;; This function uses a non-reentrant model
  6009 ;;
  6010                           
  6011                           	psect	text31
  6012  0029EC                     __ptext31:
  6013                           	opt stack 0
  6014  0029EC                     _DO_DISPLAY_7SEG_UPPER:
  6015                           	opt stack 30
  6016                           
  6017                           ;incstack = 0
  6018                           ;DO_DISPLAY_7SEG_UPPER@digit stored from wreg
  6019  0029EC  6E02               	movwf	DO_DISPLAY_7SEG_UPPER@digit,c
  6020                           
  6021                           ;Lab6pA1.c: 58: PORTC = array[digit] & 0x3F;
  6022  0029EE  5002               	movf	DO_DISPLAY_7SEG_UPPER@digit,w,c
  6023  0029F0  0D01               	mullw	1
  6024  0029F2  0E6A               	movlw	low _array
  6025  0029F4  24F3               	addwf	prodl,w,c
  6026  0029F6  6ED9               	movwf	fsr2l,c
  6027  0029F8  0E00               	movlw	high _array
  6028  0029FA  20F4               	addwfc	prodh,w,c
  6029  0029FC  6EDA               	movwf	fsr2h,c
  6030  0029FE  50DF               	movf	indf2,w,c
  6031  002A00  0B3F               	andlw	63
  6032  002A02  6E82               	movwf	3970,c	;volatile
  6033                           
  6034                           ;Lab6pA1.c: 59: char t = array[digit] & 0x40;
  6035  002A04  5002               	movf	DO_DISPLAY_7SEG_UPPER@digit,w,c
  6036  002A06  0D01               	mullw	1
  6037  002A08  0E6A               	movlw	low _array
  6038  002A0A  24F3               	addwf	prodl,w,c
  6039  002A0C  6ED9               	movwf	fsr2l,c
  6040  002A0E  0E00               	movlw	high _array
  6041  002A10  20F4               	addwfc	prodh,w,c
  6042  002A12  6EDA               	movwf	fsr2h,c
  6043  002A14  50DF               	movf	indf2,w,c
  6044  002A16  0B40               	andlw	64
  6045  002A18  6E01               	movwf	DO_DISPLAY_7SEG_UPPER@t,c
  6046                           
  6047                           ;Lab6pA1.c: 60: if (t == 0) PORTEbits.RE0 = 0x00;
  6048  002A1A  5001               	movf	DO_DISPLAY_7SEG_UPPER@t,w,c
  6049  002A1C  A4D8               	btfss	status,2,c
  6050  002A1E  D002               	goto	l65
  6051  002A20  9084               	bcf	3972,0,c	;volatile
  6052  002A22  D002               	goto	l67
  6053  002A24                     l65:
  6054                           
  6055                           ;Lab6pA1.c: 61: else PORTEbits.RE0 = 0x01;
  6056  002A24  8084               	bsf	3972,0,c	;volatile
  6057  002A26  D000               	goto	l67
  6058  002A28                     l67:
  6059  002A28  0012               	return		;funcret
  6060  002A2A                     __end_of_DO_DISPLAY_7SEG_UPPER:
  6061                           	opt stack 0
  6062                           tblptru	equ	0xFF8
  6063                           tblptrh	equ	0xFF7
  6064                           tblptrl	equ	0xFF6
  6065                           tablat	equ	0xFF5
  6066                           prodh	equ	0xFF4
  6067                           prodl	equ	0xFF3
  6068                           postinc0	equ	0xFEE
  6069                           wreg	equ	0xFE8
  6070                           postdec1	equ	0xFE5
  6071                           fsr1l	equ	0xFE1
  6072                           indf2	equ	0xFDF
  6073                           postinc2	equ	0xFDE
  6074                           postdec2	equ	0xFDD
  6075                           fsr2h	equ	0xFDA
  6076                           fsr2l	equ	0xFD9
  6077                           status	equ	0xFD8
  6078                           
  6079 ;; *************** function _DO_DISPLAY_7SEG_LOWER *****************
  6080 ;; Defined at:
  6081 ;;		line 51 in file "Lab6pA1.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;  digit           1    wreg     unsigned char 
  6084 ;; Auto vars:     Size  Location     Type
  6085 ;;  digit           1    0[COMRAM] unsigned char 
  6086 ;; Return value:  Size  Location     Type
  6087 ;;		None               void
  6088 ;; Registers used:
  6089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6090 ;; Tracked objects:
  6091 ;;		On entry : 0/0
  6092 ;;		On exit  : 0/0
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6096 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6098 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6099 ;;Total ram usage:        1 bytes
  6100 ;; Hardware stack levels used:    1
  6101 ;; This function calls:
  6102 ;;		Nothing
  6103 ;; This function is called by:
  6104 ;;		_main
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text32
  6109  002B6E                     __ptext32:
  6110                           	opt stack 0
  6111  002B6E                     _DO_DISPLAY_7SEG_LOWER:
  6112                           	opt stack 30
  6113                           
  6114                           ;incstack = 0
  6115                           ;DO_DISPLAY_7SEG_LOWER@digit stored from wreg
  6116  002B6E  6E01               	movwf	DO_DISPLAY_7SEG_LOWER@digit,c
  6117                           
  6118                           ;Lab6pA1.c: 53: PORTD = array[digit];
  6119  002B70  5001               	movf	DO_DISPLAY_7SEG_LOWER@digit,w,c
  6120  002B72  0D01               	mullw	1
  6121  002B74  0E6A               	movlw	low _array
  6122  002B76  24F3               	addwf	prodl,w,c
  6123  002B78  6ED9               	movwf	fsr2l,c
  6124  002B7A  0E00               	movlw	high _array
  6125  002B7C  20F4               	addwfc	prodh,w,c
  6126  002B7E  6EDA               	movwf	fsr2h,c
  6127  002B80  50DF               	movf	indf2,w,c
  6128  002B82  6E83               	movwf	3971,c	;volatile
  6129  002B84  0012               	return		;funcret
  6130  002B86                     __end_of_DO_DISPLAY_7SEG_LOWER:
  6131                           	opt stack 0
  6132                           tblptru	equ	0xFF8
  6133                           tblptrh	equ	0xFF7
  6134                           tblptrl	equ	0xFF6
  6135                           tablat	equ	0xFF5
  6136                           prodh	equ	0xFF4
  6137                           prodl	equ	0xFF3
  6138                           postinc0	equ	0xFEE
  6139                           wreg	equ	0xFE8
  6140                           postdec1	equ	0xFE5
  6141                           fsr1l	equ	0xFE1
  6142                           indf2	equ	0xFDF
  6143                           postinc2	equ	0xFDE
  6144                           postdec2	equ	0xFDD
  6145                           fsr2h	equ	0xFDA
  6146                           fsr2l	equ	0xFD9
  6147                           status	equ	0xFD8
  6148                           tblptru	equ	0xFF8
  6149                           tblptrh	equ	0xFF7
  6150                           tblptrl	equ	0xFF6
  6151                           tablat	equ	0xFF5
  6152                           prodh	equ	0xFF4
  6153                           prodl	equ	0xFF3
  6154                           postinc0	equ	0xFEE
  6155                           wreg	equ	0xFE8
  6156                           postdec1	equ	0xFE5
  6157                           fsr1l	equ	0xFE1
  6158                           indf2	equ	0xFDF
  6159                           postinc2	equ	0xFDE
  6160                           postdec2	equ	0xFDD
  6161                           fsr2h	equ	0xFDA
  6162                           fsr2l	equ	0xFD9
  6163                           status	equ	0xFD8
  6164                           
  6165                           	psect	rparam
  6166  0000                     tblptru	equ	0xFF8
  6167                           tblptrh	equ	0xFF7
  6168                           tblptrl	equ	0xFF6
  6169                           tablat	equ	0xFF5
  6170                           prodh	equ	0xFF4
  6171                           prodl	equ	0xFF3
  6172                           postinc0	equ	0xFEE
  6173                           wreg	equ	0xFE8
  6174                           postdec1	equ	0xFE5
  6175                           fsr1l	equ	0xFE1
  6176                           indf2	equ	0xFDF
  6177                           postinc2	equ	0xFDE
  6178                           postdec2	equ	0xFDD
  6179                           fsr2h	equ	0xFDA
  6180                           fsr2l	equ	0xFD9
  6181                           status	equ	0xFD8


Data Sizes:
    Strings     23
    Constant    118
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    105     115
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_1(CODE[23]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftadd
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->___ftneg
    ___ftneg->___lbtoft
    ___lbtoft->___ftpack
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    _Init_UART->_OpenUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   51994
                                             98 COMRAM     7     7      0
              _DO_DISPLAY_7SEG_LOWER
              _DO_DISPLAY_7SEG_UPPER
                       _Get_Full_ADC
                           _Init_ADC
                          _Init_TRIS
                          _Init_UART
                 _Select_ADC_Channel
                         _WAIT_1_SEC
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   37870
                                             64 COMRAM    34    29      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    8947
                                             42 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    8749
                                             42 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1961
                                             14 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3887
                                             27 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1250
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1360
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     552
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1907
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     477
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     374
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     517
                                             49 COMRAM    15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3276
                                             27 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3023
                                             15 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     151
                                             12 COMRAM     3     0      3
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     454
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    1807
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2251
                                             42 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1929
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1785
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _WAIT_1_SEC                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Select_ADC_Channel                                   1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Init_TRIS                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_Full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_7SEG_UPPER                                2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_7SEG_LOWER                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DO_DISPLAY_7SEG_LOWER
   _DO_DISPLAY_7SEG_UPPER
   _Get_Full_ADC
   _Init_ADC
   _Init_TRIS
   _Init_UART
     _OpenUSART
   _Select_ADC_Channel
   _WAIT_1_SEC
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___ftneg
     ___lbtoft (ARG)
       ___ftpack
   ___fttol
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft (ARG)
       ___ftpack
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___lbtoft
     ___ftpack
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
       ___lbtoft (ARG)
         ___ftpack
     ___ftsub
       ___ftadd
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     69      73       1       90.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      73      34        0.0%
DATA                 0      0      73       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Oct 18 16:40:36 2022

                            l53 2B4A                              l45 2BB4                              l65 2A24  
                            l73 2AE2                              l67 2A28                              l76 2B02  
                  ___awdiv@sign 000C             ___wmul@multiplicand 0011                    ___ftadd@exp1 001B  
                  ___ftadd@exp2 001A                    ___ftadd@sign 0019                             l210 292A  
                           l114 1B6E                             l211 292C                             l107 1DB2  
                           l204 2904                             l213 2946                             l208 291E  
                           l216 2AB6                             l209 2920                             l500 22A6  
                           l180 178E                             l165 1592                             l422 2866  
                           l409 26C2                             l434 2A64                             l541 262C  
                           l613 2566                             l605 1F00                             l509 2296  
                           l621 219C                             l710 27D4                             l630 218C  
                           l623 2104                             l552 2604                             l616 2532  
                           l720 28C6                             l624 212C                             l707 2ADC  
                           l740 29A6                             l581 1DF8                             l645 239E  
                           l582 1F76                             l662 29EA                             l639 2758  
                           l655 2B1A                             l585 1E22                             l681 2B6C  
                           l666 2484                             l596 1EE4                    ___awmod@sign 0006  
                           prod 000FF3                             wreg 000FE8                    __CFG_LVP$OFF 000000  
                  ___ftdiv@cntr 0034                    ___ftdiv@sign 0039                    __CFG_WDT$OFF 000000  
                          l2000 2840                            l2004 284C                            l2030 28FC  
                          l2022 28EA                            l2200 21AE                            l2008 285C  
                          l2104 1964                            l2042 2916                            l2034 2908  
                          l2026 28F4                            l2122 1B4A                            l2220 2202  
                          l2116 1A98                            l2108 1974                            l2206 21BE  
                          l2150 20CA                            l2134 2B64                            l2320 2450  
                          l2312 2428                            l2240 2258                            l2232 2244  
                          l2144 20AC                            l2314 242E                            l2322 245A  
                          l2250 2282                            l2410 1124                            l2308 2418  
                          l2340 2792                            l2252 2290                            l2244 2268  
                          l2228 2234                            l2180 214E                            l2172 213A  
                          l2084 1D72                            l2076 1CAE                            l2500 147A  
                          l2420 115C                            l2404 10D4                            l1470 2B44  
                          l2270 2728                            l2326 2472                            l2318 2442  
                          l2246 226E                            l2190 2178                            l2414 1132  
                          l2336 277C                            l2360 2890                            l2192 2186  
                          l2184 215E                            l2520 1560                            l2512 14CA  
                          l2504 14AA                            l2408 110C                            l1466 2B30  
                          l2266 26F6                            l2258 29C0                            l2290 23BE  
                          l2338 278A                            l2370 294E                            l2186 2164  
                          l2098 18BC                            l2530 1598                            l2426 1172  
                          l2418 113A                            l1804 261E                            l2276 2754  
                          l2348 27C4                            l2364 28B6                            l2356 287A  
                          l2372 295C                            l2540 1602                            l2524 156E  
                          l2508 14AE                            l2460 12AA                            l2452 1246  
                          l2436 11B4                            l2606 250C                            l1822 1E06  
                          l2358 2888                            l1910 2322                            l2526 157C  
                          l2518 1554                            l2470 1320                            l2616 2540  
                          l1920 2350                            l2560 1718                            l2552 16F2  
                          l2536 15B2                            l2480 137C                            l2464 12D0  
                          l2392 109A                            l1850 1E88                            l1834 1E3C  
                          l1914 2334                            l2546 16D8                            l2482 1386  
                          l2490 1404                            l2466 12E0                            l2554 16FE  
                          l1780 2588                            l2628 2A40                            l2580 24A4  
                          l1852 1E94                            l1844 1E64                            l1828 1E30  
                          l1940 2644                            l1924 2362                            l2564 1734  
                          l2548 16E4                            l2476 1358                            l2468 1310  
                          l2396 10AA                            l2572 1772                            l1790 25EC  
                          l1782 2594                            l2582 24BE                            l1870 1F1E  
                          l1862 1ECC                            l1854 1EA0                            l1918 234A  
                          l2494 146A                            l2486 13C8                            l2638 1F86  
                          l1792 25F8                            l1784 25B4                            l1776 2578  
                          l1880 1F50                            l1864 1ED8                            l1856 1EA8  
                          l1952 266C                            l1928 2378                            l2568 1756  
                          l2496 146E                            l2488 13F6                            l2586 24CC  
                          l1954 2676                            l1946 2656                            l1890 22C6  
                          l1788 25CC                            l1972 26B8                            l1964 269C  
                          l1956 267E                            l1892 22E0                            l1798 260C  
                          l1968 26A8                            l1992 2818                            l1984 27FC  
                          l1896 22EE                            l1994 2822                            l1996 282A  
                          l1988 280A                            STR_1 1077                            u2141 209E  
                          u2161 20BC                            u1551 1DC4                            u2351 23B0  
                          u1561 1DD8                            u2370 23DC                            u2375 23D4  
                          u1761 22B8                    printf@tmpval 0059                            u2740 158C  
                          u2580 11EC                            u1781 22D6                            u2841 2496  
                          u2585 11E2                            u2861 24B4                            _TRMT 007D61  
                          _main 1F78                    ___ftpack@arg 0001                    ___ftpack@exp 0004  
                          fsr2h 000FDA                            fsr1l 000FE1                            indf2 000FDF  
                          fsr2l 000FD9      DO_DISPLAY_7SEG_LOWER@digit 0001                            prodh 000FF4  
                          prodl 000FF3                            start 0000                    ___ftmul@cntr 0029  
                  ___param_bank 000010                    ___ftmul@sign 002A            __end_of_Get_Full_ADC 2B04  
                  ___fttol@exp1 0040                    ___fttol@lval 003C                     ?_WAIT_1_SEC 0001  
                         ?_main 0001                 __end_of___awdiv 26C4                 __end_of___ftadd 1F78  
               __end_of___awmod 2868                 __end_of___ftdiv 2568                 __end_of___ftneg 2B28  
               __end_of___lldiv 27E6                 __end_of___ftmul 23A0                 ___awdiv@divisor 0009  
               __end_of___llmod 28D8                 __end_of___ftsub 29EC                 __end_of___fttol 2486  
               ___awdiv@counter 000B                           _RCSTA 000FAB                           _SPBRG 000FAF  
                         _PORTC 000F82                           _PORTD 000F83                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                         _TRISE 000F96                           _TXREG 000FAD                           _TXSTA 000FAC  
                  ___lltoft@exp 0011                   ___awtoft@sign 000C                 __end_of_dpowers 1029  
                         _array 006A                           _scale 1790                 __end_of_isdigit 2B6E  
                 ___ftpack@sign 0005                           main@L 0065                           main@U 0066  
                         _putch 2BB0                    main@num_step 0063                  __CFG_BOREN$OFF 000000  
                         tablat 000FF5          ?_DO_DISPLAY_7SEG_LOWER 0001                           status 000FD8  
        ?_DO_DISPLAY_7SEG_UPPER 0001                 __initialization 2A66                    __end_of_main 208E  
              __end_of_Init_ADC 2BDE                          ??_main 0063                   ___fttol@sign1 003B  
                 __activetblptr 000002            __size_of__tdiv_to_l_ 0110                          _ADCON0 000FC2  
                        _ADCON1 000FC1                          _ADCON2 000FC0                ___llmod@dividend 0001  
                        ?_scale 002B                          _ADRESH 000FC4                          _ADRESL 000FC3  
              ___awdiv@dividend 0007                __end_of___awtoft 2A66                          ?_putch 0001  
              __end_of___ftpack 262E                __end_of___lbtoft 2ADE                __end_of___lltoft 29A8  
                        _OSCCON 000FD3              __size_of_Init_UART 0014              __size_of_Init_TRIS 0016  
                        _SPBRGH 000FB0             __size_of_WAIT_1_SEC 0024      DO_DISPLAY_7SEG_UPPER@digit 0002  
            Get_Full_ADC@result 0005                __end_of__powers_ 1077              __size_of_OpenUSART 0070  
                        ___ftge 26C4                          ___wmul 2A90                       ??___awdiv 000B  
                     ??___ftadd 0016                       ??___awmod 0005                       ??___ftdiv 0031  
                     ??___ftneg 0010                       ??___lldiv 0009                       ??___ftmul 0022  
                     ??___llmod 0009                       ??___ftsub 0022                       ??___fttol 0036  
                        _fround 1B70                ___awdiv@quotient 000D                 ___awmod@divisor 0003  
               ___awmod@counter 0005                          _printf 1090           ___ftmul@f3_as_product 0026  
                  __pdataCOMRAM 006A                       ??_isdigit 0001                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                        putch@c 0001          DO_DISPLAY_7SEG_UPPER@t 0001                      __accesstop 0080  
       __end_of__initialization 2A86                      ___ftadd@f1 0010                      ___ftadd@f2 0013  
                    ___ftge@ff1 0001                      ___ftge@ff2 0004                   ___rparam_used 000001  
                    ___ftdiv@f1 002B                      ___ftdiv@f2 002E                      ___ftdiv@f3 0035  
         __size_of_Get_Full_ADC 0026                      ___ftneg@f1 000D                      ___awtoft@c 0009  
                    ___lbtoft@c 000C                      ___ftmul@f1 001C                      ___ftmul@f2 001F  
                    ___ftsub@f1 001C                      ___ftsub@f2 001F                      ___fttol@f1 0032  
                __pcstackCOMRAM 0001                      ___lltoft@c 0009                   __end_of_scale 1B70  
                 __end_of_putch 2BBE               __end_of_Init_UART 2BB0               __end_of_Init_TRIS 2B9C  
                    __div_to_l_ 219E               __end_of_OpenUSART 2948                 __div_to_l_@exp1 000C  
               __div_to_l_@cntr 000B                         ??_scale 002E                 __div_to_l_@quot 0007  
                  _Get_Full_ADC 2ADE                         ??_putch 0001                       ?_Init_ADC 0001  
    __end_of_Select_ADC_Channel 2BCA                   __div_to_l_@f1 0001                   __div_to_l_@f2 0004  
                       ?___ftge 0001                         ?___wmul 000F                         ?_fround 002B  
                  ??_WAIT_1_SEC 0001                       ?___awtoft 0009                       ?___ftpack 0001  
                     ?___lbtoft 0009                         ?_printf 0041       Select_ADC_Channel@channel 0001  
                     ?___lltoft 0009                     WAIT_1_SEC@j 0001         ??_DO_DISPLAY_7SEG_LOWER 0001  
       ??_DO_DISPLAY_7SEG_UPPER 0001                      ??_Init_ADC 0001              __end_of_WAIT_1_SEC 2B4C  
             __end_of__npowers_ 1050                         __Hparam 0000                      _scale$1319 002E  
                       __Lparam 0000                 __size_of___ftge 0096                         ___awdiv 262E  
                       ___ftadd 1DB4                         ___awmod 27E6                         ___ftdiv 2486  
                       ___ftneg 2B04                         ___lldiv 275A                 __size_of___wmul 0028  
                       ___ftmul 22A8                         ___llmod 2868                         ___ftsub 29A8  
                       ___fttol 23A0                    __psmallconst 1000                         __pcinit 2A66  
                    ??___awtoft 000C                      ??___ftpack 0006                      ??___lbtoft 000C  
               __size_of_fround 0244                         __ramtop 1000                      ??___lltoft 000D  
                       __ptext0 1F78                         __ptext1 1090                         __ptext2 1790  
                       __ptext3 2BB0                         __ptext4 2B4C                         __ptext5 1B70  
                       __ptext6 2A90                         __ptext7 22A8                         __ptext8 27E6  
                       __ptext9 262E                 __size_of_printf 0700                     ?__div_to_l_ 0001  
                       _dpowers 1001                         _isdigit 2B4C                ___awmod@dividend 0001  
          end_of_initialization 2A86                   __Lmediumconst 0000                 ___lldiv@divisor 0005  
               ___lldiv@counter 000D                       _RCSTAbits 000FAB                         printf@c 0062  
                       printf@f 0041                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE                  __tdiv_to_l_@f1 0001  
                __tdiv_to_l_@f2 0004                   ??__tdiv_to_l_ 0007                       _PORTDbits 000F83  
                     _PORTEbits 000F84                       _TRISCbits 000F94                     ___ftdiv@exp 0038  
                     _TXSTAbits 000FAC             __size_of__div_to_l_ 010A                     ___ftmul@exp 0025  
                __end_of___ftge 275A                  __end_of___wmul 2AB8                   __pidataCOMRAM 2BCA  
                __end_of_fround 1DB4                  __end_of_printf 1790             start_initialization 2A66  
                     _Init_UART 2B9C                       _Init_TRIS 2B86             __end_of__tdiv_to_l_ 219E  
                     _OpenUSART 28D8                 ___llmod@divisor 0005                __CFG_OSC$INTIO67 000000  
             __size_of_Init_ADC 000A                 ___llmod@counter 0009                        ??___ftge 0007  
                      ??___wmul 0013              _Select_ADC_Channel 2BBE                        ??_fround 002E  
                      ??_printf 0046                      fround@prec 0034               __size_of___awtoft 003C  
             __size_of___ftpack 00C6               __size_of___lbtoft 0026             ?_Select_ADC_Channel 0001  
             __size_of___lltoft 0060                      ?_Init_UART 0001                      ?_Init_TRIS 0001  
                  _isdigit$1075 0002  __size_of_DO_DISPLAY_7SEG_LOWER 0018   __end_of_DO_DISPLAY_7SEG_LOWER 2B86  
__size_of_DO_DISPLAY_7SEG_UPPER 003E   __end_of_DO_DISPLAY_7SEG_UPPER 2A2A                      ?_OpenUSART 0001  
          ??_Select_ADC_Channel 0001                        ?___awdiv 0007                        ?___ftadd 0010  
                      ?___awmod 0001                        ?___ftdiv 002B                        ?___ftneg 000D  
                      ?___lldiv 0001                        ?___ftmul 001C                        ?___llmod 0001  
                      ?___ftsub 001C                       __npowers_ 1029                        ?___fttol 0032  
                   __tdiv_to_l_ 208E                    ??__div_to_l_ 0007                     __smallconst 1000  
                      ?_isdigit 0001                  __size_of_scale 03E0                  __size_of_putch 000E  
                ___wmul@product 0013                        _PIE1bits 000F9D                        _PIR1bits 000F9E  
            __end_of__div_to_l_ 22A8                      _ADCON0bits 000FC2               ___wmul@multiplier 000F  
                    printf@flag 0051                      printf@fval 005F                      printf@prec 005D  
                   ??_Init_UART 0004                     ??_Init_TRIS 0001                       copy_data0 2A7A  
                      _Init_ADC 2BD4                     ??_OpenUSART 0003                 OpenUSART@config 0003  
                      __Hrparam 0000                        __Lrparam 0000                __size_of___awdiv 0096  
              __size_of___ftadd 01C4                __size_of___awmod 0082                __size_of___ftdiv 00E2  
              __size_of___ftneg 0024                __size_of___lldiv 008C                __size_of___ftmul 00F8  
              __size_of___llmod 0070                __size_of___ftsub 0044                __size_of___fttol 00E6  
                      ___awtoft 2A2A                        ___ftpack 2568                        ___lbtoft 2AB8  
                   _fround$1317 0031                     _fround$1318 002E                        ___lltoft 2948  
              __size_of_isdigit 0022                        __ptext10 208E                        __ptext11 219E  
                      __ptext20 2AB8                        __ptext12 2948                        __ptext21 2486  
                      __ptext13 2868                        __ptext30 2ADE                        __ptext22 2A2A  
                      __ptext14 275A                        __ptext31 29EC                        __ptext23 2568  
                      __ptext15 23A0                        __ptext32 2B6E                        __ptext24 2B28  
                      __ptext16 29A8                        __ptext25 2BBE                        __ptext17 1DB4  
                      __ptext26 2B9C                        __ptext18 2B04                        __ptext27 28D8  
                      __ptext19 26C4                        __ptext28 2B86                        __ptext29 2BD4  
                      __powers_ 1050                   ?_Get_Full_ADC 0001                   __size_of_main 0116  
                     printf@exp 0057                       printf@val 0053                  OpenUSART@spbrg 0001  
                      isdigit@c 0003                  ??_Get_Full_ADC 0003                        scale@scl 0031  
              __tdiv_to_l_@exp1 000F                __tdiv_to_l_@cntr 000E                __tdiv_to_l_@quot 000A  
              ___lldiv@dividend 0001                        printf@ap 004F                      _WAIT_1_SEC 2B28  
                  ?__tdiv_to_l_ 0001                     _printf$1320 004C                ___lldiv@quotient 0009  
         _DO_DISPLAY_7SEG_LOWER 2B6E           _DO_DISPLAY_7SEG_UPPER 29EC     __size_of_Select_ADC_Channel 000C  
             main@voltage_input 0067  
